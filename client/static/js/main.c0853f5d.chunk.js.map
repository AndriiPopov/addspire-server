{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/Layout.tsx","utils/processRes.js","store/actions/auth.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","containers/Shop/AddPerkForm.tsx","websocketActions/posts.tsx","websocketActions/wishlistAndPerks.tsx","websocketActions/friends.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","components/AddCard/AddCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Goals/Goals.tsx","utils/pullData.js","components/Post/AddMessage.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Goals/Goal.tsx","containers/Progresses/ProgressCard.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","containers/Progresses/Progresses.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","components/Post/AddPost.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Account/Account.tsx","websocketActions/account.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","connect","state","lastUrl","_useState","useState","_useState2","Object","slicedToArray","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","get","basicURL","console","log","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","getAvatar","nickname","version","Content","account","pageTitle","isAuthed","menuVisible","setMenuVisible","toggleMenu","selectedKey","history","location","pathname","split","undefined","buttonProps","size","checkHighligh","url","ghost","openLink","isActivating","es_layout","assign","MenuOutlined_default","tooltip","title","placement","mouseEnterDelay","LogoutOutlined_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","cursor","avatar","src","_id","image","page_header","onBack","goBack","main","subTitle","sub","drawer","closable","onClose","visible","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","includes","processRes","res","data","logout","success","errorCode","message","warning","error","successCode","status","tryAuth","forceLogin","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","saveLastUrl","id","setData","setPageTitle","setFriendSearchResult","getListOfNeededResources","store","requestedResources","user","progress","group","progressData","friendData","postData","groupData","transactionData","neededResources","currentAccount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","progresses","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","groups","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","followPosts","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transactions","transaction","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","friends","friend","currentProfile","profile","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","currentGroup","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","users","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","posts","currentProgress","participants","owner","worker","toConsumableArray","experts","supporters","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","currentPosts","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","postEl","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","reduce","Array","from","Set","notNeededExist","notNeededResources","check1","check2","removeData","compareVersionsAndRerequest","versions","webSocket","checkData","requestResource","check","__v","getResourcesToMonitor","resources","addData","item","require","create","propertyFilter","name","context","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","readyState","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","_i","_arr","ids","nextProps","newRequestedResources","_loop","_arr2","_i2","filter","this","Component","pulledFrom","actions","getState","myAccount","find","forceAuth","notRequestedIds","applyDelta","source","delta","watchFields","cloneDeep","del","applyWithDot","keys","shift","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","removedFields","field","parState","defineProperty","updateData","uploadFile","file","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","resizeImageToSpecificSize","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","AddPerkForm","previewImage","setPreviewImage","connections","perkId","perk","deletePerk","onFinish","images","setImages","uploadImage","connectionsSelect","es_select","placeholder","Option","marginRight","_Form$useForm","Form","useForm","form","es_form","autoComplete","initialValues","labelCol","span","wrapperCol","label","valuePropName","getValueFromEvent","e","isArray","fileList","upload","listType","objectSpread","uid","onPreview","customRequest","_ref2","PlusOutlined_default","rules","input","TextArea","input_number","offset","htmlType","popconfirm","onConfirm","onCancel","okText","cancelText","danger","modal","footer","alt","sendMessage","accountId","postId","messageValue","imageUrl","replyToMessage","editedMessage","changeLikesMessage","messageId","addPost","parentId","parentType","buyPerk","buyer","seller","unfriend","friendId","setPerk","wishlist","itemId","goals","goalId","perks","Shop_AddPerkForm","wsActions","setEditPerkOpen","processedValue","Meta","Card","setEditedPerk","card","display","hoverable","cover","backgroundImage","backgroundSize","onlyBuy","EditFilled_default","fontSize","DollarCircleOutlined_default","description","price","AddCard","action","alignItems","justifyContent","PlusCircleOutlined_default","card_Meta","WishlistAndPerks","editedPerk","editPerkOpen","editPerk","maskClosable","destroyOnClose","Shop_AddPerk","components_AddCard_AddCard","listKey","Shop_PerkCard","Shop_WishlistAndPerks","pullData","options","imageLoading","setImageLoading","content","replyToUser","setMessageText","background","padding","boxShadow","replyTo","bottom","left","position","comment","autoSize","minRows","maxRows","rows","editingMessage","onSend","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","Message","replies","replyVisible","setReplyVisible","setReplyToUser","_useState5","_useState6","setEditingMessage","commentProps","isStart","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","author","datetime","timeago_react","date","live","Post_AddMessage","isTop","reply","noStartMessage","Post_Message","startMessage","textAlign","marginBottom","icons_LikeFilled","icons_LikeOutlined","messages","getNumberOfMessages","goal","components_Post_Post","ProgressCard_Meta","EditGoalAndProgressForm_connectionsSelect","onSelect","previewReward","setPreviewReward","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","rewardsGI","rewards","findIndex","rewardKey","setRewards","simple","money","itemName","for","EditOutlined_default","newRewards","indexIn","progressId","rewardId","DeleteOutlined_default","onOk","reward","rewardToSave","divider","itemImages","_ref3","_ref4","itemDescription","_ref5","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","TabNode","_this$props","connectDragSource","connectDropTarget","React","WrapTabNode","DropTarget","drop","monitor","dragKey","getItem","hoverKey","moveTabNode","dropTarget","DragSource","beginDrag","dragSource","isDragging","DraggableTabs","order","newOrder","slice","Children","forEach","c","dragIndex","hoverIndex","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","milestones","setMilestones","activeKey","setActiveKey","withMilestones","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","milestonesValues","milestone","mile1","onValuesChange","changedValues","newMilestones","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","TabPane","tab","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setStartProgressVisible","Tabs","loadedProgresses","loadedGroups","startProgressVisible","active","editGoal","Modal","Progresses_AddProgress","marginTop","Progresses_ProgressCard","empty","imageStyle","Descriptions","ActivityTable","renderCheckbox","milestoneId","disabled","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","getMilestoneData","stages","paid","milestonesData","table","dataSource","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","toString","Progress_EditProgress","parent","zIndex","right","activityOpen","Post_AddPost","closeIcon","ArrowLeftOutlined_default","Progress_Activity","keepPageTitle","pulledProfile","wallet","Wallet_Meta","amount","aTransactionData","types","tag","color","es_tag","toUpperCase","record","cancelTransaction","confirmTransaction","tableData","sorted","Date","getTime","to","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","asIcons","ResultButtun","SmileOutlined_default","FrownOutlined_default","friendActions","friendActionButton","EyeOutlined_default","FriendCard_Meta","searchResult","friendSearchResult","addFriendOpen","setAddFriendOpen","search","components_FriendCard","pendingFriendsOpen","setPendingFriendsOpen","fullFriend","Friends_AddFriends","PendingFriends","increaseAvatarV","deleteVisible","setDeleteVisible","deleteField","setDeleteField","tailLayout","backIcon","flex","maxWidth","overflow","_is","containers_Progresses_Progresses","progressesData","noPullData","setAccountActivated","nicknameNotUnique","items","Perk_Item","friendObj","wishlistItem","accountNotActive","redirectTo","Logout","react_router","routes","exact","component","Goals","Goal","Progresses","Progress","Profile","Friends","Account","Shop","Perk","Wishlist","WishlistItem","Auth","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","reducer","createReducer","SET_DATA","REMOVE_DATA","_i3","_arr3","_i4","_arr4","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SAVE_LAST_URL","SET_ACCOUNT_ACTIVATED","__webpack_require__","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","react_router_dom","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.c0853f5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.lastUrl) {\n        redirectParam = '&redirect=' + props.lastUrl\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    console.log(cookieConsent)\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lastUrl: state.lastUrl,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Auth))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    return props.isAuthed && account ? (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            {!isActivating && (\n                                <Button\n                                    {...buttonProps}\n                                    icon={<MenuOutlined />}\n                                    onClick={toggleMenu}\n                                />\n                            )}\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {/* <Tooltip\n                                title=\"Dashboard\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                            </Tooltip> */}\n                            {!isActivating ? (\n                                <>\n                                    <Tooltip\n                                        title=\"Progresses\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('progresses')}\n                                            icon={<RocketFilled />}\n                                            onClick={() =>\n                                                openLink('progresses')\n                                            }\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Shop\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('shop')}\n                                            icon={<ShopOutlined />}\n                                            onClick={() => openLink('shop')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Friends\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('friends')}\n                                            icon={<TeamOutlined />}\n                                            onClick={() => openLink('friends')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Account\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <span\n                                            onClick={() => openLink('account')}\n                                            style={{\n                                                margin: '0px 10px',\n                                                cursor: 'pointer',\n                                            }}\n                                        >\n                                            <Avatar\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </span>\n                                    </Tooltip>\n                                </>\n                            ) : (\n                                <Tooltip\n                                    title=\"Logout\"\n                                    placement=\"bottomRight\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </Tooltip>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={\n                                isActivating\n                                    ? 'Activate your account'\n                                    : props.pageTitle && props.pageTitle.main\n                            }\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                {!isActivating && (\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            {/* <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                            Dashboard\n                        </Menu.Item> */}\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                )}\n            </Layout>\n        </>\n    ) : ['/login', 'logout'].includes(props.history.location.pathname) ? (\n        props.children\n    ) : (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner} />\n                        <div className={classes.QuickButtonContiner}>\n                            <Tooltip\n                                title=\"Sign in or Sign up\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => props.history.push('/login')}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={props.pageTitle && props.pageTitle.main}\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        dispatch(saveLastUrl(props.history.location.pathname))\n        if (forceLogin) props.history.push('/logout')\n    }\n}\n\nconst saveLastUrl = url => ({\n    type: 'SAVE_LAST_URL',\n    url,\n})\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    console.log(res.data)\n                    console.log(props.history.location.pathname)\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of store.account.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let group of store.account.groups) {\n                        if (!store.groupData[group]) {\n                            requestedResources.groupData.push(group)\n                        }\n                        neededResources.groupData.push(group)\n                    }\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let group of store.profile.groups) {\n                        if (!store.groupData[group]) {\n                            requestedResources.groupData.push(group)\n                        }\n                        neededResources.groupData.push(group)\n                    }\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                }\n            }\n            if (store.currentGroup) {\n                if (store.group._id !== store.currentGroup) {\n                    requestedResources.group.push(store.currentGroup)\n                } else {\n                    neededResources.group.push(store.group._id)\n                    for (let user of store.group.users) {\n                        if (!store.friendData[user]) {\n                            requestedResources.friendData.push(user)\n                        }\n                        neededResources.friendData.push(user)\n                    }\n                    for (let progress of store.group.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let post of store.group.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n                    participants = [\n                        ...participants,\n                        ...(store.progress.experts || []),\n                        ...(store.progress.supporters || []),\n                    ]\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('group', 'group')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n    check2('groupData')\n\n    if (notNeededExist) {\n        console.log(notNeededResources)\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource('postData', [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource('progress', [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.profile[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n            if (store.account._id !== attr && store.profile._id !== attr)\n                notNeededResources.account.push(attr)\n        }\n    }\n\n    check('progress')\n    check('group')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('groupData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.group.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.groupData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        group: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        groupData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.group._id) {\n        resources.group[store.group._id] = store.group.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('groupData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport * as wsActions from '../../websocketActions'\nimport cloneDeep from 'lodash.clonedeep'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'group',\n            'postData',\n            'groupData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n    // componentDidMount() {\n    //     console.log('didmount')\n    //     this.initializeRequestResources(this.props)\n    // }\n    componentWillReceiveProps(nextProps) {\n        console.log('willrecpro')\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        console.log('init')\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'group',\n            'postData',\n            'groupData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    console.log('init send')\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n            case 'group':\n                const group = data.find(item => item._id === state.currentGroup)\n                if (group) {\n                    dispatch(setData({ group }))\n                }\n                break\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'groupData':\n                let groupData = {}\n                for (let item of data) {\n                    groupData[item._id] = item\n                }\n                dispatch(setData({ groupData }))\n                break\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    console.log('---------------------------APLY DELTA------------------------')\n    console.log('----------------source----------------')\n    console.log(source)\n    console.log('----------------delta-------------------')\n    console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'group':\n                check('group')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n            case 'groupData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    imageUrl,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                imageUrl,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    imageUrl?\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                imageUrl,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: mode === 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = account.friends\n        .filter(friend => friend.status === 'friend')\n        .map(friend => props.friendData[friend.friend])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={() => {\n                wsActions.deletePerk(account._id, perkId, mode)\n                props.setEditPerkOpen(false)\n            }}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport { withRouter } from 'react-router-dom'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\nimport * as wsActions from '../../websocketActions'\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            `/${mode || 'shop'}/${owner._id}/${perkId}`\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                ...(owner._id === account._id && !props.onlyBuy\n                    ? [\n                          <Tooltip title=\"Edit\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() => {\n                                      setEditedPerk(perkId)\n                                      setEditPerkOpen(true)\n                                  }}\n                              >\n                                  <EditFilled style={{ fontSize: '18px' }} />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n\n                ...(props.mode === 'shop'\n                    ? [\n                          <Tooltip title=\"Buy\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() =>\n                                      wsActions.buyPerk(\n                                          account._id,\n                                          owner._id,\n                                          perkId\n                                      )\n                                  }\n                              >\n                                  <DollarCircleOutlined\n                                      style={{ fontSize: '18px' }}\n                                  />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport Tooltip from 'antd/es/tooltip'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Meta from 'antd/es/card/Meta'\n\nconst AddCard = props => (\n    <span onClick={props.action}>\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    style={{\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    onClick={props.action}\n                >\n                    <PlusCircleOutlined\n                        style={{\n                            fontSize: '60px',\n                        }}\n                    />\n                </div>\n            }\n            actions={[\n                <Tooltip title=\"Add item\">\n                    <span key=\"3\" onClick={props.action}>\n                        <PlusCircleOutlined style={{ fontSize: '18px' }} />\n                    </span>\n                </Tooltip>,\n            ]}\n        >\n            <Meta\n                title={\n                    <span onClick={props.action} style={{ cursor: 'pointer' }}>\n                        {props.title}\n                    </span>\n                }\n                description={typeof props.sub !== 'undefined' && props.sub}\n            />\n        </Card>\n    </span>\n)\n\nexport default AddCard\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account._id ? (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        perkId={\n                            props.mode === 'wishlist' || props.mode === 'goals'\n                                ? perk.itemId\n                                : perk.perkId\n                        }\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    ) : null\n}\n\nexport default WishlistAndPerks\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Goals = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Goals', sub: '' })\n    }, [])\n\n    return props.account._id ? (\n        <WishlistAndPerks mode=\"goals\" account={props.account} />\n    ) : (\n        <span />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goals)\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    console.log('reqas')\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\n\nconst AddMessage = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        console.log(props.replyToUser)\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                boxShadow:\n                    '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        false,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                size=\"large\"\n                                type=\"link\"\n                            />\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        wsActions.sendMessage(\n                                            state,\n                                            props,\n                                            '',\n                                            url,\n                                            props.replyTo,\n                                            props.editingMessage\n                                        )\n                                        if (props.onSend) props.onSend()\n                                    })\n                                }}\n                            >\n                                <Button\n                                    size=\"large\"\n                                    type=\"link\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureOutlined />\n                                        )\n                                    }\n                                />\n                            </Upload>\n                        </Form.Item>\n                    </>\n                }\n            />\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport Card from 'antd/es/card'\nimport AddMessage from './AddMessage'\n\nconst Message = props => {\n    const {\n        account,\n        state,\n        setState,\n        message,\n        friendData,\n        post,\n        replies,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const commentProps = {\n        actions: !props.isStart && [\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            <span\n                key=\"comment-basic-reply-to\"\n                onClick={() => {\n                    if (props.setReplyVisible) {\n                        props.setReplyVisible(true)\n                        props.setReplyToUser(props.message.author)\n                    } else {\n                        setReplyVisible(true)\n                        setReplyToUser('')\n                    }\n                }}\n            >\n                Reply to\n            </span>,\n            <span\n                key=\"comment-basic-reply-to\"\n                onClick={() => setEditingMessage(message.messageId)}\n            >\n                Edit\n            </span>,\n        ],\n        author: (\n            <a>\n                {friendData[message.author]\n                    ? friendData[message.author].name +\n                      ' (' +\n                      message.author +\n                      ')'\n                    : message.author}\n            </a>\n        ),\n        avatar: (\n            <Avatar\n                src={\n                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                    message.author +\n                    '/avatar'\n                }\n            />\n        ),\n        content:\n            message.action === 'message' ? (\n                <p>{message.text}</p>\n            ) : message.action === 'image' ? (\n                <div\n                    style={{\n                        backgroundImage: 'url(' + message.text + ')',\n                        width: '200px',\n                        height: '200px',\n                        backgroundSize: 'cover',\n                        cursor: 'pointer',\n                    }}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: message.text,\n                        })\n                    }\n                />\n            ) : null,\n        datetime: (\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Card>\n                <Comment {...commentProps}>\n                    {props.isTop && replies && replies.length\n                        ? replies.map((reply, index) => (\n                              <Message\n                                  key={index}\n                                  message={reply}\n                                  post={post}\n                                  account={account}\n                                  friendData={friendData}\n                                  setReplyVisible={setReplyVisible}\n                                  setReplyToUser={setReplyToUser}\n                              />\n                          ))\n                        : null}\n\n                    {props.isTop && replyVisible ? (\n                        <AddMessage\n                            post={post}\n                            account={account}\n                            replyTo={message.messageId}\n                            replyToUser={replyToUser}\n                        />\n                    ) : null}\n                </Comment>\n            </Card>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                onSend={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport Tooltip from 'antd/es/tooltip'\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons'\nimport AddMessage from './AddMessage'\n\nconst Post = props => {\n    const { post, account, friendData } = props\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <Message\n                    message={post.startMessage}\n                    post={post}\n                    account={account}\n                    friendData={friendData}\n                    replies={[]}\n                    isStart={true}\n                />\n            )}\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div>\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        wsActions.changeLikesMessage(\n                                            'dislikeMessage',\n                                            post.startMessage.messageId,\n                                            account._id,\n                                            post._id\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        wsActions.changeLikesMessage(\n                                            'likeMessage',\n                                            post.startMessage.messageId,\n                                            account._id,\n                                            post._id\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {post.startMessage.likes.length}\n                        </span>\n                    </span>\n                    <span>\n                        <span key=\"comment-basic-reply-to\" onClick={() => {}}>\n                            Comment\n                        </span>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {getNumberOfMessages(post.messages)}\n                        </span>\n                    </span>\n                </div>\n\n                {post.messages && post.messages.length\n                    ? post.messages.map((message, index) => (\n                          <Message\n                              key={index}\n                              message={message}\n                              post={post}\n                              account={account}\n                              friendData={friendData}\n                              replies={message.replies}\n                              isTop={true}\n                          />\n                      ))\n                    : null}\n                <AddMessage post={post} account={account} />\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Post from '../../components/Post/Post'\n\nconst WishlistItem = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.goal) return null\n    const { goal, profile } = data\n    props.setData({ currentPosts: goal.post })\n    if (goal) {\n        props.setPageTitle({ main: goal.name, sub: profile._id })\n    }\n    return goal ? (\n        <Card\n            title={\n                <span>\n                    Goal from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    goals\n                </span>\n            }\n        >\n            {goal.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n            <p>{goal.description}</p>\n            <Post\n                noStartMessage={true}\n                post={props.post[goal.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\n\nconst { Meta } = Card\n\nconst ProgressCard = props => {\n    const { progress } = props\n    const { goal } = progress\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            onClick={() => props.history.push('/progresses/' + progress._id)}\n        >\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        </div>\n    )\n}\n\nexport default withRouter(ProgressCard)\n","import React from 'react'\n\nimport Select from 'antd/es/select'\n\nimport Avatar from 'antd/es/avatar'\n\nimport getAvatar from '../../utils/getAvatar'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onSelect={onSelect}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(item => (\n            <Select.Option key={item._id}>\n                <Avatar\n                    src={getAvatar(item._id, item.image)}\n                    size={20}\n                    style={{ marginRight: '10px' }}\n                />\n                {item.name} - ({item._id})\n            </Select.Option>\n        ))}\n    </Select>\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport Popconfirm from 'antd/es/popconfirm'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1 && props.setRewards)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => {\n                        console.log(item)\n                        console.log(item.owner)\n                        console.log(account._id)\n                        console.log(!readOnly)\n                        return (\n                            <li>\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => setPreviewReward(item)}\n                                >\n                                    {item.mode === 'simple'\n                                        ? item.simple\n                                        : item.mode === 'money'\n                                        ? item.money + ' (money)'\n                                        : item.mode === 'item'\n                                        ? item.itemName\n                                        : ''}\n                                </Button>\n                                for {item.for} from {item.owner}\n                                {item.owner === account._id && !readOnly && (\n                                    <>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setEditedRewardIndex(index)\n                                                setEditedReward(item)\n                                            }}\n                                        >\n                                            <EditOutlined />\n                                        </Button>\n                                        <Popconfirm\n                                            title=\"Are you sure you want to delete this item?\"\n                                            onConfirm={() => {\n                                                if (props.setRewards) {\n                                                    const newRewards = [\n                                                        ...props.rewards,\n                                                    ]\n                                                    newRewards[rewardsGI] = {\n                                                        ...newRewards[\n                                                            rewardsGI\n                                                        ],\n                                                        rewards: newRewards[\n                                                            rewardsGI\n                                                        ].rewards.filter(\n                                                            (item, indexIn) =>\n                                                                indexIn !==\n                                                                index\n                                                        ),\n                                                    }\n                                                    props.setRewards(newRewards)\n                                                } else {\n                                                    wsActions.deleteReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        props.rewardKey,\n                                                        item.rewardId\n                                                    )\n                                                }\n                                            }}\n                                            onCancel={() => {}}\n                                            okText=\"Confirm\"\n                                            cancelText=\"Cancel\"\n                                        >\n                                            <Button type=\"link\" danger={true}>\n                                                <DeleteOutlined />\n                                            </Button>\n                                        </Popconfirm>\n                                    </>\n                                )}\n                            </li>\n                        )\n                    })}\n                </ol>\n\n                {!readOnly && (\n                    <Button\n                        type=\"link\"\n                        onClick={() => {\n                            setEditedRewardIndex('new')\n                            setEditedReward({ mode: 'simple' })\n                        }}\n                    >\n                        <PlusOutlined />\n                        Add rewards\n                    </Button>\n                )}\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        const newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards[rewardsGI] = {\n                                ...newRewards[rewardsGI],\n                                rewards: [\n                                    ...newRewards[rewardsGI].rewards,\n                                    rewardToSave,\n                                ],\n                            }\n                        else\n                            newRewards[rewardsGI] = {\n                                ...newRewards[rewardsGI],\n                                rewards: newRewards[rewardsGI].rewards.map(\n                                    (item, index) => {\n                                        if (index === editedRewardIndex)\n                                            return rewardToSave\n                                        else return item\n                                    }\n                                ),\n                            }\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                    }\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }}\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Reward for\">\n                            {connectionsSelect(\n                                account,\n                                friendData,\n                                editedReward.for,\n                                value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        for: value,\n                                    })\n                                }\n                            )}\n                            <p>(leave blank for all)</p>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item\n                                label=\"Description\"\n                                rules={[\n                                    ...descriptionRules,\n                                    {\n                                        required: true,\n                                        min: 1,\n                                        whitespace: true,\n                                        message:\n                                            'Desription is too short. Minimal length is 1.',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\" rules={priceRules}>\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }}\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((url, index) => ({\n                                            url,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) => {\n                                            console.log(fileList)\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList.map(\n                                                    image => image.url\n                                                ),\n                                            })\n                                        }}\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            url,\n                                                        ],\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                </Form.Item>\n                                <Form.Item label=\"Name\" rules={nameRules}>\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={descriptionRules}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Descriptions.Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Descriptions.Item label=\"Money\">\n                                    {previewReward.money}\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const createGroup = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'createGroup',\n                progressId,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardKey, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardKey,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connectionsSelect(account, friendData)}\n                </Form.Item>\n\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect(account, friendData)}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect(account, friendData)}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={nameRules}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                        rules={descriptionRules}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value)\n                props.setStartProgressVisible(false)\n            }}\n            account={props.account}\n            friendData={props.friendData}\n        />\n    ) : null\n\nexport default AddProgress\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport Button from 'antd/es/button'\nimport Empty from 'antd/es/empty'\nimport ProgressCard from './ProgressCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\n\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    props.setPageTitle({ main: 'Progresses', sub: '' })\n\n    const { progressData, account, groupData } = props\n    const { progresses, groups } = account\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    let loadedProgresses, loadedGroups\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n        loadedGroups = groups\n            .filter(item => groupData[item] && groupData[item].active)\n            .map(item => groupData[item])\n    }\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => setStartProgressVisible(false)}\n            width=\"90%\"\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => setStartProgressVisible(false)}\n                >\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n            />\n        </Modal>\n    )\n\n    return loadedProgresses && loadedGroups ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <TabPane tab=\"Progresses\" key=\"1\">\n                <AddCard\n                    title=\"Start a new progress\"\n                    sub=\"Rich your goals or help others!\"\n                    action={() => {\n                        setStartProgressVisible(true)\n                    }}\n                />\n                {loadedProgresses.map((progress, index) => (\n                    <ProgressCard key={index} progress={progress} />\n                ))}\n                {editGoal}\n            </TabPane>\n            <TabPane tab=\"Groups\" key=\"2\">\n                {loadedGroups.length > 0 ? (\n                    loadedGroups.map((group, index) => (\n                        <ProgressCard key={index} group={group} />\n                    ))\n                ) : (\n                    <Empty\n                        imageStyle={{\n                            height: 160,\n                        }}\n                        description={\n                            <span>\n                                Here you will find your groups. Groups can be\n                                created in existing progresses.\n                            </span>\n                        }\n                    />\n                )}\n            </TabPane>\n        </Tabs>\n    ) : null\n\n    // ) : (\n    //     <Empty\n    //         imageStyle={{\n    //             height: 160,\n    //         }}\n    //         description={\n    //             <span>\n    //                 This user has no progresses. You can create a goal and\n    //                 invite this user.\n    //             </span>\n    //         }\n    //     />\n    // )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        groupData: state.groupData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { progress, account, state, setState } = props\n    const { goal } = progress\n    const { rewardsGroups } = goal\n\n    const renderCheckbox = ({ checked, milestoneId, disabled }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(props, e.target.checked, milestoneId)\n            }\n            disabled={disabled}\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Rewards',\n            dataIndex: 'rewards',\n            key: 'rewards',\n            render: rewards => (\n                <Rewards rewardKey={rewards} rewards={rewardsGroups} />\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <Rewards\n                            rewardKey={1}\n                            rewards={[{ rewards: status, key: 1 }]}\n                            readOnly={true}\n                        />\n                    )}\n                </>\n            ),\n        },\n        ...goal.users.map(user => ({\n            title: user + ' (ach)',\n            dataIndex: user,\n            key: user,\n            render: renderCheckbox,\n        })),\n        {\n            title: progress.owner + ' (own)',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert + ' (exp)',\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n            disabled: id !== account._id,\n        }\n    }\n\n    const getMilestoneData = (milestone, index) => {\n        const stage = progress.stages.find(\n            stage => stage.milestoneId === milestone.key\n        ) || { approvedBy: [] }\n\n        const experts = {}\n        for (let expert of goal.experts) {\n            experts[expert] = getCheckboxStatus(expert, stage, milestone)\n        }\n\n        const users = {}\n        for (let user of goal.users) {\n            users[user] = getCheckboxStatus(user, stage, milestone)\n        }\n        return {\n            key: index,\n            name: milestone,\n            rewards: milestone.key,\n            status: stage.paid,\n            ...users,\n            owner: getCheckboxStatus(progress.owner, stage, milestone),\n            ...experts,\n        }\n    }\n\n    const milestonesData = [\n        getMilestoneData(\n            {\n                key: 'start',\n                name: 'Start',\n                description:\n                    'At this stage owner and user should agree to start this progress.',\n            },\n            'start'\n        ),\n        ...(goal.withMilestones\n            ? goal.milestonesValues.map(getMilestoneData)\n            : []),\n        getMilestoneData(\n            {\n                key: 'finish',\n                name: 'Finish',\n                description:\n                    'At this stage owner and user should agree to finish this progress.',\n            },\n            'finish'\n        ),\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <Rewards\n                                    rewardKey={state.previewMilestone.key}\n                                    rewards={rewardsGroups}\n                                    readOnly={true}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState } = props\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport Popconfirm from 'antd/es/popconfirm'\n\nconst Activity = props => {\n    const { account, progress, state, setState } = props\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{goal.users}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable\n                progress={progress}\n                account={account}\n                state={state}\n                setState={setState}\n            />\n            {account._id === progress.owner && (\n                <Button\n                    style={{ margin: '0px 20px 50px 0px' }}\n                    type=\"primary\"\n                    onClick={() => {\n                        setState({ ...state, editProgressOpen: true })\n                    }}\n                >\n                    Edit progress\n                </Button>\n            )}\n            {account._id === progress.owner && (\n                <Popconfirm\n                    title=\"Create a group if you want to have more similar prgresses with the same people.\"\n                    onConfirm={() =>\n                        wsActions.createGroup(account._id, progress._id)\n                    }\n                >\n                    <Button\n                        style={{ margin: '0px 20px 50px 0px' }}\n                        type=\"primary\"\n                    >\n                        Create a group\n                    </Button>\n                </Popconfirm>\n            )}\n            {account.progresses &&\n                account.progresses.includes(progress._id.toString()) && (\n                    <Button\n                        danger={true}\n                        onClick={() => {\n                            wsActions.leaveProgress(props)\n                        }}\n                    >\n                        Leave the progress\n                    </Button>\n                )}\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\n\nconst AddPost = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        console.log(props.replyToUser)\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                boxShadow:\n                    '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <h2>Post something new</h2>\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText\n                                    )\n                                    setMessageText('')\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                size=\"large\"\n                                type=\"link\"\n                            />\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        wsActions.addPost(\n                                            account._id,\n                                            parent,\n                                            parentType,\n                                            messageText,\n                                            url\n                                        )\n                                        if (props.onSend) props.onSend()\n                                    })\n                                }}\n                            >\n                                <Button\n                                    size=\"large\"\n                                    type=\"link\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureOutlined />\n                                        )\n                                    }\n                                />\n                            </Upload>\n                        </Form.Item>\n                    </>\n                }\n            />\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Activity from './Activity'\nimport Button from 'antd/es/button'\nimport ArrowLeftOutlined from '@ant-design/icons/ArrowLeftOutlined'\nimport Card from 'antd/es/card'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const progressId = props.history.location.pathname.split('/')[2]\n    useEffect(() => {\n        // if(props.isAuthed)\n        // props.set\n        // else\n        // pullData(props, data, setData, { forceAuth: false })\n        console.log(progressId)\n        props.setData({ currentProgress: progressId })\n    }, [props.isAuthed])\n\n    // useEffect(() => {\n    //     const paths = props.history.location.pathname.split('/')\n    //     paths.shift()\n    //     paths.shift()\n    //     const progressId = paths.join('/')\n    //     props.setData(progressId)\n    // }, [props.history.location.pathname])\n    const { progress, account, profile, friendData, posts } = props\n\n    if (!progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <>\n            <Button\n                style={{ position: 'fixed', right: 0, zIndex: 1000 }}\n                type=\"primary\"\n                onClick={() => setState({ ...state, activityOpen: true })}\n            >\n                Show activity\n            </Button>\n            <AddPost\n                parent={progressId}\n                account={account}\n                parentType=\"progress\"\n                // onSend={() => setEditingMessage('')}\n            />\n            {progress.posts.map(postId => {\n                if (posts[postId]) {\n                    const post = posts[postId]\n                    return (\n                        <Card>\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={post}\n                            />\n                        </Card>\n                    )\n                } else return null\n            })}\n            <Drawer\n                title=\"Progress activity and settings\"\n                placement=\"right\"\n                closable={true}\n                closeIcon={\n                    <Button type=\"primary\" icon={<ArrowLeftOutlined />}>\n                        Go back to posts\n                    </Button>\n                }\n                onClose={() => setState({ ...state, activityOpen: false })}\n                visible={state.activityOpen}\n                width={'100%'}\n            >\n                <Activity\n                    state={state}\n                    setState={setState}\n                    progress={progress}\n                    account={account}\n                />\n            </Drawer>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    if (!props.keepPageTitle)\n        props.setPageTitle({ main: 'Shop', sub: 'Wallet' })\n    const account = props.pulledProfile || props.account\n    return account.wallet\n        ? account.wallet.map((money, index) => (\n              <div\n                  onClick={() => props.history.push('/profile/' + money.user)}\n                  style={{ display: 'inline-block', margin: '4px 8px' }}\n              >\n                  <Card\n                      key={index}\n                      type=\"inner\"\n                      style={{\n                          width: 200,\n                      }}\n                      cover={\n                          <span style={{ padding: '25px' }}>\n                              <Avatar src={getAvatar(money.user)} size={150} />\n                          </span>\n                      }\n                      hoverable\n                      actions={[\n                          <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                              Go to the shop\n                          </Button>,\n                      ]}\n                  >\n                      <Meta title={money.user} description={money.amount} />\n                  </Card>\n              </div>\n          ))\n        : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wallet)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, aTransactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => aTransactionData[item])\n        .map(item => aTransactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Card>\n            <Table columns={columns} dataSource={tableData} />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        aTransactionData: state.aTransactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Transactions)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Shop', sub: 'My items' })\n    }, [])\n\n    return props.account._id ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                <WishlistAndPerks\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                    account={props.account}\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\nimport Tooltip from 'antd/es/tooltip'\nimport FrownOutlined from '@ant-design/icons/FrownOutlined'\nimport SmileOutlined from '@ant-design/icons/SmileOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport * as wsActions from '../websocketActions'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        accountId,\n    } = props\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const { asIcons } = props\n    const ResultButtun = props =>\n        asIcons ? (\n            <Tooltip title={props.text}>\n                <span\n                    type=\"link\"\n                    key={props.key}\n                    onClick={props.onClick}\n                    style={{ fontSize: '18px' }}\n                >\n                    {props.icon}\n                </span>\n            </Tooltip>\n        ) : (\n            <Button {...props}>{props.text}</Button>\n        )\n\n    return [\n        props.additionalButton,\n        ...(invitingFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Accept\"\n                      key=\"0\"\n                      onClick={() => wsActions.acceptFriend(accountId, _id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n                  <ResultButtun\n                      text=\"Decline\"\n                      key=\"1\"\n                      onClick={() => wsActions.unfriend(accountId, _id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : invitedFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Cancel invitation\"\n                      key=\"2\"\n                      onClick={() => wsActions.unfriend(accountId, _id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : realFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      key=\"3\"\n                      onClick={() => wsActions.unfriend(accountId, _id)}\n                      icon={<FrownOutlined />}\n                      text=\"Unfriend\"\n                      danger={true}\n                  />,\n              ]\n            : [\n                  <ResultButtun\n                      text=\"Become friends\"\n                      key=\"4\"\n                      onClick={() => wsActions.addFriend(accountId, _id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n              ]),\n    ]\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport Tooltip from 'antd/es/tooltip'\nimport EyeOutlined from '@ant-design/icons/EyeOutlined'\nimport friendActionButton from './FriendActionButton'\nimport getAvatar from '../utils/getAvatar'\n\nconst { Meta } = Card\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        accountId: props.account ? props.account._id : '',\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButton: (\n            <Tooltip title=\"See profile\">\n                <span\n                    type=\"link\"\n                    key=\"100\"\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                    style={{ fontSize: '18px' }}\n                >\n                    <EyeOutlined />\n                </span>\n            </Tooltip>\n        ),\n    })\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: 200, display: 'inline-block', margin: '4px 8px' }}\n            cover={\n                <span\n                    style={{ padding: '25px', cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    <Avatar\n                        src={getAvatar(props.friend._id, props.friend.image)}\n                        size={150}\n                    />\n                </span>\n            }\n            actions={friendActions}\n        >\n            <Meta\n                title={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend.name}\n                    </span>\n                }\n                description={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend._id}\n                    </span>\n                }\n            />\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult(null)\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst pendingFriends = props => {\n    const {\n        pendingFriendsOpen,\n        setPendingFriendsOpen,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    return (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            width=\"90%\"\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Divider from 'antd/es/divider'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <>\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <>\n                    <Button\n                        style={{ margin: '30px 0px ' }}\n                        type=\"primary\"\n                        onClick={() => setPendingFriendsOpen(true)}\n                    >\n                        Show pending friends\n                    </Button>\n                    <Divider type=\"horizontal\" />\n                </>\n            )}\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n\n            {realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                />\n            ))}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n            <PendingFriends\n                pendingFriendsOpen={pendingFriendsOpen}\n                setPendingFriendsOpen={setPendingFriendsOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Modal from 'antd/es/modal'\nimport { accountNameRules } from '../../constants/fieldRules'\nimport * as wsActions from '../../websocketActions'\nimport message from 'antd/es/message'\n\nconst Account = props => {\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const { account } = props\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Account', sub: '' })\n    }, [])\n\n    const loading = false\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 0 },\n    }\n    return account && account.name ? (\n        <Card>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, 'avatar', () => {\n                        props.increaseAvatarV()\n                    })\n                }}\n            >\n                {account.image ? (\n                    <Avatar\n                        src={getAvatar(account._id, account.image)}\n                        size={150}\n                        style={{ margin: '25px' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.editAccount(value, account._id)}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: account.name,\n                    nickname: account._id,\n                }}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item label=\"Nickname\" name=\"nickname\">\n                    <Input disabled={true} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button\n                        type=\"dashed\"\n                        onClick={() => setDeleteVisible(true)}\n                        danger={true}\n                        size=\"large\"\n                    >\n                        Delete account\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                title=\"Delete account\"\n                visible={deleteVisible}\n                onOk={() => {\n                    if (deleteField !== account._id) {\n                        message.warning('The nickmanme is not correct.')\n                    } else {\n                        wsActions.deleteAccount(account._id)\n                    }\n                }}\n                onCancel={() => {\n                    setDeleteVisible(false)\n                    setDeleteField('')\n                }}\n            >\n                <p>\n                    Please enter your nickname and press Ok to delete your\n                    account.\n                </p>\n                <Input onChange={e => setDeleteField(e.target.value)} />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Account)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Profile = props => {\n    useEffect(() => {\n        pullData(props, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (props.pulledFrom !== 'profile') return null\n\n    const { profile, account } = props\n    if (!profile._id || !profile.goals) return null\n    props.setPageTitle({ main: profile.name, sub: profile._id })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        accountId: account ? account._id : '',\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n    })\n    return (\n        <Card>\n            <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                <Avatar\n                    src={getAvatar(profile._is, profile.image)}\n                    size={200}\n                />\n                <h1>{profile.name}</h1>\n                <h3>({profile._id})</h3>\n                {friendActions}\n            </div>\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Progresses\">\n                        <Progresses\n                            pulledProfile={profile}\n                            progressesData={profile.progressesData}\n                            keepPageTitle={true}\n                            noPullData={true}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={goal}\n                                perkId={goal.goalId}\n                                owner={profile}\n                                account={account}\n                                setEditedPerk={() => {}}\n                                setEditPerkOpen={() => {}}\n                                mode=\"goals\"\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    perkId={perk.perkId}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    mode=\"shop\"\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet\n                            keepPageTitle={true}\n                            pulledProfile={profile}\n                            account={profile}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Wishlist\">\n                        {profile.wishlist.map((item, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={item}\n                                perkId={item.itemId}\n                                owner={profile}\n                                account={account}\n                                setEditedPerk={() => {}}\n                                setEditPerkOpen={() => {}}\n                                mode=\"wishlist\"\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    console.log('here')\n    if (!props.isAuthed) props.history.push('/logout')\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                    props.history.push('/account')\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport Button from 'antd/es/button'\nimport getAvatar from '../../utils/getAvatar'\nimport Post from '../../components/Post/Post'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => {\n                const friendObj = props.friendData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={getAvatar(item, friendObj.image)}\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    shop\n                </span>\n            }\n        >\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Post\n                noStartMessage={true}\n                post={props.post[perk.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Post from '../../components/Post/Post'\n\nconst WishlistItem = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.wishlistItem) return null\n    const { wishlistItem, profile } = data\n    props.setData({ currentPosts: wishlistItem.post })\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    wishlist\n                </span>\n            }\n        >\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{wishlistItem.name}</h1>\n            <p>{wishlistItem.description}</p>\n            <Post\n                noStartMessage={true}\n                post={props.post[wishlistItem.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n\n    return props.account._id ? (\n        <WishlistAndPerks mode=\"wishlist\" account={props.account} />\n    ) : (\n        <span />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goals/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n// import Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth(props)\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/login\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/goals\" exact component={Goals} />\n            <Route path=\"/goals\" component={Goal} />\n\n            <Route path=\"/progresses\" exact component={Progresses} />\n            <Route path=\"/progresses\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/friends\" exact component={Friends} />\n\n            <Route path=\"/account\" exact component={Account} />\n            {/* <Route\n                    path=\"/dashboard\"\n                    exact\n                    component={withProps(Dashboard, generalProps)}\n                /> */}\n\n            <Route path=\"/shop\" exact component={Shop} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" exact component={Wishlist} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n            <Route path=\"/logout\" exact component={Logout} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            {isAuthed ? (\n                <Redirect to=\"/progresses\" />\n            ) : (\n                <Redirect to=\"/login\" />\n            )}\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentGroup: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    group: {},\n    groupData: {},\n    pageTitle: {},\n    lastUrl: '',\n    friendSearchResult: null,\n    accountNotActive: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentGroup',\n                'profile',\n                'group',\n                'currentProgress',\n                'progress',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'groupData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'group',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'groupData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SAVE_LAST_URL: (state: Object, action: Object) => {\n        if (action.url !== '/login' && action.url !== '/logout')\n            state.lastUrl = action.url\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}