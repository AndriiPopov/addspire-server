{"version":3,"sources":["components/Layout/Layout.module.css","components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Welcome/Welcome.module.scss","containers/Auth/AuthTest.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/requestResource.tsx","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","store/actions/auth.tsx","store/actions/saveResources.tsx","store/actions/updateResource.tsx","components/Layout/LoginModal.tsx","utils/getAvatar.js","components/Layout/BottomMenu.tsx","components/UI/DialogFullscreen.tsx","components/FriendActionButton.tsx","components/UserButton/UserButton.tsx","components/MasonryCard.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","components/UI/TinyEditor.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/UI/WeekDayPicker.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","containers/Blog/Blog.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","components/Post/AddMessage.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/FollowButton.tsx","components/UI/ReadMore.tsx","components/Post/EditPost.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/MapSettings.tsx","components/UI/ShareButton.tsx","components/Welcome/index.tsx","containers/Explore/Explore.tsx","containers/Blog/BlogArticle.tsx","containers/MindMap/Line.tsx","containers/MindMap/actions.tsx","components/UI/HorizontalScrollList.tsx","components/ResourceHeader.tsx","components/ResourceCore.tsx","components/MapPosition/MapPosition.tsx","components/Post/AddPost.tsx","components/Post/ResourcePosts.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","components/ProgressButton.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/MindMap/FolderMM.tsx","containers/MindMap/ProfileMM.tsx","utils/pullData.js","components/ResourceCoreMM.tsx","containers/MindMap/old/RewardMM.tsx","containers/MindMap/old/GoalMM.tsx","containers/MindMap/old/ActivityMM.tsx","containers/MindMap/ChooseWrapMM.tsx","containers/MindMap/ContainerMM.tsx","containers/MindMap/MindMap.tsx","containers/MindMap/MindMapWrap.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","bottomMenu","logo","Container","socialButtons","Background","Dots","Avatar","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","step","howWorks","videoholder","Cookies","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","props","t","data","logout","history","push","home","success","errorCode","message","warning","error","successCode","status","getListOfNeededResources","notFoundResources","store","requestedResources","user","account","progress","reward","activity","post","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","_id","currentAccount","_i","_arr","concat","Object","toConsumableArray","progresses","followProgresses","recent","filter","item","resourceType","map","resourceId","length","_step","_iterator","_createForOfIteratorHelper","followPosts","s","n","done","value","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_step5","_iterator5","_step6","_iterator6","_step7","_iterator7","rewardId","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","_i5","_arr5","currentGoal","participants","owner","users","likes","_step11","_iterator11","_step12","_iterator12","posts","_i6","_arr6","oldRewards","_i7","_arr7","oldActivities","currentPosts","_step13","_iterator13","postEl","_step14","_iterator14","parent","parentType","parentId","currentReward","_i8","_arr8","_step15","_iterator15","currentActivity","_i9","_arr9","_step16","_iterator16","friendSearchResult","_step17","_iterator17","reduce","obj","attr","Array","from","Set","includes","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","requestResource","type","ids","state","notRequestedIds","id","webSocket","readyState","send","JSON","stringify","messageCode","compareVersionsAndRerequest","versions","checkData","__v","getResourcesToMonitor","addData","cookies","listOfGroups","ConnectWebsocket","markNotFoundResource","newNotFound","_this","setState","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","axios","defaults","headers","common","initializeRequestResources","onmessage","news","parse","setData","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","setFriendSearchResult","set","path","expires","Date","getTime","structureIsSaved","addToStructure","accountId","structureId","onclose","checkInterval","check","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","dispatch","pulledFrom","actions","changeLikesMessage","messageId","postId","editAccount","name","followResource","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","tryAuth","token","sessionStorage","setItem","get","rememberMe","remove","userId","jwt_decode","put","delete","Accept","setIsAuthed","setPageTitle","title","saveStructure","getState","structure","console","log","structureMM","myAccount","find","saveResources_createForOfIteratorHelper","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","TransitionComponent","react_default","a","createElement","Slide","assign","direction","useTranslation","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","basicURL","loginVisible","Dialog","fullScreen","open","onClose","setLoginVisible","scroll","className","classes","style","maxWidth","margin","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","FormControlLabel","control","Checkbox","checked","onChange","color","label","Divider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","autoFocus","getAvatar","nickname","version","useStyles","makeStyles","theme","createStyles","speedDial","right","bottom","position","left","spacing","login","avatar","border","palette","primary","main","marginLeft","flex","blogLabel","display","breakpoints","up","blogIcon","lastNotifications","isConnectingWS","language","recentShown","markRecentShown","scrollTrigger","useScrollTrigger","isActivating","pathname","logedIn","openLink","url","numberOfUnseenNots","BottomMenu_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","Fragment","appear","in","Box","width","zIndex","pointerEvents","cll","Paper","elevation","borderRadius","IconButton","Badge","badgeContent","root","src","image","NotificationsOutlined","Search","appBar","DialogFullscreen","AppBar","Toolbar","edge","aria-label","Close","Typography","variant","save","saveText","children","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","index","MenuItem","minimized","asText","preventDefault","stopPropagation","wsActions","noFollow","friendDataExp","getUserData","userName","text","typography","noWrap","userAvatar","ava","size","noClick","noName","badge","onlyName","Group","noAva","span","react_router_dom","objectSpread","cursor","to","inline","es_button","padding","height","placeholderImages","getPH","matches","match","imagePH","Math","abs","round","x","makeRand","images","picture","boxShadow","noLink","wordBreak","alignItems","body","onClickLink","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","placeholder","target","search","SearchOutlined","components_FriendCard","languageText","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","drawCircle","drawMarker","keepCurrentZoomLevel","setView","flyTo","addTo","navigator","geolocation","getCurrentPosition","withLeaflet","withTranslation","uploadFile","file","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","catch","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","justifyContent","flexDirection","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","TinyEditor","contentState","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","react_draft_wysiwyg","readOnly","toolbarClassName","MM","toolbarOnFocus","wrapperClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbar","options","inDropdown","list","textAlign","link","toolbarHidden","goalCategories","GoalCategories","category","Chip","nolim","pop","days","day","sort","Select","divider","EditResource","useRef","current","leafletElement","ELG","useMapBounds","GestureHandling","resource","selectedBox","setStructure","addEmptyToStructure","positionIsProvided","coordinates","setPosition","initialPosition","setInitialPosition","_useState5","_useState6","positionRead","setPositionRead","_useState7","_useState8","currentTab","setCurrentTab","_useState9","descriptionText","_useState10","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","mapClick","latlng","lat","lng","setFieldsValue","nomap","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","now","goToResource","autoComplete","initialValues","repeat","dueDate","labelCol","wrapperCol","onValuesChange","changedFields","allValues","Item","rules","getValueFromEvent","Input","fullWidth","EditResource_GoalCategories","Map","ref","center","zoom","onclick","gestureHandling","onlocationfound","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","react_leaflet_fullscreen_dist_default","square","Tabs","indicatorColor","textColor","Tab","valuePropName","hidden","UI_ImagePickerMulti","DatePicker","format","KeyboardButtonProps","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","UI_WeekDayPicker","marginTop","marginRight","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","removeGutters","paths","Layout_createForOfIteratorHelper","checkPagePath","hide","white","background","noHeader","LinearProgress","top","tabIndex","header","Link","components_LanguageSwitcher_LanguageSwitcher","Book","noContent","paddingBottom","disableGutters","Layout_BottomMenu","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","dayjs","flexGrow","media","backgroundSize","setPosts","setTitle","all","setAll","method","query","json","Helmet","Grid","container","xs","md","xl","Card","CardActionArea","CardMedia","CardContent","gutterBottom","subtitle","published_at","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","b","date","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","&>div::after","&>div::before","& textarea","setImageLoading","content","replyToUser","setMessageText","isTop","TextField","multiline","messageValue","replyToMessage","editedMessage","replyTo","editingMessage","onSend","spanStyle","showUploadList","ImageCarousel","carousel","dots","autoplay","backgroundImage","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","FollowButton","ReadMore","overflow","setOverflow","setOpen","descRef","offsetHeight","initialHeight","contentEditor","maxHeight","dangerouslySetInnerHTML","__html","transition","opacity","addTitle","textTransform","EditPost","handleSave","handleCancel","ConfirmAction","confirm","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","setEditingMessage","_useState11","_useState12","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","fromNow","startMessage","messageType","Post_EditPost","anchorOrigin","vertical","horizontal","overlap","icon","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","isPostPage","postOpen","setPostOpen","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","startIcon","ThumbUpOutlined","AddCommentOutlined","messages","Post_createForOfIteratorHelper","getNumberOfMessages","p","v","vN","isNaN","stageName","itemName","price","buyer","as","stage","stageDate","year","dayOfYear","week","startOf","endOf","month","getStageName","progressId","progressName","addedAccounts","ac","droppedAccounts","for","action","profileId","profileName","rewardName","activityId","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","findIndex","toString","_newOldPosts","resultPosts","neededPosts","sub","nots","components_Post_Post","Dashboard_DashboardEvents","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","positionChanged","setPositionChanged","radius","setRadius","changed","setChanged","withMap","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","Slider","valueLabelDisplay","minHeight","whenReady","onzoomend","CircleMarker","alertVisible","setAlertVisible","setFriends","basicProps","linkHash","href","leaveDelay","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","frameBorder","allowFullScreen","allow","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","categories","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","urlDir","Explore_MapSettings","components_Welcome","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","UI_ShareButton","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","paddingLeft","paddingRight","ReactHtmlParser","data-href","data-numposts","data-width","Line","waitWhenRefIsReady","timer","line","drawLine","_this$props","end","LeaderLine","dragStep","addBox","HorizontalScrollList","items","empty","customEmpty","withAdd","overflowX","flexShrink","onAdd","AddCircle","bottomContent","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","ResourceHeader","followersVisible","setFollowersVisible","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","getDropDownMeuItems","getStatusText","ThemeProvider","startDate","finishDate","navi","ownProps","pathParts","setResource","components_ResourceHeader","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","reverse","Post_AddPost","TabPanel","other","objectWithoutProperties","role","aria-labelledby","a11yProps","aria-controls","setReward","components_ResourceCore","description","components_MapPosition_MapPosition","Post_ResourcePosts","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","setChosenResource","isOwner","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","EditProgressReward","initialValue","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","customTheme","purple","MuiListItem","secondaryAction","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","diff","stageId","getNowStageId","tabs","defaultActiveKey","getStatus","dismissed","failBy","approvedBy","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","setProgress","currentTabD","setCurrentTabD","Goal_TabPanel","components_Activities_Activities","components_Rewards_Rewards","setActivity","Activity_TabPanel","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","dataProp","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","sectionTitle","increaseAvatarV","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","startProgressVisible","setStartProgressVisible","Profile_createForOfIteratorHelper","loadedProgresses","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","components_Transactions_Transactions","newValue","scrollButtons","components_ProgressButton","FolderMM","el","editingText","setEditingText","saveValueMM","textValue","setTextValue","imageValue","noNeedToSave","memo","pullData","getData","ProfileMM_createForOfIteratorHelper","i","unsortedItems","unsortedIds","newCurrentId","currentId","actions_createForOfIteratorHelper","sizePos","y","b00","addUnsorted","whiteSpace","ResourceCoreMM","addDragStep","resType","addBlock","blockType","deleteBlock","setChangeParentMode","changeParentMode","editorMode","hash","substring","openElement","setOpenElement","addMenu","Add","esm_Image","Send","Delete","MindMap_FolderMM","MindMap_ProfileMM","old_RewardMM","old_GoalMM","old_ActivityMM","containers_Profile_Profile","containers_Activity_Activity","containers_Goal_Goal","resizeStyle","ConnectedContainerMM","setSizepos","changeParentMM","childId","myRef1","myRef4","setSelectedBox","scale","myRef2","editingFolder","editingElement","selectedIndex","setSelectedIndex","setEditingElement","setEditingFolder","handler","passive","removeEventListener","temp","unsorted","MindMap_Line","collapsed","react_rnd_lib","disableDragging","enableResizing","resizeHandleStyles","bottomLeft","bottomRight","topLeft","topRight","onMouseDown","outline","onDrag","dragHandler","onResize","dir","elRef","resizeHandler","MindMap_ChooseWrapMM","transform","structureNotSaved","setEditorMode","setEventIsFromDraggable","useBeforeunload","handleMouseDown","MindMap_createForOfIteratorHelper","nativeEvent","composedPath","getAttribute","classN","react_router","when","ArrowBack","onTouchStart","onTouchEnd","onMouseUp","index_es","MindMap_ContainerMM","setScale","eventIsFromDraggable","throttleFunc","throttle","defaultScale","defaultPositionX","defaultPositionY","limitToBounds","minScale","maxScale","disabled","pan","velocity","wheel","onZoomChange","onPanning","onPanningStop","onPinching","onPinchingStop","containers_MindMap_MindMap","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","routes","exact","MindMapWrap","Explore","DashboardPosts","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","b0","innerChildren","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","ADD_DRAG_STEP","SET_STRUCTURE","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","SET_RECENT_SHOWN","ADD_TO_STRUCTURE","STRUCTURE_IS_SAVED","ADD_BLOCK","SET_SIZEPOS","SAVE_VALUE_MM","ADD_EMPTY_TO_STRUCTURE","DELETE_BLOCK","child","CHANGE_PARENT_MM","isDecedant","childParentId","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","useUtils_cfb96ac9","utils","DayUtils","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ec02761a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\",\"bottomMenu\":\"Layout_bottomMenu__p7MZh\",\"logo\":\"Layout_logo__3_HwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\",\"step\":\"Welcome_step__3KDh2\",\"howWorks\":\"Welcome_howWorks__r5E6t\",\"videoholder\":\"Welcome_videoholder__1WZ7O\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                case 'reward created':\n                    message.success(t('processRes.rewardStarted'))\n                    break\n                case 'activity created':\n                    message.success(t('processRes.activityStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","export default (props, notFoundResources) => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'goal')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'reward')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'activity')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.followProgresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progress[progress]) {\n                            requestedResources.progress.push(progress)\n                        }\n                        neededResources.progress.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.reward[reward]) {\n                            requestedResources.reward.push(reward)\n                        }\n                        neededResources.reward.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activity[activity]) {\n                            requestedResources.activity.push(activity)\n                        }\n                        neededResources.activity.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(\n                    new Set(\n                        obj[attr].filter(\n                            item => !notFoundResources.includes(item)\n                        )\n                    )\n                )\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n\n    check1('account', 'account')\n    check1('account', 'profile')\n    check2('progress')\n    check2('reward')\n    check2('activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    checkData('progress')\n    checkData('reward')\n    checkData('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport i18n from '../../translations/i18n'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n        notFoundResources: [],\n    }\n    markNotFoundResource = ids => {\n        const newNotFound = [...this.state.notFoundResources, ...ids]\n        this.setState({ notFoundResources: newNotFound })\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(i18n.t('processRes.success'))\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText || '/')\n                    break\n                case '404':\n                    message.error(i18n.t('processRes.404'))\n                    this.props.history.push(news.messageText || '/')\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'structureSaved':\n                    this.props.structureIsSaved()\n                    break\n                case 'error':\n                    message.error(i18n.t('processRes.error'))\n                    break\n                case 'notFoundResource':\n                    this.markNotFoundResource(news._id)\n                    break\n                case 'addToStructure':\n                    this.props.addToStructure(\n                        news.accountId,\n                        news.structureId,\n                        news.resourceId\n                    )\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            this.state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n        addToStructure: (accountId, structureId, resourceId) =>\n            dispatch(\n                actions.addToStructure(accountId, structureId, resourceId)\n            ),\n        logout: () => dispatch(actions.logout()),\n        structureIsSaved: () => dispatch(actions.structureIsSaved()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const saveStructure = (accountId, structure) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveStructure',\n                accountId,\n                structure,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\nimport * as wsActions from '../../websocketActions'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const markRecentShown = () => ({\n    type: 'SET_RECENT_SHOWN',\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const addDragStep = () => ({\n    type: 'ADD_DRAG_STEP',\n})\n\nexport const setStructure = (structure, noNeedToSave) => ({\n    type: 'SET_STRUCTURE',\n    structure,\n    noNeedToSave,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n\nexport const addToStructure = (accountId, structureId, resourceId) => ({\n    type: 'ADD_TO_STRUCTURE',\n    accountId,\n    structureId,\n    resourceId,\n})\n\nexport const structureIsSaved = () => ({\n    type: 'STRUCTURE_IS_SAVED',\n})\n\nexport const addBlock = (id, blockType) => ({\n    type: 'ADD_BLOCK',\n    id,\n    blockType,\n})\n\nexport const setSizepos = (id, sizePos) => ({\n    type: 'SET_SIZEPOS',\n    id,\n    sizePos,\n})\n\nexport const saveValueMM = (id, value) => ({\n    type: 'SAVE_VALUE_MM',\n    id,\n    value,\n})\n\nexport const addEmptyToStructure = (id, selectedBox, type) => ({\n    type: 'ADD_EMPTY_TO_STRUCTURE',\n    id,\n    selectedBox,\n    resType: type,\n})\nexport const deleteBlock = id => ({\n    type: 'DELETE_BLOCK',\n    id,\n})\n\nexport const changeParentMM = (childId, parentId) => ({\n    type: 'CHANGE_PARENT_MM',\n    childId,\n    parentId,\n})\n\nexport const saveStructure = () => (dispatch, getState) => {\n    const state = getState()\n    console.log(state)\n    wsActions.saveStructure(state.account._id, state.structureMM)\n    dispatch({\n        type: 'STRUCTURE_IS_SAVED',\n    })\n}\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                let progress = {}\n                for (let item of data) {\n                    progress[item._id] = item\n                }\n                dispatch(setData({ progress }))\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                let reward = {}\n                for (let item of data) {\n                    reward[item._id] = item\n                }\n                dispatch(setData({ reward }))\n                break\n            case 'activity':\n                let activity = {}\n                for (let item of data) {\n                    activity[item._id] = item\n                }\n                dispatch(setData({ activity }))\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n            // check('progress')\n            // break\n            case 'reward':\n            // check('reward')\n            // break\n            case 'activity':\n                // check('activity')\n                // break\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            'status',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import {\n    Avatar,\n    Badge,\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Slide,\n    Theme,\n    Typography,\n    useScrollTrigger,\n} from '@material-ui/core'\nimport { History, NotificationsOutlined, Search } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport getAvatar from '../../utils/getAvatar'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport * as cll from './Layout.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst BottomMenu = props => {\n    const { account, progressData, activityData, rewardData } = props\n\n    const [recentVisible, setRecentVisible] = useState(!props.recentShown)\n    const [hideRecentTimeout, setHideRecentTimeout] = useState()\n    const scrollTrigger = !useScrollTrigger()\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n    const openLink = url => props.history.push(url)\n    // useEffect(() => {\n    //     if (!scrollTrigger) setRecentVisible(false)\n    // }, [scrollTrigger])\n\n    // useEffect(() => {\n    //     if (Boolean(logedIn && !isActivating && !props.recentShown)) {\n    //         const timeout = setTimeout(() => setRecentVisible(false), 6000)\n    //         setHideRecentTimeout(timeout)\n    //         props.markRecentShown()\n    //     }\n    // }, [Boolean(logedIn && !isActivating)])\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const classes = useStyles()\n\n    return (\n        <>\n            <Slide appear={false} direction=\"up\" in={scrollTrigger}>\n                <Box\n                    style={{\n                        position: 'fixed',\n                        bottom: '12px',\n                        width: '100%',\n                        zIndex: 1,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {logedIn && !isActivating && (\n                        <>\n                            {/* <Slide\n                                appear={false}\n                                direction=\"left\"\n                                in={recentVisible}\n                            >\n                                <Box style={{ margin: '6px 10px' }}>\n                                    <Paper\n                                        style={{\n                                            overflowX: 'auto',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'left',\n                                            position: 'relative',\n                                            maxWidth: '400px',\n                                            padding: '5px',\n                                            margin: 'auto',\n                                            pointerEvents: 'auto',\n                                        }}\n                                        onMouseDown={() => {\n                                            clearTimeout(hideRecentTimeout)\n                                        }}\n                                        onScroll={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                        onTouchStart={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                    >\n                                        {account.recent.map((item, index) => {\n                                            const urlDir =\n                                                item.resourceType === 'goal'\n                                                    ? 'goals'\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? 'rewards'\n                                                    : 'activities'\n                                            const dataType =\n                                                item.resourceType === 'goal'\n                                                    ? progressData\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? rewardData\n                                                    : activityData\n\n                                            const data =\n                                                dataType[item.resourceId]\n\n                                            return data ? (\n                                                <Card\n                                                    style={{\n                                                        overflow: 'hidden',\n                                                        marginRight: '10px',\n                                                    }}\n                                                >\n                                                    <CardActionArea>\n                                                        <Link\n                                                            to={\n                                                                '/' +\n                                                                urlDir +\n                                                                '/' +\n                                                                data._id\n                                                            }\n                                                            onClick={() =>\n                                                                setRecentVisible(\n                                                                    false\n                                                                )\n                                                            }\n                                                        >\n                                                            <CardMedia\n                                                                style={{\n                                                                    height:\n                                                                        '56px',\n                                                                    width:\n                                                                        '56px',\n                                                                    backgroundSize:\n                                                                        'cover',\n                                                                    borderRadius:\n                                                                        '28',\n                                                                }}\n                                                                image={\n                                                                    data.images\n                                                                        .length >\n                                                                    0\n                                                                        ? data\n                                                                              .images[0]\n                                                                        : placeholderImages[\n                                                                              getPH(\n                                                                                  data._id\n                                                                              )\n                                                                          ]\n                                                                }\n                                                                title={\n                                                                    data.name\n                                                                }\n                                                            />\n                                                            <CardContent\n                                                                style={{\n                                                                    padding:\n                                                                        '0px',\n                                                                    position:\n                                                                        'absolute',\n                                                                    bottom:\n                                                                        '0px',\n                                                                    background:\n                                                                        'white',\n                                                                    width:\n                                                                        '100%',\n                                                                }}\n                                                            >\n                                                                <Typography\n                                                                    variant=\"body2\"\n                                                                    noWrap\n                                                                    align=\"center\"\n                                                                >\n                                                                    {data.name}\n                                                                </Typography>\n                                                            </CardContent>\n                                                        </Link>\n                                                    </CardActionArea>\n                                                </Card>\n                                            ) : null\n                                        })}\n                                    </Paper>\n                                </Box>\n                            </Slide> */}\n                            <Box className={cll.bottomMenu}>\n                                <Paper\n                                    elevation={3}\n                                    style={{\n                                        borderRadius: '37px',\n                                        pointerEvents: 'auto',\n                                    }}\n                                >\n                                    <IconButton onClick={() => openLink('/')}>\n                                        <Badge\n                                            badgeContent={\n                                                account.friends.filter(\n                                                    item =>\n                                                        item.status ===\n                                                        'inviting'\n                                                ).length\n                                            }\n                                            color=\"secondary\"\n                                        >\n                                            <Avatar\n                                                classes={\n                                                    props.history.location\n                                                        .pathname ===\n                                                        '/profile/' +\n                                                            account._id ||\n                                                    props.history.location\n                                                        .pathname === '/'\n                                                        ? {\n                                                              root:\n                                                                  classes.avatar,\n                                                          }\n                                                        : {}\n                                                }\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/events')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/events'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={numberOfUnseenNots}\n                                            color=\"secondary\"\n                                        >\n                                            <NotificationsOutlined fontSize=\"large\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/explore')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/explore'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Search fontSize=\"large\" />\n                                    </IconButton>\n                                    {/* <IconButton\n                                        color={\n                                            recentVisible\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        onClick={() =>\n                                            setRecentVisible(!recentVisible)\n                                        }\n                                    >\n                                        <History fontSize=\"large\" />\n                                    </IconButton> */}\n                                </Paper>\n                            </Box>\n                        </>\n                    )}\n                </Box>\n            </Slide>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(BottomMenu)\n)\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <div className=\"tinyEditorText_\">\n                <AppBar className={classes.appBar} color=\"primary\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={props.close}\n                            aria-label=\"close\"\n                        >\n                            <Close />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            className={classes.title}\n                            color=\"inherit\"\n                        >\n                            {props.title}\n                        </Typography>\n                        {props.save && (\n                            <Button\n                                autoFocus\n                                color=\"inherit\"\n                                onClick={props.save}\n                            >\n                                {props.saveText || t('g.save')}\n                            </Button>\n                        )}\n                    </Toolbar>\n                </AppBar>\n                <Toolbar />\n                {props.children}\n            </div>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import { Box } from '@material-ui/core'\nimport { relative } from 'path'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: '15px',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return (\n        <Box style={{ position: 'relative' }}>\n            {props.noLink ? (\n                <>\n                    {picture}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box style={{ flex: 1 }}>{props.body}</Box>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <>\n                    <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n                        {picture}\n                    </Link>\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Link\n                            to={props.onClickLink}\n                            style={{ cursor: 'pointer', flex: 1 }}\n                        >\n                            {props.body}\n                        </Link>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n        </Box>\n    )\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n\n            drawCircle: false,\n            drawMarker: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n            flyTo: true,\n        })\n        lc.addTo(map)\n        navigator.geolocation.getCurrentPosition(() => lc.start())\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    if (typeof props.value === 'string') {\n        const blocksFromHtml = htmlToDraft(props.value)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = props.value\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <Editor\n            placeholder={t('g.addSomeText')}\n            readOnly={props.readOnly}\n            toolbarClassName={props.MM && 'demo-toolbar-absolute'}\n            toolbarOnFocus={props.MM}\n            wrapperClassName={!props.MM && 'demo-wrapper'}\n            {...(!props.readOnly ? {} : { contentState: contentState })}\n            defaultContentState={contentState}\n            onContentStateChange={value => {\n                props.onEditorChange && props.onEditorChange(value)\n                props.onEditorChangePlain &&\n                    props.onEditorChangePlain(\n                        convertFromRaw(value).getPlainText(' ')\n                    )\n            }}\n            toolbar={{\n                options: [\n                    'inline',\n                    ...(props.MM ? [] : ['blockType']),\n                    'fontSize',\n                    'fontFamily',\n                    'list',\n                    'textAlign',\n                    'colorPicker',\n                    'link',\n                    'emoji',\n                    'remove',\n                    'history',\n                ],\n                inline: { inDropdown: true },\n                list: { inDropdown: true },\n                textAlign: { inDropdown: true },\n                link: { inDropdown: true },\n                history: { inDropdown: true },\n            }}\n            toolbarHidden={props.readOnly}\n        />\n    )\n}\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst WeekDayPicker = props => {\n    const { t } = useTranslation()\n\n    const days =\n        props.language === 'ru' ? [1, 2, 3, 4, 5, 6, 0] : [0, 1, 2, 3, 4, 5, 6]\n    const value = props.value.map(item => parseInt(item))\n    return days.map(day => (\n        <Chip\n            style={{ margin: '0px 10px 10px 0px' }}\n            size=\"small\"\n            label={t(\n                'g.' +\n                    (day === 0\n                        ? 'sun'\n                        : day === 1\n                        ? 'mon'\n                        : day === 2\n                        ? 'tue'\n                        : day === 3\n                        ? 'wed'\n                        : day === 4\n                        ? 'thu'\n                        : day === 5\n                        ? 'fri'\n                        : day === 6\n                        ? 'sat'\n                        : '')\n            )}\n            color={value.includes(day) ? 'primary' : 'default'}\n            onClick={() => {\n                props.onChange(\n                    value.includes(day)\n                        ? value.filter(item => item !== day)\n                        : [...value, day].sort()\n                )\n            }}\n        />\n    ))\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(WeekDayPicker)\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n    Tabs,\n    Tab,\n    Paper,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport WeekDayPicker from '../UI/WeekDayPicker'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const {\n        resource,\n        account,\n        type,\n        structure,\n        setStructure,\n        selectedBox,\n        addEmptyToStructure,\n    } = props\n\n    const defPos = [40.689078, -74.044526]\n    const positionIsProvided =\n        resource && resource.position && resource.position.coordinates\n    const [position, setPosition] = useState(\n        positionIsProvided\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n    const [positionRead, setPositionRead] = useState(false)\n    const [currentTab, setCurrentTab] = useState(0)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        let structureId\n        if (!(resource && resource._id) && selectedBox) {\n            structureId = 'b' + Date.now()\n            addEmptyToStructure(structureId, selectedBox, type)\n        }\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type,\n            props.goToResource,\n            structureId\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <div className=\"tinyEditorText_\">\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                        dueDate: new Date(),\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                            onlocationfound={e => {\n                                if (!positionIsProvided && !positionRead) {\n                                    mapClick(e)\n                                    setInitialPosition([\n                                        e.latlng.lat,\n                                        e.latlng.lng,\n                                    ])\n                                    setPositionRead(true)\n                                }\n                            }}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                            <FullscreenControl position=\"topright\" />\n                        </Map>\n                    </div>\n                </Form.Item>\n                {type == 'goal' ? (\n                    <>\n                        <Form.Item label={t('g.detailsFor')}>\n                            <Paper square>\n                                <Tabs\n                                    value={currentTab}\n                                    onChange={(event, value) =>\n                                        setCurrentTab(value)\n                                    }\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                >\n                                    <Tab label={t('g.fromStart')} />\n                                    <Tab label={t('g.toGoal')} />\n                                    <Tab label={t('g.resultFinish')} />\n                                </Tabs>\n                            </Paper>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"startImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"startDate\"\n                            hidden={currentTab !== 0}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"startDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"dueDate\"\n                            hidden={currentTab !== 1}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"finishImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"finishDate\"\n                            hidden={currentTab !== 2}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"finishDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                    </>\n                ) : (\n                    <>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                    </>\n                )}\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <WeekDayPicker />\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (\n    accountId,\n    value,\n    type,\n    goToResource,\n    structureId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n                goToResource,\n                structureId,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const changeResourceStatus = (status, resourceId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeResourceStatus',\n                resourceId,\n                status,\n            })\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport BottomMenu from './BottomMenu'\nimport * as cll from './Layout.module.css'\nimport * as actions from '../../store/actions'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Card,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    Cake,\n    FitnessCenter,\n    GifTwoTone,\n    History,\n    HomeRounded,\n    Launch,\n    NotificationImportant,\n    Notifications,\n    NotificationsOutlined,\n    Person,\n    Repeat,\n    Search,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../MasonryCard'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n\n    const scrollTrigger = !useScrollTrigger()\n\n    const classes = useStyles()\n\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                {!props.noHeader && (\n                    <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                        <AppBar elevation={1} color=\"secondary\">\n                            {props.isConnectingWS && !logedIn && (\n                                <LinearProgress\n                                    style={{\n                                        width: '100%',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                    }}\n                                />\n                            )}\n\n                            <Toolbar>\n                                <div\n                                    tabIndex={0}\n                                    ref={domRef}\n                                    style={{ width: 0, height: 0 }}\n                                />\n                                {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                                {(account._id && props.header) || (\n                                    <Box style={{ display: 'flex', flex: 1 }}>\n                                        <Box\n                                            style={{\n                                                display: 'flex',\n                                                flex: 1,\n                                            }}\n                                        >\n                                            <Button\n                                                component={Link}\n                                                to={'/'}\n                                                style={{\n                                                    padding: '3px 8px',\n                                                }}\n                                            >\n                                                <img\n                                                    className={cll.logo}\n                                                    src=\"/logo-addspire.png\"\n                                                />\n                                            </Button>\n                                        </Box>\n                                        <Box style={{ display: 'flex' }}>\n                                            <LanguageSwitcher />\n\n                                            <Button\n                                                component={Link}\n                                                to={`/${\n                                                    language !== 'en'\n                                                        ? language + '/'\n                                                        : ''\n                                                }blog`}\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                            >\n                                                <Book\n                                                    className={classes.blogIcon}\n                                                />\n                                                <span\n                                                    className={\n                                                        classes.blogLabel\n                                                    }\n                                                >\n                                                    {t('layout.blog')}\n                                                </span>\n                                            </Button>\n\n                                            {(logedIn && isActivating) ||\n                                            (!logedIn &&\n                                                props.isConnectingWS) ? (\n                                                <Button\n                                                    onClick={() =>\n                                                        props.history.push(\n                                                            '/logout'\n                                                        )\n                                                    }\n                                                >\n                                                    {t('g.logout')}\n                                                </Button>\n                                            ) : (\n                                                !account._id && (\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        // startIcon={<Person />}\n                                                        onClick={() =>\n                                                            setLoginVisible(\n                                                                true\n                                                            )\n                                                        }\n                                                    >\n                                                        {t('layout.login')}\n                                                    </Button>\n                                                )\n                                            )}\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Toolbar>\n                        </AppBar>\n                    </Slide>\n                )}\n                {!props.noContent && (\n                    <>\n                        <Toolbar id=\"back-to-top-anchor\" />\n                        <Container\n                            style={{\n                                paddingTop: '20px',\n                                paddingBottom: '20px',\n                            }}\n                            disableGutters={Boolean(removeGutters)}\n                        >\n                            {props.children}\n                        </Container>\n                    </>\n                )}\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n                <BottomMenu />\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            goToResource\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountLayout)\n)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                {/* <Welcome /> */}\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success(t('activate.accountActivated'))\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(t('activate.accountTaken'))\n                    }\n                    if (res.data.errorCode) {\n                        message.error(t('activate.wrongData'))\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                {t('activate.accountActivation')}\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    {/* <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span> */}\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                const vN = parseInt(v.notId)\n                if (isNaN(vN)) return p\n                return p > vN ? p : vN\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const {\n        mapVisible,\n        setMapVisible,\n        onSearch,\n        setSearch,\n        search,\n        positionChanged,\n        setPositionChanged,\n    } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={200}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => getRadius()}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={8}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                    onzoomend={() => getRadius()}\n                    onlocationfound={e => {\n                        if (!positionChanged) {\n                            mapClick(e)\n                            setInitialPosition([e.latlng.lat, e.latlng.lng])\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                    <FullscreenControl position=\"topright\" />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.linkHash\n            ? 'https://addspire.com/profile/' +\n              props.profile +\n              '#' +\n              props.linkHash\n            : props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo-addspire.png',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)} scroll=\"paper\">\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            {account && account._id && (\n                                <Button\n                                    color=\"primary\"\n                                    style={{ marginTop: '10px' }}\n                                    onClick={() =>\n                                        friends.length > 0 &&\n                                        wsActions.shareWithFriends(\n                                            account._id,\n                                            basicProps.url,\n                                            friends,\n                                            props.item\n                                        )\n                                    }\n                                >\n                                    {t('g.send')}\n                                </Button>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box style={{ margin: '10% 0px 2%' }}>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n\n            <Box\n                style={{\n                    margin: '40px auto 10px',\n                    textAlign: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    {t('welcome.button')}\n                </Button>\n            </Box>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n\n            <Box>\n                <Typography\n                    variant=\"h2\"\n                    align=\"center\"\n                    style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                >\n                    {t('welcome.stepsTitle')}\n                </Typography>\n\n                <Box className={classes.howWorks}>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon1.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle1')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody1')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon2.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle2')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody2')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon3.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle3')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody3')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <div className={classes.videoholder}>\n                    <div>\n                        <iframe\n                            width=\"560\"\n                            height=\"315\"\n                            src={\n                                'https://www.youtube.com/embed/' +\n                                t('welcome.videoHowLink')\n                            }\n                            frameBorder=\"0\"\n                            allowFullScreen\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        />\n                    </div>\n                </div>\n            </Box>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Badge,\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n    const [positionChanged, setPositionChanged] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                    positionChanged={positionChanged}\n                    setPositionChanged={setPositionChanged}\n                />\n                <Welcome />\n\n                {!(props.account && props.account._id) && (\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                    >\n                        {t('explore.topGoalsTitle')}\n                    </Typography>\n                )}\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => {\n                                return (\n                                    <MasonryCard\n                                        id={item._id}\n                                        key={index}\n                                        onClickLink={\n                                            '/' + urlDir + '/' + item._id\n                                        }\n                                        images={item.images}\n                                        body={\n                                            <>\n                                                <Box\n                                                    style={{\n                                                        position: 'absolute',\n                                                        top: '10px',\n                                                    }}\n                                                >\n                                                    <UserButton\n                                                        noName={true}\n                                                        id={item.owner}\n                                                        friendDataExp={\n                                                            props.friendData\n                                                        }\n                                                    />\n                                                </Box>\n                                                {item.status && (\n                                                    <Tooltip\n                                                        title={t(\n                                                            'progress.' +\n                                                                (item.status ===\n                                                                'process'\n                                                                    ? 'inProcess'\n                                                                    : item.status)\n                                                        )}\n                                                    >\n                                                        <Box\n                                                            style={{\n                                                                display:\n                                                                    'inline-block',\n                                                                width: '10px',\n                                                                height: '10px',\n                                                                borderRadius:\n                                                                    '5px',\n                                                                marginRight:\n                                                                    '5px',\n                                                                background:\n                                                                    item.status ===\n                                                                    'process'\n                                                                        ? 'blue'\n                                                                        : item.status ===\n                                                                          'fail'\n                                                                        ? 'red'\n                                                                        : item.status ===\n                                                                          'dismissed'\n                                                                        ? 'orange'\n                                                                        : item.status ===\n                                                                          'complete'\n                                                                        ? 'green'\n                                                                        : 'white',\n                                                            }}\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            </>\n                                        }\n                                        actions={\n                                            <ShareButton\n                                                link={\n                                                    'https://addspire.com/' +\n                                                    urlDir +\n                                                    '/' +\n                                                    item._id\n                                                }\n                                                title={\n                                                    item.name +\n                                                    t('explore.shareText')\n                                                }\n                                                media={\n                                                    item.images &&\n                                                    item.images[0]\n                                                }\n                                                item={{\n                                                    progressId: item._id,\n                                                    progressName: item.name,\n                                                }}\n                                                profile={item.owner}\n                                                linkHash={item._id}\n                                            />\n                                        }\n                                    />\n                                )\n                            })}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                {/* <Welcome /> */}\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM D, YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            className=\"blogArticle\"\n                            style={{ fontSize: '1.05rem' }}\n                        >\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { Component } from 'react'\nimport LeaderLine from 'leader-line-new'\nimport { connect } from 'react-redux'\n\nclass Line extends Component {\n    componentDidMount() {\n        this.waitWhenRefIsReady()\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer)\n        }\n        if (this.line) this.line.remove()\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.line) {\n            this.line.position()\n            // if (nextProps.collapsed !== this.props.collapsed) {\n            //     if (nextProps.collapsed) this.line.hide()\n            //     else this.line.show()\n            // }\n        }\n\n        return false\n    }\n\n    waitWhenRefIsReady() {\n        this.timer = setInterval(() => {\n            if (this.props.start.current) {\n                clearInterval(this.timer)\n                this.drawLine()\n            }\n        }, 5)\n    }\n\n    drawLine() {\n        const { start, end } = this.props\n        this.line = new LeaderLine(start.current, end.current, { size: 3 })\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dragStep: state.dragStep }\n}\n\nexport default connect(mapStateToProps)(Line)\n","export const addBlock = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    children: [\n                        ...selectedElement.children,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type: 'folder',\n                    folderType: type,\n                    children: [],\n                    parent: selectedBox,\n                    innerChildren: type\n                        ? ['b' + (structure.currentId + 1)]\n                        : [],\n                    sizePos: {\n                        x: 200,\n                        y: 0,\n                        width: 320,\n                        height: 200,\n                    },\n                },\n                ...(type\n                    ? {\n                          ['b' + (structure.currentId + 1)]: {\n                              type,\n                              children: [],\n                              value:\n                                  type === 'text'\n                                      ? 'Add text here'\n                                      : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                              parent: 'b' + structure.currentId,\n                              sizePos: {\n                                  x: 5,\n                                  y: 5,\n                                  width: selectedElement.sizePos.width - 10,\n                                  height: 100,\n                              },\n                          },\n                      }\n                    : {}),\n            },\n            currentId: structure.currentId + (type ? 2 : 1),\n        })\n    }\n}\n\nexport const addElement = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            currentId: structure.currentId + 1,\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    innerChildren: [\n                        ...selectedElement.innerChildren,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type,\n                    children: [],\n                    value:\n                        type === 'text'\n                            ? 'Add text here'\n                            : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                    parent: selectedBox,\n                    sizePos: {\n                        x: 5,\n                        y: 5,\n                        width: selectedElement.sizePos.width - 10,\n                        height: 100,\n                    },\n                },\n            },\n        })\n    }\n}\n\nexport const changeParent = props => {\n    const {\n        selectedBox,\n        changeParentMode,\n        setChangeParentMode,\n        selectedElement,\n    } = props\n    if (changeParentMode) {\n        setChangeParentMode('')\n    } else {\n        if (selectedElement) {\n            setChangeParentMode(selectedBox)\n        }\n    }\n}\nexport const collapse = props => {\n    const { selectedBox, structure, setStructure } = props\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [selectedBox]: {\n                ...structure.items[selectedBox],\n                collapsed: !structure.items[selectedBox].collapsed,\n            },\n        },\n    })\n}\n\nexport const deleteElement = props => {\n    const {\n        selectedBox,\n        structure,\n        setStructure,\n        selectedIndex,\n        setSelectedIndex,\n        editingFolder,\n    } = props\n    if (!editingFolder) {\n        const newChildren = {}\n        for (let child of structure.items[selectedBox].children) {\n            newChildren[child] = {\n                ...structure.items[child],\n                parent: structure.items[selectedBox].parent,\n            }\n        }\n        const newItems = {\n            ...structure.items,\n            [structure.items[selectedBox].parent]: {\n                ...structure.items[structure.items[selectedBox].parent],\n                children: [\n                    ...structure.items[\n                        structure.items[selectedBox].parent\n                    ].children.filter(item => item !== selectedBox),\n                    ...structure.items[selectedBox].children,\n                ],\n            },\n            ...newChildren,\n        }\n        delete newItems[selectedBox]\n        setStructure({\n            ...structure,\n            items: newItems,\n        })\n    } else {\n        let { [selectedIndex]: el, ...newItems } = structure.items\n        if (el) {\n            setStructure({\n                ...structure,\n                items: {\n                    ...newItems,\n                    [selectedBox]: {\n                        ...newItems[selectedBox],\n                        innerChildren: newItems[\n                            selectedBox\n                        ].innerChildren.filter(item => item !== selectedIndex),\n                    },\n                },\n            })\n        }\n    }\n    setSelectedIndex('')\n}\n\nexport const saveValue = (id, key, value, structure, setStructure) => {\n    if (structure.items[id])\n        setStructure({\n            ...structure,\n            items: {\n                ...structure.items,\n                [id]: {\n                    ...structure.items[id],\n                    [key]: value,\n                },\n            },\n        })\n}\n\nexport const addUnsorted = (structure, setStructure, profile) => {\n    const unsortedItems = {}\n    const unsortedIds = []\n    let newCurrentId = structure.currentId\n    for (let item of profile.progresses) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'goal',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    for (let item of profile.rewards) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'reward',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    for (let item of profile.activities) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'activity',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    if (unsortedIds.length > 0) {\n        setStructure(\n            {\n                ...structure,\n                currentId: newCurrentId,\n                items: {\n                    ...structure.items,\n                    ...unsortedItems,\n                    b00: {\n                        ...structure.items.b00,\n                        children: [\n                            ...structure.items.b00.children,\n                            ...unsortedIds,\n                        ],\n                    },\n                },\n            },\n            true\n        )\n    }\n}\n\nexport const dragHandler = (id, data, setSizepos) =>\n    setSizepos(id, { x: data.x, y: data.y })\n\nexport const resizeHandler = (id, elRef, position, setSizepos) =>\n    setSizepos(id, {\n        x: position.x,\n        y: position.y,\n        width: parseInt(elRef.style.width),\n        height: parseInt(elRef.style.height),\n    })\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    fade,\n    IconButton,\n    Menu,\n    MenuItem,\n    MuiThemeProvider,\n    Paper,\n    Select,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { blue, green, orange, red } from '@material-ui/core/colors'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n\n    const getStatusText = () => {\n        const status = resource.status\n        switch (status) {\n            case 'fail':\n                return t('progress.failed')\n            case 'complete':\n                return t('progress.completed')\n            case 'dismissed':\n                return t('progress.dismissed')\n            default:\n                return t('progress.inProcess')\n        }\n    }\n\n    const getTag = () => {\n        return (\n            <MuiThemeProvider\n                theme={\n                    resource.status === 'process'\n                        ? blueTheme\n                        : resource.status === 'complete'\n                        ? greenTheme\n                        : resource.status === 'fail'\n                        ? redTheme\n                        : orangeTheme\n                }\n            >\n                <Box style={{ margin: '10px 0' }}>\n                    {resource.owner === account._id ? (\n                        <Select\n                            value={resource.status}\n                            onChange={e =>\n                                wsActions.changeResourceStatus(\n                                    e.target.value,\n                                    resource._id\n                                )\n                            }\n                        >\n                            <MenuItem value=\"complete\">\n                                {t('progress.complete')}\n                            </MenuItem>\n                            <MenuItem value=\"process\">\n                                {t('progress.inProcess')}\n                            </MenuItem>\n                            <MenuItem value=\"fail\">\n                                {t('progress.fail')}\n                            </MenuItem>\n                            <MenuItem value=\"dismissed\">\n                                {t('progress.dismiss')}\n                            </MenuItem>\n                        </Select>\n                    ) : (\n                        <Chip color=\"primary\" label={getStatusText()} />\n                    )}\n                </Box>\n            </MuiThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <Paper style={{ padding: '15px 15px 0px 15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                            profile={resource.owner}\n                            linkHash={resource._id}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                        {type === 'goal' && (\n                            <Box>\n                                {getTag()}\n                                {resource.startDate && (\n                                    <Typography>\n                                        {t('progress.startDate')}:{' '}\n                                        {dayjs(resource.startDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.dueDate && (\n                                    <Typography>\n                                        {t('progress.dueDate')}:{' '}\n                                        {dayjs(resource.dueDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.status !== 'process' &&\n                                    resource.finishDate && (\n                                        <Typography>\n                                            {t('progress.finishDate')}:{' '}\n                                            {dayjs(resource.finishDate).format(\n                                                'ddd, MMM D, YYYY'\n                                            )}\n                                        </Typography>\n                                    )}\n                            </Box>\n                        )}\n                    </Box>\n                </div>\n\n                <Divider />\n                {props.navi}\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId =\n        props.resourceId || (pathParts.length > 2 ? pathParts[2] : '')\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        }\n        // else {\n        //     pullData(props, data, setData, { forceAuth: false }, data => {\n        //         const friendData = {}\n        //         for (let friend of data.friendData)\n        //             friendData[friend._id] = friend\n        //         const activityData = {}\n        //         if (data.activityData)\n        //             for (let activity of data.activityData)\n        //                 activityData[activity._id] = activity\n        //         const rewardData = {}\n        //         if (data.rewardData)\n        //             for (let reward of data.rewardData)\n        //                 rewardData[reward._id] = reward\n        //         const post = {}\n        //         if (data.posts)\n        //             for (let item of data.posts) post[item._id] = item\n\n        //         props.setData({\n        //             friendData,\n        //             post,\n        //             account: {},\n        //             activityData,\n        //             rewardData,\n        //             onlineUsers: data.onlineUsers,\n        //             [type === 'goal' ? 'progress' : type]: data.resource,\n        //         })\n        //     })\n        // }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props\n\n    useEffect(() => {\n        if (resource && resource._id) props.setResource(resource)\n    }, [resource])\n    useEffect(() => {\n        props.setPosts(posts)\n    }, [posts])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        props.resourceId ? (\n            <Layout noHeader>\n                <div className=\"contentDiv\">\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        ) : (\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {resource.name}\n                    </Typography>\n                }\n            >\n                <div className=\"contentDiv\">\n                    <Helmet>\n                        <title>\n                            {`${resource.name} ${t('g.by')}${\n                                resource.owner\n                            } - Addspire`}\n                        </title>\n                        <meta\n                            name=\"description\"\n                            content={resource.descriptionText}\n                        />\n                    </Helmet>\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        )\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource:\n            state[ownProps.type === 'goal' ? 'progress' : ownProps.type][\n                ownProps.resourceId\n            ],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                // maxWidth: '400px',\n                height: '200px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n            <FullscreenControl position=\"topright\" />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            {account._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.addPost')}\n                    </Typography>\n                    <AddPost\n                        parent={resource._id}\n                        account={account}\n                        parentType={type}\n                        // onSend={() => setEditingMessage('')}\n                    />\n                </>\n            )}\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Reward = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"reward\"\n            setResource={setReward}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {reward && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={reward.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={reward.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={reward}\n                            posts={posts}\n                            type=\"reward\"\n                        />\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n        setChosenResource,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <span\n                                        onClick={() =>\n                                            setChosenResource(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </span>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward id={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? t('g.forTheseActivities') : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToReward')}\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Box>\n                                            <Button\n                                                onClick={() =>\n                                                    wsActions.sendReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        selectedReward\n                                                    )\n                                                }\n                                                color=\"primary\"\n                                            >\n                                                {t('g.sendRewardManually')}\n                                            </Button>\n                                        </Box>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.editReward')}\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.removeReward')}\n                                        </Button>\n                                    </>\n                                )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <UserButton id={rewardObj.owner} />\n                                <span>\n                                    {t(\n                                        'g.' +\n                                            (rewardObj.repeat === 'manual'\n                                                ? 'manual'\n                                                : rewardObj.repeat === 'once'\n                                                ? 'once'\n                                                : rewardObj.repeat === 'time'\n                                                ? 'everyTime'\n                                                : '')\n                                    )}\n                                    {t('reward.forActivities')}\n                                    {rewardObj.activities.map(activity => {\n                                        if (activityData[activity]) {\n                                            return (\n                                                <Link\n                                                    to={\n                                                        '/activities/' +\n                                                        activityData[activity]\n                                                            ._id\n                                                    }\n                                                >\n                                                    {\n                                                        activityData[activity]\n                                                            .name\n                                                    }\n                                                </Link>\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                </span>\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            // return -1\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const {\n        activityData,\n        account,\n        progress,\n        activities,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const isOwner =\n        account && account._id && progress && account._id === progress.owner\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    setChosenResource(selectedActivity)\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToActivity')}\n                            </Button>\n                            {isOwner && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    {t('g.removeActivity')}\n                                </Button>\n                            )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <ActivityTable activityId={selectedActivity} />\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../components/SimilarResources'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Goal = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    const [posts, setPosts] = useState([])\n\n    const [currentTab, setCurrentTab] = useState(1)\n    const [currentTabD, setCurrentTabD] = useState(0)\n\n    return (\n        <ResourceCore\n            type=\"goal\"\n            setResource={setProgress}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {progress && progress._id && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.detailsFor')}\n                        </Typography>\n                        <Paper square>\n                            <Tabs\n                                value={currentTabD}\n                                onChange={(event, value) =>\n                                    setCurrentTabD(value)\n                                }\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label={t('g.fromStart')} />\n                                <Tab label={t('g.toGoal')} />\n                                <Tab label={t('g.resultFinish')} />\n                            </Tabs>\n                        </Paper>\n\n                        {progress[\n                            currentTabD === 0\n                                ? 'startImages'\n                                : currentTabD === 1\n                                ? 'images'\n                                : 'finishImages'\n                        ].length > 0 && (\n                            <>\n                                <Typography\n                                    className={classes.title}\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                >\n                                    {t('g.images')}\n                                </Typography>\n                                <ImageCarousel\n                                    images={\n                                        progress[\n                                            currentTabD === 0\n                                                ? 'startImages'\n                                                : currentTabD === 1\n                                                ? 'images'\n                                                : 'finishImages'\n                                        ]\n                                    }\n                                />\n                            </>\n                        )}\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={\n                                    progress[\n                                        currentTabD === 0\n                                            ? 'startDescription'\n                                            : currentTabD === 1\n                                            ? 'description'\n                                            : 'finishDescription'\n                                    ]\n                                }\n                            />\n                        </Paper>\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={progress.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"goal\" /> */}\n\n                        <ResourcePosts\n                            resource={progress}\n                            posts={posts}\n                            type=\"goal\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Activities progress={progress} />\n                        <Rewards progress={progress} />\n                    </TabPanel>\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Activity = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(2)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore\n            type=\"activity\"\n            setResource={setActivity}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {activity && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            {activity.repeat !== 'no' && (\n                                <>\n                                    <p>\n                                        <RetweetOutlined />\n                                        {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                    </p>\n                                    <Divider\n                                        light\n                                        variant=\"middle\"\n                                        style={{ marginBottom: '15px' }}\n                                    />\n                                </>\n                            )}\n\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={activity.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={activity.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={activity}\n                            posts={posts}\n                            type=\"activity\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.tracking')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ActivityTable activityId={activity._id} />\n                        </Paper>\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const {\n        transactionData,\n        rewardData,\n        account,\n        transactions,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <span\n                                    onClick={() =>\n                                        setChosenResource(rewardObj._id)\n                                    }\n                                >\n                                    {rewardObj.name || 'Selected activity'}\n                                </span>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    // const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setChosenResource } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    // useEffect(() => {\n    //     const pathParts = props.history.location.pathname.split('/')\n    //     if (pathParts.length > 2) {\n    //         const profileId = pathParts[2]\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: profileId })\n    //         } else {\n    //             pullData(props, data, setData, { forceAuth: false }, data => {\n    //                 const friendData = {}\n    //                 for (let friend of data.friendData)\n    //                     friendData[friend._id] = friend\n\n    //                 const progressData = {}\n    //                 if (data.progressData)\n    //                     for (let progress of data.progressData)\n    //                         progressData[progress._id] = progress\n\n    //                 const activityData = {}\n    //                 if (data.activityData)\n    //                     for (let activity of data.activityData)\n    //                         activityData[activity._id] = activity\n    //                 const rewardData = {}\n    //                 if (data.rewardData)\n    //                     for (let reward of data.rewardData)\n    //                         rewardData[reward._id] = reward\n    //                 const post = {}\n    //                 if (data.posts)\n    //                     for (let item of data.posts) post[item._id] = item\n\n    //                 props.setData({\n    //                     profile: data.profile,\n    //                     friendData,\n    //                     post,\n    //                     account: {},\n    //                     progressData,\n    //                     activityData,\n    //                     rewardData,\n    //                     onlineUsers: data.onlineUsers,\n    //                 })\n    //             })\n    //         }\n    //     } else {\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: account._id })\n    //         }\n    //     }\n    // }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Layout noHeader>\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea\n                            onClick={() => setChosenResource(item._id)}\n                        >\n                            {/* <Link to={'/goals/' + item._id}> */}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    align=\"center\"\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                            {/* </Link> */}\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities\n                    activities={profile.activities}\n                    isOwner={isOwner}\n                    setChosenResource={setChosenResource}\n                />\n                <ProfileRewards\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner={isOwner}\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useState } from 'react'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../components/UI/TinyEditor'\n\nconst FolderMM = props => {\n    const {\n        selectedBox,\n        el,\n        id,\n        editingText,\n        setEditingText,\n        saveValueMM,\n    } = props\n    const [textValue, setTextValue] = useState()\n\n    return (\n        <div style={{ background: 'white', flex: 1 }}>\n            {el.imageValue && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundImage: 'url(\"' + el.imageValue + '\")',\n                    }}\n                />\n            )}\n            {el.textValue && <TinyEditor MM value={el.textValue} readOnly />}\n            <div className=\"tinyEditorText_\">\n                <DialogFullscreen\n                    open={editingText && selectedBox === id}\n                    close={() => {\n                        setEditingText(false)\n                    }}\n                    save={() => {\n                        saveValueMM(id, { textValue })\n\n                        setEditingText(false)\n                    }}\n                >\n                    <div className=\"tinyEditorText_\">\n                        {editingText && selectedBox === id && (\n                            <TinyEditor\n                                onEditorChange={value => setTextValue(value)}\n                                value={el.textValue}\n                            />\n                        )}\n                    </div>\n                </DialogFullscreen>\n            </div>\n        </div>\n    )\n}\n\nexport default FolderMM\n","import React, { memo, useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\nimport { addUnsorted } from './actions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst ProfileMM = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setStructure } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const getData = key => {\n                        const d = {}\n                        for (let i of data[key]) d[i._id] = i\n                        return d\n                    }\n\n                    const friendData = getData('friendData')\n                    const progressData = getData('progressData')\n                    const activityData = getData('activityData')\n                    const rewardData = getData('rewardData')\n                    const progress = getData('progress')\n                    const activity = getData('activity')\n                    const reward = getData('reward')\n                    const post = getData('post')\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        // post,\n                        account: {},\n                        progressData,\n                        progress,\n                        activityData,\n                        activity,\n                        rewardData,\n                        reward,\n                        onlineUsers: data.onlineUsers,\n                        currentProfile: profileId,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    useEffect(() => {\n        if (profile && profile.structure && profile.structure.items) {\n            addUnsorted(props.structure, props.setStructure, profile)\n        }\n    }, [profile.rewards, profile.activities, profile.progresses])\n\n    useEffect(() => {\n        if (profile.structure && profile.structure.items)\n            setStructure(profile.structure, true)\n    }, [profile._id])\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    if (!profile || !profile._id) return null\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Paper style={{ padding: '15px', whiteSpace: 'nowrap' }}>\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    {isOwner ? (\n                        <Upload\n                            name=\"avatar\"\n                            accept=\"image/*\"\n                            listType=\"picture-card\"\n                            showUploadList={false}\n                            customRequest={({ file }) => {\n                                uploadFile(file, 800, 'avatar', url => {\n                                    if (url) props.increaseAvatarV()\n                                })\n                            }}\n                        >\n                            <div\n                                style={{\n                                    flex: 1,\n                                    display: 'flex',\n                                    height: '100%',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    flexDirection: 'column',\n                                }}\n                                onClick={e => {\n                                    if (window.isRNWebView) {\n                                        e.stopPropagation()\n                                        window.ReactNativeWebView.postMessage(\n                                            'uploadFile'\n                                        )\n                                        window.callback = url => {\n                                            props.increaseAvatarV()\n                                        }\n                                    }\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            {t('g.upload')}\n                                        </div>\n                                    </>\n                                )}\n                            </div>\n                        </Upload>\n                    ) : (\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            size={200}\n                        />\n                    )}\n\n                    <Box style={{ padding: '0 15px' }}>\n                        {props.onlineUsers.includes(profile._id) && (\n                            <Badge color=\"green\" text=\"online\" />\n                        )}\n                        <TypographyA.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <IconButton color=\"primary\">\n                                                  <Edit />\n                                              </IconButton>\n                                          ),\n                                          maxLength: fieldLength.name,\n                                          autoSize: {\n                                              minRows: 1,\n                                              maxRows: 1,\n                                          },\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </TypographyA.Title>\n                    </Box>\n                    <Typography variant=\"h5\">({profile._id})</Typography>\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button\n                            onClick={() => setFollowersVisible('following')}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followProgresses.length +\n                                    profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                            </span>\n                        </Button>\n                    </Box>\n\n                    <div>\n                        <ShareButton\n                            link={'https://addspire.com/profile/' + profile._id}\n                            media={\n                                profile.image &&\n                                getAvatar(profile._id, profile.image)\n                            }\n                            title={profile.name + t('profile.shareText')}\n                            item={{\n                                profileId: profile._id,\n                                profileName: profile.name,\n                            }}\n                        />\n                        {account && account._id !== profile._id && (\n                            <span style={{ marginRight: '10px' }}>\n                                {realFriends.find(\n                                    item => item.friend === profile._id\n                                ) ? (\n                                    <Chip color=\"primary\" label=\"Friends\" />\n                                ) : null}\n                                {account.followAccounts &&\n                                    !account.followAccounts.includes(\n                                        profile._id\n                                    ) && (\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                            style={{\n                                                marginRight: '20px',\n                                            }}\n                                            variant=\"contained\"\n                                        >\n                                            {t('g.follow')}\n                                        </Button>\n                                    )}\n                            </span>\n                        )}\n                        <FriendActionButton\n                            account={account}\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                            _id={profile._id}\n                            additionalButtons={\n                                isOwner\n                                    ? [\n                                          {\n                                              onClick: () =>\n                                                  props.history.push('/logout'),\n                                              title: t('g.logout'),\n                                          },\n                                      ]\n                                    : null\n                            }\n                            asText={true}\n                        />\n                    </div>\n                    <Box />\n                </div>\n            </Paper>\n\n            {/* {isOwner && (\n                <>\n                    <Typography\n                        className={classesM.sectionTitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('profile.settings')}\n                    </Typography>\n                    <Paper\n                        style={{\n                            padding: '15px',\n                        }}\n                    >\n                        <Box>\n                            <LanguageSwitcher settings />\n                        </Box>\n                        <Box style={{ margin: '20px auto' }}>\n                            <Button\n                                onClick={() => props.history.push('/logout')}\n                                color=\"secondary\"\n                            >\n                                {t('g.logout')}\n                            </Button>\n                        </Box>\n                        <Button\n                            onClick={() => setDeleteVisible(true)}\n                            color=\"secondary\"\n                        >\n                            {t('profile.deleteAccount')}\n                        </Button>\n                    </Paper>\n\n                    <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                        <DialogTitle>{t('profile.deleteAccount')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                <p>\n                                    {t('profile.pleaseEnterNickname')}\n                                    {account._id}\n                                    {t('profile.andPressOk')}\n                                </p>\n                                <TextField\n                                    onChange={e =>\n                                        setDeleteField(e.target.value)\n                                    }\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => setDeleteVisible(false)}>\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (deleteField !== account._id) {\n                                        message.warning(\n                                            'The nickmanme is not correct.'\n                                        )\n                                    } else {\n                                        wsActions.deleteAccount(account._id)\n                                    }\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.delete')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )} */}\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n        structure: state.structureMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        setStructure: (structure, noNeedToSave) =>\n            dispatch(actions.setStructure(structure, noNeedToSave)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(memo(ProfileMM))\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n\n    const resourceId = props.resourceId\n    if (!resourceId) return null\n    const { type } = props\n\n    const { resource, account, friendData, posts } = props\n\n    if (!resource || !resource._id) return null\n\n    return friendData ? (\n        <div\n            style={{\n                display: 'flex',\n                flex: 1,\n                background: 'white',\n                overflow: 'hidden',\n            }}\n        >\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                    navi={props.navi}\n                />\n                {props.children}\n            </div>\n            <div style={{ width: '10px' }} />\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourcePosts resource={resource} posts={posts} type={type} />\n            </div>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        posts: state.post,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourceCore))\n","import React, { useState, memo } from 'react'\nimport { Rnd } from 'react-rnd'\nimport DialogFullscreen from '../../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../../components/UI/TinyEditor'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst RewardMM = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { id } = props\n    const { reward } = props\n    const [posts, setPosts] = useState([])\n\n    return (\n        <ResourceCoreMM\n            type=\"reward\"\n            setPosts={setPosts}\n            resourceId={id}\n            resource={reward}\n        >\n            {reward && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={reward.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={reward.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        reward: state.reward[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(RewardMM)))\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst GoalMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { progress } = props\n\n    return (\n        <ResourceCoreMM type=\"goal\" resourceId={id} resource={progress}>\n            {progress && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={progress.description}\n                        />\n                    </Paper>\n                    <Activities progress={progress} />\n                    <Rewards progress={progress} />\n\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={progress.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(GoalMM)))\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport ActivityTable from '../../Goal/ActivityTable'\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst ActivityMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { activity } = props\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCoreMM type=\"activity\" resourceId={id} resource={activity}>\n            {activity && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.tracking')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ActivityTable activityId={activity._id} />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        {activity.repeat !== 'no' && (\n                            <>\n                                <p>\n                                    <RetweetOutlined />\n                                    {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                </p>\n                                <Divider\n                                    light\n                                    variant=\"middle\"\n                                    style={{ marginBottom: '15px' }}\n                                />\n                            </>\n                        )}\n\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={activity.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={activity.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        activity: state.activity[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(ActivityMM)))\n","import React, { useState } from 'react'\nimport {\n    Button,\n    Dialog,\n    Divider,\n    IconButton,\n    Menu,\n    MenuItem,\n    Slide,\n} from '@material-ui/core'\nimport {\n    Add,\n    Delete,\n    Edit,\n    Image,\n    OpenInNew,\n    Send,\n    Title,\n} from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport Goal from '../Goal/Goal'\nimport Reward from '../Reward/Reward'\nimport Activity from '../Activity/Activity'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Profile from '../Profile/Profile'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport FolderMM from './FolderMM'\nimport ProfileMM from './ProfileMM'\nimport RewardMM from './old/RewardMM'\nimport GoalMM from './old/GoalMM'\nimport ActivityMM from './old/ActivityMM'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ChooseWrapMM = props => {\n    const { t } = useTranslation()\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editingText, setEditingText] = useState(false)\n    const {\n        el,\n        id,\n        selectedBox,\n        setChangeParentMode,\n        changeParentMode,\n        addEmptyToStructure,\n        editorMode,\n        account,\n        addBlock,\n        saveValueMM,\n        deleteBlock,\n    } = props\n    const [openElement, setOpenElement] = useState(\n        props.history.location.hash.length > 0 &&\n            (id === props.history.location.hash.substring(1) ||\n                (el.type === 'profile' &&\n                    props.history.location.hash.substring(1)) === 'profile')\n    )\n\n    const addMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n        >\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'text')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.text')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'image')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.image')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'block')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.block')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setStartResourceVisible('goal')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.goal')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setStartResourceVisible('activity')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.activity')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setStartResourceVisible('reward')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.reward')}\n            </MenuItem>\n        </Menu>\n    )\n\n    return (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    display: 'flex',\n                    overflow: 'hidden',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        padding: '5px',\n                        textAlign: 'right',\n                        position: 'absolute',\n                        top: '-50px',\n                        whiteSpace: 'nowrap',\n                    }}\n                    className=\"buttonsWrapMM buttonsMM\"\n                >\n                    {el.type !== 'folder' &&\n                        (!editorMode || selectedBox === id) && (\n                            <Button\n                                onClick={() => setOpenElement(true)}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginRight: '10px' }}\n                            >\n                                {t('g.open')}\n                            </Button>\n                        )}\n                    {editorMode && selectedBox === id && (\n                        <>\n                            <Button\n                                onClick={e => {\n                                    setAnchorEl(e.currentTarget)\n                                }}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginRight: '10px' }}\n                            >\n                                <Add />\n                            </Button>\n                            {addMenu}\n                            {el.type === 'folder' && (\n                                <>\n                                    <Upload\n                                        accept=\"image/*\"\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    if (url) {\n                                                        saveValueMM(id, {\n                                                            imageValue: url,\n                                                        })\n                                                    }\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            style={{ marginRight: '10px' }}\n                                        >\n                                            <Image />\n                                        </Button>\n                                    </Upload>\n                                    <Button\n                                        onClick={() => setEditingText(true)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        <Title />\n                                    </Button>\n                                </>\n                            )}\n                            <Button\n                                onClick={() => setChangeParentMode(id)}\n                                color={\n                                    changeParentMode ? 'secondary' : 'primary'\n                                }\n                                variant=\"contained\"\n                                style={{ marginRight: '10px' }}\n                            >\n                                <Send />\n                            </Button>\n                            {el.type === 'folder' && (\n                                <Button\n                                    onClick={() => deleteBlock(id)}\n                                    color=\"secondary\"\n                                    variant=\"contained\"\n                                    style={{ marginRight: '10px' }}\n                                >\n                                    <Delete />\n                                </Button>\n                            )}\n                        </>\n                    )}\n                </div>\n                <Divider />\n                <div style={{ flex: 1, overflow: 'hidden', display: 'flex' }}>\n                    {el.type === 'folder' && (\n                        <FolderMM\n                            el={el}\n                            id={id}\n                            editingText={editingText}\n                            setEditingText={setEditingText}\n                            selectedBox={selectedBox}\n                            saveValueMM={saveValueMM}\n                        />\n                    )}\n                    {el.type === 'profile' && <ProfileMM />}\n\n                    {el.type === 'reward' && <RewardMM id={id} />}\n                    {el.type === 'goal' && <GoalMM id={id} />}\n                    {el.type === 'activity' && <ActivityMM id={id} />}\n                </div>\n            </div>\n            <DialogFullscreen\n                open={openElement}\n                close={() => setOpenElement(false)}\n                title=\"Opened res\"\n            >\n                {el.type === 'profile' ? (\n                    <Profile setChosenResource={setOpenElement} />\n                ) : el.type === 'reward' ? (\n                    <Reward id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'activity' ? (\n                    <Activity id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'goal' ? (\n                    <Goal id={el.id} setChosenResource={setOpenElement} />\n                ) : null}\n            </DialogFullscreen>\n            {account._id && editorMode && (\n                <Dialog\n                    fullScreen\n                    open={Boolean(startResourceVisible)}\n                    onClose={() => {\n                        setStartResourceVisible('')\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartResourceVisible('')}\n                        type={startResourceVisible}\n                        addEmptyToStructure={addEmptyToStructure}\n                        selectedBox={id}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        addEmptyToStructure: (id, selectedBox, type) =>\n            dispatch(actions.addEmptyToStructure(id, selectedBox, type)),\n        addBlock: (id, blockType) => dispatch(actions.addBlock(id, blockType)),\n        saveValueMM: (id, value) => dispatch(actions.saveValueMM(id, value)),\n        deleteBlock: id => dispatch(actions.deleteBlock(id)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ChooseWrapMM)\n)\n","import React, { useEffect, useRef } from 'react'\n\nimport Line from './Line'\nimport { Rnd } from 'react-rnd'\nimport { dragHandler, resizeHandler } from './actions'\nimport ChooseWrapMM from './ChooseWrapMM'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nexport const resizeStyle = {\n    height: '20px',\n    width: '20px',\n    background: '#eee',\n    border: '1px #ccc solid',\n    borderRadius: '10px',\n    zIndex: 1,\n}\n\nconst ContainerMM = props => {\n    const myRef1 = useRef(null)\n\n    const myRef4 = useRef(null)\n    const {\n        setSelectedBox,\n        selectedBox,\n        setSizepos,\n        scale,\n        myRef2,\n        id,\n        editingFolder,\n        editingElement,\n        selectedIndex,\n        setSelectedIndex,\n        setEditingElement,\n        addDragStep,\n        editorMode,\n        setChosenResource,\n        setEditingFolder,\n        el,\n        setChangeParentMode,\n        changeParentMode,\n        changeParentMM,\n    } = props\n\n    useEffect(() => {\n        const handler = e => {\n            // e.stopPropagation()\n        }\n        if (myRef4 && myRef4.current) {\n            myRef4.current.addEventListener('touchstart', handler, {\n                passive: false,\n            })\n            myRef4.current.addEventListener('touchmove', handler, {\n                passive: false,\n            })\n            addDragStep()\n        }\n\n        return () => {\n            if (myRef4 && myRef4.current) {\n                myRef4.current.removeEventListener('touchstart', handler)\n                myRef4.current.removeEventListener('touchmove', handler)\n            }\n        }\n    }, [Boolean(myRef4 && myRef4.current)])\n    return el &&\n        !el.temp &&\n        (!el.unsorted || (el.unsorted && el.children.length > 0)) ? (\n        <div>\n            {el.type !== 'profile' && (\n                <Line start={myRef2} end={myRef1} collapsed={props.collapsed} />\n            )}\n            <div\n                ref={myRef4}\n                style={{\n                    position: el.type === 'profile' ? 'relative' : 'absolute',\n                }}\n            >\n                <Rnd\n                    scale={scale}\n                    default={el.type !== 'profile' && el.sizePos}\n                    disableDragging={\n                        el.type === 'profile' || editingFolder || !editorMode\n                    }\n                    enableResizing={el.type !== 'profile' && editorMode}\n                    resizeHandleStyles={\n                        selectedBox === id\n                            ? {\n                                  bottomLeft: resizeStyle,\n                                  bottomRight: resizeStyle,\n                                  topLeft: resizeStyle,\n                                  topRight: resizeStyle,\n                              }\n                            : {}\n                    }\n                    onMouseDown={e => {\n                        if (editorMode) {\n                            if (changeParentMode) {\n                                changeParentMM(changeParentMode, id)\n                                setChangeParentMode('')\n                            } else {\n                                setSelectedBox(id)\n                            }\n                        }\n                    }}\n                    style={{\n                        outline: selectedBox === id ? '1px solid blue' : 'none',\n                        // overflow: 'hidden',\n                    }}\n                    onDrag={(e, data) => {\n                        props.addDragStep()\n                        dragHandler(id, data, setSizepos)\n                    }}\n                    onResize={(e, dir, elRef, delta, position) => {\n                        props.addDragStep()\n                        resizeHandler(id, elRef, position, setSizepos)\n                    }}\n                    cancel=\".buttonsMM\"\n                >\n                    <div\n                        ref={myRef1}\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            position: 'relative',\n                            background: 'white',\n                        }}\n                    >\n                        {/* {el.children.length > 0 && (\n                            <Button\n                                style={{\n                                    position: 'absolute',\n                                    top: '-40px',\n                                    right: '0px',\n                                }}\n                                variant=\"contained\"\n                            >{`${el.collapsed ? 'Expand' : 'Collapse'} ${\n                                el.children.length\n                            }`}</Button>\n                        )} */}\n                        <ChooseWrapMM\n                            el={el}\n                            id={id}\n                            selectedBox={selectedBox}\n                            scale={scale}\n                            editingFolder={editingFolder}\n                            editingElement={editingElement}\n                            selectedIndex={selectedIndex}\n                            setSelectedIndex={setSelectedIndex}\n                            setEditingElement={setEditingElement}\n                            setEditingFolder={setEditingFolder}\n                            setChosenResource={setChosenResource}\n                            editorMode={editorMode}\n                            setChangeParentMode={setChangeParentMode}\n                            changeParentMode={changeParentMode}\n                        />\n                    </div>\n                </Rnd>\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        // visibility:\n                        //     props.collapsed || el.collapsed\n                        //         ? 'hidden'\n                        //         : 'visible',\n                        transform:\n                            'translate(' +\n                            el.sizePos.x +\n                            'px, ' +\n                            el.sizePos.y +\n                            'px)',\n                    }}\n                >\n                    {el.children &&\n                        el.children.map(itemId => (\n                            <ConnectedContainerMM\n                                key={itemId}\n                                id={itemId}\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                myRef2={myRef1}\n                                collapsed={props.collapsed || el.collapsed}\n                                editorMode={editorMode}\n                                setChangeParentMode={setChangeParentMode}\n                                changeParentMode={changeParentMode}\n                            />\n                        ))}\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        el: state.structureMM.items[ownProps.id],\n        structure: state.structureMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setSizepos: (id, sizePos) => dispatch(actions.setSizepos(id, sizePos)),\n        changeParentMM: (childId, parentId) =>\n            dispatch(actions.changeParentMM(childId, parentId)),\n    }\n}\n\nconst ConnectedContainerMM = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ContainerMM)\n\nexport default ConnectedContainerMM\n","import React, { useEffect, useState } from 'react'\n\nimport { TransformComponent } from 'react-zoom-pan-pinch'\nimport ContainerMM from './ContainerMM'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport * as actions from '../../store/actions'\nimport 'tui-image-editor/dist/tui-image-editor.css'\n\nimport BottomMenu from '../../components/Layout/BottomMenu'\nimport { Button } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\n\nimport Layout from '../../components/Layout/Layout'\nimport { withRouter, Prompt } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useBeforeunload } from 'react-beforeunload'\n\nconst MindMap = props => {\n    const { t } = useTranslation()\n    const [selectedBox, setSelectedBox] = useState('')\n\n    const [changeParentMode, setChangeParentMode] = useState('')\n    const [editorMode, setEditorMode] = useState(false)\n    const {\n        structure,\n        saveStructure,\n        account,\n        profile,\n        setEventIsFromDraggable,\n        scale,\n        structureNotSaved,\n    } = props\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n    useBeforeunload(() => structureNotSaved && \"You'll lose your data!\")\n\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n        return () => {\n            document.body.style.overflow = 'auto'\n        }\n    }, [])\n\n    const handleMouseDown = e => {\n        if (editorMode) {\n            const path = e.nativeEvent.composedPath()\n            for (let el of path) {\n                if (el) {\n                    if (\n                        el.getAttribute('id') === 'panWrap' ||\n                        el === document.body\n                    ) {\n                        setEventIsFromDraggable(false)\n                        return\n                    }\n                    const classN = el.getAttribute('class')\n                    if (\n                        classN &&\n                        (classN.indexOf('react-draggable') > -1 ||\n                            classN.indexOf('tinyEditorText_') > -1)\n                    ) {\n                        setEventIsFromDraggable(true)\n                        return\n                    }\n                }\n            }\n        }\n        setEventIsFromDraggable(false)\n    }\n\n    const handleClick = e => {\n        // if (!changeParentMode) {\n        //     if (editorMode) {\n        //         const path = e.nativeEvent.composedPath()\n        //         for (let el of path) {\n        //             if (el) {\n        //                 if (\n        //                     el.getAttribute('id') === 'panWrap' ||\n        //                     el === document.body\n        //                 ) {\n        //                     // setChosenResource('')\n        //                     setSelectedBox('')\n        //                     return\n        //                 }\n        //                 const classN = el.getAttribute('class')\n        //                 if (\n        //                     classN &&\n        //                     (classN.indexOf('react-draggable') > -1 ||\n        //                         classN.indexOf('tinyEditorText_') > -1)\n        //                 ) {\n        //                     return\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     // setChosenResource('')\n        //     setSelectedBox('')\n        // }\n    }\n\n    return (\n        <>\n            <Prompt\n                when={structureNotSaved}\n                message=\"You have unsaved changes, are you sure you want to leave?\"\n            />\n            <div\n                style={{\n                    display: 'flex',\n                    width: '100%',\n                    height: '100%',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        background: 'white',\n                        zIndex: 1,\n                        display: 'flex',\n                    }}\n                >\n                    {isOwner ? (\n                        <Button\n                            onClick={() => {\n                                setEditorMode(!editorMode)\n                                setSelectedBox('')\n                            }}\n                            color=\"primary\"\n                        >\n                            {editorMode ? <ArrowBack /> : t('g.edit')}\n                        </Button>\n                    ) : (\n                        <Layout noContent />\n                    )}\n                    <div\n                        style={{\n                            flex: 1,\n                            overflow: 'auto',\n                            whiteSpace: 'nowrap',\n                        }}\n                    >\n                        {isOwner && editorMode && structureNotSaved && (\n                            <Button\n                                onClick={saveStructure}\n                                color=\"primary\"\n                                variant=\"contained\"\n                            >\n                                {t('g.save')}\n                            </Button>\n                        )}\n                    </div>\n                </div>\n\n                <div\n                    style={{\n                        overflow: 'hidden',\n                        flex: 1,\n                        display: 'flex',\n                    }}\n                    id=\"panWrap\"\n                    onMouseDown={handleMouseDown}\n                    onTouchStart={handleMouseDown}\n                    onTouchEnd={() => setEventIsFromDraggable(false)}\n                    onMouseUp={() => setEventIsFromDraggable(false)}\n                    onClick={handleClick}\n                >\n                    <TransformComponent>\n                        <div\n                            style={{\n                                cursor: 'grabbing',\n                            }}\n                        >\n                            <ContainerMM\n                                id=\"b0\"\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                editorMode={editorMode}\n                                changeParentMode={changeParentMode}\n                                setChangeParentMode={setChangeParentMode}\n                            />\n                        </div>\n                    </TransformComponent>\n                </div>\n            </div>\n\n            <BottomMenu />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        structureNotSaved: state.structureNotSaved,\n    }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveStructure: () => dispatch(actions.saveStructure()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MindMap)\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { TransformWrapper } from 'react-zoom-pan-pinch'\nimport MindMap from './MindMap'\nimport * as actions from '../../store/actions'\nimport { throttle } from 'throttle-debounce'\n\nconst MindMapWrap = props => {\n    const [scale, setScale] = useState(0.5)\n    const [eventIsFromDraggable, setEventIsFromDraggable] = useState(false)\n    const throttleFunc = throttle(10, () => props.addDragStep())\n    return (\n        <TransformWrapper\n            defaultScale={0.5}\n            defaultPositionX={200}\n            defaultPositionY={100}\n            options={{\n                limitToBounds: false,\n                minScale: 0.1,\n                maxScale: 100,\n                disabled: eventIsFromDraggable,\n            }}\n            pan={{\n                velocity: false,\n            }}\n            wheel={{\n                step: 300,\n            }}\n            onZoomChange={value => {\n                setScale(value.scale)\n                throttleFunc()\n            }}\n            onPanning={throttleFunc}\n            onPanningStop={throttleFunc}\n            onPinching={throttleFunc}\n            onPinchingStop={throttleFunc}\n        >\n            <MindMap\n                setEventIsFromDraggable={setEventIsFromDraggable}\n                scale={scale}\n            />\n        </TransformWrapper>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(MindMapWrap)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Blog from './containers/Blog/Blog'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport MindMapWrap from './containers/MindMap/MindMapWrap'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route\n                path=\"/\"\n                exact\n                component={isAuthed ? MindMapWrap : Explore}\n            />\n            {isAuthed && <Route path=\"/explore\" exact component={Explore} />}\n            {/* <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} /> */}\n            <Route path=\"/profile\" component={MindMapWrap} />\n            {isAuthed && <Route path=\"/events\" component={DashboardPosts} />}\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n    recentShown: false,\n    dragStep: 0,\n    structureMM: {\n        currentId: 9,\n        items: {\n            b0: {\n                type: 'profile',\n                children: ['b00'],\n                parent: '',\n                sizePos: { x: 0, y: 0 },\n            },\n            b00: {\n                type: 'folder',\n                unsorted: true,\n                children: [],\n                innerChildren: [],\n                parent: 'b0',\n                sizePos: {\n                    x: -600,\n                    y: -300,\n                    width: 200,\n                    height: 200,\n                },\n            },\n        },\n    },\n    structureNotSaved: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'progress',\n                'reward',\n                'activity',\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    ADD_DRAG_STEP: (state: Object) => {\n        state.dragStep = state.dragStep + 1\n    },\n    SET_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM = action.structure\n        if (!action.noNeedToSave) state.structureNotSaved = true\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n    SET_RECENT_SHOWN: (state: Object) => {\n        state.recentShown = true\n    },\n    ADD_TO_STRUCTURE: (state: Object, action: Object) => {\n        if (\n            state.profile._id === action.accountId &&\n            state.structureMM.items[action.structureId]\n        ) {\n            const parentId = state.structureMM.items[action.structureId].parent\n            if (state.structureMM.items[parentId]) {\n                state.structureMM.items[parentId] = {\n                    ...state.structureMM.items[parentId],\n                    children: [\n                        ...state.structureMM.items[parentId].children,\n                        action.resourceId,\n                    ],\n                }\n                state.structureMM.items[action.resourceId] = {\n                    ...state.structureMM.items[action.structureId],\n                    id: action.resourceId,\n                    temp: false,\n                }\n                state.structureNotSaved = true\n            }\n        }\n        delete state.structureMM.items[action.structureId]\n    },\n    STRUCTURE_IS_SAVED: (state: Object) => {\n        state.structureNotSaved = false\n    },\n    ADD_BLOCK: (state: Object, action: Object) => {\n        const id = state.structureMM.items[action.id] ? action.id : 'b0'\n\n        state.structureMM.items[id].children.push(\n            'b' + state.structureMM.currentId\n        )\n        state.structureMM.items['b' + state.structureMM.currentId] = {\n            type: 'folder',\n            blockType: action.blockType,\n            children: [],\n            parent: id,\n            innerChildren: [],\n            sizePos: {\n                x: 200,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n            textValue: action.blockType === 'text' ? 'Add some text' : '',\n            imageValue:\n                action.blockType === 'image'\n                    ? 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg'\n                    : '',\n        }\n        state.structureMM.currentId++\n        state.structureNotSaved = true\n    },\n    SET_SIZEPOS: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id].sizePos = {\n                ...state.structureMM.items[action.id].sizePos,\n                ...action.sizePos,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    SAVE_VALUE_MM: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id] = {\n                ...state.structureMM.items[action.id],\n                ...action.value,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    ADD_EMPTY_TO_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM.items[action.id] = {\n            type: action.resType,\n            children: [],\n            parent: action.selectedBox,\n            temp: true,\n            sizePos: {\n                x: 200,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n        }\n    },\n\n    DELETE_BLOCK: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            const parentId = state.structureMM.items[action.id].parent\n            for (let child of state.structureMM.items[action.id].children) {\n                state.structureMM.items[child].parent = parentId\n            }\n            state.structureMM.items[parentId].children = [\n                ...state.structureMM.items[parentId].children,\n                ...state.structureMM.items[action.id].children,\n            ]\n\n            delete state.structureMM.items[action.id]\n            state.structureNotSaved = true\n        }\n    },\n    CHANGE_PARENT_MM: (state: Object, action: Object) => {\n        if (\n            state.structureMM.items[action.childId] &&\n            state.structureMM.items[action.parentId]\n        ) {\n            if (action.parentId !== action.childId) {\n                const isDecedant = (parentId, id) => {\n                    if (state.structureMM.items[parentId].children.includes(id))\n                        return true\n                    else {\n                        for (let child of state.structureMM.items[parentId]\n                            .children) {\n                            const result = isDecedant(child, id)\n                            if (result) {\n                                return true\n                            }\n                        }\n                    }\n                }\n                if (!isDecedant(action.childId, action.parentId)) {\n                    const childParentId =\n                        state.structureMM.items[action.childId].parent\n                    state.structureMM.items[\n                        childParentId\n                    ].children = state.structureMM.items[\n                        childParentId\n                    ].children.filter(item => item !== action.childId)\n                    state.structureMM.items[action.parentId].children.push(\n                        action.childId\n                    )\n                    state.structureMM.items[action.childId].parent =\n                        action.parentId\n                    state.structureNotSaved = true\n                }\n            }\n        }\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\n// pick a date util library\nimport DayUtils from '@date-io/dayjs'\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <MuiPickersUtilsProvider utils={DayUtils}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <ThemeProvider theme={outerTheme}>\n                    <App />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    </MuiPickersUtilsProvider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}