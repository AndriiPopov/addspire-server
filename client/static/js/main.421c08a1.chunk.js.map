{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","components/Layout/Layout.tsx","utils/checkAuth.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","containers/Dashboard/Dashboard.tsx","components/FriendActionButton.js","components/FriendCard.js","containers/Friends/Friends.tsx","containers/Account/Account.tsx","utils/checkImageExists.js","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","Content","menuVisible","setMenuVisible","toggleMenu","selectedKey","pathname","split","undefined","console","log","accountId","sessionStorage","getItem","buttonProps","ghost","size","shape","openLink","url","isAuthenticated","es_layout","assign","MenuOutlined_default","checkHighligh","HomeFilled_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","avatar","src","page_header","onBack","goBack","title","charAt","toUpperCase","slice","drawer","closable","onClose","visible","placement","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","LogoutOutlined_default","pullData","data","setData","options","objectSpread","forceAuth","forceActivate","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","_id","checkAuth","user","status","then","res","account","catch","err","uploadFile","file","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","this","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","readOnlyError","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","Component","WrapTabNode","DropTarget","drop","monitor","dragKey","hoverKey","moveTabNode","connect","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","message","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","nickname","success","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","hoverable","cover","backgroundImage","backgroundSize","actions","PlusCircleOutlined_default","ownerId","Meta","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","cursor","startProgress","defaultActiveKey","alignItems","justifyContent","fontSize","goals","Goals_GoalCard","indexG","users","includes","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","backIcon","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","logout","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","tooltip","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","flex","overflow","flexDirection","getMessages","Progress_ProgressMessage","replies","ref","autoSize","minRows","maxRows","rows","showUploadList","marginLeft","LoadingOutlined_default","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","activityOpen","Progress_Messages","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","perk","record","transactionId","transaction","from","tableData","sorted","Date","getTime","to","AddPerk","setPerk","perkId","setEditPerkOpen","setEditedPerk","onlyBuy","currency","buyPerk","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","WishlistAndPerks_Meta","listKey","Shop_PerkCard","_fetchMyAPI","fetchMyAPI","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","unfriend","FriendCard","components_FriendActionButton","FriendCard_Meta","Friends","addFriendOpen","setAddFriendOpen","pendingFriendsOpen","setPendingFriendsOpen","searchResult","setSearchResult","friendRef","fullFriend","addFriendModal","min","components_FriendCard","pendingFriendsModal","Friends_Meta","Math","floor","random","imageV","setImageV","imageExists","setImageExists","image_url","onerror","checkImageExists","icons_PlusOutlined","whitespace","pattern","disabled","friendData","containers_Progresses_Progresses","perks","nicknameNotUnique","Perk_Item","WishlistItem","wishlistItem","setIsAuthenticated","redirectTo","routes","Switch","Route","exact","component","Goals","Goal","Progresses","Progress","Profile","Account","Dashboard","Shop","Perk","Wishlist","Auth","Redirect","ActivateAccount","process","baseURL","app","BrowserRouter","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.421c08a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Layout from 'antd/es/layout'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    console.log(selectedKey)\n    const accountId = sessionStorage.getItem('accountId')\n    const buttonProps = {\n        type: 'link',\n        ghost: true,\n        size: 'large',\n        shape: 'circle',\n        className: classes.Button,\n    }\n    const checkHighligh = url => {}\n    // selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n    return (\n        <>\n            {props.isAuthenticated ? (\n                <Layout className={classes.Layout}>\n                    <Header className={classes.Header}>\n                        <div className={classes.TopHeader}>\n                            <div className={classes.MenuButtonContiner}>\n                                <Button\n                                    {...buttonProps}\n                                    icon={<MenuOutlined />}\n                                    onClick={toggleMenu}\n                                />\n                            </div>\n                            <div className={classes.QuickButtonContiner}>\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('progresses')}\n                                    icon={<RocketFilled />}\n                                    onClick={() => openLink('progresses')}\n                                />\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('shop')}\n                                    icon={<ShopOutlined />}\n                                    onClick={() => openLink('shop')}\n                                />\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<TeamOutlined />}\n                                    onClick={() => openLink('friends')}\n                                />\n                                <span\n                                    onClick={() => openLink('account')}\n                                    style={{ margin: '0px 10px' }}\n                                >\n                                    <Avatar\n                                        src={\n                                            accountId &&\n                                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                                accountId +\n                                                '/avatar'\n                                        }\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={classes.BottomHeader}>\n                            <PageHeader\n                                className=\"site-page-header\"\n                                onBack={() => props.history.goBack()}\n                                title={\n                                    selectedKey.charAt(0).toUpperCase() +\n                                    selectedKey.slice(1)\n                                }\n                            />\n                        </div>\n                    </Header>\n                    <Content className={classes.Main}>{props.children}</Content>\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                                Dashboard\n                            </Menu.Item>\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                </Layout>\n            ) : (\n                props.children\n            )}\n        </>\n    )\n}\n\nexport default withRouter(AccountLayout)\n","import Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst cookies = new Cookies()\n\nexport default () => {\n    sessionStorage.setItem('systemRefresh', '0')\n\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n\n        return userId._id\n    } else {\n        return false\n    }\n}\n","import axios from 'axios'\nimport checkAuth from './checkAuth'\n\nexport default (props, data, setData, options) => {\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n    const isAuthenticated = checkAuth()\n    if (options.forceAuth) {\n        if (!isAuthenticated) {\n            props.history.push({\n                pathname: '/logout',\n                state: props.history.location.pathname,\n            })\n        }\n    }\n    if (options.forceActivate) {\n        if (\n            props.isAuthenticated &&\n            data.user &&\n            !data.user.status === 'notactivated'\n        ) {\n            props.history.push('/activate-account')\n        }\n    }\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                if (res.data.status && res.data.status === 'no account')\n                    props.history.push('/activate-account')\n                if (res.data.account) {\n                    sessionStorage.setItem('accountId', res.data.account._id)\n                }\n                setData({ ...res.data, isAuthenticated })\n                return res.data\n            })\n            .catch(err => {})\n    } else return\n}\n","import axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    console.log(props.rewards)\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    const rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nimport startProgress from '../../Actions/startProgress'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && setEditedGoal && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {(available || owner._id === account._id) && (\n                        <Button\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Start a progress\n                        </Button>\n                    )}\n                    {owner._id === account._id && setInviteGoal && (\n                        <Button\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Invite friends\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Card.Meta title={goal.name} description={goal.description} />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <Card title=\"Important goals for me and people I care\">\n                        <Card\n                            type=\"inner\"\n                            style={{ width: 200, display: 'inline-block' }}\n                            hoverable\n                            cover={\n                                <div\n                                    style={{\n                                        height: 200,\n                                        width: 200,\n                                        backgroundSize: 'cover',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    <PlusCircleOutlined\n                                        style={{\n                                            fontSize: '60px',\n                                        }}\n                                    />\n                                </div>\n                            }\n                            actions={[\n                                <Button\n                                    key=\"1\"\n                                    onClick={() => {\n                                        setEditedGoal('')\n                                        setEditGoalOpen(true)\n                                    }}\n                                    icon={<PlusCircleOutlined />}\n                                >\n                                    Add goal\n                                </Button>,\n                            ]}\n                        >\n                            <Meta title=\"Add a goal\" description=\"\" />\n                        </Card>\n\n                        {account.goals &&\n                            account.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={index}\n                                    goal={goal}\n                                    owner={account}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    <Card title=\"Important goals that I can work on\">\n                        {account.friendsData &&\n                            [account, ...account.friendsData].map(\n                                (friend, indexG) =>\n                                    friend.goals.map((goal, index) =>\n                                        goal.users.includes(account._id) ||\n                                        friend._id === account._id ? (\n                                            <GoalCard\n                                                key={indexG + '_' + index}\n                                                goal={goal}\n                                                owner={friend}\n                                                available={goal.users.includes(\n                                                    account._id\n                                                )}\n                                                account={account}\n                                                setEditedGoal={setEditedGoal}\n                                                setEditGoalOpen={\n                                                    setEditGoalOpen\n                                                }\n                                                setInviteGoal={setInviteGoal}\n                                            />\n                                        ) : null\n                                    )\n                            )}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    <Card title=\"Important goals created by my friends\">\n                        {account.friendsData &&\n                            account.friendsData.map((friend, indexG) =>\n                                friend.goals.map((goal, index) => (\n                                    <GoalCard\n                                        key={indexG + '_' + index}\n                                        goal={goal}\n                                        owner={friend}\n                                        available={goal.users.includes(\n                                            account._id\n                                        )}\n                                        account={account}\n                                        setEditedGoal={setEditedGoal}\n                                        setEditGoalOpen={setEditGoalOpen}\n                                        setInviteGoal={setInviteGoal}\n                                    />\n                                ))\n                            )}\n                    </Card>\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    console.log(rewardsGroup)\n    return rewardsGroup ? (\n        <>\n            <ol>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                    display: 'inline-block',\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        )\n    })\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"All roles\" key=\"1\">\n                    <Card title=\"All progresses where I have a role\">\n                        {progressesData &&\n                            progressesData.map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    <Card title=\"All progresses where I am achieving goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.worker === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    <Card title=\"All progresses where I motivate friends to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.owner === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    <Card title=\"All progresses where I check and approve progresses\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.experts.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.experts.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    <Card title=\"All progresses where I support friend to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.supporters.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.supporters.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                        console.log('HURRAY')\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        console.log('jjjjj')\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Comment\n            actions={[\n                <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Like\">\n                        {message.likes.includes(account._id) ? (\n                            <LikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeLikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <LikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'likeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.likes.length}\n                    </span>\n                </span>,\n                <span key=\"comment-basic-dislike\">\n                    <Tooltip title=\"Dislike\">\n                        {message.dislikes.includes(account._id) ? (\n                            <DislikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeDislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <DislikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'dislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.dislikes.length}\n                    </span>\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            replyToMessage: message.messageId,\n                            editedMessage: '',\n                        })\n                    }}\n                >\n                    Reply to\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            messageValue: message.text,\n                            editedMessage: message.messageId,\n                            replyToMessage: '',\n                        })\n                    }}\n                >\n                    Edit\n                </span>,\n            ]}\n            author={\n                <a>\n                    {account.friendsData.find(\n                        item => item._id === message.author\n                    ).name +\n                        ' (' +\n                        message.author +\n                        ')'}\n                </a>\n            }\n            avatar={\n                <Avatar\n                    src={\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                        message.author +\n                        '/avatar'\n                    }\n                />\n            }\n            content={\n                message.action === 'message' ? (\n                    <p>{message.text}</p>\n                ) : message.action === 'image' ? (\n                    <div\n                        style={{\n                            backgroundImage: 'url(' + message.text + ')',\n                            width: '200px',\n                            height: '200px',\n                            backgroundSize: 'cover',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() =>\n                            setState({ ...state, previewImage: message.text })\n                        }\n                    />\n                ) : null\n            }\n            datetime={\n                <span>\n                    <TimeAgo datetime={message.date} live />\n                </span>\n            }\n        >\n            {props.children}\n        </Comment>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        flex: 1,\n                        overflow: 'auto',\n                    }}\n                >\n                    {getMessages(progress.messages)}\n                </div>\n                <div>\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </span>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </span>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 4, maxRows: 8 }}\n                                        rows={4}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        type=\"primary\"\n                                    >\n                                        Send message\n                                    </Button>\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button style={{ marginLeft: '20px' }}>\n                                            {imageLoading ? (\n                                                <>\n                                                    <LoadingOutlined /> Loading\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <PlusOutlined /> Add a photo\n                                                </>\n                                            )}\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            console.log(milestone)\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n            <div\n                style={{\n                    height: '100%',\n                    flexDirection: 'column',\n                    overflow: 'hidden',\n                    display: 'flex',\n                }}\n            >\n                <PageHeader\n                    className=\"site-page-header\"\n                    title={goal.name}\n                    backIcon={false}\n                />\n                <div>\n                    <Button\n                        type=\"primary\"\n                        onClick={() =>\n                            setState({ ...state, activityOpen: true })\n                        }\n                    >\n                        Show activity and settings\n                    </Button>\n                </div>\n                <Messages\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n\n                <Drawer\n                    title=\"Activity\"\n                    placement=\"right\"\n                    closable={true}\n                    onClose={() => setState({ ...state, activityOpen: false })}\n                    visible={state.activityOpen}\n                    width={'90%'}\n                >\n                    <Activity\n                        data={data}\n                        setData={setData}\n                        state={state}\n                        setState={setState}\n                    />\n                </Drawer>\n                <Modal\n                    visible={state.previewImage}\n                    footer={null}\n                    onCancel={() => setState({ ...state, previewImage: '' })}\n                >\n                    <img\n                        alt=\"example\"\n                        style={{ width: '100%' }}\n                        src={state.previewImage}\n                    />\n                </Modal>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    return (\n        <Card title=\"Your wallet with all money that you have\">\n            {props.data.account.wallet &&\n                props.data.account.wallet.map((money, index) => (\n                    <Card\n                        key={index}\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        cover={\n                            <span\n                                onClick={() =>\n                                    props.history.push('/progile/' + money.user)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        money.user +\n                                        '/avatar'\n                                    }\n                                    size={100}\n                                />\n                            </span>\n                        }\n                        hoverable\n                        actions={[\n                            <Button\n                                key=\"1\"\n                                onClick={() => {\n                                    props.history.push('/progile/' + money.user)\n                                }}\n                                icon={<PlusCircleOutlined />}\n                            >\n                                Go to the shop\n                            </Button>,\n                        ]}\n                    >\n                        <Meta title={money.amount} description={money.user} />\n                    </Card>\n                ))}\n        </Card>\n    )\n}\n\nexport default withRouter(Wallet)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\n\nconst Transactions = props => {\n    const { account } = props.data\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const confirmTransaction = transactionId => {\n        axios\n            .post('/api/shop/confirm', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const cancelTransaction = transactionId => {\n        axios\n            .post('/api/shop/cancel', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk => {\n                console.log(perk)\n                if (perk.simple) return perk.simple\n                else\n                    return (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: [perk], key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )\n            },\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    cancelTransaction(record.transaction._id)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        confirmTransaction(\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    console.log(account)\n    return <Table columns={columns} dataSource={tableData} />\n}\n\nexport default withRouter(Transactions)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [previewImage, setPreviewImage] = useState('')\n    const [images, setImages] = useState([])\n\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${props.mode || 'shop'}/${props.nickname}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        setPerk(res.data.perk)\n                        setImages(\n                            res.data.perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${props.mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: props.perkId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditPerkOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${props.mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData || []\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    perk || {\n                        name: 'New item',\n                    }\n                }\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\">\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Button\n                            type=\"link\"\n                            onClick={deletePerk}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerk\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const { perk, owner, account, setEditedPerk, setEditPerkOpen } = props\n\n    const buyPerk = () => {\n        const currency = account.wallet.find(item => item.user === owner._id)\n        if (currency && currency.amount >= perk.price) {\n            axios\n                .post('/api/shop/buy', {\n                    perkId: perk.perkId,\n                    ownerId: owner._id,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        props.setData({ ...props.data, ...res.data })\n                    }\n                })\n                .catch(err => {})\n        } else {\n            alert(\n                'You cannot buy this item as you do not have enough money from this user.'\n            )\n        }\n    }\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/shop/' + owner._id + '/' + perk.perkId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && !props.onlyBuy && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedPerk(perk.perkId)\n                                setEditPerkOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {props.mode === 'shop' && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                buyPerk()\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Buy\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { data, setData } = props\n    const { account } = data\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                account={account}\n                setEditPerkOpen={setEditPerkOpen}\n                setData={setData}\n                data={data}\n                perkId={editedPerk}\n                nickname={account && account._id}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <Card title=\"Nice things that you can do or give people that you care\">\n            <Card\n                type=\"inner\"\n                style={{ width: 200, display: 'inline-block' }}\n                hoverable\n                cover={\n                    <div\n                        style={{\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <PlusCircleOutlined\n                            style={{\n                                fontSize: '60px',\n                            }}\n                        />\n                    </div>\n                }\n                actions={[\n                    <Button\n                        key=\"1\"\n                        onClick={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        icon={<PlusCircleOutlined />}\n                    >\n                        Add item\n                    </Button>,\n                ]}\n            >\n                <Meta title=\"Add an item\" description=\"\" />\n            </Card>\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </Card>\n    )\n}\n\nexport default withRouter(WishlistAndPerks)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Perks from './Perks'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <Tabs>\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                {/* <Perks data={data} setData={setData} /> */}\n                <WishlistAndPerks\n                    data={data}\n                    setData={setData}\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet data={data} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions data={data} setData={setData} />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Dashboard.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Dashboard = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    return <div />\n}\n\nexport default withRouter(Dashboard)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport axios from 'axios'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        callback,\n        accountId,\n    } = props\n\n    const acceptFriend = id => {\n        axios\n            .post('/api/friends/accept', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const addFriend = id => {\n        axios\n            .post('/api/friends/add', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const unfriend = id => {\n        axios\n            .post('/api/friends/unfriend', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    if (accountId.toString() === _id.toString()) return null\n\n    return invitingFriends.find(\n        item => item.friend.toString() === _id.toString()\n    )\n        ? [\n              <Button\n                  key=\"0\"\n                  onClick={() => acceptFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Accept\n              </Button>,\n              <Button\n                  key=\"1\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Decline\n              </Button>,\n          ]\n        : invitedFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"2\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Cancel invitation\n              </Button>,\n          ]\n        : realFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"3\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Unfriend\n              </Button>,\n          ]\n        : [\n              <Button\n                  key=\"4\"\n                  onClick={() => addFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Become friends\n              </Button>,\n          ]\n}\n\nexport default FriendActionButton\n","import React from 'react'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport pullData from '../utils/pullData'\nimport FriendActionButton from './FriendActionButton'\nconst { Meta } = Card\n\nconst FriendCard = props => (\n    <Card\n        type=\"inner\"\n        style={{ width: 200, display: 'inline-block' }}\n        cover={\n            <span\n                onClick={() =>\n                    props.history.push('/profile/' + props.friend._id)\n                }\n            >\n                <Avatar\n                    src={\n                        props.friend.image &&\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            props.friend._id +\n                            '/avatar'\n                    }\n                    size={100}\n                />\n            </span>\n        }\n        actions={[\n            <FriendActionButton\n                accountId={props.account ? props.account._id : ''}\n                realFriends={props.realFriends}\n                invitedFriends={props.invitedFriends}\n                invitingFriends={props.invitingFriends}\n                _id={props.friend._id}\n                callback={() =>\n                    pullData(props, props.data, props.setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />,\n        ]}\n    >\n        <Meta title={props.friend.name} description={props.friend._id} />\n    </Card>\n)\n\nexport default FriendCard\n","import React, { useState, useEffect } from 'react'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nconst { Meta } = Card\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!data) return null\n    const { account } = data\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    alert('Accounts with this nickname do not exist.')\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const addFriendModal = (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n\n    const pendingFriendsModal = (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My friends\"\n                backIcon={false}\n            />\n\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <Button\n                    style={{ margin: '30px 0px ' }}\n                    type=\"primary\"\n                    onClick={() => setPendingFriendsOpen(true)}\n                >\n                    Show pending friends\n                </Button>\n            )}\n            <Card>\n                <Card\n                    onClick={() => setAddFriendOpen(true)}\n                    type=\"inner\"\n                    style={{ width: 200, display: 'inline-block' }}\n                    cover={\n                        <div\n                            style={{\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <PlusCircleOutlined\n                                style={{\n                                    fontSize: '60px',\n                                }}\n                            />\n                        </div>\n                    }\n                >\n                    <Meta title=\"Add a friend\" />\n                </Card>\n\n                {realFriends.map(friend => (\n                    <FriendCard\n                        key={friend._id}\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                ))}\n            </Card>\n            {addFriendModal}\n            {pendingFriendsModal}\n        </>\n    )\n}\n\nexport default Friends\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Account = props => {\n    const [data, setData] = useState()\n    const [imageV, setImageV] = useState(Math.floor(Math.random() * 10000))\n    const [imageExists, setImageExists] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!imageExists && data)\n        checkImageExists(\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                data.account._id +\n                '/avatar',\n            setImageExists\n        )\n\n    const imageUrl =\n        imageExists &&\n        data &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' +\n            data.account._id +\n            '/avatar'\n    const loading = false\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {})\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    console.log(file)\n                    uploadFile(file, 800, 'avatar', () => {\n                        setImageV(Math.floor(Math.random() * 10000))\n                    })\n                }}\n            >\n                {imageUrl ? (\n                    <img\n                        src={imageUrl + '?version=' + imageV}\n                        alt=\"avatar\"\n                        style={{ width: '100%' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: data.account.name,\n                    nickname: data.account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input\n                        disabled={true}\n                        placeholder=\"Must be more than 1 character long\"\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    ) : null\n}\n\nexport default withRouter(Account)\n","export default (image_url, callback) => {\n    var img = new Image()\n    img.src = image_url\n    img.onload = () => callback(true)\n    img.onerror = () => callback(false)\n}\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport { withRouter } from 'react-router-dom'\nimport FriendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (!data || !data.profile) return null\n\n    const { profile, account } = data\n    const imageUrl =\n        profile &&\n        profile.image &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' + profile._id + '/avatar'\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={profile.name}\n                backIcon={false}\n            />\n            <div>Nickname - {profile._id}</div>\n            <Avatar src={imageUrl} size={200} />\n            <FriendActionButton\n                accountId={account ? account._id : ''}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                _id={profile._id}\n                callback={() =>\n                    pullData(props, data, setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Friends\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.nicknameNotUnique) {\n                    alert('THis nickname is taken. Try another one.')\n                }\n                props.history.push('/set-goals')\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default withRouter(ActivateAccount)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { perk, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={perk.name}\n                backIcon={false}\n            />\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Perk)\n","import React, { useEffect, useState } from 'react'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Modal from 'antd/es/modal'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { wishlistItem } = data\n\n    return wishlistItem ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={wishlistItem.name}\n                backIcon={false}\n            />\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default WishlistItem\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <WishlistAndPerks data={data} setData={setData} mode=\"wishlist\" />\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\nimport Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\n\nconst cookies = new Cookies()\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState()\n    const [account, setAccount] = useState()\n    useEffect(() => {\n        async function fetchMyAPI() {\n            sessionStorage.setItem('systemRefresh', '0')\n            const token = cookies.get('auth_token')\n            const rememberMe = cookies.get('rememberme')\n            if (rememberMe) {\n                cookies.remove('rememberme', {\n                    path: '/',\n                })\n                if (rememberMe === 'false') {\n                    cookies.remove('auth_token', {\n                        path: '/',\n                    })\n                }\n            }\n            const userId = jwt.decode(token)\n            axios.defaults.headers.post['Content-Type'] = 'application/json'\n            axios.defaults.headers.put['Content-Type'] = 'application/json'\n            axios.defaults.headers.delete['Content-Type'] = 'application/json'\n            axios.defaults.headers.common.Accept = 'application/json'\n            if (token && userId) {\n                axios.defaults.headers.common['x-auth-token'] = token\n                axios.defaults.headers.post['x-auth-token'] = token\n                axios.defaults.headers.get['x-auth-token'] = token\n                axios.defaults.headers.delete['x-auth-token'] = token\n                axios.defaults.headers.put['x-auth-token'] = token\n                setIsAuthenticated(userId._id)\n            } else {\n                setIsAuthenticated(false)\n            }\n        }\n        fetchMyAPI()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        cookies.remove('auth_token', {\n            path: '/',\n        })\n        delete axios.defaults.headers.common['x-auth-token']\n        delete axios.defaults.headers.post['x-auth-token']\n        delete axios.defaults.headers.get['x-auth-token']\n        delete axios.defaults.headers.delete['x-auth-token']\n        delete axios.defaults.headers.put['x-auth-token']\n        setIsAuthenticated(false)\n        return <Redirect to=\"/login\" />\n    }\n\n    const routes = (\n        <AccountLayout isAuthenticated={isAuthenticated} account={account}>\n            <Switch>\n                <Route path=\"/goals\" exact component={Goals} />\n                <Route path=\"/goals\" component={Goal} />\n\n                <Route path=\"/progresses\" exact component={Progresses} />\n                <Route path=\"/progresses\" component={Progress} />\n\n                <Route path=\"/profile\" component={Profile} />\n\n                <Route path=\"/friends\" exact component={Friends} />\n\n                <Route path=\"/account\" exact component={Account} />\n                <Route path=\"/dashboard\" exact component={Dashboard} />\n\n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/shop\" component={Perk} />\n                <Route path=\"/wishlist\" exact component={Wishlist} />\n                <Route path=\"/wishlist\" component={WishlistItem} />\n                {!isAuthenticated && (\n                    <Route path=\"/login\" exact component={Auth} />\n                )}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthenticated && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n\n                <Redirect to=\"/dashboard\" />\n            </Switch>\n        </AccountLayout>\n    )\n\n    return typeof isAuthenticated === 'undefined' ? null : redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>{routes}</div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}