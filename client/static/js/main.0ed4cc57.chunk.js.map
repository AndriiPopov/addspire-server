{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Progress/Messages.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/Layout.tsx","utils/processRes.js","store/actions/auth.tsx","utils/pullData.js","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","components/AddCard/AddCard.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/ProgressCard.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.tsx","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.tsx","containers/Friends/methods.js","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","utils/processResErr.js","containers/Account/Account.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Messages","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","connect","state","lastUrl","_useState","useState","_useState2","Object","slicedToArray","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","get","basicURL","console","log","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","getAvatar","nickname","version","Content","account","pageTitle","isAuthed","menuVisible","setMenuVisible","toggleMenu","selectedKey","history","location","pathname","split","undefined","buttonProps","size","checkHighligh","url","ghost","openLink","isActivating","es_layout","assign","MenuOutlined_default","tooltip","title","placement","mouseEnterDelay","LogoutOutlined_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","cursor","avatar","src","_id","image","page_header","onBack","goBack","main","subTitle","sub","drawer","closable","onClose","visible","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","includes","processRes","res","data","logout","success","errorCode","message","warning","error","successCode","status","tryAuth","forceLogin","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","saveLastUrl","id","setData","pulledFrom","setPageTitle","pullData","options","callback","objectSpread","forceAuth","forceActivate","then","catch","err","uploadFile","file","filename","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","this","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","rules","input","TextArea","input_number","upload","listType","fileList","itemImages","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","Component","WrapTabNode","DropTarget","drop","monitor","dragKey","getItem","hoverKey","moveTabNode","dropTarget","DragSource","beginDrag","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","autoSize","minRows","maxRows","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","popconfirm","onConfirm","cancelText","actions","setGoal","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","cover","backgroundImage","backgroundSize","EditFilled_default","fontSize","ownerId","RocketOutlined_default","Meta","AddCard","hoverable","alignItems","justifyContent","PlusCircleOutlined_default","description","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","user","startProgress","background","boxShadow","marginTop","components_AddCard_AddCard","goals","Goals_GoalCard","indexG","users","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","padding","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","profile","items","setTitle","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","Card","progress","ProgressCard_Meta","worker","noPullData","pulledProfile","progressesData","Progresses_TabPane","Progresses_ProgressCard","empty","imageStyle","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","messageValue","messageText","setFriendsData","newProgress","oldProgress","cloneDeep","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","accountId","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","textAlign","marginBottom","getMessages","Progress_ProgressMessage","replies","ref","position","bottom","left","rows","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","activityOpen","ActivityTable","renderCheckbox","milestoneId","disabled","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","toString","Progress_EditProgress","ProgressWebsocket","Progress_Messages","closeIcon","ArrowLeftOutlined","Progress_Activity","keepPageTitle","wallet","Wallet_Meta","amount","cancelTransaction","transactionId","confirmTransaction","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transaction","from","tableData","sorted","Date","getTime","to","AddPerkForm","perkId","deletePerk","uploadImage","setPerk","wishlistItem","Shop_AddPerkForm","setEditPerkOpen","buyPerk","currency","setEditedPerk","onlyBuy","DollarCircleOutlined_default","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","itemId","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","acceptFriend","addFriend","unfriend","additionalButton","asIcons","ResultButtun","SmileOutlined_default","FrownOutlined_default","friendActions","friendActionButton","EyeOutlined_default","FriendCard_Meta","addFriendOpen","setAddFriendOpen","searchResult","components_FriendCard","pendingFriendsOpen","setPendingFriendsOpen","setSearchResult","friendRef","fullFriend","Friends_AddFriends","search","PendingFriends","processResErr","setAvatarV","v","increaseAvatarV","deleteVisible","setDeleteVisible","deleteField","setDeleteField","tailLayout","backIcon","flex","maxWidth","overflow","_is","friendData","containers_Progresses_Progresses","perks","wishlist","nicknameNotUnique","Perk_Item","redirectTo","routes","react_router","exact","component","Goals","Goal","Progresses","Progress","Profile","Friends","Account","Shop","Perk","Wishlist","WishlistItem","Auth","ActivateAccount","process","reducer","createReducer","SET_DATA","SET_FRIENDS_DATA","SET_AVATAR_V","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SAVE_LAST_URL","__webpack_require__","__webpack_exports__","store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","react_router_dom","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.0ed4cc57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1mGAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.lastUrl) {\n        redirectParam = '&redirect=' + props.lastUrl\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    console.log(cookieConsent)\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lastUrl: state.lastUrl,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Auth))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\nimport getAvatar from '../../utils/getAvatar'\nimport Account from '../../containers/Account/Account'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    return props.isAuthed ? (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            {!isActivating && (\n                                <Button\n                                    {...buttonProps}\n                                    icon={<MenuOutlined />}\n                                    onClick={toggleMenu}\n                                />\n                            )}\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {/* <Tooltip\n                                title=\"Dashboard\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                            </Tooltip> */}\n                            {!isActivating ? (\n                                <>\n                                    <Tooltip\n                                        title=\"Progresses\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('progresses')}\n                                            icon={<RocketFilled />}\n                                            onClick={() =>\n                                                openLink('progresses')\n                                            }\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Shop\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('shop')}\n                                            icon={<ShopOutlined />}\n                                            onClick={() => openLink('shop')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Friends\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('friends')}\n                                            icon={<TeamOutlined />}\n                                            onClick={() => openLink('friends')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Account\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <span\n                                            onClick={() => openLink('account')}\n                                            style={{\n                                                margin: '0px 10px',\n                                                cursor: 'pointer',\n                                            }}\n                                        >\n                                            <Avatar\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </span>\n                                    </Tooltip>\n                                </>\n                            ) : (\n                                <Tooltip\n                                    title=\"Logout\"\n                                    placement=\"bottomRight\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </Tooltip>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={\n                                isActivating\n                                    ? 'Activate your account'\n                                    : props.pageTitle && props.pageTitle.main\n                            }\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                {!isActivating && (\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            {/* <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                            Dashboard\n                        </Menu.Item> */}\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                )}\n            </Layout>\n        </>\n    ) : ['/login', 'logout'].includes(props.history.location.pathname) ? (\n        props.children\n    ) : (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner} />\n                        <div className={classes.QuickButtonContiner}>\n                            <Tooltip\n                                title=\"Sign in or Sign up\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => props.history.push('/login')}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={props.pageTitle && props.pageTitle.main}\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        dispatch(saveLastUrl(props.history.location.pathname))\n        if (forceLogin) props.history.push('/logout')\n    }\n}\n\nconst saveLastUrl = url => ({\n    type: 'SAVE_LAST_URL',\n    url,\n})\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = (data, pulledFrom) => ({\n    type: 'SET_DATA',\n    data,\n    pulledFrom,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    console.log(res.data)\n                    console.log(props.history.location.pathname)\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, options, callback) => {\n    if (typeof props.isAuthed === 'undefined') return\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n\n    if (!props.isAuthed) {\n        props.tryAuth(props, options.forceAuth)\n    }\n\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                processRes(res, props)\n                if (options.forceActivate) {\n                    if (props.isAuthed && res.data.status === 'no account') {\n                        props.history.push('/activate-account')\n                    }\n                }\n\n                props.setData(res.data, props.history.location.pathname)\n            })\n            .catch(err => {})\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport fieldLength from '../../constants/fieldLength'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money + ' (money)'\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n\n                        // if (editedReward.itemImages) {\n                        //     rewardToSave.itemImages = editedReward.itemImages.map(\n                        //         image => image.url\n                        //     )\n                        // }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }}\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item\n                                label=\"Description\"\n                                rules={[\n                                    ...descriptionRules,\n                                    {\n                                        required: true,\n                                        min: 1,\n                                        whitespace: true,\n                                        message:\n                                            'Desription is too short. Minimal length is 1.',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\" rules={priceRules}>\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }}\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((url, index) => ({\n                                            url,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) => {\n                                            console.log(fileList)\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList.map(\n                                                    image => image.url\n                                                ),\n                                            })\n                                        }}\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            url,\n                                                        ],\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\" rules={nameRules}>\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={descriptionRules}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\nimport Popconfirm from 'antd/es/popconfirm'\nimport fieldLength from '../../constants/fieldLength'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={nameRules}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                        rules={descriptionRules}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deleteGoal}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\nimport processRes from '../../utils/processRes'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId, account } = props\n    if (!account._id) return null\n    useEffect(() => {\n        if (goalId)\n            axios\n                .get(`/api/goals/${account._id}/${goalId}`)\n                .then(res => {\n                    processRes(res, props)\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: goalId,\n            })\n            .then(res => {\n                processRes(res, props)\n                props.setData(res.data, props.history.location.pathname)\n            })\n            .catch(err => {})\n        props.setEditGoalOpen(false)\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    processRes(res, props)\n                    props.setData(res.data, props.history.location.pathname)\n                    props.setEditGoalOpen(false)\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AddGoal)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport Card from 'antd/es/card'\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\n\nimport Tooltip from 'antd/es/tooltip'\nimport processRes from '../../utils/processRes'\n\nconst GoalCard = withRouter(props => {\n    const startProgress = (goalId, ownerId, userId) => {\n        axios\n            .post('/api/progresses/add', { goalId, ownerId, userId })\n            .then(res => {\n                processRes(res)\n                props.history.push('/progresses')\n            })\n            .catch(err => {})\n    }\n\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        cursor: 'pointer',\n                    }}\n                />\n            }\n            actions={[\n                owner._id === account._id && setEditedGoal && (\n                    <Tooltip title=\"Edit\">\n                        <span\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                        >\n                            <EditFilled style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                (available || owner._id === account._id) && (\n                    <Tooltip title=\"Start progress\">\n                        <span\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                        >\n                            <RocketOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                owner._id === account._id && setInviteGoal && (\n                    <Tooltip title=\"Invite friends\">\n                        <span\n                            type=\"link\"\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                        >\n                            <TeamOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n            ]}\n        >\n            <Card.Meta\n                title={\n                    <span\n                        onClick={() =>\n                            props.history.push(\n                                '/goals/' + owner._id + '/' + goal.goalId\n                            )\n                        }\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {goal.name}\n                    </span>\n                }\n            />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport Tooltip from 'antd/es/tooltip'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Meta from 'antd/es/card/Meta'\n\nconst AddCard = props => (\n    <span onClick={props.action}>\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    style={{\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    onClick={props.action}\n                >\n                    <PlusCircleOutlined\n                        style={{\n                            fontSize: '60px',\n                        }}\n                    />\n                </div>\n            }\n            actions={[\n                <Tooltip title=\"Add item\">\n                    <span key=\"3\" onClick={props.action}>\n                        <PlusCircleOutlined style={{ fontSize: '18px' }} />\n                    </span>\n                </Tooltip>,\n            ]}\n        >\n            <Meta\n                title={\n                    <span onClick={props.action} style={{ cursor: 'pointer' }}>\n                        {props.title}\n                    </span>\n                }\n                description={typeof props.sub !== 'undefined' && props.sub}\n            />\n        </Card>\n    </span>\n)\n\nexport default AddCard\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport GoalCard from './GoalCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Goals', sub: '' })\n    }, [])\n    if (props.pulledFrom !== 'goals') return null\n\n    const { account } = props\n    if (!account._id) return null\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal setEditGoalOpen={setEditGoalOpen} goalId={editedGoal} />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData &&\n                account.friendsData\n                    .filter(\n                        friend =>\n                            !(\n                                inviteGoal.progresses &&\n                                inviteGoal.progresses.find(\n                                    item => item.user === friend._id\n                                )\n                            )\n                    )\n                    .map((friend, index) => (\n                        <div key={index}>\n                            <span\n                                style={{ cursor: 'pointer' }}\n                                onClick={() =>\n                                    props.history.push('/profile/' + friend._id)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        friend._id +\n                                        '/avatar'\n                                    }\n                                    size={20}\n                                />\n                                {friend.name} - ({friend._id})\n                            </span>\n                            <Button\n                                onClick={() =>\n                                    startProgress(\n                                        inviteGoal.goalId,\n                                        account._id,\n                                        friend._id\n                                    )\n                                }\n                            >\n                                Invite\n                            </Button>\n                        </div>\n                    ))}\n        </Modal>\n    )\n\n    return account && account.friendsData ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <AddCard\n                        action={() => {\n                            setEditedGoal('')\n                            setEditGoalOpen(true)\n                        }}\n                        title=\"Add goal\"\n                    />\n\n                    {account.goals &&\n                        account.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={account}\n                                account={account}\n                                setEditedGoal={setEditedGoal}\n                                setEditGoalOpen={setEditGoalOpen}\n                                setInviteGoal={setInviteGoal}\n                            />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    {account.friendsData &&\n                        [account, ...account.friendsData].map(\n                            (friend, indexG) =>\n                                friend.goals.map((goal, index) =>\n                                    goal.users.includes(account._id) ||\n                                    friend._id === account._id ? (\n                                        <GoalCard\n                                            key={indexG + '_' + index}\n                                            goal={goal}\n                                            owner={friend}\n                                            available={goal.users.includes(\n                                                account._id\n                                            )}\n                                            account={account}\n                                            setEditedGoal={setEditedGoal}\n                                            setEditGoalOpen={setEditGoalOpen}\n                                            setInviteGoal={setInviteGoal}\n                                        />\n                                    ) : null\n                                )\n                        )}\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    {account.friendsData &&\n                        account.friendsData.map((friend, indexG) =>\n                            friend.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={indexG + '_' + index}\n                                    goal={goal}\n                                    owner={friend}\n                                    available={goal.users.includes(account._id)}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))\n                        )}\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goals)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    return rewardsGroup ? (\n        <>\n            <ol style={{ padding: 0 }}>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, { forceAuth: false })\n    }, [])\n    if (props.pulledFrom !== 'goals') return null\n\n    const { goal, profile } = props\n    console.log(goal)\n    if (goal) {\n        props.setPageTitle({ main: goal.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: goal.owner })\n    }\n    return goal ? (\n        <Card>\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal details\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                </>\n            )}\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        goal: state.goal,\n        profile: state.profile,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goal)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\n\nconst { Meta } = Card\n\nconst ProgressCard = props => {\n    const { progress } = props\n    const { goal } = progress\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            onClick={() => props.history.push('/progresses/' + progress._id)}\n        >\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        </div>\n    )\n}\n\nexport default withRouter(ProgressCard)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport Empty from 'antd/es/empty'\nimport ProgressCard from './ProgressCard'\n\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    useEffect(() => {\n        if (!props.noPullData) {\n            pullData(props, {})\n            props.setPageTitle({ main: 'Progresses', sub: '' })\n        }\n    }, [])\n    if (!props.noPullData) if (props.pulledFrom !== 'progresses') return null\n\n    const account = props.noPullData ? props.pulledProfile : props.account\n    const { progressesData } = account\n\n    return account && account.progresses && account.progresses.length > 0 ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"All roles\" key=\"1\">\n                    {progressesData &&\n                        progressesData.map((progress, index) => (\n                            <ProgressCard key={index} progress={progress} />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.worker === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.owner === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.experts.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.experts.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.supporters.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.supporters.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n            </Tabs>\n        </>\n    ) : props.pulledFrom === 'progresses' ? (\n        <Empty\n            imageStyle={{\n                height: 160,\n            }}\n            description={\n                <span>\n                    Here you will find your progresses.\n                    <br /> First create an important goal and start a progress.\n                </span>\n            }\n        >\n            <Button type=\"primary\" onClick={() => props.history.push('/goals')}>\n                Create my first goal\n            </Button>\n        </Empty>\n    ) : (\n        <Empty\n            imageStyle={{\n                height: 160,\n            }}\n            description={\n                <span>\n                    This user has no progresses. You can create a goal and\n                    invite this user.\n                </span>\n            }\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport * as wsActions from '../../websocketActions'\nimport cloneDeep from 'lodash.clonedeep'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    let oldProgress = cloneDeep(this.props.progress)\n                    if (oldProgress.__v === news.progress.__v - 1) {\n                        newProgress = diffpatcher.patch(\n                            oldProgress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData(\n                            {\n                                progress: newProgress,\n                            },\n                            this.props.history.location.pathname\n                        )\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.progress,\n                        this.props.account.friends\n                    )\n                    break\n                case 'error':\n                    message.error(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progress: state.progress,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ReserveWebsite)\n)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\nimport Card from 'antd/es/card'\n\nconst ProgressMessage = props => {\n    const { account, state, setState, message } = props\n\n    const changeLikes = (type, messageId) => {\n        wsActions.changeLikesMessage(props, type, messageId)\n    }\n    return account && account.friendsData ? (\n        <Card>\n            <Comment\n                actions={[\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {message.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeLikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'likeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.likes.length}\n                        </span>\n                    </span>,\n                    <span key=\"comment-basic-dislike\">\n                        <Tooltip title=\"Dislike\">\n                            {message.dislikes.includes(account._id) ? (\n                                <DislikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeDislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <DislikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'dislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.dislikes.length}\n                        </span>\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                replyToMessage: message.messageId,\n                                editedMessage: '',\n                            })\n                        }}\n                    >\n                        Reply to\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                messageValue: message.text,\n                                editedMessage: message.messageId,\n                                replyToMessage: '',\n                            })\n                        }}\n                    >\n                        Edit\n                    </span>,\n                ]}\n                author={\n                    <a>\n                        {account.friendsData.find(\n                            item => item._id === message.author\n                        ).name +\n                            ' (' +\n                            message.author +\n                            ')'}\n                    </a>\n                }\n                avatar={\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            message.author +\n                            '/avatar'\n                        }\n                    />\n                }\n                content={\n                    message.action === 'message' ? (\n                        <p>{message.text}</p>\n                    ) : message.action === 'image' ? (\n                        <div\n                            style={{\n                                backgroundImage: 'url(' + message.text + ')',\n                                width: '200px',\n                                height: '200px',\n                                backgroundSize: 'cover',\n                                cursor: 'pointer',\n                            }}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    previewImage: message.text,\n                                })\n                            }\n                        />\n                    ) : null\n                }\n                datetime={\n                    <span>\n                        <TimeAgo datetime={message.date} live />\n                    </span>\n                }\n            >\n                {props.children}\n            </Comment>\n        </Card>\n    ) : null\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as classes from './Messages.module.css'\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { state, setState, progress, account } = props\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          progress={progress}\n                          account={account}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                }}\n                className={classes.Messages}\n            >\n                {getMessages(progress.messages)}\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: '0px',\n                        width: '100%',\n                        background: '#fff',\n                        left: '0px',\n                        padding: '0px 10px',\n                        boxShadow:\n                            '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                    }}\n                >\n                    {account._id ? (\n                        <Comment\n                            avatar={\n                                <Avatar\n                                    src={getAvatar(account._id, account.image)}\n                                />\n                            }\n                            content={\n                                <>\n                                    {state.editedMessage && (\n                                        <>\n                                            <span>Editing message</span>\n                                            <Button\n                                                type=\"link\"\n                                                onClick={() => {\n                                                    setState({\n                                                        ...state,\n                                                        replyToMessage: '',\n                                                        editedMessage: '',\n                                                        messageValue: '',\n                                                    })\n                                                }}\n                                            >\n                                                Cancel editing\n                                            </Button>\n                                        </>\n                                    )}\n                                    {state.replyToMessage && (\n                                        <>\n                                            <span>Commenting message</span>\n                                            <Button\n                                                type=\"link\"\n                                                onClick={() => {\n                                                    setState({\n                                                        ...state,\n                                                        replyToMessage: '',\n                                                        editedMessage: '',\n                                                    })\n                                                }}\n                                            >\n                                                Cancel commenting\n                                            </Button>\n                                        </>\n                                    )}\n                                    <Form.Item rules={messageRules}>\n                                        <Input.TextArea\n                                            autoSize={{\n                                                minRows: 1,\n                                                maxRows: 3,\n                                            }}\n                                            rows={1}\n                                            onChange={e =>\n                                                setState({\n                                                    ...state,\n                                                    messageValue:\n                                                        e.target.value,\n                                                })\n                                            }\n                                            value={state.messageValue}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Button\n                                            htmlType=\"submit\"\n                                            onClick={() =>\n                                                wsActions.sendMessage(\n                                                    state,\n                                                    props\n                                                )\n                                            }\n                                            icon={<SendOutlined />}\n                                            size=\"large\"\n                                            type=\"link\"\n                                        />\n                                        <Upload\n                                            showUploadList={false}\n                                            customRequest={({ file }) => {\n                                                setImageLoading(true)\n                                                uploadFile(\n                                                    file,\n                                                    800,\n                                                    undefined,\n                                                    url => {\n                                                        setImageLoading(false)\n                                                        wsActions.sendMessage(\n                                                            state,\n                                                            props,\n                                                            url\n                                                        )\n                                                    }\n                                                )\n                                            }}\n                                        >\n                                            <Button\n                                                size=\"large\"\n                                                type=\"link\"\n                                                icon={\n                                                    imageLoading ? (\n                                                        <LoadingOutlined />\n                                                    ) : (\n                                                        <PictureOutlined />\n                                                    )\n                                                }\n                                            />\n                                        </Upload>\n\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() =>\n                                                setState({\n                                                    ...state,\n                                                    activityOpen: true,\n                                                })\n                                            }\n                                        >\n                                            Activity and settings\n                                        </Button>\n                                    </Form.Item>\n                                </>\n                            }\n                        />\n                    ) : (\n                        <>\n                            <h3\n                                style={{\n                                    textAlign: 'center',\n                                    marginTop: '30px',\n                                }}\n                            >\n                                You must be a mamber of this progress to be able\n                                to send messages.\n                                <br />\n                                Ask{' '}\n                                <Button\n                                    type=\"link\"\n                                    style={{\n                                        fontSize: '21px',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    {progress.owner}\n                                </Button>{' '}\n                                the owner of this progress to add you.\n                            </h3>\n                            <Button\n                                type=\"primary\"\n                                onClick={() =>\n                                    setState({\n                                        ...state,\n                                        activityOpen: true,\n                                    })\n                                }\n                                style={{\n                                    margin: '20px auto',\n                                    display: 'block',\n                                }}\n                            >\n                                Activity and settings\n                            </Button>\n                        </>\n                    )}\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { progress, account, state, setState } = props\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId, disabled }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(props, e.target.checked, milestoneId)\n            }\n            disabled={disabled}\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n            disabled: id !== account._id,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState } = props\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { account, progress, state, setState } = props\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable\n                progress={progress}\n                account={account}\n                state={state}\n                setState={setState}\n            />\n            {account._id === progress.owner && (\n                <Button\n                    style={{ margin: '0px 20px 50px 0px' }}\n                    type=\"primary\"\n                    onClick={() => {\n                        setState({ ...state, editProgressOpen: true })\n                    }}\n                >\n                    Edit progress\n                </Button>\n            )}\n            {account.progresses &&\n                account.progresses.includes(progress._id.toString()) && (\n                    <Button\n                        danger={true}\n                        onClick={() => {\n                            wsActions.leaveProgress(props)\n                        }}\n                    >\n                        Leave the progress\n                    </Button>\n                )}\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport pullData from '../../utils/pullData'\n\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\nimport Button from 'antd/es/button'\nimport { BackwardFilled, ArrowLeftOutlined } from '@ant-design/icons'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, {\n            forceAuth: false,\n        })\n    }, [])\n    if (props.pulledFrom !== 'progresses') return null\n\n    const { progress, account, profile } = props\n\n    if (!progress) return null\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && account.friendsData ? (\n        <>\n            {account._id && (\n                <ProgressWebsocket state={state} setState={setState} />\n            )}\n\n            <Messages\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n            />\n\n            <Drawer\n                title=\"Progress activity and settings\"\n                placement=\"right\"\n                closable={true}\n                closeIcon={\n                    <Button type=\"primary\" icon={<ArrowLeftOutlined />}>\n                        Go back\n                    </Button>\n                }\n                onClose={() => setState({ ...state, activityOpen: false })}\n                visible={state.activityOpen}\n                width={'100%'}\n            >\n                <Activity\n                    state={state}\n                    setState={setState}\n                    progress={progress}\n                    account={account}\n                />\n            </Drawer>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progress: state.progress,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    if (!props.keepPageTitle)\n        props.setPageTitle({ main: 'Shop', sub: 'Wallet' })\n    const account = props.pulledProfile || props.account\n    return account.wallet\n        ? account.wallet.map((money, index) => (\n              <div\n                  onClick={() => props.history.push('/profile/' + money.user)}\n                  style={{ display: 'inline-block', margin: '4px 8px' }}\n              >\n                  <Card\n                      key={index}\n                      type=\"inner\"\n                      style={{\n                          width: 200,\n                      }}\n                      cover={\n                          <span style={{ padding: '25px' }}>\n                              <Avatar src={getAvatar(money.user)} size={150} />\n                          </span>\n                      }\n                      hoverable\n                      actions={[\n                          <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                              Go to the shop\n                          </Button>,\n                      ]}\n                  >\n                      <Meta title={money.user} description={money.amount} />\n                  </Card>\n              </div>\n          ))\n        : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wallet)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account } = props\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendsData.find(item => item._id === user)\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <RewardsView\n                        goal={{\n                            rewardsGroups: [{ rewards: [perk], key: 1 }],\n                        }}\n                        groupKey={1}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    props.cancelTransaction(record.transaction._id, props)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        props.confirmTransaction(\n                                            record.transaction._id, props\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Card>\n            <Table columns={columns} dataSource={tableData} />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        cancelTransaction: (id, props) =>\n            dispatch(actions.cancelTransaction(id, props)),\n        confirmTransaction: (id, props) =>\n            dispatch(actions.confirmTransaction(id, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport processRes from '../../utils/processRes'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${mode || 'shop'}/${account._id}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        console.log(res.data)\n                        const perk =\n                            mode === 'wishlist'\n                                ? res.data.wishlistItem\n                                : res.data.perk\n                        setPerk(perk)\n                        setImages(\n                            perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: perkId,\n            })\n            .then(res => {\n                processRes(res, props)\n                props.setEditPerkOpen(false)\n                props.setData(res.data, props.history.location.pathname)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    processRes(res, props)\n                    props.setData(res.data, props.history.location.pathname)\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const connections = account.friendsData || []\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={deletePerk}\n            onFinish={onFinish}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AddPerk)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            `/${mode || 'shop'}/${owner._id}/${perkId}`\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                ...(owner._id === account._id && !props.onlyBuy\n                    ? [\n                          <Tooltip title=\"Edit\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() => {\n                                      setEditedPerk(perkId)\n                                      setEditPerkOpen(true)\n                                  }}\n                              >\n                                  <EditFilled style={{ fontSize: '18px' }} />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n\n                ...(props.mode === 'shop'\n                    ? [\n                          <Tooltip title=\"Buy\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() =>\n                                      props.buyPerk(account, perk, owner, props)\n                                  }\n                              >\n                                  <DollarCircleOutlined\n                                      style={{ fontSize: '18px' }}\n                                  />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        buyPerk: (account, perk, owner, props) =>\n            dispatch(actions.buyPerk(account, perk, owner, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(PerkCard)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        perkId={\n                            props.mode === 'wishlist'\n                                ? perk.itemId\n                                : perk.perkId\n                        }\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(WishlistAndPerks))\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Shop', sub: 'My items' })\n    }, [])\n    if (props.pulledFrom !== 'shop') return null\n\n    return props.account ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                <WishlistAndPerks mode=\"shop\" listKey=\"perks\" />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Shop)\n)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\nimport Tooltip from 'antd/es/tooltip'\nimport FrownOutlined from '@ant-design/icons/FrownOutlined'\nimport SmileOutlined from '@ant-design/icons/SmileOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        accountId,\n        acceptFriend,\n        addFriend,\n        unfriend,\n    } = props\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const { asIcons } = props\n    const ResultButtun = props =>\n        asIcons ? (\n            <Tooltip title={props.text}>\n                <span\n                    type=\"link\"\n                    key={props.key}\n                    onClick={props.onClick}\n                    style={{ fontSize: '18px' }}\n                >\n                    {props.icon}\n                </span>\n            </Tooltip>\n        ) : (\n            <Button {...props}>{props.text}</Button>\n        )\n\n    return [\n        props.additionalButton,\n        ...(invitingFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Accept\"\n                      key=\"0\"\n                      onClick={() => acceptFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n                  <ResultButtun\n                      text=\"Decline\"\n                      key=\"1\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : invitedFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Cancel invitation\"\n                      key=\"2\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : realFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      key=\"3\"\n                      onClick={() => unfriend(_id)}\n                      icon={<FrownOutlined />}\n                      text=\"Unfriend\"\n                      danger={true}\n                  />,\n              ]\n            : [\n                  <ResultButtun\n                      text=\"Become friends\"\n                      key=\"4\"\n                      onClick={() => addFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n              ]),\n    ]\n}\n\nexport default FriendActionButton\n","import axios from 'axios'\nimport processRes from '../../utils/processRes'\nimport pullData from '../../utils/pullData'\n\nexport const acceptFriend = (id, props) => {\n    axios\n        .post('/api/friends/accept', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const addFriend = (id, props) => {\n    axios\n        .post('/api/friends/add', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const unfriend = (id, props) => {\n    axios\n        .post('/api/friends/unfriend', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport Tooltip from 'antd/es/tooltip'\nimport EyeOutlined from '@ant-design/icons/EyeOutlined'\nimport friendActionButton from './FriendActionButton'\nimport getAvatar from '../utils/getAvatar'\nimport {\n    acceptFriend,\n    unfriend,\n    addFriend,\n} from '../containers/Friends/methods'\nconst { Meta } = Card\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        accountId: props.account ? props.account._id : '',\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n        acceptFriend: _id => acceptFriend(_id, props),\n        unfriend: _id => unfriend(_id, props),\n        addFriend: _id => addFriend(_id, props),\n        additionalButton: (\n            <Tooltip title=\"See profile\">\n                <span\n                    type=\"link\"\n                    key=\"100\"\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                    style={{ fontSize: '18px' }}\n                >\n                    <EyeOutlined />\n                </span>\n            </Tooltip>\n        ),\n    })\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: 200, display: 'inline-block', margin: '4px 8px' }}\n            cover={\n                <span\n                    style={{ padding: '25px', cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    <Avatar\n                        src={getAvatar(props.friend._id, props.friend.image)}\n                        size={150}\n                    />\n                </span>\n            }\n            actions={friendActions}\n        >\n            <Meta\n                title={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend.name}\n                    </span>\n                }\n                description={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend._id}\n                    </span>\n                }\n            />\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport fieldLength from '../../constants/fieldLength'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        onFinish,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\nexport default withRouter(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst pendingFriends = props => {\n    const {\n        pendingFriendsOpen,\n        setPendingFriendsOpen,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    return (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            width=\"90%\"\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Divider from 'antd/es/divider'\nimport message from 'antd/es/message'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n    if (props.pulledFrom !== 'friends') return null\n\n    const { account } = props\n    if (!account) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    message.warning(\n                        'Accounts with nickname ' +\n                            value.search +\n                            ' do not exist.'\n                    )\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    return (\n        <>\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <>\n                    <Button\n                        style={{ margin: '30px 0px ' }}\n                        type=\"primary\"\n                        onClick={() => setPendingFriendsOpen(true)}\n                    >\n                        Show pending friends\n                    </Button>\n                    <Divider type=\"horizontal\" />\n                </>\n            )}\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n\n            {realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                />\n            ))}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                onFinish={onFinish}\n                searchResult={searchResult}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n            <PendingFriends\n                pendingFriendsOpen={pendingFriendsOpen}\n                setPendingFriendsOpen={setPendingFriendsOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import message from 'antd/es/message'\n\nexport default err => {\n    message.error('Something failed. Try again.')\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport processRes from '../../utils/processRes'\nimport processResErr from '../../utils/processResErr'\nimport Modal from 'antd/es/modal'\nimport message from 'antd/es/message'\nimport fieldLength from '../../constants/fieldLength'\nimport { accountNameRules } from '../../constants/fieldRules'\n\nconst Account = props => {\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const { account } = props\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Account', sub: '' })\n    }, [])\n\n    if (props.pulledFrom !== 'account') return null\n\n    const loading = false\n\n    const deleteAccount = () => {\n        if (deleteField !== account._id) {\n            message.warning('The nickmanme is not correct.')\n        } else {\n            axios\n                .post('/api/account/delete', {\n                    accountId: account._id,\n                })\n                .then(res => {\n                    props.history.push('/logout')\n                })\n                .catch(err => {\n                    processResErr(err)\n                })\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {\n                processRes(res, props)\n            })\n            .catch(err => {\n                processResErr(err)\n            })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 0 },\n    }\n    return account && account.name ? (\n        <Card>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, 'avatar', () => {\n                        props.increaseAvatarV()\n                    })\n                }}\n            >\n                {account.image ? (\n                    <Avatar\n                        src={getAvatar(account._id, account.image)}\n                        size={150}\n                        style={{ margin: '25px' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: account.name,\n                    nickname: account._id,\n                }}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item label=\"Nickname\" name=\"nickname\">\n                    <Input disabled={true} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button\n                        type=\"dashed\"\n                        onClick={() => setDeleteVisible(true)}\n                        danger={true}\n                        size=\"large\"\n                    >\n                        Delete account\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                title=\"Delete account\"\n                visible={deleteVisible}\n                onOk={deleteAccount}\n                onCancel={() => {\n                    setDeleteVisible(false)\n                    setDeleteField('')\n                }}\n            >\n                <p>\n                    Please enter your nickname and press Ok to delete your\n                    account.\n                </p>\n                <Input onChange={e => setDeleteField(e.target.value)} />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAvatarV: v => dispatch(actions.setAvatarV(v)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Account)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport { acceptFriend, unfriend, addFriend } from '../Friends/methods'\n\nconst Profile = props => {\n    useEffect(() => {\n        pullData(props, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (props.pulledFrom !== 'profile') return null\n\n    const { profile, account } = props\n    if (!profile._id || !profile.goals) return null\n    props.setPageTitle({ main: profile.name, sub: profile._id })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        accountId: account ? account._id : '',\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        acceptFriend: _id => acceptFriend(_id, props),\n        unfriend: _id => unfriend(_id, props),\n        addFriend: _id => addFriend(_id, props),\n        additionalButton: null,\n    })\n    return (\n        <Card>\n            <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                <Avatar\n                    src={getAvatar(profile._is, profile.image)}\n                    size={200}\n                />\n                <h1>{profile.name}</h1>\n                <h3>({profile._id})</h3>\n                {friendActions}\n            </div>\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Progresses\">\n                        <Progresses\n                            pulledProfile={profile}\n                            progressesData={profile.progressesData}\n                            keepPageTitle={true}\n                            noPullData={true}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    perkId={perk.perkId}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    mode=\"shop\"\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet\n                            keepPageTitle={true}\n                            pulledProfile={profile}\n                            account={profile}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Wishlist\">\n                        {profile.wishlist.map((item, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={item}\n                                perkId={item.itemId}\n                                owner={profile}\n                                account={account}\n                                setEditedPerk={() => {}}\n                                setEditPerkOpen={() => {}}\n                                mode=\"wishlist\"\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport fieldLength from '../../constants/fieldLength'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.history.push('/account')\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivateAccount))\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport Button from 'antd/es/button'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, { forceAuth: false })\n    }, [])\n    if (props.pulledFrom !== 'shop') return null\n\n    const { perk, profile } = props\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={getAvatar(item, friendObj.image)}\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    shop\n                </span>\n            }\n        >\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        perk: state.perk,\n        profile: state.profile,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst WishlistItem = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, { forceAuth: false })\n    }, [])\n    if (props.pulledFrom !== 'wishlist') return null\n\n    const { wishlistItem, profile } = props\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    wishlist\n                </span>\n            }\n        >\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{wishlistItem.name}</h1>\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        wishlistItem: state.wishlistItem,\n        profile: state.profile,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n    if (props.pulledFrom !== 'wishlist') return null\n\n    return props.account ? <WishlistAndPerks mode=\"wishlist\" /> : <span />\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n// import Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth(props)\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/login\" />\n    }\n\n    const routes = (\n        <Switch>\n            <Route path=\"/goals\" exact component={Goals} />\n            <Route path=\"/goals\" component={Goal} />\n\n            <Route path=\"/progresses\" exact component={Progresses} />\n            <Route path=\"/progresses\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/friends\" exact component={Friends} />\n\n            <Route path=\"/account\" exact component={Account} />\n            {/* <Route\n                    path=\"/dashboard\"\n                    exact\n                    component={withProps(Dashboard, generalProps)}\n                /> */}\n\n            <Route path=\"/shop\" exact component={Shop} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" exact component={Wishlist} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n            <Route path=\"/logout\" exact component={Logout} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            {isAuthed ? (\n                <Redirect to=\"/progresses\" />\n            ) : (\n                <Redirect to=\"/login\" />\n            )}\n        </Switch>\n    )\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    account: {},\n    profile: {},\n    pageTitle: {},\n    isAuthed: false,\n    wishlistItem: null,\n    goal: null,\n    progress: null,\n    lastUrl: '',\n    pulledFrom: '',\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            if (action.data.account) state.account = action.data.account\n            if (action.data.profile) state.profile = action.data.profile\n            if (action.data.wishlistItem)\n                state.wishlistItem = action.data.wishlistItem\n            if (action.data.goal) state.goal = action.data.goal\n            if (action.data.progress) state.progress = action.data.progress\n            if (action.data.perk) state.perk = action.data.perk\n        }\n        if (action.pulledFrom) {\n            const pulledFrom = action.pulledFrom.split('/')[1] || undefined\n            state.pulledFrom = pulledFrom\n        }\n    },\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SAVE_LAST_URL: (state: Object, action: Object) => {\n        if (action.url !== '/login' && action.url !== '/logout')\n            state.lastUrl = action.url\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}