{"version":3,"sources":["components/Layout/Layout.module.css","components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Welcome/Welcome.module.scss","containers/Auth/AuthTest.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/requestResource.tsx","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","store/actions/auth.tsx","store/actions/saveResources.tsx","store/actions/updateResource.tsx","components/Layout/LoginModal.tsx","utils/getAvatar.js","components/Layout/BottomMenu.tsx","components/UI/DialogFullscreen.tsx","components/FriendActionButton.tsx","components/UserButton/UserButton.tsx","components/MasonryCard.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","components/UI/TinyEditor.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/UI/WeekDayPicker.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","containers/Blog/Blog.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","components/Post/AddMessage.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/FollowButton.tsx","components/UI/ReadMore.tsx","components/Post/EditPost.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/MapSettings.tsx","components/UI/ShareButton.tsx","components/Welcome/index.tsx","containers/Explore/Explore.tsx","containers/Blog/BlogArticle.tsx","utils/rgbObjToRGBA.tsx","containers/MindMap/Line.tsx","containers/MindMap/actions.tsx","components/UI/HorizontalScrollList.tsx","components/ResourceHeader.tsx","components/ResourceCore.tsx","components/MapPosition/MapPosition.tsx","components/Post/AddPost.tsx","components/Post/ResourcePosts.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","components/ProgressButton.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/MindMap/FolderMM.tsx","containers/MindMap/ProfileMM.tsx","utils/pullData.js","components/ResourceCoreMM.tsx","containers/MindMap/old/GoalMM.tsx","containers/MindMap/ImageGallery.tsx","containers/MindMap/PickerPopper.tsx","containers/MindMap/ChooseWrapMM.tsx","containers/MindMap/ContainerMM.tsx","containers/MindMap/addBlocksEmpty.js","containers/MindMap/AddBlockMM.tsx","containers/MindMap/TemplateMaster.tsx","containers/MindMap/MindMap.tsx","containers/MindMap/MindMapWrap.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","bottomMenu","logo","Container","socialButtons","Background","Dots","Avatar","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","step","howWorks","videoholder","Cookies","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","props","t","data","logout","history","push","home","success","errorCode","message","warning","error","successCode","status","getListOfNeededResources","notFoundResources","store","requestedResources","user","account","progress","reward","activity","post","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","_id","currentAccount","_i","_arr","concat","Object","toConsumableArray","progresses","followProgresses","recent","filter","item","resourceType","map","resourceId","length","_step","_iterator","_createForOfIteratorHelper","followPosts","s","n","done","value","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_step5","_iterator5","_step6","_iterator6","_step7","_iterator7","rewardId","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","_i5","_arr5","currentGoal","participants","owner","users","likes","_step11","_iterator11","_step12","_iterator12","posts","_i6","_arr6","oldRewards","_i7","_arr7","oldActivities","currentPosts","_step13","_iterator13","postEl","_step14","_iterator14","parent","parentType","parentId","currentReward","_i8","_arr8","_step15","_iterator15","currentActivity","_i9","_arr9","_step16","_iterator16","friendSearchResult","_step17","_iterator17","reduce","obj","attr","Array","from","Set","includes","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","requestResource","type","ids","state","notRequestedIds","id","webSocket","readyState","send","JSON","stringify","messageCode","compareVersionsAndRerequest","versions","checkData","__v","getResourcesToMonitor","addData","cookies","listOfGroups","ConnectWebsocket","markNotFoundResource","newNotFound","_this","setState","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","axios","defaults","headers","common","initializeRequestResources","onmessage","news","parse","setData","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","setFriendSearchResult","set","path","expires","Date","getTime","structureIsSaved","addToStructure","accountId","structureId","onclose","checkInterval","check","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","dispatch","pulledFrom","actions","changeLikesMessage","messageId","postId","followResource","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","tryAuth","token","sessionStorage","setItem","get","rememberMe","remove","userId","jwt_decode","put","delete","Accept","setIsAuthed","setPageTitle","title","saveValueMM","saveStructure","getState","structure","console","log","structureMM","myAccount","find","saveResources_createForOfIteratorHelper","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","TransitionComponent","react_default","a","createElement","Slide","assign","direction","useTranslation","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","basicURL","loginVisible","Dialog","fullScreen","open","onClose","setLoginVisible","scroll","className","classes","style","maxWidth","margin","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","FormControlLabel","control","Checkbox","checked","onChange","color","label","Divider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","autoFocus","getAvatar","nickname","version","useStyles","makeStyles","theme","createStyles","speedDial","right","bottom","position","left","spacing","login","avatar","border","palette","primary","main","marginLeft","flex","blogLabel","display","breakpoints","up","blogIcon","lastNotifications","isConnectingWS","language","recentShown","markRecentShown","scrollTrigger","useScrollTrigger","isActivating","pathname","logedIn","openLink","url","numberOfUnseenNots","BottomMenu_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","Fragment","appear","in","Box","width","zIndex","pointerEvents","cll","Paper","elevation","borderRadius","IconButton","Badge","badgeContent","root","src","image","NotificationsOutlined","Search","appBar","DialogFullscreen","AppBar","Toolbar","edge","aria-label","Close","Typography","variant","save","saveText","children","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","index","MenuItem","minimized","asText","preventDefault","stopPropagation","wsActions","noFollow","friendDataExp","getUserData","userName","text","name","typography","noWrap","userAvatar","ava","size","noClick","noName","badge","onlyName","Group","noAva","span","react_router_dom","objectSpread","cursor","to","inline","es_button","padding","height","placeholderImages","getPH","matches","match","imagePH","Math","abs","round","x","makeRand","images","picture","boxShadow","noLink","wordBreak","alignItems","body","onClickLink","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","placeholder","target","search","SearchOutlined","components_FriendCard","languageText","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","drawCircle","drawMarker","keepCurrentZoomLevel","setView","flyTo","addTo","navigator","geolocation","getCurrentPosition","withLeaflet","withTranslation","uploadFile","file","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","catch","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","justifyContent","flexDirection","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","TinyEditor","contentState","initialValue","MM","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","readOnly","background","react_draft_wysiwyg","toolbarClassName","wrapperClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbarStyle","transform","scale","transformOrigin","toolbar","options","inDropdown","list","textAlign","link","toolbarHidden","toolbarCustomButtons","top","handleSaveText","goalCategories","GoalCategories","category","Chip","nolim","pop","days","day","sort","Select","divider","EditResource","useRef","current","leafletElement","ELG","useMapBounds","GestureHandling","resource","selectedBox","setStructure","addEmptyToStructure","positionIsProvided","coordinates","setPosition","initialPosition","setInitialPosition","_useState5","_useState6","positionRead","setPositionRead","_useState7","_useState8","currentTab","setCurrentTab","_useState9","descriptionText","_useState10","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","mapClick","latlng","lat","lng","setFieldsValue","nomap","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","now","goToResource","autoComplete","initialValues","repeat","dueDate","labelCol","wrapperCol","onValuesChange","changedFields","allValues","Item","rules","getValueFromEvent","Input","fullWidth","EditResource_GoalCategories","Map","ref","center","zoom","onclick","gestureHandling","onlocationfound","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","react_leaflet_fullscreen_dist_default","square","Tabs","indicatorColor","textColor","Tab","valuePropName","hidden","UI_ImagePickerMulti","DatePicker","format","KeyboardButtonProps","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","UI_WeekDayPicker","marginTop","marginRight","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","removeGutters","paths","Layout_createForOfIteratorHelper","checkPagePath","hide","white","noHeader","LinearProgress","tabIndex","customHeader","header","Link","components_LanguageSwitcher_LanguageSwitcher","Book","noContent","paddingBottom","disableGutters","Layout_BottomMenu","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","dayjs","flexGrow","media","backgroundSize","setPosts","setTitle","all","setAll","method","query","json","Helmet","Grid","container","xs","md","xl","Card","CardActionArea","CardMedia","CardContent","gutterBottom","subtitle","published_at","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","b","date","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","&>div::after","&>div::before","& textarea","setImageLoading","content","replyToUser","setMessageText","isTop","TextField","multiline","messageValue","replyToMessage","editedMessage","replyTo","editingMessage","onSend","spanStyle","showUploadList","ImageCarousel","carousel","dots","autoplay","backgroundImage","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","FollowButton","ReadMore","overflow","setOverflow","setOpen","descRef","offsetHeight","initialHeight","contentEditor","maxHeight","dangerouslySetInnerHTML","__html","transition","opacity","addTitle","textTransform","EditPost","handleSave","handleCancel","ConfirmAction","confirm","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","setEditingMessage","_useState11","_useState12","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","fromNow","startMessage","messageType","Post_EditPost","anchorOrigin","vertical","horizontal","overlap","icon","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","isPostPage","postOpen","setPostOpen","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","startIcon","ThumbUpOutlined","AddCommentOutlined","messages","Post_createForOfIteratorHelper","getNumberOfMessages","p","v","vN","isNaN","stageName","itemName","price","buyer","as","stage","stageDate","year","dayOfYear","week","startOf","endOf","month","getStageName","progressId","progressName","addedAccounts","ac","droppedAccounts","for","action","profileId","profileName","rewardName","activityId","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","findIndex","toString","_newOldPosts","resultPosts","neededPosts","sub","nots","components_Post_Post","Dashboard_DashboardEvents","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","imagesBreakPoints","2100","1900","1700","1500","1300","900","500","300","MasonryGrid","react_masonry_css_es5_default","columnClassName","breakpointCols","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","positionChanged","setPositionChanged","radius","setRadius","changed","setChanged","withMap","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","Slider","valueLabelDisplay","minHeight","whenReady","onzoomend","CircleMarker","alertVisible","setAlertVisible","setFriends","basicProps","linkHash","href","leaveDelay","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","frameBorder","allowFullScreen","allow","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","categories","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","urlDir","Explore_MapSettings","components_Welcome","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","UI_ShareButton","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","paddingLeft","paddingRight","ReactHtmlParser","data-href","data-numposts","data-width","rgbObjToRGBA","rgb","r","g","Line","waitWhenRefIsReady","timer","line","setOptions","el","lineType","lineColor","lineWidth","show","drawLine","_this$props","end","LeaderLine","dragStep","addBox","HorizontalScrollList","items","empty","customEmpty","withAdd","overflowX","flexShrink","onAdd","AddCircle","bottomContent","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","ResourceHeader","followersVisible","setFollowersVisible","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","getDropDownMeuItems","getStatusText","ThemeProvider","startDate","finishDate","navi","ownProps","pathParts","setResource","components_ResourceHeader","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","reverse","Post_AddPost","TabPanel","other","objectWithoutProperties","role","aria-labelledby","a11yProps","aria-controls","setReward","components_ResourceCore","description","components_MapPosition_MapPosition","Post_ResourcePosts","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","setChosenResource","isOwner","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","EditProgressReward","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","customTheme","purple","MuiListItem","secondaryAction","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","diff","stageId","getNowStageId","tabs","defaultActiveKey","getStatus","dismissed","failBy","approvedBy","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","setProgress","currentTabD","setCurrentTabD","Goal_TabPanel","components_Activities_Activities","components_Rewards_Rewards","setActivity","Activity_TabPanel","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","dataProp","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","sectionTitle","increaseAvatarV","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","startProgressVisible","setStartProgressVisible","Profile_createForOfIteratorHelper","loadedProgresses","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","components_Transactions_Transactions","newValue","scrollButtons","components_ProgressButton","FolderMM","editingText","setTextValue","setEditingText","editingTextModal","setEditingTextModal","textValue","editorMode","bgColor","imageValue","imageOff","videoURL","videoOff","lazy_default","textOff","noNeedToSave","memo","pullData","getData","ProfileMM_createForOfIteratorHelper","i","unsortedItems","unsortedIds","newCurrentId","currentId","actions_createForOfIteratorHelper","sizePos","y","b00","addUnsorted","whiteSpace","ResourceCoreMM","unsplash","createApi","apiUrl","_search","shape","searchIcon","inputRoot","inputInput","transitions","create","ImageGallery","searchText","setSearchText","nextPage","pages","emptyImages","setEmptyImages","results","startSearch","getPhotos","perPage","page","errors","total_pages","onSubmit","onChoose","urls","raw","thumb","fontStyle","username","textDecoration","templateMasterBoxId","templateMasterVar","templateMasterPaused","setEditorKey","editorKey","imageGalleryOpen","setImageGalleryOpen","setVideoURL","Popper","placement","onMouseDown","keyToText","react_color_es","onChangeComplete","_e","defaultValue","Accordion","AccordionSummary","expandIcon","esm_ExpandMore","AccordionDetails","addDragStep","resType","addBlock","blockType","deleteBlock","editingStyle","setEditingStyle","mainMenuAnchorEl","setMainMenuAnchorEl","setChangeParentMode","changeParentMode","setAddBlockOpen","setSelectedBox","_useState17","hash","substring","_useState18","openElement","setOpenElement","addMenu","mainMenu","MindMap_PickerPopper","Add","locked","Lock","LockOpen","MoreVert","MindMap_FolderMM","MindMap_ProfileMM","old_GoalMM","containers_Profile_Profile","containers_Activity_Activity","containers_Goal_Goal","ConnectedContainerMM","scaleMM","setSizepos","changeParentMM","childId","_React$createElement","myRef1","myRef4","myRef2","editingFolder","editingElement","selectedIndex","setSelectedIndex","setEditingElement","setEditingFolder","handler","passive","removeEventListener","resizeStyle","temp","unsorted","MindMap_Line","collapsed","react_rnd_lib","disableDragging","enableResizing","resizeHandleStyles","bottomLeft","bottomRight","topLeft","topRight","outline","onDrag","dragHandler","onResize","dir","elRef","resizeHandler","MindMap_ChooseWrapMM","addBlocksEmpty","tempId","vars","addBlockTemplate","folder","addBlockOpen","CardActions","templateFolderId","templateFolder","templateStep","setTemplateDefault","setTemplateStepPrev","setTemplateStepNext","setTemplateMasterBoxidAndVar","boxId","varObj","parentEl","currentVar","elId","TemplateMaster_createForOfIteratorHelper","disabled","edit","structureNotSaved","setEditorMode","setEventIsFromDraggable","resetTransform","zoomIn","zoomOut","useBeforeunload","handleMouseDown","MindMap_createForOfIteratorHelper","nativeEvent","composedPath","getAttribute","classN","react_router","when","MindMap_TemplateMaster","MyLocation","Remove","labelPlacement","Fab","Save","onTouchStart","onTouchEnd","onMouseUp","index_es","MindMap_ContainerMM","MindMap_AddBlockMM","setScaleMM","eventIsFromDraggable","throttleFunc","throttle","defaultScale","defaultPositionX","defaultPositionY","limitToBounds","minScale","maxScale","pan","velocity","wheel","onZoomChange","onPanning","onPanningStop","onPinching","onPinchingStop","doubleClick","animation","containers_MindMap_MindMap","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","routes","exact","MindMapWrap","Explore","DashboardPosts","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","b0","innerChildren","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","ADD_DRAG_STEP","SET_STRUCTURE","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","SET_RECENT_SHOWN","ADD_TO_STRUCTURE","STRUCTURE_IS_SAVED","ADD_BLOCK","SET_SIZEPOS","SAVE_VALUE_MM","ADD_EMPTY_TO_STRUCTURE","DELETE_BLOCK","child","CHANGE_PARENT_MM","isDecedant","childParentId","SET_SCALEMM","ADD_BLOCK_TEMPLATE","sourceId","SET_TEMPLATE_DEFAULT","SET_TEMPLATE_STEP_NEXT","SET_TEMPLATE_STEP_PREV","SET_TEMPLATE_MASTER_PAUSED","SET_TEMPLATE_MASTER_BOXID_AND_VAR","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","useUtils_cfb96ac9","utils","DayUtils","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.0336a5c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\",\"bottomMenu\":\"Layout_bottomMenu__p7MZh\",\"logo\":\"Layout_logo__3_HwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\",\"step\":\"Welcome_step__3KDh2\",\"howWorks\":\"Welcome_howWorks__r5E6t\",\"videoholder\":\"Welcome_videoholder__1WZ7O\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                case 'reward created':\n                    message.success(t('processRes.rewardStarted'))\n                    break\n                case 'activity created':\n                    message.success(t('processRes.activityStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","export default (props, notFoundResources) => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'goal')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'reward')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'activity')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.followProgresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progress[progress]) {\n                            requestedResources.progress.push(progress)\n                        }\n                        neededResources.progress.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.reward[reward]) {\n                            requestedResources.reward.push(reward)\n                        }\n                        neededResources.reward.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activity[activity]) {\n                            requestedResources.activity.push(activity)\n                        }\n                        neededResources.activity.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(\n                    new Set(\n                        obj[attr].filter(\n                            item => !notFoundResources.includes(item)\n                        )\n                    )\n                )\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n\n    check1('account', 'account')\n    check1('account', 'profile')\n    check2('progress')\n    check2('reward')\n    check2('activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    // const check = key => {\n    //     for (let attr in versions[key]) {\n    //         if (typeof versions[key][attr] !== 'undefined') {\n    //             if (store[key]._id === attr) {\n    //                 if (store[key].__v !== versions[key][attr]) {\n    //                     requestResource(key, [attr], state)\n    //                 }\n    //                 if (!store[key]._id) notNeededResources[key].push(attr)\n    //             } else notNeededResources[key].push(attr)\n    //         }\n    //     }\n    // }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    checkData('progress')\n    checkData('reward')\n    checkData('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport i18n from '../../translations/i18n'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n        notFoundResources: [],\n    }\n    markNotFoundResource = ids => {\n        const newNotFound = [...this.state.notFoundResources, ...ids]\n        this.setState({ notFoundResources: newNotFound })\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(i18n.t('processRes.success'))\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText || '/')\n                    break\n                case '404':\n                    message.error(i18n.t('processRes.404'))\n                    this.props.history.push(news.messageText || '/')\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'structureSaved':\n                    this.props.structureIsSaved()\n                    break\n                case 'error':\n                    message.error(i18n.t('processRes.error'))\n                    break\n                case 'notFoundResource':\n                    this.markNotFoundResource(news._id)\n                    break\n                case 'addToStructure':\n                    this.props.addToStructure(\n                        news.accountId,\n                        news.structureId,\n                        news.resourceId\n                    )\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            this.state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n        addToStructure: (accountId, structureId, resourceId) =>\n            dispatch(\n                actions.addToStructure(accountId, structureId, resourceId)\n            ),\n        logout: () => dispatch(actions.logout()),\n        structureIsSaved: () => dispatch(actions.structureIsSaved()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const saveStructure = (accountId, structure) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveStructure',\n                accountId,\n                structure,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\nimport * as wsActions from '../../websocketActions'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const markRecentShown = () => ({\n    type: 'SET_RECENT_SHOWN',\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const addDragStep = () => ({\n    type: 'ADD_DRAG_STEP',\n})\n\nexport const setStructure = (structure, noNeedToSave) => ({\n    type: 'SET_STRUCTURE',\n    structure,\n    noNeedToSave,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n\nexport const addToStructure = (accountId, structureId, resourceId) => ({\n    type: 'ADD_TO_STRUCTURE',\n    accountId,\n    structureId,\n    resourceId,\n})\n\nexport const structureIsSaved = () => ({\n    type: 'STRUCTURE_IS_SAVED',\n})\n\nexport const addBlock = (id, blockType) => ({\n    type: 'ADD_BLOCK',\n    id,\n    blockType,\n})\n\nexport const setSizepos = (id, sizePos) => ({\n    type: 'SET_SIZEPOS',\n    id,\n    sizePos,\n})\n\nexport const saveValueMM = (id, value) => ({\n    type: 'SAVE_VALUE_MM',\n    id,\n    value,\n})\n\nexport const addEmptyToStructure = (id, selectedBox, type) => ({\n    type: 'ADD_EMPTY_TO_STRUCTURE',\n    id,\n    selectedBox,\n    resType: type,\n})\nexport const deleteBlock = id => ({\n    type: 'DELETE_BLOCK',\n    id,\n})\n\nexport const changeParentMM = (childId, parentId) => ({\n    type: 'CHANGE_PARENT_MM',\n    childId,\n    parentId,\n})\n\nexport const saveStructure = () => (dispatch, getState) => {\n    const state = getState()\n    console.log(state)\n    wsActions.saveStructure(state.account._id, state.structureMM)\n    dispatch({\n        type: 'STRUCTURE_IS_SAVED',\n    })\n}\n\nexport const setScaleMM = value => ({\n    type: 'SET_SCALEMM',\n    value,\n})\n\nexport const addBlockTemplate = (parentId, folder) => ({\n    type: 'ADD_BLOCK_TEMPLATE',\n    parentId,\n    folder,\n})\n\nexport const setTemplateDefault = () => ({\n    type: 'SET_TEMPLATE_DEFAULT',\n})\n\nexport const setTemplateStepNext = () => ({\n    type: 'SET_TEMPLATE_STEP_NEXT',\n})\n\nexport const setTemplateStepPrev = () => ({\n    type: 'SET_TEMPLATE_STEP_PREV',\n})\n\nexport const setTemplateMasterPaused = value => ({\n    type: 'SET_TEMPLATE_MASTER_PAUSED',\n    value,\n})\n\nexport const setTemplateMasterBoxidAndVar = (boxId, varObj) => ({\n    type: 'SET_TEMPLATE_MASTER_BOXID_AND_VAR',\n    boxId,\n    varObj,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                let progress = {}\n                for (let item of data) {\n                    progress[item._id] = item\n                }\n                dispatch(setData({ progress }))\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                let reward = {}\n                for (let item of data) {\n                    reward[item._id] = item\n                }\n                dispatch(setData({ reward }))\n                break\n            case 'activity':\n                let activity = {}\n                for (let item of data) {\n                    activity[item._id] = item\n                }\n                dispatch(setData({ activity }))\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n            // check('progress')\n            // break\n            case 'reward':\n            // check('reward')\n            // break\n            case 'activity':\n                // check('activity')\n                // break\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            'status',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import {\n    Avatar,\n    Badge,\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Slide,\n    Theme,\n    Typography,\n    useScrollTrigger,\n} from '@material-ui/core'\nimport { History, NotificationsOutlined, Search } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport getAvatar from '../../utils/getAvatar'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport * as cll from './Layout.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst BottomMenu = props => {\n    const { account, progressData, activityData, rewardData } = props\n\n    const [recentVisible, setRecentVisible] = useState(!props.recentShown)\n    const [hideRecentTimeout, setHideRecentTimeout] = useState()\n    const scrollTrigger = !useScrollTrigger()\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n    const openLink = url => props.history.push(url)\n    // useEffect(() => {\n    //     if (!scrollTrigger) setRecentVisible(false)\n    // }, [scrollTrigger])\n\n    // useEffect(() => {\n    //     if (Boolean(logedIn && !isActivating && !props.recentShown)) {\n    //         const timeout = setTimeout(() => setRecentVisible(false), 6000)\n    //         setHideRecentTimeout(timeout)\n    //         props.markRecentShown()\n    //     }\n    // }, [Boolean(logedIn && !isActivating)])\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const classes = useStyles()\n\n    return (\n        <>\n            <Slide appear={false} direction=\"up\" in={scrollTrigger}>\n                <Box\n                    style={{\n                        position: 'fixed',\n                        bottom: '12px',\n                        width: '100%',\n                        zIndex: 1,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {logedIn && !isActivating && (\n                        <>\n                            {/* <Slide\n                                appear={false}\n                                direction=\"left\"\n                                in={recentVisible}\n                            >\n                                <Box style={{ margin: '6px 10px' }}>\n                                    <Paper\n                                        style={{\n                                            overflowX: 'auto',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'left',\n                                            position: 'relative',\n                                            maxWidth: '400px',\n                                            padding: '5px',\n                                            margin: 'auto',\n                                            pointerEvents: 'auto',\n                                        }}\n                                        onMouseDown={() => {\n                                            clearTimeout(hideRecentTimeout)\n                                        }}\n                                        onScroll={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                        onTouchStart={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                    >\n                                        {account.recent.map((item, index) => {\n                                            const urlDir =\n                                                item.resourceType === 'goal'\n                                                    ? 'goals'\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? 'rewards'\n                                                    : 'activities'\n                                            const dataType =\n                                                item.resourceType === 'goal'\n                                                    ? progressData\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? rewardData\n                                                    : activityData\n\n                                            const data =\n                                                dataType[item.resourceId]\n\n                                            return data ? (\n                                                <Card\n                                                    style={{\n                                                        overflow: 'hidden',\n                                                        marginRight: '10px',\n                                                    }}\n                                                >\n                                                    <CardActionArea>\n                                                        <Link\n                                                            to={\n                                                                '/' +\n                                                                urlDir +\n                                                                '/' +\n                                                                data._id\n                                                            }\n                                                            onClick={() =>\n                                                                setRecentVisible(\n                                                                    false\n                                                                )\n                                                            }\n                                                        >\n                                                            <CardMedia\n                                                                style={{\n                                                                    height:\n                                                                        '56px',\n                                                                    width:\n                                                                        '56px',\n                                                                    backgroundSize:\n                                                                        'cover',\n                                                                    borderRadius:\n                                                                        '28',\n                                                                }}\n                                                                image={\n                                                                    data.images\n                                                                        .length >\n                                                                    0\n                                                                        ? data\n                                                                              .images[0]\n                                                                        : placeholderImages[\n                                                                              getPH(\n                                                                                  data._id\n                                                                              )\n                                                                          ]\n                                                                }\n                                                                title={\n                                                                    data.name\n                                                                }\n                                                            />\n                                                            <CardContent\n                                                                style={{\n                                                                    padding:\n                                                                        '0px',\n                                                                    position:\n                                                                        'absolute',\n                                                                    bottom:\n                                                                        '0px',\n                                                                    background:\n                                                                        'white',\n                                                                    width:\n                                                                        '100%',\n                                                                }}\n                                                            >\n                                                                <Typography\n                                                                    variant=\"body2\"\n                                                                    noWrap\n                                                                    align=\"center\"\n                                                                >\n                                                                    {data.name}\n                                                                </Typography>\n                                                            </CardContent>\n                                                        </Link>\n                                                    </CardActionArea>\n                                                </Card>\n                                            ) : null\n                                        })}\n                                    </Paper>\n                                </Box>\n                            </Slide> */}\n                            <Box className={cll.bottomMenu}>\n                                <Paper\n                                    elevation={3}\n                                    style={{\n                                        borderRadius: '37px',\n                                        pointerEvents: 'auto',\n                                    }}\n                                >\n                                    <IconButton onClick={() => openLink('/')}>\n                                        <Badge\n                                            badgeContent={\n                                                account.friends.filter(\n                                                    item =>\n                                                        item.status ===\n                                                        'inviting'\n                                                ).length\n                                            }\n                                            color=\"secondary\"\n                                        >\n                                            <Avatar\n                                                classes={\n                                                    props.history.location\n                                                        .pathname ===\n                                                        '/profile/' +\n                                                            account._id ||\n                                                    props.history.location\n                                                        .pathname === '/'\n                                                        ? {\n                                                              root:\n                                                                  classes.avatar,\n                                                          }\n                                                        : {}\n                                                }\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/events')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/events'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={numberOfUnseenNots}\n                                            color=\"secondary\"\n                                        >\n                                            <NotificationsOutlined fontSize=\"large\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/explore')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/explore'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Search fontSize=\"large\" />\n                                    </IconButton>\n                                    {/* <IconButton\n                                        color={\n                                            recentVisible\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        onClick={() =>\n                                            setRecentVisible(!recentVisible)\n                                        }\n                                    >\n                                        <History fontSize=\"large\" />\n                                    </IconButton> */}\n                                </Paper>\n                            </Box>\n                        </>\n                    )}\n                </Box>\n            </Slide>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(BottomMenu)\n)\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <div className=\"tinyEditorText_\">\n                <AppBar className={classes.appBar} color=\"primary\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={props.close}\n                            aria-label=\"close\"\n                        >\n                            <Close />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            className={classes.title}\n                            color=\"inherit\"\n                        >\n                            {props.title}\n                        </Typography>\n                        {props.save && (\n                            <Button\n                                autoFocus\n                                color=\"inherit\"\n                                onClick={props.save}\n                            >\n                                {props.saveText || t('g.save')}\n                            </Button>\n                        )}\n                    </Toolbar>\n                </AppBar>\n                <Toolbar />\n                {props.children}\n            </div>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import { Box } from '@material-ui/core'\nimport { relative } from 'path'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: props.type !== images ? '15px' : '0',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return (\n        <Box style={{ position: 'relative' }}>\n            {props.noLink ? (\n                <>\n                    {picture}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box style={{ flex: 1 }}>{props.body}</Box>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <>\n                    {props.onClickLink && (\n                        <Link\n                            to={props.onClickLink}\n                            style={{ cursor: 'pointer' }}\n                        >\n                            {picture}\n                        </Link>\n                    )}\n                    {props.onClick && (\n                        <div\n                            onClick={props.onClick}\n                            style={{ cursor: 'pointer' }}\n                        >\n                            {picture}\n                        </div>\n                    )}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        {props.onClickLink ? (\n                            <Link\n                                to={props.onClickLink}\n                                style={{ cursor: 'pointer', flex: 1 }}\n                            >\n                                {props.body}\n                            </Link>\n                        ) : (\n                            props.body\n                        )}\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n        </Box>\n    )\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n\n            drawCircle: false,\n            drawMarker: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n            flyTo: true,\n        })\n        lc.addTo(map)\n        navigator.geolocation.getCurrentPosition(() => lc.start())\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\nimport { IconButton } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    let initialValue = props.value\n\n    if (!initialValue && props.MM)\n        initialValue = '<p style=\"font-size: 36px;\">Add text here</p>'\n\n    if (typeof initialValue === 'string') {\n        const blocksFromHtml = htmlToDraft(initialValue)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = initialValue\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <div\n            className=\"buttonsMM\"\n            style={\n                props.MM && !props.readOnly\n                    ? {\n                          background: 'rgba(255, 255, 255, .4)',\n                          position: 'absolute',\n                          width: '100%',\n                      }\n                    : {}\n            }\n        >\n            <Editor\n                placeholder={props.readOnly ? '' : t('g.addSomeText')}\n                readOnly={props.readOnly}\n                toolbarClassName={props.MM && 'demo-toolbar-absolute buttonsMM'}\n                // toolbarOnFocus={props.MM}\n                wrapperClassName={!props.MM && 'demo-wrapper'}\n                {...(!props.readOnly ? {} : { contentState: contentState })}\n                defaultContentState={contentState}\n                onContentStateChange={value => {\n                    props.onEditorChange && props.onEditorChange(value)\n                    props.onEditorChangePlain &&\n                        props.onEditorChangePlain(\n                            convertFromRaw(value).getPlainText(' ')\n                        )\n                }}\n                toolbarStyle={\n                    props.MM\n                        ? {\n                              transform: 'scale(' + 1 / props.scale + ')',\n                              transformOrigin: 'bottom left',\n                          }\n                        : {}\n                }\n                toolbar={{\n                    options: [\n                        'inline',\n                        ...(props.MM ? [] : ['blockType']),\n                        'fontSize',\n                        'fontFamily',\n                        'list',\n                        'textAlign',\n                        'colorPicker',\n                        'link',\n                        'emoji',\n                        'remove',\n                        'history',\n                    ],\n                    inline: { inDropdown: true },\n                    list: { inDropdown: true },\n                    textAlign: { inDropdown: true },\n                    link: { inDropdown: true },\n                    history: { inDropdown: true },\n                }}\n                toolbarHidden={props.readOnly}\n                toolbarCustomButtons={\n                    props.MM\n                        ? [\n                              <IconButton\n                                  style={{\n                                      position: 'absolute',\n                                      right: '-40px',\n                                      top: '-40px',\n                                  }}\n                                  color=\"primary\"\n                                  onClick={() => props.handleSaveText()}\n                              >\n                                  <Close />\n                              </IconButton>,\n                          ]\n                        : []\n                }\n            />\n        </div>\n    )\n}\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst WeekDayPicker = props => {\n    const { t } = useTranslation()\n\n    const days =\n        props.language === 'ru' ? [1, 2, 3, 4, 5, 6, 0] : [0, 1, 2, 3, 4, 5, 6]\n    const value = props.value.map(item => parseInt(item))\n    return days.map(day => (\n        <Chip\n            style={{ margin: '0px 10px 10px 0px' }}\n            size=\"small\"\n            label={t(\n                'g.' +\n                    (day === 0\n                        ? 'sun'\n                        : day === 1\n                        ? 'mon'\n                        : day === 2\n                        ? 'tue'\n                        : day === 3\n                        ? 'wed'\n                        : day === 4\n                        ? 'thu'\n                        : day === 5\n                        ? 'fri'\n                        : day === 6\n                        ? 'sat'\n                        : '')\n            )}\n            color={value.includes(day) ? 'primary' : 'default'}\n            onClick={() => {\n                props.onChange(\n                    value.includes(day)\n                        ? value.filter(item => item !== day)\n                        : [...value, day].sort()\n                )\n            }}\n        />\n    ))\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(WeekDayPicker)\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n    Tabs,\n    Tab,\n    Paper,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport WeekDayPicker from '../UI/WeekDayPicker'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const {\n        resource,\n        account,\n        type,\n        structure,\n        setStructure,\n        selectedBox,\n        addEmptyToStructure,\n    } = props\n\n    const defPos = [40.689078, -74.044526]\n    const positionIsProvided =\n        resource && resource.position && resource.position.coordinates\n    const [position, setPosition] = useState(\n        positionIsProvided\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n    const [positionRead, setPositionRead] = useState(false)\n    const [currentTab, setCurrentTab] = useState(0)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        let structureId\n        if (!(resource && resource._id) && selectedBox) {\n            structureId = 'b' + Date.now()\n            addEmptyToStructure(structureId, selectedBox, type)\n        }\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type,\n            props.goToResource,\n            structureId\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <div className=\"tinyEditorText_\">\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                        dueDate: new Date(),\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                            onlocationfound={e => {\n                                if (!positionIsProvided && !positionRead) {\n                                    mapClick(e)\n                                    setInitialPosition([\n                                        e.latlng.lat,\n                                        e.latlng.lng,\n                                    ])\n                                    setPositionRead(true)\n                                }\n                            }}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                            <FullscreenControl position=\"topright\" />\n                        </Map>\n                    </div>\n                </Form.Item>\n                {type == 'goal' ? (\n                    <>\n                        <Form.Item label={t('g.detailsFor')}>\n                            <Paper square>\n                                <Tabs\n                                    value={currentTab}\n                                    onChange={(event, value) =>\n                                        setCurrentTab(value)\n                                    }\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                >\n                                    <Tab label={t('g.fromStart')} />\n                                    <Tab label={t('g.toGoal')} />\n                                    <Tab label={t('g.resultFinish')} />\n                                </Tabs>\n                            </Paper>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"startImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"startDate\"\n                            hidden={currentTab !== 0}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"startDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"dueDate\"\n                            hidden={currentTab !== 1}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"finishImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"finishDate\"\n                            hidden={currentTab !== 2}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"finishDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                    </>\n                ) : (\n                    <>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                    </>\n                )}\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <WeekDayPicker />\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (\n    accountId,\n    value,\n    type,\n    goToResource,\n    structureId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n                goToResource,\n                structureId,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const changeResourceStatus = (status, resourceId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeResourceStatus',\n                resourceId,\n                status,\n            })\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport BottomMenu from './BottomMenu'\nimport * as cll from './Layout.module.css'\nimport * as actions from '../../store/actions'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Card,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    Cake,\n    FitnessCenter,\n    GifTwoTone,\n    History,\n    HomeRounded,\n    Launch,\n    NotificationImportant,\n    Notifications,\n    NotificationsOutlined,\n    Person,\n    Repeat,\n    Search,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../MasonryCard'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n\n    const scrollTrigger = !useScrollTrigger()\n\n    const classes = useStyles()\n\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                {!props.noHeader && (\n                    <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                        <AppBar\n                            elevation={1}\n                            color=\"secondary\"\n                            style={{ background: props.color || 'none' }}\n                        >\n                            {props.isConnectingWS && !logedIn && (\n                                <LinearProgress\n                                    style={{\n                                        width: '100%',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                    }}\n                                />\n                            )}\n                            <div id=\"anchorTR\">\n                                <Toolbar>\n                                    <div\n                                        tabIndex={0}\n                                        ref={domRef}\n                                        style={{ width: 0, height: 0 }}\n                                    />\n                                    {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                                    {props.customHeader\n                                        ? props.customHeader\n                                        : (account._id && props.header) || (\n                                              <Box\n                                                  style={{\n                                                      display: 'flex',\n                                                      flex: 1,\n                                                  }}\n                                              >\n                                                  <Box\n                                                      style={{\n                                                          display: 'flex',\n                                                          flex: 1,\n                                                      }}\n                                                  >\n                                                      <Button\n                                                          component={Link}\n                                                          to={'/'}\n                                                          style={{\n                                                              padding:\n                                                                  '3px 8px',\n                                                          }}\n                                                      >\n                                                          <img\n                                                              className={\n                                                                  cll.logo\n                                                              }\n                                                              src=\"/logo-addspire.png\"\n                                                          />\n                                                      </Button>\n                                                  </Box>\n                                                  <Box\n                                                      style={{\n                                                          display: 'flex',\n                                                      }}\n                                                  >\n                                                      <LanguageSwitcher />\n\n                                                      <Button\n                                                          component={Link}\n                                                          to={`/${\n                                                              language !== 'en'\n                                                                  ? language +\n                                                                    '/'\n                                                                  : ''\n                                                          }blog`}\n                                                          style={{\n                                                              marginRight:\n                                                                  '20px',\n                                                          }}\n                                                      >\n                                                          <Book\n                                                              className={\n                                                                  classes.blogIcon\n                                                              }\n                                                          />\n                                                          <span\n                                                              className={\n                                                                  classes.blogLabel\n                                                              }\n                                                          >\n                                                              {t('layout.blog')}\n                                                          </span>\n                                                      </Button>\n\n                                                      {(logedIn &&\n                                                          isActivating) ||\n                                                      (!logedIn &&\n                                                          props.isConnectingWS) ? (\n                                                          <Button\n                                                              onClick={() =>\n                                                                  props.history.push(\n                                                                      '/logout'\n                                                                  )\n                                                              }\n                                                          >\n                                                              {t('g.logout')}\n                                                          </Button>\n                                                      ) : (\n                                                          !account._id && (\n                                                              <Button\n                                                                  variant=\"contained\"\n                                                                  color=\"primary\"\n                                                                  // startIcon={<Person />}\n                                                                  onClick={() =>\n                                                                      setLoginVisible(\n                                                                          true\n                                                                      )\n                                                                  }\n                                                              >\n                                                                  {t(\n                                                                      'layout.login'\n                                                                  )}\n                                                              </Button>\n                                                          )\n                                                      )}\n                                                  </Box>\n                                              </Box>\n                                          )}\n                                </Toolbar>\n                            </div>\n                        </AppBar>\n                    </Slide>\n                )}\n                {!props.noContent && (\n                    <>\n                        <Toolbar id=\"back-to-top-anchor\" />\n                        <Container\n                            style={{\n                                paddingTop: '20px',\n                                paddingBottom: '20px',\n                            }}\n                            disableGutters={Boolean(removeGutters)}\n                        >\n                            {props.children}\n                        </Container>\n                    </>\n                )}\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n                <BottomMenu />\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            goToResource\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountLayout)\n)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                {/* <Welcome /> */}\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success(t('activate.accountActivated'))\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(t('activate.accountTaken'))\n                    }\n                    if (res.data.errorCode) {\n                        message.error(t('activate.wrongData'))\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                {t('activate.accountActivation')}\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress] && progressData[progress].notifications) {\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n        }\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    {/* <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span> */}\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                const vN = parseInt(v.notId)\n                if (isNaN(vN)) return p\n                return p > vN ? p : vN\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n\nexport const imagesBreakPoints = {\n    default: 10,\n    2100: 10,\n    1900: 9,\n    1700: 8,\n    1500: 7,\n    1300: 6,\n    1100: 5,\n    900: 4,\n    700: 3,\n    500: 2,\n    300: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n    imagesBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            // breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.images\n                    ? imagesBreakPoints\n                    : props.friends\n                    ? friendsBreakPoints\n                    : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const {\n        mapVisible,\n        setMapVisible,\n        onSearch,\n        setSearch,\n        search,\n        positionChanged,\n        setPositionChanged,\n    } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={200}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => getRadius()}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={8}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                    onzoomend={() => getRadius()}\n                    onlocationfound={e => {\n                        if (!positionChanged) {\n                            mapClick(e)\n                            setInitialPosition([e.latlng.lat, e.latlng.lng])\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                    <FullscreenControl position=\"topright\" />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.linkHash\n            ? 'https://addspire.com/profile/' +\n              props.profile +\n              '#' +\n              props.linkHash\n            : props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo-addspire.png',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)} scroll=\"paper\">\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            {account && account._id && (\n                                <Button\n                                    color=\"primary\"\n                                    style={{ marginTop: '10px' }}\n                                    onClick={() =>\n                                        friends.length > 0 &&\n                                        wsActions.shareWithFriends(\n                                            account._id,\n                                            basicProps.url,\n                                            friends,\n                                            props.item\n                                        )\n                                    }\n                                >\n                                    {t('g.send')}\n                                </Button>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box style={{ margin: '10% 0px 2%' }}>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n\n            <Box\n                style={{\n                    margin: '40px auto 10px',\n                    textAlign: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    {t('welcome.button')}\n                </Button>\n            </Box>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n\n            <Box>\n                <Typography\n                    variant=\"h2\"\n                    align=\"center\"\n                    style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                >\n                    {t('welcome.stepsTitle')}\n                </Typography>\n\n                <Box className={classes.howWorks}>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon1.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle1')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody1')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon2.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle2')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody2')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon3.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle3')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody3')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <div className={classes.videoholder}>\n                    <div>\n                        <iframe\n                            width=\"560\"\n                            height=\"315\"\n                            src={\n                                'https://www.youtube.com/embed/' +\n                                t('welcome.videoHowLink')\n                            }\n                            frameBorder=\"0\"\n                            allowFullScreen\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        />\n                    </div>\n                </div>\n            </Box>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Badge,\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n    const [positionChanged, setPositionChanged] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                    positionChanged={positionChanged}\n                    setPositionChanged={setPositionChanged}\n                />\n                <Welcome />\n\n                {!(props.account && props.account._id) && (\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                    >\n                        {t('explore.topGoalsTitle')}\n                    </Typography>\n                )}\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => {\n                                return (\n                                    <MasonryCard\n                                        id={item._id}\n                                        key={index}\n                                        onClickLink={\n                                            '/' + urlDir + '/' + item._id\n                                        }\n                                        images={item.images}\n                                        body={\n                                            <>\n                                                <Box\n                                                    style={{\n                                                        position: 'absolute',\n                                                        top: '10px',\n                                                    }}\n                                                >\n                                                    <UserButton\n                                                        noName={true}\n                                                        id={item.owner}\n                                                        friendDataExp={\n                                                            props.friendData\n                                                        }\n                                                    />\n                                                </Box>\n                                                {item.status && (\n                                                    <Tooltip\n                                                        title={t(\n                                                            'progress.' +\n                                                                (item.status ===\n                                                                'process'\n                                                                    ? 'inProcess'\n                                                                    : item.status)\n                                                        )}\n                                                    >\n                                                        <Box\n                                                            style={{\n                                                                display:\n                                                                    'inline-block',\n                                                                width: '10px',\n                                                                height: '10px',\n                                                                borderRadius:\n                                                                    '5px',\n                                                                marginRight:\n                                                                    '5px',\n                                                                background:\n                                                                    item.status ===\n                                                                    'process'\n                                                                        ? 'blue'\n                                                                        : item.status ===\n                                                                          'fail'\n                                                                        ? 'red'\n                                                                        : item.status ===\n                                                                          'dismissed'\n                                                                        ? 'orange'\n                                                                        : item.status ===\n                                                                          'complete'\n                                                                        ? 'green'\n                                                                        : 'white',\n                                                            }}\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            </>\n                                        }\n                                        actions={\n                                            <ShareButton\n                                                link={\n                                                    'https://addspire.com/' +\n                                                    urlDir +\n                                                    '/' +\n                                                    item._id\n                                                }\n                                                title={\n                                                    item.name +\n                                                    t('explore.shareText')\n                                                }\n                                                media={\n                                                    item.images &&\n                                                    item.images[0]\n                                                }\n                                                item={{\n                                                    progressId: item._id,\n                                                    progressName: item.name,\n                                                }}\n                                                profile={item.owner}\n                                                linkHash={item._id}\n                                            />\n                                        }\n                                    />\n                                )\n                            })}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                {/* <Welcome /> */}\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM D, YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            className=\"blogArticle\"\n                            style={{ fontSize: '1.05rem' }}\n                        >\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","export default rgb => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\n","import React, { Component } from 'react'\nimport LeaderLine from 'leader-line-new'\nimport { connect } from 'react-redux'\nimport rgbObjToRGBA from '../../utils/rgbObjToRGBA'\n\nclass Line extends Component {\n    componentDidMount() {\n        this.waitWhenRefIsReady()\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer)\n        }\n        if (this.line) this.line.remove()\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.line) {\n            this.line.position()\n            // if (nextProps.collapsed !== this.props.collapsed) {\n            //     if (nextProps.collapsed) this.line.hide()\n            //     else this.line.show()\n            // }\n            this.line.setOptions({\n                path: nextProps.el.lineType || 'magnet',\n                color: rgbObjToRGBA(\n                    this.props.el.lineColor || {\n                        r: 60,\n                        g: 83,\n                        b: 185,\n                        a: 1,\n                    }\n                ),\n                size: this.props.el.lineWidth || 2,\n            })\n            if (nextProps.el.lineType === 'no') this.line.hide()\n            else this.line.show()\n        }\n\n        return false\n    }\n\n    waitWhenRefIsReady() {\n        this.timer = setInterval(() => {\n            if (this.props.start.current) {\n                clearInterval(this.timer)\n                this.drawLine()\n            }\n        }, 5)\n    }\n\n    drawLine() {\n        const { start, end } = this.props\n        this.line = new LeaderLine(start.current, end.current, {\n            path: this.props.el.lineType || 'magnet',\n            color: rgbObjToRGBA(\n                this.props.el.lineColor || {\n                    r: 60,\n                    g: 83,\n                    b: 185,\n                    a: 1,\n                }\n            ),\n            size: this.props.el.lineWidth || 2,\n        })\n        if (this.props.el.lineType === 'no') this.line.hide()\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dragStep: state.dragStep }\n}\n\nexport default connect(mapStateToProps)(Line)\n","export const addBlock = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    children: [\n                        ...selectedElement.children,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type: 'folder',\n                    folderType: type,\n                    children: [],\n                    parent: selectedBox,\n                    innerChildren: type\n                        ? ['b' + (structure.currentId + 1)]\n                        : [],\n                    sizePos: {\n                        x: 200,\n                        y: 0,\n                        width: 320,\n                        height: 200,\n                    },\n                },\n                ...(type\n                    ? {\n                          ['b' + (structure.currentId + 1)]: {\n                              type,\n                              children: [],\n                              value:\n                                  type === 'text'\n                                      ? 'Add text here'\n                                      : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                              parent: 'b' + structure.currentId,\n                              sizePos: {\n                                  x: 5,\n                                  y: 5,\n                                  width: selectedElement.sizePos.width - 10,\n                                  height: 100,\n                              },\n                          },\n                      }\n                    : {}),\n            },\n            currentId: structure.currentId + (type ? 2 : 1),\n        })\n    }\n}\n\nexport const addElement = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            currentId: structure.currentId + 1,\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    innerChildren: [\n                        ...selectedElement.innerChildren,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type,\n                    children: [],\n                    value:\n                        type === 'text'\n                            ? 'Add text here'\n                            : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                    parent: selectedBox,\n                    sizePos: {\n                        x: 5,\n                        y: 5,\n                        width: selectedElement.sizePos.width - 10,\n                        height: 100,\n                    },\n                },\n            },\n        })\n    }\n}\n\nexport const changeParent = props => {\n    const {\n        selectedBox,\n        changeParentMode,\n        setChangeParentMode,\n        selectedElement,\n    } = props\n    if (changeParentMode) {\n        setChangeParentMode('')\n    } else {\n        if (selectedElement) {\n            setChangeParentMode(selectedBox)\n        }\n    }\n}\nexport const collapse = props => {\n    const { selectedBox, structure, setStructure } = props\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [selectedBox]: {\n                ...structure.items[selectedBox],\n                collapsed: !structure.items[selectedBox].collapsed,\n            },\n        },\n    })\n}\n\nexport const deleteElement = props => {\n    const {\n        selectedBox,\n        structure,\n        setStructure,\n        selectedIndex,\n        setSelectedIndex,\n        editingFolder,\n    } = props\n    if (!editingFolder) {\n        const newChildren = {}\n        for (let child of structure.items[selectedBox].children) {\n            newChildren[child] = {\n                ...structure.items[child],\n                parent: structure.items[selectedBox].parent,\n            }\n        }\n        const newItems = {\n            ...structure.items,\n            [structure.items[selectedBox].parent]: {\n                ...structure.items[structure.items[selectedBox].parent],\n                children: [\n                    ...structure.items[\n                        structure.items[selectedBox].parent\n                    ].children.filter(item => item !== selectedBox),\n                    ...structure.items[selectedBox].children,\n                ],\n            },\n            ...newChildren,\n        }\n        delete newItems[selectedBox]\n        setStructure({\n            ...structure,\n            items: newItems,\n        })\n    } else {\n        let { [selectedIndex]: el, ...newItems } = structure.items\n        if (el) {\n            setStructure({\n                ...structure,\n                items: {\n                    ...newItems,\n                    [selectedBox]: {\n                        ...newItems[selectedBox],\n                        innerChildren: newItems[\n                            selectedBox\n                        ].innerChildren.filter(item => item !== selectedIndex),\n                    },\n                },\n            })\n        }\n    }\n    setSelectedIndex('')\n}\n\nexport const saveValue = (id, key, value, structure, setStructure) => {\n    if (structure.items[id])\n        setStructure({\n            ...structure,\n            items: {\n                ...structure.items,\n                [id]: {\n                    ...structure.items[id],\n                    [key]: value,\n                },\n            },\n        })\n}\n\nexport const addUnsorted = (structure, setStructure, profile) => {\n    const unsortedItems = {}\n    const unsortedIds = []\n    let newCurrentId = structure.currentId\n    for (let item of profile.progresses) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'goal',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    // for (let item of profile.rewards) {\n    //     if (!structure.items[item]) {\n    //         unsortedIds.push(item)\n    //         unsortedItems[item] = {\n    //             type: 'reward',\n    //             id: item,\n    //             sizePos: { x: -800, y: 0, width: 500, height: 500 },\n    //             children: [],\n    //             parent: 'b00',\n    //         }\n    //     }\n    // }\n    // for (let item of profile.activities) {\n    //     if (!structure.items[item]) {\n    //         unsortedIds.push(item)\n    //         unsortedItems[item] = {\n    //             type: 'activity',\n    //             id: item,\n    //             sizePos: { x: -800, y: 0, width: 500, height: 500 },\n    //             children: [],\n    //             parent: 'b00',\n    //         }\n    //     }\n    // }\n    if (unsortedIds.length > 0) {\n        setStructure(\n            {\n                ...structure,\n                currentId: newCurrentId,\n                items: {\n                    ...structure.items,\n                    ...unsortedItems,\n                    b00: {\n                        ...structure.items.b00,\n                        children: [\n                            ...structure.items.b00.children,\n                            ...unsortedIds,\n                        ],\n                    },\n                },\n            },\n            true\n        )\n    }\n}\n\nexport const dragHandler = (id, data, setSizepos) =>\n    setSizepos(id, { x: data.x, y: data.y })\n\nexport const resizeHandler = (id, elRef, position, setSizepos) =>\n    setSizepos(id, {\n        x: position.x,\n        y: position.y,\n        width: parseInt(elRef.style.width),\n        height: parseInt(elRef.style.height),\n    })\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    fade,\n    IconButton,\n    Menu,\n    MenuItem,\n    MuiThemeProvider,\n    Paper,\n    Select,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { blue, green, orange, red } from '@material-ui/core/colors'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n\n    const getStatusText = () => {\n        const status = resource.status\n        switch (status) {\n            case 'fail':\n                return t('progress.failed')\n            case 'complete':\n                return t('progress.completed')\n            case 'dismissed':\n                return t('progress.dismissed')\n            default:\n                return t('progress.inProcess')\n        }\n    }\n\n    const getTag = () => {\n        return (\n            <MuiThemeProvider\n                theme={\n                    resource.status === 'process'\n                        ? blueTheme\n                        : resource.status === 'complete'\n                        ? greenTheme\n                        : resource.status === 'fail'\n                        ? redTheme\n                        : orangeTheme\n                }\n            >\n                <Box style={{ margin: '10px 0' }}>\n                    {resource.owner === account._id ? (\n                        <Select\n                            value={resource.status}\n                            onChange={e =>\n                                wsActions.changeResourceStatus(\n                                    e.target.value,\n                                    resource._id\n                                )\n                            }\n                        >\n                            <MenuItem value=\"complete\">\n                                {t('progress.complete')}\n                            </MenuItem>\n                            <MenuItem value=\"process\">\n                                {t('progress.inProcess')}\n                            </MenuItem>\n                            <MenuItem value=\"fail\">\n                                {t('progress.fail')}\n                            </MenuItem>\n                            <MenuItem value=\"dismissed\">\n                                {t('progress.dismiss')}\n                            </MenuItem>\n                        </Select>\n                    ) : (\n                        <Chip color=\"primary\" label={getStatusText()} />\n                    )}\n                </Box>\n            </MuiThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <Paper style={{ padding: '15px 15px 0px 15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                            profile={resource.owner}\n                            linkHash={resource._id}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                        {type === 'goal' && (\n                            <Box>\n                                {getTag()}\n                                {resource.startDate && (\n                                    <Typography>\n                                        {t('progress.startDate')}:{' '}\n                                        {dayjs(resource.startDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.dueDate && (\n                                    <Typography>\n                                        {t('progress.dueDate')}:{' '}\n                                        {dayjs(resource.dueDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.status !== 'process' &&\n                                    resource.finishDate && (\n                                        <Typography>\n                                            {t('progress.finishDate')}:{' '}\n                                            {dayjs(resource.finishDate).format(\n                                                'ddd, MMM D, YYYY'\n                                            )}\n                                        </Typography>\n                                    )}\n                            </Box>\n                        )}\n                    </Box>\n                </div>\n\n                <Divider />\n                {props.navi}\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId =\n        props.resourceId || (pathParts.length > 2 ? pathParts[2] : '')\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        }\n        // else {\n        //     pullData(props, data, setData, { forceAuth: false }, data => {\n        //         const friendData = {}\n        //         for (let friend of data.friendData)\n        //             friendData[friend._id] = friend\n        //         const activityData = {}\n        //         if (data.activityData)\n        //             for (let activity of data.activityData)\n        //                 activityData[activity._id] = activity\n        //         const rewardData = {}\n        //         if (data.rewardData)\n        //             for (let reward of data.rewardData)\n        //                 rewardData[reward._id] = reward\n        //         const post = {}\n        //         if (data.posts)\n        //             for (let item of data.posts) post[item._id] = item\n\n        //         props.setData({\n        //             friendData,\n        //             post,\n        //             account: {},\n        //             activityData,\n        //             rewardData,\n        //             onlineUsers: data.onlineUsers,\n        //             [type === 'goal' ? 'progress' : type]: data.resource,\n        //         })\n        //     })\n        // }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props\n\n    useEffect(() => {\n        if (resource && resource._id) props.setResource(resource)\n    }, [resource])\n    useEffect(() => {\n        props.setPosts(posts)\n    }, [posts])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        props.resourceId ? (\n            <Layout noHeader>\n                <div className=\"contentDiv\">\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        ) : (\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {resource.name}\n                    </Typography>\n                }\n            >\n                <div className=\"contentDiv\">\n                    <Helmet>\n                        <title>\n                            {`${resource.name} ${t('g.by')}${\n                                resource.owner\n                            } - Addspire`}\n                        </title>\n                        <meta\n                            name=\"description\"\n                            content={resource.descriptionText}\n                        />\n                    </Helmet>\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        )\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource:\n            state[ownProps.type === 'goal' ? 'progress' : ownProps.type][\n                ownProps.resourceId\n            ],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                // maxWidth: '400px',\n                height: '200px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n            <FullscreenControl position=\"topright\" />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            {account._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.addPost')}\n                    </Typography>\n                    <AddPost\n                        parent={resource._id}\n                        account={account}\n                        parentType={type}\n                        // onSend={() => setEditingMessage('')}\n                    />\n                </>\n            )}\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Reward = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"reward\"\n            setResource={setReward}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {reward && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={reward.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={reward.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={reward}\n                            posts={posts}\n                            type=\"reward\"\n                        />\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n        setChosenResource,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <span\n                                        onClick={() =>\n                                            setChosenResource(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </span>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward id={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? t('g.forTheseActivities') : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToReward')}\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Box>\n                                            <Button\n                                                onClick={() =>\n                                                    wsActions.sendReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        selectedReward\n                                                    )\n                                                }\n                                                color=\"primary\"\n                                            >\n                                                {t('g.sendRewardManually')}\n                                            </Button>\n                                        </Box>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.editReward')}\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.removeReward')}\n                                        </Button>\n                                    </>\n                                )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <UserButton id={rewardObj.owner} />\n                                <span>\n                                    {t(\n                                        'g.' +\n                                            (rewardObj.repeat === 'manual'\n                                                ? 'manual'\n                                                : rewardObj.repeat === 'once'\n                                                ? 'once'\n                                                : rewardObj.repeat === 'time'\n                                                ? 'everyTime'\n                                                : '')\n                                    )}\n                                    {t('reward.forActivities')}\n                                    {rewardObj.activities.map(activity => {\n                                        if (activityData[activity]) {\n                                            return (\n                                                <Link\n                                                    to={\n                                                        '/activities/' +\n                                                        activityData[activity]\n                                                            ._id\n                                                    }\n                                                >\n                                                    {\n                                                        activityData[activity]\n                                                            .name\n                                                    }\n                                                </Link>\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                </span>\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            // return -1\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const {\n        activityData,\n        account,\n        progress,\n        activities,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const isOwner =\n        account && account._id && progress && account._id === progress.owner\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    setChosenResource(selectedActivity)\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToActivity')}\n                            </Button>\n                            {isOwner && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    {t('g.removeActivity')}\n                                </Button>\n                            )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <ActivityTable activityId={selectedActivity} />\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../components/SimilarResources'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Goal = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    const [posts, setPosts] = useState([])\n\n    const [currentTab, setCurrentTab] = useState(1)\n    const [currentTabD, setCurrentTabD] = useState(0)\n\n    return (\n        <ResourceCore\n            type=\"goal\"\n            setResource={setProgress}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {progress && progress._id && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.detailsFor')}\n                        </Typography>\n                        <Paper square>\n                            <Tabs\n                                value={currentTabD}\n                                onChange={(event, value) =>\n                                    setCurrentTabD(value)\n                                }\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label={t('g.fromStart')} />\n                                <Tab label={t('g.toGoal')} />\n                                <Tab label={t('g.resultFinish')} />\n                            </Tabs>\n                        </Paper>\n\n                        {progress[\n                            currentTabD === 0\n                                ? 'startImages'\n                                : currentTabD === 1\n                                ? 'images'\n                                : 'finishImages'\n                        ].length > 0 && (\n                            <>\n                                <Typography\n                                    className={classes.title}\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                >\n                                    {t('g.images')}\n                                </Typography>\n                                <ImageCarousel\n                                    images={\n                                        progress[\n                                            currentTabD === 0\n                                                ? 'startImages'\n                                                : currentTabD === 1\n                                                ? 'images'\n                                                : 'finishImages'\n                                        ]\n                                    }\n                                />\n                            </>\n                        )}\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={\n                                    progress[\n                                        currentTabD === 0\n                                            ? 'startDescription'\n                                            : currentTabD === 1\n                                            ? 'description'\n                                            : 'finishDescription'\n                                    ]\n                                }\n                            />\n                        </Paper>\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={progress.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"goal\" /> */}\n\n                        <ResourcePosts\n                            resource={progress}\n                            posts={posts}\n                            type=\"goal\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Activities progress={progress} />\n                        <Rewards progress={progress} />\n                    </TabPanel>\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Activity = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(2)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore\n            type=\"activity\"\n            setResource={setActivity}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {activity && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            {activity.repeat !== 'no' && (\n                                <>\n                                    <p>\n                                        <RetweetOutlined />\n                                        {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                    </p>\n                                    <Divider\n                                        light\n                                        variant=\"middle\"\n                                        style={{ marginBottom: '15px' }}\n                                    />\n                                </>\n                            )}\n\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={activity.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={activity.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={activity}\n                            posts={posts}\n                            type=\"activity\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.tracking')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ActivityTable activityId={activity._id} />\n                        </Paper>\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const {\n        transactionData,\n        rewardData,\n        account,\n        transactions,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <span\n                                    onClick={() =>\n                                        setChosenResource(rewardObj._id)\n                                    }\n                                >\n                                    {rewardObj.name || 'Selected activity'}\n                                </span>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    // const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setChosenResource } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    // useEffect(() => {\n    //     const pathParts = props.history.location.pathname.split('/')\n    //     if (pathParts.length > 2) {\n    //         const profileId = pathParts[2]\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: profileId })\n    //         } else {\n    //             pullData(props, data, setData, { forceAuth: false }, data => {\n    //                 const friendData = {}\n    //                 for (let friend of data.friendData)\n    //                     friendData[friend._id] = friend\n\n    //                 const progressData = {}\n    //                 if (data.progressData)\n    //                     for (let progress of data.progressData)\n    //                         progressData[progress._id] = progress\n\n    //                 const activityData = {}\n    //                 if (data.activityData)\n    //                     for (let activity of data.activityData)\n    //                         activityData[activity._id] = activity\n    //                 const rewardData = {}\n    //                 if (data.rewardData)\n    //                     for (let reward of data.rewardData)\n    //                         rewardData[reward._id] = reward\n    //                 const post = {}\n    //                 if (data.posts)\n    //                     for (let item of data.posts) post[item._id] = item\n\n    //                 props.setData({\n    //                     profile: data.profile,\n    //                     friendData,\n    //                     post,\n    //                     account: {},\n    //                     progressData,\n    //                     activityData,\n    //                     rewardData,\n    //                     onlineUsers: data.onlineUsers,\n    //                 })\n    //             })\n    //         }\n    //     } else {\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: account._id })\n    //         }\n    //     }\n    // }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Layout noHeader>\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea\n                            onClick={() => setChosenResource(item._id)}\n                        >\n                            {/* <Link to={'/goals/' + item._id}> */}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    align=\"center\"\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                            {/* </Link> */}\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities\n                    activities={profile.activities}\n                    isOwner={isOwner}\n                    setChosenResource={setChosenResource}\n                />\n                <ProfileRewards\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner={isOwner}\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useState } from 'react'\nimport ReactPlayer from 'react-player/lazy'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../components/UI/TinyEditor'\nimport rgbObjToRGBA from '../../utils/rgbObjToRGBA'\n\nconst FolderMM = props => {\n    const {\n        selectedBox,\n        el,\n        id,\n        editingText,\n        setEditingText,\n        saveValueMM,\n        editingTextModal,\n        setEditingTextModal,\n        textValue,\n        setTextValue,\n        handleSaveText,\n        editorMode,\n        scale,\n    } = props\n\n    return (\n        <div\n            style={{\n                background: rgbObjToRGBA(\n                    el.bgColor || { r: 255, g: 255, b: 255, a: 1 }\n                ),\n                flex: 1,\n                borderRadius: (el.radius || 0) + '%',\n                overflow: 'auto',\n                position: 'relative',\n            }}\n        >\n            {el.imageValue && !el.imageOff && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundImage: 'url(\"' + el.imageValue + '\")',\n                    }}\n                />\n            )}\n\n            {el.videoURL && !el.videoOff && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                >\n                    <ReactPlayer\n                        url={el.videoURL}\n                        width=\"100%\"\n                        height=\"100%\"\n                        style={{\n                            overflow: 'hidden',\n                        }}\n                    />\n                </div>\n            )}\n            {editorMode && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                />\n            )}\n\n            {(el.textValue || editingText) && !el.textOff && (\n                <div\n                    className={\n                        editingText && selectedBox === id\n                            ? 'tinyEditorText_'\n                            : ''\n                    }\n                >\n                    <TinyEditor\n                        onEditorChange={value => setTextValue(value)}\n                        MM\n                        value={el.textValue}\n                        readOnly={!(editingText && selectedBox === id)}\n                        scale={scale}\n                        handleSaveText={handleSaveText}\n                    />\n                </div>\n            )}\n            {editorMode && !editingText && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                        zIndex: 1,\n                    }}\n                />\n            )}\n            {/* <div className=\"tinyEditorText_\">\n                <DialogFullscreen\n                    open={editingText && selectedBox === id && editingTextModal}\n                    close={() => {\n                        setEditingText(false)\n                    }}\n                    save={handleSaveText}\n                >\n                    <div className=\"tinyEditorText_\">\n                        {editingText && selectedBox === id && (\n                            <TinyEditor\n                                onEditorChange={value => setTextValue(value)}\n                                value={el.textValue}\n                            />\n                        )}\n                    </div>\n                </DialogFullscreen>\n            </div> */}\n        </div>\n    )\n}\n\nexport default FolderMM\n","import React, { memo, useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\nimport { addUnsorted } from './actions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst ProfileMM = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setStructure } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const getData = key => {\n                        const d = {}\n                        for (let i of data[key]) d[i._id] = i\n                        return d\n                    }\n\n                    const friendData = getData('friendData')\n                    const progressData = getData('progressData')\n                    const activityData = getData('activityData')\n                    const rewardData = getData('rewardData')\n                    const progress = getData('progress')\n                    const activity = getData('activity')\n                    const reward = getData('reward')\n                    const post = getData('post')\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        // post,\n                        account: {},\n                        progressData,\n                        progress,\n                        activityData,\n                        activity,\n                        rewardData,\n                        reward,\n                        onlineUsers: data.onlineUsers,\n                        currentProfile: profileId,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    useEffect(() => {\n        if (profile && profile.structure && profile.structure.items) {\n            addUnsorted(props.structure, props.setStructure, profile)\n        }\n    }, [profile.rewards, profile.activities, profile.progresses])\n\n    useEffect(() => {\n        if (profile.structure && profile.structure.items)\n            setStructure(profile.structure, true)\n    }, [profile._id])\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    if (!profile || !profile._id) return null\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Paper style={{ padding: '15px', whiteSpace: 'nowrap' }}>\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Avatar\n                        src={getAvatar(profile._id, profile.image)}\n                        size={200}\n                    />\n\n                    <Box style={{ padding: '0 15px' }}>\n                        {props.onlineUsers.includes(profile._id) && (\n                            <Badge color=\"green\" text=\"online\" />\n                        )}\n                        <TypographyA.Title level={2}>\n                            {profile.name}\n                        </TypographyA.Title>\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button\n                            onClick={() => setFollowersVisible('following')}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followProgresses.length +\n                                    profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                            </span>\n                        </Button>\n                    </Box>\n\n                    <div>\n                        <ShareButton\n                            link={'https://addspire.com/profile/' + profile._id}\n                            media={\n                                profile.image &&\n                                getAvatar(profile._id, profile.image)\n                            }\n                            title={profile.name + t('profile.shareText')}\n                            item={{\n                                profileId: profile._id,\n                                profileName: profile.name,\n                            }}\n                        />\n                        {account && account._id !== profile._id && (\n                            <span style={{ marginRight: '10px' }}>\n                                {realFriends.find(\n                                    item => item.friend === profile._id\n                                ) ? (\n                                    <Chip color=\"primary\" label=\"Friends\" />\n                                ) : null}\n                                {account.followAccounts &&\n                                    !account.followAccounts.includes(\n                                        profile._id\n                                    ) && (\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                            style={{\n                                                marginRight: '20px',\n                                            }}\n                                            variant=\"contained\"\n                                        >\n                                            {t('g.follow')}\n                                        </Button>\n                                    )}\n                            </span>\n                        )}\n                        <FriendActionButton\n                            account={account}\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                            _id={profile._id}\n                            additionalButtons={\n                                isOwner\n                                    ? [\n                                          {\n                                              onClick: () =>\n                                                  props.history.push('/logout'),\n                                              title: t('g.logout'),\n                                          },\n                                      ]\n                                    : null\n                            }\n                            asText={true}\n                        />\n                    </div>\n                    <Box />\n                </div>\n            </Paper>\n\n            {/* {isOwner && (\n                <>\n                    <Typography\n                        className={classesM.sectionTitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('profile.settings')}\n                    </Typography>\n                    <Paper\n                        style={{\n                            padding: '15px',\n                        }}\n                    >\n                        <Box>\n                            <LanguageSwitcher settings />\n                        </Box>\n                        <Box style={{ margin: '20px auto' }}>\n                            <Button\n                                onClick={() => props.history.push('/logout')}\n                                color=\"secondary\"\n                            >\n                                {t('g.logout')}\n                            </Button>\n                        </Box>\n                        <Button\n                            onClick={() => setDeleteVisible(true)}\n                            color=\"secondary\"\n                        >\n                            {t('profile.deleteAccount')}\n                        </Button>\n                    </Paper>\n\n                    <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                        <DialogTitle>{t('profile.deleteAccount')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                <p>\n                                    {t('profile.pleaseEnterNickname')}\n                                    {account._id}\n                                    {t('profile.andPressOk')}\n                                </p>\n                                <TextField\n                                    onChange={e =>\n                                        setDeleteField(e.target.value)\n                                    }\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => setDeleteVisible(false)}>\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (deleteField !== account._id) {\n                                        message.warning(\n                                            'The nickmanme is not correct.'\n                                        )\n                                    } else {\n                                        wsActions.deleteAccount(account._id)\n                                    }\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.delete')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )} */}\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n        structure: state.structureMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        setStructure: (structure, noNeedToSave) =>\n            dispatch(actions.setStructure(structure, noNeedToSave)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(memo(ProfileMM))\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n\n    const resourceId = props.resourceId\n    if (!resourceId) return null\n    const { type } = props\n\n    const { resource, account, friendData, posts } = props\n\n    if (!resource || !resource._id) return null\n\n    return friendData ? (\n        <div\n            style={{\n                display: 'flex',\n                flex: 1,\n                background: 'white',\n                overflow: 'hidden',\n            }}\n        >\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                    navi={props.navi}\n                />\n                {props.children}\n            </div>\n            <div style={{ width: '10px' }} />\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourcePosts resource={resource} posts={posts} type={type} />\n            </div>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        posts: state.post,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourceCore))\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst GoalMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { progress } = props\n\n    return (\n        <ResourceCoreMM type=\"goal\" resourceId={id} resource={progress}>\n            {progress && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={progress.description}\n                        />\n                    </Paper>\n                    <Activities progress={progress} />\n                    <Rewards progress={progress} />\n\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={progress.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(GoalMM)))\n","import { Box, Button, InputBase, makeStyles } from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport { createApi } from 'unsplash-js'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport axios from 'axios'\nconst unsplash = createApi({\n    apiUrl:\n        process.env.NODE_ENV === 'development'\n            ? 'http://my.websiter.test:5000/api/unsplash-proxy'\n            : 'https://addspire.com/api/unsplash-proxy',\n})\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.common.white,\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n        color: theme.palette.primary.main,\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n    },\n}))\n\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [searchText, setSearchText] = useState('')\n    const [state, setState] = useState({\n        nextPage: 2,\n        pages: 0,\n        images: [],\n    })\n\n    const [emptyImages, setEmptyImages] = useState([])\n\n    useEffect(() => {\n        if (props.open && emptyImages.length === 0)\n            axios\n                .get('/api/unsplash-proxy-empty')\n                .then(response => {\n                    setEmptyImages(response.data.results)\n                })\n                .catch(err => {})\n    }, [props.open, emptyImages.length === 0])\n\n    const handleClose = () => {\n        setState({\n            nextPage: 2,\n            pages: 0,\n            images: [],\n        })\n        setSearchText('')\n        props.close()\n    }\n    const startSearch = next => {\n        if (searchText && (!next || state.nextPage < state.pages)) {\n            unsplash.search\n                .getPhotos({\n                    query: searchText,\n                    perPage: 50,\n                    page: next ? state.nextPage : 1,\n                })\n                .then(result => {\n                    if (result.errors) {\n                    } else {\n                        if (!next) {\n                            setState({\n                                nextPage: 2,\n                                pages: result.response.total_pages,\n                                images: result.response.results,\n                            })\n                        } else {\n                            if (result.response.results) {\n                                setState({\n                                    nextPage: state.nextPage + 1,\n                                    pages: result.response.total_pages,\n                                    images: [\n                                        ...state.images,\n                                        ...result.response.results,\n                                    ],\n                                })\n                            }\n                        }\n                    }\n                })\n        }\n    }\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={() => handleClose()}\n            title={\n                <>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <Search />\n                        </div>\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault()\n                                e.stopPropagation()\n                                startSearch(false)\n                            }}\n                        >\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                autoFocus\n                                onChange={e => setSearchText(e.target.value)}\n                            />\n                        </form>\n                    </div>\n                </>\n            }\n            save={() => startSearch(false)}\n            saveText=\"Search\"\n        >\n            <Box style={{ margin: '20px 5px' }}>\n                <MasonryGrid images>\n                    {(state.images.length > 0 ? state.images : emptyImages).map(\n                        (item, index) => {\n                            return (\n                                <MasonryCard\n                                    key={index}\n                                    onClick={() => {\n                                        props.onChoose(\n                                            item.urls.raw + '&w=600&q=50'\n                                        )\n                                        handleClose()\n                                    }}\n                                    images={[item.urls.thumb]}\n                                    type=\"images\"\n                                    body={\n                                        <>\n                                            <span\n                                                style={{\n                                                    fontStyle: 'italic',\n                                                }}\n                                            >\n                                                Photo by{' '}\n                                                <a\n                                                    href={`https://unsplash.com/@${\n                                                        item.user.username\n                                                    }?utm_source=Addspire&utm_medium=referral`}\n                                                    style={{\n                                                        textDecoration:\n                                                            'underline',\n                                                    }}\n                                                >\n                                                    {item.user.name}\n                                                </a>{' '}\n                                                on{' '}\n                                                <a\n                                                    href=\"https://unsplash.com/?utm_source=Addspire&utm_medium=referral\"\n                                                    style={{\n                                                        textDecoration:\n                                                            'underline',\n                                                    }}\n                                                >\n                                                    Unsplash\n                                                </a>\n                                            </span>\n                                        </>\n                                    }\n                                />\n                            )\n                        }\n                    )}\n                </MasonryGrid>\n\n                {state.nextPage < state.pages && searchText && (\n                    <Button\n                        color=\"primary\"\n                        onClick={() => startSearch(true)}\n                        style={{ margin: '20px auto', display: 'block' }}\n                        variant=\"contained\"\n                    >\n                        Load more\n                    </Button>\n                )}\n                {!state.images.length && (\n                    <Box\n                        style={{\n                            margin: '20px auto',\n                            display: 'block',\n                            textAlign: 'center',\n                        }}\n                    >\n                        <Box>\n                            Use the serach at the top of the page to find more\n                            images.\n                        </Box>\n                        <Box fontStyle=\"italic\">\n                            Provided by{' '}\n                            <a href=\"https://unsplash.com/?utm_source=Addspire&utm_medium=referral\">\n                                Unsplash\n                            </a>\n                        </Box>\n                    </Box>\n                )}\n            </Box>\n        </DialogFullscreen>\n    )\n}\n","import React, { useState } from 'react'\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Box,\n    Button,\n    IconButton,\n    Paper,\n    Popper,\n    Slider,\n    TextField,\n    Typography,\n} from '@material-ui/core'\nimport { Close, ExpandMore } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport * as actions from '../../store/actions'\nimport { connect } from 'react-redux'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport { ChromePicker } from 'react-color'\nimport ImageGallery from './ImageGallery'\n\nconst PickerPopper = props => {\n    const { t } = useTranslation()\n\n    const {\n        el,\n\n        setEditorKey,\n        editorKey,\n        saveValueMM,\n        templateMasterBoxId,\n        templateMasterVar,\n    } = props\n    const [imageGalleryOpen, setImageGalleryOpen] = useState(false)\n    const id = templateMasterBoxId || props.id\n    const [videoURL, setVideoURL] = useState(el.videoURL)\n\n    const keyToText = (editorKey: String) =>\n        editorKey === 'imageValue'\n            ? t('g.chooseImage')\n            : editorKey === 'videoUrl'\n            ? t('g.setMedia')\n            : editorKey === 'styleBlock'\n            ? t('g.styleBlock')\n            : editorKey === 'styleLine'\n            ? t('g.styleLine')\n            : editorKey === 'lineType'\n            ? t('g.lineType')\n            : editorKey === 'lineWidth'\n            ? t('g.lineWidth')\n            : editorKey === 'lineColor'\n            ? t('g.lineColor')\n            : editorKey === 'bgColor'\n            ? t('g.bgColor')\n            : editorKey === 'radius'\n            ? t('g.radius')\n            : ''\n\n    return (\n        <>\n            <Popper\n                open={Boolean(editorKey)}\n                anchorEl={() => document.getElementById('anchorTR')}\n                placement=\"bottom-end\"\n                // anchorOrigin={{\n                //     vertical: 'bottom',\n                //     horizontal: 'left',\n                // }}\n                // transformOrigin={{\n                //     vertical: 'top',\n                //     horizontal: 'right',\n                // }}\n            >\n                <Paper style={{ maxWidth: '250px', padding: '10px' }}>\n                    <div onMouseDown={e => e.stopPropagation()}>\n                        <div style={{ display: 'flex' }}>\n                            <div\n                                style={{\n                                    flex: 1,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Typography>{keyToText(editorKey)}</Typography>\n                            </div>\n                            {!templateMasterBoxId && (\n                                <IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setEditorKey(\n                                            [\n                                                'lineWidth',\n                                                'lineType',\n                                                'lineColor',\n                                            ].includes(editorKey)\n                                                ? 'styleLine'\n                                                : [\n                                                      'radius',\n                                                      'bgColor',\n                                                  ].includes(editorKey)\n                                                ? 'styleBlock'\n                                                : ''\n                                        )\n                                    }\n                                >\n                                    <Close />\n                                </IconButton>\n                            )}\n                        </div>\n                        {['lineColor', 'bgColor'].includes(editorKey) ? (\n                            <ChromePicker\n                                color={\n                                    el[editorKey] || {\n                                        r: 255,\n                                        g: 255,\n                                        b: 255,\n                                        a: 1,\n                                    }\n                                }\n                                // width={150}\n                                // height={150}\n                                onChange={color =>\n                                    saveValueMM(id, {\n                                        [editorKey]: color.rgb,\n                                    })\n                                }\n                                onChangeComplete={color =>\n                                    saveValueMM(id, {\n                                        [editorKey]: color.rgb,\n                                    })\n                                }\n                            />\n                        ) : ['lineWidth', 'radius'].includes(editorKey) ? (\n                            <Slider\n                                min={editorKey === 'radius' ? 0 : 1}\n                                max={\n                                    editorKey === 'radius'\n                                        ? 50\n                                        : editorKey === 'lineWidth'\n                                        ? 20\n                                        : 100\n                                }\n                                step={1}\n                                value={el.radius}\n                                onChange={(_e, value) =>\n                                    saveValueMM(id, { [editorKey]: value })\n                                }\n                                style={{\n                                    width: '200px',\n                                }}\n                            />\n                        ) : editorKey === 'lineType' ? (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                {[\n                                    'fluid',\n                                    'straight',\n                                    'arc',\n                                    'magnet',\n                                    'grid',\n                                    'no',\n                                ].map(type => (\n                                    <div>\n                                        <Button\n                                            onClick={() =>\n                                                saveValueMM(id, {\n                                                    lineType: type,\n                                                })\n                                            }\n                                        >\n                                            {type}\n                                        </Button>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : editorKey === 'videoURL' ? (\n                            <div>\n                                {t('g.addMedia')}\n\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    label=\"URL\"\n                                    type=\"url\"\n                                    fullWidth\n                                    defaultValue={el.videoURL}\n                                    onChange={e => setVideoURL(e.target.value)}\n                                />\n                                <div>\n                                    {!templateMasterBoxId && (\n                                        <Button\n                                            onClick={() => setEditorKey('')}\n                                            color=\"primary\"\n                                        >\n                                            {t('g.cancel')}\n                                        </Button>\n                                    )}\n                                    <Button\n                                        onClick={() => {\n                                            saveValueMM(id, { videoURL })\n                                            if (!templateMasterBoxId)\n                                                setEditorKey('')\n                                        }}\n                                        color=\"primary\"\n                                    >\n                                        {t('g.confirm')}\n                                    </Button>\n                                </div>\n                                <Accordion>\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMore />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                    >\n                                        <Typography>\n                                            Supported video types:\n                                        </Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <Typography>\n                                            {t('g.addMediaDesc')}\n                                        </Typography>\n                                    </AccordionDetails>\n                                </Accordion>\n                            </div>\n                        ) : editorKey === 'imageValue' ? (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    marginTop: '10px',\n                                }}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setImageGalleryOpen(true)}\n                                >\n                                    Gallery\n                                </Button>\n                                <Upload\n                                    accept=\"image/*\"\n                                    showUploadList={false}\n                                    customRequest={({ file }) => {\n                                        uploadFile(\n                                            file,\n                                            800,\n                                            undefined,\n                                            url => {\n                                                if (url) {\n                                                    saveValueMM(id, {\n                                                        imageValue: url,\n                                                    })\n                                                }\n                                            }\n                                        )\n                                    }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{\n                                            marginRight: '10px',\n                                        }}\n                                    >\n                                        Upload\n                                    </Button>\n                                </Upload>\n                            </div>\n                        ) : editorKey === 'styleLine' ? (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    marginTop: '10px',\n                                }}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setEditorKey('lineType')}\n                                >\n                                    Type\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setEditorKey('lineWidth')}\n                                >\n                                    Width\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setEditorKey('lineColor')}\n                                >\n                                    Color\n                                </Button>\n                            </div>\n                        ) : editorKey === 'styleBlock' ? (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    marginTop: '10px',\n                                }}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setEditorKey('bgColor')}\n                                >\n                                    Background\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                        marginRight: '10px',\n                                    }}\n                                    onClick={() => setEditorKey('radius')}\n                                >\n                                    Corners\n                                </Button>\n                            </div>\n                        ) : null}\n                    </div>\n                </Paper>\n            </Popper>\n            <ImageGallery\n                open={imageGalleryOpen}\n                close={() => setImageGalleryOpen(false)}\n                onChoose={url => {\n                    saveValueMM(id, {\n                        [editorKey]: url,\n                    })\n                }}\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        templateMasterBoxId: state.templateMasterBoxId,\n        templateMasterVar: state.templateMasterVar,\n        templateMasterPaused: state.templateMasterPaused,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveValueMM: (id, value) => dispatch(actions.saveValueMM(id, value)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PickerPopper)\n","import React, { useEffect, useState } from 'react'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    Divider,\n    IconButton,\n    Menu,\n    MenuItem,\n    Paper,\n    Slide,\n} from '@material-ui/core'\nimport {\n    Add,\n    Brush,\n    Close,\n    Delete,\n    Image,\n    Lock,\n    LockOpen,\n    More,\n    MoreVert,\n    Send,\n    Title,\n    Videocam,\n} from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport Goal from '../Goal/Goal'\nimport Reward from '../Reward/Reward'\nimport Activity from '../Activity/Activity'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Profile from '../Profile/Profile'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport FolderMM from './FolderMM'\nimport ProfileMM from './ProfileMM'\nimport GoalMM from './old/GoalMM'\nimport PickerPopper from './PickerPopper'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ChooseWrapMM = props => {\n    const { t } = useTranslation()\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [editorKey, setEditorKey] = useState('')\n    const [editingStyle, setEditingStyle] = useState(false)\n    const [editingText, setEditingText] = useState(false)\n    const [editingTextModal, setEditingTextModal] = useState(false)\n    const [textValue, setTextValue] = useState()\n    const [mainMenuAnchorEl, setMainMenuAnchorEl] = useState(null)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const {\n        el,\n        id,\n        selectedBox,\n        setChangeParentMode,\n        changeParentMode,\n        addEmptyToStructure,\n        editorMode,\n        account,\n        saveValueMM,\n        deleteBlock,\n        setAddBlockOpen,\n        templateMasterBoxId,\n        templateMasterVar,\n        scale,\n        setSelectedBox,\n    } = props\n    const [openElement, setOpenElement] = useState(\n        props.history.location.hash.length > 0 &&\n            (id === props.history.location.hash.substring(1) ||\n                (el.type === 'profile' &&\n                    props.history.location.hash.substring(1)) === 'profile')\n    )\n\n    useEffect(() => {\n        if (\n            templateMasterVar &&\n            templateMasterBoxId &&\n            templateMasterBoxId === id\n        ) {\n            setSelectedBox(templateMasterBoxId)\n            setEditorKey(templateMasterVar.name)\n        } else {\n            setEditorKey('')\n        }\n    }, [templateMasterBoxId, templateMasterVar])\n\n    useEffect(() => {\n        if (!templateMasterBoxId) setEditorKey('')\n    }, [selectedBox])\n\n    const addMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n        >\n            <MenuItem\n                onClick={() => {\n                    setAddBlockOpen(true)\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.block')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setStartResourceVisible('goal')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.goal')}\n            </MenuItem>\n        </Menu>\n    )\n\n    const mainMenu = (\n        <Menu\n            anchorEl={mainMenuAnchorEl}\n            open={Boolean(mainMenuAnchorEl)}\n            onClose={() => setMainMenuAnchorEl(null)}\n        >\n            {el.type === 'folder' && (\n                <>\n                    <MenuItem\n                        onClick={() => {\n                            setEditorKey('imageValue')\n                            setMainMenuAnchorEl(null)\n                            saveValueMM(id, {\n                                imageOff: false,\n                            })\n                        }}\n                    >\n                        <div\n                            style={{\n                                width: '100%',\n                                display: 'flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <div style={{ flex: 1 }}>{t('g.image')}</div>\n                            {el.imageValue && (\n                                <div>\n                                    <Checkbox\n                                        onClick={e => {\n                                            e.stopPropagation()\n                                        }}\n                                        onChange={e =>\n                                            saveValueMM(id, {\n                                                imageOff: !e.target.checked,\n                                            })\n                                        }\n                                        checked={!el.imageOff}\n                                        size=\"small\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setEditorKey('videoURL')\n                            setMainMenuAnchorEl(null)\n                            saveValueMM(id, {\n                                videoOff: false,\n                            })\n                        }}\n                    >\n                        <div\n                            style={{\n                                width: '100%',\n                                display: 'flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <div style={{ flex: 1 }}>{t('g.video')}</div>\n                            {el.videoURL && (\n                                <div>\n                                    <Checkbox\n                                        onClick={e => {\n                                            e.stopPropagation()\n                                        }}\n                                        onChange={e =>\n                                            saveValueMM(id, {\n                                                videoOff: !e.target.checked,\n                                            })\n                                        }\n                                        checked={!el.videoOff}\n                                        size=\"small\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setEditingText(true)\n                            setMainMenuAnchorEl(null)\n                            saveValueMM(id, {\n                                textOff: false,\n                            })\n                        }}\n                    >\n                        <div\n                            style={{\n                                width: '100%',\n                                display: 'flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <div style={{ flex: 1 }}>{t('g.text')}</div>\n                            {el.textValue && (\n                                <div>\n                                    <Checkbox\n                                        onClick={e => {\n                                            e.stopPropagation()\n                                        }}\n                                        onChange={e =>\n                                            saveValueMM(id, {\n                                                textOff: !e.target.checked,\n                                            })\n                                        }\n                                        checked={!el.textOff}\n                                        size=\"small\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </MenuItem>\n                </>\n            )}\n            <MenuItem\n                onClick={() => {\n                    setEditorKey('styleBlock')\n                    setMainMenuAnchorEl(null)\n                }}\n            >\n                {t('g.styleBlock')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setEditorKey('styleLine')\n                    setMainMenuAnchorEl(null)\n                }}\n            >\n                {t('g.styleLine')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setChangeParentMode(changeParentMode === id ? '' : id)\n                    setMainMenuAnchorEl(null)\n                }}\n            >\n                {t('g.changeParent')}\n            </MenuItem>\n\n            {el.type === 'folder' && (\n                <MenuItem\n                    onClick={() => {\n                        deleteBlock(id)\n                        setMainMenuAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )}\n        </Menu>\n    )\n\n    const handleSaveText = () => {\n        saveValueMM(id, { textValue })\n        setEditingText(false)\n        setEditingTextModal(false)\n    }\n\n    return (\n        <>\n            <PickerPopper\n                editorKey={editorKey}\n                setEditorKey={setEditorKey}\n                el={el}\n                id={id}\n                saveValueMM={saveValueMM}\n            />\n            <div\n                style={{\n                    flex: 1,\n                    display: 'flex',\n                    overflow: 'hidden',\n                    flexDirection: 'column',\n                }}\n            >\n                <Paper\n                    style={{\n                        background: 'white',\n                        textAlign: 'right',\n                        position: 'absolute',\n                        top: '-50px',\n                        whiteSpace: 'nowrap',\n                        alignItems: 'start',\n                        transform: 'scale(' + 1 / scale + ')',\n                        transformOrigin: 'bottom left',\n                    }}\n                    className=\"buttonsWrapMM buttonsMM\"\n                >\n                    {el.type !== 'folder' &&\n                        (!editorMode || selectedBox === id) &&\n                        !editingText &&\n                        !editingStyle && (\n                            <Button\n                                onClick={() => setOpenElement(true)}\n                                color=\"primary\"\n                                variant=\"contained\"\n                            >\n                                {t('g.open')}\n                            </Button>\n                        )}\n                    {editorMode && selectedBox === id && !templateMasterBoxId && (\n                        <>\n                            {editingStyle ? (\n                                <div>\n                                    <Button\n                                        onClick={() => setEditingStyle(false)}\n                                        style={{ marginRight: '10px' }}\n                                        color=\"primary\"\n                                    >\n                                        {t('g.back')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditorKey('lineType')\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineType')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditorKey('lineColor')\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineColor')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditorKey('lineWidth')\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineWidth')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditorKey('bgColor')\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.background')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditorKey('radius')\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.corners')}\n                                    </Button>\n                                </div>\n                            ) : editingText ? null : (\n                                <>\n                                    <IconButton\n                                        onClick={e =>\n                                            setAnchorEl(e.currentTarget)\n                                        }\n                                        color=\"primary\"\n                                    >\n                                        <Add />\n                                    </IconButton>\n                                    {addMenu}\n                                    <IconButton\n                                        onClick={() =>\n                                            saveValueMM(id, {\n                                                locked: !el.locked,\n                                            })\n                                        }\n                                    >\n                                        {el.locked ? <Lock /> : <LockOpen />}\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={e =>\n                                            setMainMenuAnchorEl(e.currentTarget)\n                                        }\n                                    >\n                                        <MoreVert />\n                                    </IconButton>\n                                    {mainMenu}\n                                </>\n                            )}\n                        </>\n                    )}\n                </Paper>\n                <div style={{ flex: 1, overflow: 'hidden', display: 'flex' }}>\n                    {el.type === 'folder' && (\n                        <FolderMM\n                            el={el}\n                            id={id}\n                            editingText={editingText}\n                            setEditingText={setEditingText}\n                            editingTextModal={editingTextModal}\n                            setEditingTextModal={setEditingTextModal}\n                            selectedBox={selectedBox}\n                            saveValueMM={saveValueMM}\n                            textValue={textValue}\n                            setTextValue={setTextValue}\n                            handleSaveText={handleSaveText}\n                            editorMode={editorMode}\n                            scale={scale}\n                        />\n                    )}\n                    {el.type === 'profile' && <ProfileMM />}\n\n                    {el.type === 'goal' && <GoalMM id={id} />}\n                </div>\n            </div>\n            <DialogFullscreen\n                open={openElement}\n                close={() => setOpenElement(false)}\n                title=\"Opened res\"\n            >\n                {el.type === 'profile' ? (\n                    <Profile setChosenResource={setOpenElement} />\n                ) : el.type === 'reward' ? (\n                    <Reward id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'activity' ? (\n                    <Activity id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'goal' ? (\n                    <Goal id={el.id} setChosenResource={setOpenElement} />\n                ) : null}\n            </DialogFullscreen>\n            {account._id && editorMode && (\n                <Dialog\n                    fullScreen\n                    open={Boolean(startResourceVisible)}\n                    onClose={() => {\n                        setStartResourceVisible('')\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartResourceVisible('')}\n                        type={startResourceVisible}\n                        addEmptyToStructure={addEmptyToStructure}\n                        selectedBox={id}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        templateMasterBoxId: state.templateMasterBoxId,\n        templateMasterVar: state.templateMasterVar,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        addEmptyToStructure: (id, selectedBox, type) =>\n            dispatch(actions.addEmptyToStructure(id, selectedBox, type)),\n        addBlock: (id, blockType) => dispatch(actions.addBlock(id, blockType)),\n        saveValueMM: (id, value) => dispatch(actions.saveValueMM(id, value)),\n        deleteBlock: id => dispatch(actions.deleteBlock(id)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ChooseWrapMM)\n)\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport Line from './Line'\nimport { Rnd } from 'react-rnd'\nimport { dragHandler, resizeHandler } from './actions'\nimport ChooseWrapMM from './ChooseWrapMM'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nconst ContainerMM = props => {\n    const myRef1 = useRef(null)\n\n    const myRef4 = useRef(null)\n    const {\n        setSelectedBox,\n        selectedBox,\n        setSizepos,\n        scale,\n        myRef2,\n        id,\n        editingFolder,\n        editingElement,\n        selectedIndex,\n        setSelectedIndex,\n        setEditingElement,\n        addDragStep,\n        editorMode,\n        setChosenResource,\n        setEditingFolder,\n        el,\n        setChangeParentMode,\n        changeParentMode,\n        changeParentMM,\n        setAddBlockOpen,\n        templateMasterBoxId,\n    } = props\n    if (el && (el.type === 'reward' || el.type === 'activity')) {\n        return null\n    }\n    useEffect(() => {\n        const handler = e => {\n            // e.stopPropagation()\n        }\n        if (myRef4 && myRef4.current) {\n            myRef4.current.addEventListener('touchstart', handler, {\n                passive: false,\n            })\n            myRef4.current.addEventListener('touchmove', handler, {\n                passive: false,\n            })\n            addDragStep()\n        }\n\n        return () => {\n            if (myRef4 && myRef4.current) {\n                myRef4.current.removeEventListener('touchstart', handler)\n                myRef4.current.removeEventListener('touchmove', handler)\n            }\n        }\n    }, [Boolean(myRef4 && myRef4.current)])\n    const resizeStyle = {\n        height: '20px',\n        width: '20px',\n        background: '#eee',\n        border: '1px #ccc solid',\n        borderRadius: '10px',\n        zIndex: 1,\n        transform: 'scale(' + 1 / scale + ')',\n        //    transformOrigin: 'bottom left',\n    }\n    return el &&\n        !el.temp &&\n        (!el.unsorted || (el.unsorted && el.children.length > 0)) ? (\n        <div>\n            {el.type !== 'profile' && (\n                <Line\n                    start={myRef2}\n                    end={myRef1}\n                    collapsed={props.collapsed}\n                    el={el}\n                />\n            )}\n            <div\n                ref={myRef4}\n                style={{\n                    position: el.type === 'profile' ? 'relative' : 'absolute',\n                }}\n            >\n                <Rnd\n                    scale={scale}\n                    default={el.type !== 'profile' && el.sizePos}\n                    disableDragging={\n                        el.type === 'profile' ||\n                        editingFolder ||\n                        !editorMode ||\n                        el.locked\n                    }\n                    enableResizing={\n                        el.type !== 'profile' && editorMode && !el.locked\n                    }\n                    resizeHandleStyles={\n                        selectedBox === id\n                            ? {\n                                  bottomLeft: resizeStyle,\n                                  bottomRight: resizeStyle,\n                                  topLeft: resizeStyle,\n                                  topRight: resizeStyle,\n                              }\n                            : {}\n                    }\n                    onMouseDown={e => {\n                        if (editorMode) {\n                            if (changeParentMode) {\n                                changeParentMM(changeParentMode, id)\n                                setChangeParentMode('')\n                            } else {\n                                setSelectedBox(id)\n                            }\n                        }\n                    }}\n                    style={{\n                        outline:\n                            templateMasterBoxId === id\n                                ? '1px solid green'\n                                : selectedBox === id\n                                ? '1px solid blue'\n                                : 'none',\n                        // overflow: 'hidden',\n                    }}\n                    onDrag={(e, data) => {\n                        props.addDragStep()\n                        dragHandler(id, data, setSizepos)\n                    }}\n                    onResize={(e, dir, elRef, delta, position) => {\n                        props.addDragStep()\n                        resizeHandler(id, elRef, position, setSizepos)\n                    }}\n                    cancel=\".buttonsMM\"\n                >\n                    <div\n                        ref={myRef1}\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            position: 'relative',\n                            // background: 'white',\n                        }}\n                    >\n                        <ChooseWrapMM\n                            el={el}\n                            id={id}\n                            selectedBox={selectedBox}\n                            scale={scale}\n                            editingFolder={editingFolder}\n                            editingElement={editingElement}\n                            selectedIndex={selectedIndex}\n                            setSelectedIndex={setSelectedIndex}\n                            setEditingElement={setEditingElement}\n                            setEditingFolder={setEditingFolder}\n                            setChosenResource={setChosenResource}\n                            editorMode={editorMode}\n                            setChangeParentMode={setChangeParentMode}\n                            changeParentMode={changeParentMode}\n                            editorMode={editorMode}\n                            setAddBlockOpen={setAddBlockOpen}\n                            setSelectedBox={setSelectedBox}\n                        />\n                    </div>\n                </Rnd>\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        transform:\n                            'translate(' +\n                            el.sizePos.x +\n                            'px, ' +\n                            el.sizePos.y +\n                            'px)',\n                    }}\n                >\n                    {el.children &&\n                        el.children.map(itemId => (\n                            <ConnectedContainerMM\n                                key={itemId}\n                                id={itemId}\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                myRef2={myRef1}\n                                collapsed={props.collapsed || el.collapsed}\n                                editorMode={editorMode}\n                                setChangeParentMode={setChangeParentMode}\n                                changeParentMode={changeParentMode}\n                                setAddBlockOpen={setAddBlockOpen}\n                            />\n                        ))}\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        el: state.structureMM.items[ownProps.id],\n        structure: state.structureMM,\n        scale: state.scaleMM,\n        templateMasterBoxId: state.templateMasterBoxId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setSizepos: (id, sizePos) => dispatch(actions.setSizepos(id, sizePos)),\n        changeParentMM: (childId, parentId) =>\n            dispatch(actions.changeParentMM(childId, parentId)),\n    }\n}\n\nconst ConnectedContainerMM = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ContainerMM)\n\nexport default ConnectedContainerMM\n","export default [\n    {\n        name: 'Transparent',\n        items: {\n            parent: {\n                type: 'folder',\n                children: [],\n                parent: '',\n                sizePos: {\n                    x: 600,\n                    y: 0,\n                    width: 200,\n                    height: 200,\n                },\n                bgColor: { r: 255, g: 255, b: 255, a: 0 },\n                tempId: 't0',\n            },\n        },\n        vars: [],\n    },\n    {\n        name: 'With background',\n        items: {\n            parent: {\n                type: 'folder',\n                parent: '',\n                sizePos: {\n                    x: 600,\n                    y: 0,\n                    width: 200,\n                    height: 200,\n                },\n                bgColor: { r: 255, g: 255, b: 255, a: 1 },\n                children: [],\n                tempId: 't0',\n            },\n        },\n        vars: [\n            {\n                id: 'parent',\n                name: 'bgColor',\n                title: 'Set background',\n            },\n            {\n                id: 'parent',\n                name: 'radius',\n                title: 'Set corners',\n            },\n        ],\n    },\n]\n","import React, { useState } from 'react'\n\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport addBlocksEmpty from './addBlocksEmpty'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst AddBlockMM = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { addBlockOpen, setAddBlockOpen } = props\n\n    return (\n        <DialogFullscreen\n            open={addBlockOpen}\n            close={() => setAddBlockOpen(false)}\n            title=\"Add block\"\n        >\n            <div style={{ background: '#f5f5f5', flex: 1 }}>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    Empty\n                </Typography>\n                <Paper\n                    style={{\n                        padding: '15px',\n                        paddingBottom: '10px',\n                    }}\n                >\n                    {addBlocksEmpty.map(folder => {\n                        return (\n                            <Card\n                                style={{\n                                    cursor: 'pointer',\n                                    flexShrink: 0,\n                                    // width: '100px',\n                                    marginRight: '10px',\n                                    position: 'relative',\n                                    minHeight: '160px',\n                                    display: 'inline-block',\n                                }}\n                            >\n                                <CardActionArea\n                                    style={{\n                                        // height: '100%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                    onClick={() => {\n                                        props.addBlockTemplate(\n                                            props.selectedBox,\n                                            folder\n                                        )\n                                        setAddBlockOpen(false)\n                                    }}\n                                >\n                                    <CardContent\n                                        style={{\n                                            flex: 1,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                    />\n                                    <CardActions>{folder.name}</CardActions>\n                                </CardActionArea>\n                            </Card>\n                        )\n                    })}\n                </Paper>\n            </div>\n        </DialogFullscreen>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addBlockTemplate: (parentId, folder) =>\n            dispatch(actions.addBlockTemplate(parentId, folder)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(AddBlockMM)\n","import { Button, IconButton } from '@material-ui/core'\nimport { ArrowBack, ArrowForward, Close, Done } from '@material-ui/icons'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nconst TemplateMaster = props => {\n    const {\n        templateFolderId,\n        templateFolder,\n        templateStep,\n        setTemplateDefault,\n        structure,\n        setTemplateStepPrev,\n        setTemplateStepNext,\n        setSelectedBox,\n        setTemplateMasterBoxidAndVar,\n    } = props\n\n    const parentEl = structure.items[templateFolderId]\n    const currentVar = templateFolder.vars[templateStep]\n\n    if (!currentVar || !parentEl) {\n        setTemplateDefault()\n        return null\n    }\n\n    let el = null\n    let elId = ''\n    if (currentVar.id === 'parent') {\n        elId = templateFolderId\n        el = parentEl\n    } else {\n        for (let item of parentEl.children) {\n            if (structure.items[item].tempId === currentVar.id) {\n                elId = item\n                el = structure.items[item]\n            }\n        }\n    }\n\n    if (!el || !elId) {\n        setTemplateDefault()\n        return null\n    }\n\n    useEffect(() => {\n        setSelectedBox(elId)\n        setTemplateMasterBoxidAndVar(elId, currentVar)\n    }, [templateStep])\n\n    return (\n        <div style={{ flex: 1, display: 'flex' }}>\n            <div\n                style={{\n                    flex: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <div>Step {templateStep + 1}</div>\n                <div>{currentVar.title}</div>\n            </div>\n            <div>\n                <Button\n                    onClick={() => setTemplateStepPrev()}\n                    disabled={templateStep <= 0}\n                >\n                    Back\n                </Button>\n                <Button\n                    onClick={() => setTemplateStepNext()}\n                    disabled={templateFolder.vars.length <= templateStep + 1}\n                >\n                    Next\n                </Button>\n                <IconButton onClick={() => setTemplateDefault()}>\n                    <Close />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        templateFolderId: state.templateFolderId,\n        templateFolder: state.templateFolder,\n        templateStep: state.templateStep,\n        structure: state.structureMM,\n        templateMasterPaused: state.templateMasterPaused,\n    }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveStructure: () => dispatch(actions.saveStructure()),\n        setTemplateDefault: () => dispatch(actions.setTemplateDefault()),\n        setTemplateStepPrev: () => dispatch(actions.setTemplateStepPrev()),\n        setTemplateStepNext: () => dispatch(actions.setTemplateStepNext()),\n        setTemplateMasterBoxidAndVar: (boxId, varObj) =>\n            dispatch(actions.setTemplateMasterBoxidAndVar(boxId, varObj)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TemplateMaster)\n","import React, { useEffect, useState } from 'react'\n\nimport { TransformComponent } from 'react-zoom-pan-pinch'\nimport ContainerMM from './ContainerMM'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport * as actions from '../../store/actions'\nimport 'tui-image-editor/dist/tui-image-editor.css'\n\nimport BottomMenu from '../../components/Layout/BottomMenu'\nimport {\n    Box,\n    Button,\n    Divider,\n    Fab,\n    FormControlLabel,\n    IconButton,\n    makeStyles,\n    Paper,\n    Slider,\n    Snackbar,\n    Switch,\n} from '@material-ui/core'\nimport {\n    Add,\n    ArrowBack,\n    Edit,\n    Fullscreen,\n    MyLocation,\n    Remove,\n    Save,\n} from '@material-ui/icons'\n\nimport Layout from '../../components/Layout/Layout'\nimport { withRouter, Prompt } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useBeforeunload } from 'react-beforeunload'\nimport { SketchPicker } from 'react-color'\nimport AddBlockMM from './AddBlockMM'\nimport TemplateMaster from './TemplateMaster'\n\nconst useStyles = makeStyles(theme => ({\n    edit: {\n        position: 'fixed',\n        bottom: '12px',\n        right: '12px',\n        margin: 0,\n    },\n\n    save: {\n        position: 'fixed',\n        bottom: theme.spacing(11),\n        right: '12px',\n    },\n}))\n\nconst MindMap = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [selectedBox, setSelectedBox] = useState('')\n\n    const [changeParentMode, setChangeParentMode] = useState('')\n    const [editorMode, setEditorMode] = useState(false)\n    const [addBlockOpen, setAddBlockOpen] = useState(false)\n    const {\n        saveStructure,\n        account,\n        profile,\n        setEventIsFromDraggable,\n        scale,\n        structureNotSaved,\n        resetTransform,\n        templateFolderId,\n        zoomIn,\n        zoomOut,\n    } = props\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n    useBeforeunload(() => structureNotSaved && \"You'll lose your data!\")\n\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n        return () => {\n            document.body.style.overflow = 'auto'\n        }\n    }, [])\n\n    useEffect(() => {\n        setEditorMode(false)\n    }, [isOwner])\n\n    // const [value, setValue] = useState(scale)\n\n    // useEffect(() => {\n    //     if (scale !== value) setScale(value)\n    // }, [value])\n\n    // useEffect(() => {\n    //     if (scale !== value) setValue(scale)\n    // }, [scale])\n\n    const handleMouseDown = e => {\n        if (editorMode) {\n            const path = e.nativeEvent.composedPath()\n            for (let el of path) {\n                if (el) {\n                    if (\n                        el.getAttribute('id') === 'panWrap' ||\n                        el === document.body\n                    ) {\n                        setEventIsFromDraggable(false)\n                        return\n                    }\n                    const classN = el.getAttribute('class')\n                    if (\n                        classN &&\n                        (classN.indexOf('react-draggable') > -1 ||\n                            classN.indexOf('tinyEditorText_') > -1 ||\n                            classN.indexOf('demo-toolbar-absolute') > -1 ||\n                            classN.indexOf('noPan') > -1)\n                    ) {\n                        setEventIsFromDraggable(true)\n                        return\n                    }\n                }\n            }\n        }\n        setEventIsFromDraggable(false)\n    }\n\n    const handleClick = e => {\n        // if (!changeParentMode) {\n        //     if (editorMode) {\n        //         const path = e.nativeEvent.composedPath()\n        //         for (let el of path) {\n        //             if (el) {\n        //                 if (\n        //                     el.getAttribute('id') === 'panWrap' ||\n        //                     el === document.body\n        //                 ) {\n        //                     // setChosenResource('')\n        //                     setSelectedBox('')\n        //                     return\n        //                 }\n        //                 const classN = el.getAttribute('class')\n        //                 if (\n        //                     classN &&\n        //                     (classN.indexOf('react-draggable') > -1 ||\n        //                         classN.indexOf('tinyEditorText_') > -1)\n        //                 ) {\n        //                     return\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     // setChosenResource('')\n        //     setSelectedBox('')\n        // }\n    }\n\n    return (\n        <>\n            <Prompt\n                when={structureNotSaved}\n                message=\"You have unsaved changes, are you sure you want to leave?\"\n            />\n            <div\n                style={{\n                    display: 'flex',\n                    width: '100%',\n                    height: '100%',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        background: 'white',\n                        zIndex: 1,\n                        // display: 'flex',\n                    }}\n                >\n                    {isOwner ? (\n                        <>\n                            {templateFolderId ? (\n                                <Layout\n                                    noContent\n                                    customHeader={\n                                        <TemplateMaster\n                                            setSelectedBox={setSelectedBox}\n                                        />\n                                    }\n                                    color=\"#dcffe0\"\n                                />\n                            ) : (\n                                <div id=\"anchorTR\" />\n                            )}\n                            <div\n                                style={{\n                                    position: 'fixed',\n                                    left: '12px',\n                                    bottom: '12px',\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Paper\n                                    elevation={3}\n                                    style={{ marginBottom: '3px' }}\n                                >\n                                    <IconButton\n                                        onClick={resetTransform}\n                                        size=\"small\"\n                                    >\n                                        <MyLocation />\n                                    </IconButton>\n                                </Paper>\n                                <Paper elevation={3}>\n                                    <IconButton onClick={zoomIn} size=\"small\">\n                                        <Add />\n                                    </IconButton>\n                                    <Divider />\n                                    <IconButton onClick={zoomOut} size=\"small\">\n                                        <Remove />\n                                    </IconButton>\n                                </Paper>\n                            </div>\n                            <Paper elevation={3} className={classes.edit}>\n                                <FormControlLabel\n                                    style={{ margin: 0 }}\n                                    control={\n                                        <Switch\n                                            checked={editorMode}\n                                            onChange={event => {\n                                                setEditorMode(\n                                                    event.target.checked\n                                                )\n                                                setSelectedBox('')\n                                            }}\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={t('g.edit')}\n                                    labelPlacement=\"bottom\"\n                                />\n                            </Paper>\n                            {/* <Paper className={classes.edit} elevation={3}>\n                                <IconButton\n                                    color={editorMode ? 'primary' : 'default'}\n                                    onClick={() => {\n                                        setEditorMode(!editorMode)\n                                        setSelectedBox('')\n                                    }}\n                                    size=\"medium\"\n                                >\n                                    <Edit fontSize=\"large\" />\n                                </IconButton>\n                            </Paper> */}\n                            {isOwner && editorMode && structureNotSaved && (\n                                <Fab\n                                    onClick={saveStructure}\n                                    color=\"primary\"\n                                    className={classes.save}\n                                >\n                                    <Save />\n                                </Fab>\n                            )}\n                        </>\n                    ) : (\n                        <Layout noContent />\n                    )}\n                </div>\n\n                <div\n                    style={{\n                        overflow: 'hidden',\n                        flex: 1,\n                        display: 'flex',\n                    }}\n                    id=\"panWrap\"\n                    onMouseDown={handleMouseDown}\n                    onTouchStart={handleMouseDown}\n                    onTouchEnd={() => setEventIsFromDraggable(false)}\n                    onMouseUp={() => setEventIsFromDraggable(false)}\n                    onClick={handleClick}\n                >\n                    <TransformComponent>\n                        <div\n                            style={{\n                                cursor: 'grabbing',\n                            }}\n                        >\n                            <ContainerMM\n                                id=\"b0\"\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                editorMode={editorMode}\n                                changeParentMode={changeParentMode}\n                                setChangeParentMode={setChangeParentMode}\n                                setAddBlockOpen={setAddBlockOpen}\n                            />\n                        </div>\n                    </TransformComponent>\n                </div>\n            </div>\n\n            <BottomMenu />\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={Boolean(changeParentMode)}\n                message={t('g.chooseParent')}\n                action={\n                    <React.Fragment>\n                        <Button\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={() => setChangeParentMode('')}\n                        >\n                            {t('g.UNDO')}\n                        </Button>\n                    </React.Fragment>\n                }\n            />\n            <AddBlockMM\n                addBlockOpen={addBlockOpen}\n                setAddBlockOpen={setAddBlockOpen}\n                selectedBox={selectedBox}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        structureNotSaved: state.structureNotSaved,\n        scale: state.scaleMM,\n        templateFolderId: state.templateFolderId,\n    }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveStructure: () => dispatch(actions.saveStructure()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MindMap)\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { TransformWrapper } from 'react-zoom-pan-pinch'\nimport MindMap from './MindMap'\nimport * as actions from '../../store/actions'\nimport { throttle } from 'throttle-debounce'\n\nconst MindMapWrap = props => {\n    const [eventIsFromDraggable, setEventIsFromDraggable] = useState(false)\n    const throttleFunc = throttle(10, () => props.addDragStep())\n    return (\n        <TransformWrapper\n            defaultScale={0.5}\n            defaultPositionX={200}\n            defaultPositionY={100}\n            options={{\n                limitToBounds: false,\n                minScale: 0.1,\n                maxScale: 2,\n                disabled: eventIsFromDraggable,\n            }}\n            pan={{\n                velocity: false,\n            }}\n            wheel={{\n                step: 300,\n            }}\n            onZoomChange={value => {\n                props.setScaleMM(value.scale)\n                throttleFunc()\n            }}\n            onPanning={throttleFunc}\n            onPanningStop={throttleFunc}\n            onPinching={throttleFunc}\n            onPinchingStop={throttleFunc}\n            doubleClick={{\n                disabled: true,\n            }}\n            zoomIn={{\n                step: 3,\n                animation: false,\n            }}\n            zoomOut={{\n                step: 3,\n                animation: false,\n            }}\n        >\n            {({ resetTransform, zoomIn, zoomOut }) => (\n                <MindMap\n                    setEventIsFromDraggable={setEventIsFromDraggable}\n                    zoomIn={zoomIn}\n                    zoomOut={zoomOut}\n                    resetTransform={resetTransform}\n                />\n            )}\n        </TransformWrapper>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setScaleMM: value => dispatch(actions.setScaleMM(value)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(MindMapWrap)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Blog from './containers/Blog/Blog'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport MindMapWrap from './containers/MindMap/MindMapWrap'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route\n                path=\"/\"\n                exact\n                component={isAuthed ? MindMapWrap : Explore}\n            />\n            {isAuthed && <Route path=\"/explore\" exact component={Explore} />}\n            {/* <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} /> */}\n            <Route path=\"/profile\" component={MindMapWrap} />\n            {isAuthed && <Route path=\"/events\" component={DashboardPosts} />}\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n    recentShown: false,\n    dragStep: 0,\n    structureMM: {\n        currentId: 9,\n        items: {\n            b0: {\n                type: 'profile',\n                children: ['b00'],\n                parent: '',\n                sizePos: { x: 0, y: 0 },\n            },\n            b00: {\n                type: 'folder',\n                unsorted: true,\n                children: [],\n                innerChildren: [],\n                parent: 'b0',\n                sizePos: {\n                    x: -600,\n                    y: -300,\n                    width: 200,\n                    height: 200,\n                },\n            },\n        },\n    },\n    structureNotSaved: false,\n    scaleMM: 0.5,\n    templateFolder: null,\n    templateFolderId: '',\n    templateStep: 0,\n    templateMasterPaused: false,\n    templateMasterBoxId: '',\n    templateMasterVar: null,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'progress',\n                'reward',\n                'activity',\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    ADD_DRAG_STEP: (state: Object) => {\n        state.dragStep = state.dragStep + 1\n    },\n    SET_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM = action.structure\n        if (!action.noNeedToSave) state.structureNotSaved = true\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n    SET_RECENT_SHOWN: (state: Object) => {\n        state.recentShown = true\n    },\n    ADD_TO_STRUCTURE: (state: Object, action: Object) => {\n        if (\n            state.profile._id === action.accountId &&\n            state.structureMM.items[action.structureId]\n        ) {\n            const parentId = state.structureMM.items[action.structureId].parent\n            if (state.structureMM.items[parentId]) {\n                state.structureMM.items[parentId] = {\n                    ...state.structureMM.items[parentId],\n                    children: [\n                        ...state.structureMM.items[parentId].children,\n                        action.resourceId,\n                    ],\n                }\n                state.structureMM.items[action.resourceId] = {\n                    ...state.structureMM.items[action.structureId],\n                    id: action.resourceId,\n                    temp: false,\n                }\n                state.structureNotSaved = true\n            }\n        }\n        delete state.structureMM.items[action.structureId]\n    },\n    STRUCTURE_IS_SAVED: (state: Object) => {\n        state.structureNotSaved = false\n    },\n    ADD_BLOCK: (state: Object, action: Object) => {\n        const id = state.structureMM.items[action.id] ? action.id : 'b0'\n\n        state.structureMM.items[id].children.push(\n            'b' + state.structureMM.currentId\n        )\n        state.structureMM.items['b' + state.structureMM.currentId] = {\n            type: 'folder',\n            blockType: action.blockType,\n            children: [],\n            parent: id,\n            innerChildren: [],\n            sizePos: {\n                x: 500,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n            textValue: action.blockType === 'text' ? 'Add some text' : '',\n            imageValue:\n                action.blockType === 'image'\n                    ? 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg'\n                    : '',\n        }\n        state.structureMM.currentId++\n        state.structureNotSaved = true\n    },\n    SET_SIZEPOS: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id].sizePos = {\n                ...state.structureMM.items[action.id].sizePos,\n                ...action.sizePos,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    SAVE_VALUE_MM: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id] = {\n                ...state.structureMM.items[action.id],\n                ...action.value,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    ADD_EMPTY_TO_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM.items[action.id] = {\n            type: action.resType,\n            children: [],\n            parent: action.selectedBox,\n            temp: true,\n            sizePos: {\n                x: 500,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n        }\n    },\n\n    DELETE_BLOCK: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            const parentId = state.structureMM.items[action.id].parent\n            for (let child of state.structureMM.items[action.id].children) {\n                state.structureMM.items[child].parent = parentId\n            }\n            state.structureMM.items[parentId].children = [\n                ...state.structureMM.items[parentId].children,\n                ...state.structureMM.items[action.id].children.filter(item => {\n                    const el = state.structureMM.items[item]\n                    return !el.sub || el.type !== folder\n                }),\n            ]\n\n            for (let item of state.structureMM.items[action.id].children) {\n                const el = state.structureMM.items[item]\n                if (el.sub) {\n                    if (el.type !== folder) {\n                        state.structureMM.items[item].sub = false\n                    } else {\n                        delete state.structureMM.items[item]\n                    }\n                }\n            }\n            delete state.structureMM.items[action.id]\n            state.structureNotSaved = true\n        }\n    },\n    CHANGE_PARENT_MM: (state: Object, action: Object) => {\n        if (\n            state.structureMM.items[action.childId] &&\n            state.structureMM.items[action.parentId]\n        ) {\n            if (action.parentId !== action.childId) {\n                const isDecedant = (parentId, id) => {\n                    if (state.structureMM.items[parentId].children.includes(id))\n                        return true\n                    else {\n                        for (let child of state.structureMM.items[parentId]\n                            .children) {\n                            const result = isDecedant(child, id)\n                            if (result) {\n                                return true\n                            }\n                        }\n                    }\n                }\n                if (!isDecedant(action.childId, action.parentId)) {\n                    const childParentId =\n                        state.structureMM.items[action.childId].parent\n                    state.structureMM.items[\n                        childParentId\n                    ].children = state.structureMM.items[\n                        childParentId\n                    ].children.filter(item => item !== action.childId)\n                    state.structureMM.items[action.parentId].children.push(\n                        action.childId\n                    )\n                    state.structureMM.items[action.childId].parent =\n                        action.parentId\n                    state.structureNotSaved = true\n                }\n            }\n        }\n    },\n    SET_SCALEMM: (state: Object, action: Object) => {\n        state.scaleMM = action.value\n    },\n    ADD_BLOCK_TEMPLATE: (state: Object, action: Object) => {\n        const parentId = 'b' + state.structureMM.currentId\n        if (action.folder.vars.length > 0) {\n            state.templateFolder = action.folder\n            state.templateFolderId = parentId\n        } else {\n            state.templateFolder = null\n            state.templateFolderId = ''\n        }\n        state.templateStep = 0\n\n        state.structureMM.currentId++\n        state.structureMM.items[parentId] = {\n            ...action.folder.items.parent,\n            children: [],\n            parent: action.parentId,\n        }\n        state.structureMM.items[action.parentId].children.push(parentId)\n        for (let sourceId of action.folder.items.parent.children) {\n            const childId = 'b' + state.structureMM.currentId\n            state.structureMM.currentId++\n            state.structureMM.items[childId] = {\n                ...action.folder.items[sourceId],\n                parent: parentId,\n                locked: action.folder.vars.length === 0,\n            }\n            state.structureMM.items[parentId].children.push(childId)\n        }\n    },\n    SET_TEMPLATE_DEFAULT: (state: Object) => {\n        state.templateFolder = null\n        state.templateFolderId = ''\n        state.templateStep = 0\n        state.templateMasterBoxId = ''\n        state.templateMasterVar = null\n    },\n    SET_TEMPLATE_STEP_NEXT: (state: Object) => {\n        if (\n            state.templateFolder &&\n            state.templateFolder.vars.length > state.templateStep + 1\n        )\n            state.templateStep = state.templateStep + 1\n        else {\n            state.templateFolder = null\n            state.templateFolderId = ''\n            state.templateStep = 0\n            state.templateMasterBoxId = ''\n            state.templateMasterVar = null\n        }\n    },\n    SET_TEMPLATE_STEP_PREV: (state: Object) => {\n        if (state.templateStep > 0) state.templateStep = state.templateStep - 1\n    },\n    SET_TEMPLATE_MASTER_PAUSED: (state: Object, action: Object) => {\n        state.templateMasterPaused = action.value\n    },\n    SET_TEMPLATE_MASTER_BOXID_AND_VAR: (state: Object, action: Object) => {\n        state.templateMasterBoxId = action.boxId\n        state.templateMasterVar = action.varObj\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\n// pick a date util library\nimport DayUtils from '@date-io/dayjs'\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <MuiPickersUtilsProvider utils={DayUtils}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <ThemeProvider theme={outerTheme}>\n                    <App />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    </MuiPickersUtilsProvider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}