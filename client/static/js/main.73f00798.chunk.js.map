{"version":3,"sources":["components/Layout/LoginModal.module.css","components/Layout/Layout.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Welcome/Welcome.module.scss","containers/Auth/AuthTest.tsx","components/UI/TinyEditor.tsx","components/UI/ReadMore.tsx","components/UI/HorizontalScrollList.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","components/MasonryCard.tsx","components/UI/DialogFullscreen.tsx","utils/getAvatar.js","components/UserButton/UserButton.tsx","utils/pullData.js","components/Layout/LoginModal.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/UI/WeekDayPicker.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/Post/AddMessage.tsx","components/FollowButton.tsx","components/Post/EditPost.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/UI/ShareButton.tsx","components/ResourceHeader.tsx","components/ResourceCore.tsx","components/MapPosition/MapPosition.tsx","components/Post/AddPost.tsx","components/Post/Post.tsx","components/Post/ResourcePosts.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","containers/Blog/Blog.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","components/ProgressButton.tsx","containers/Explore/MapSettings.tsx","components/Welcome/index.tsx","containers/Explore/Explore.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Blog/BlogArticle.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Background","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","bottomMenu","logo","Dots","Avatar","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","step","howWorks","Cookies","TinyEditor","props","contentState","t","useTranslation","value","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","react_default","a","createElement","react_draft_wysiwyg","Object","assign","placeholder","readOnly","wrapperClassName","editorClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbar","inline","inDropdown","list","textAlign","link","history","toolbarHidden","options","ReadMore","_useState","useState","_useState2","slicedToArray","overflow","setOverflow","_useState3","_useState4","open","setOpen","descRef","useRef","useEffect","current","offsetHeight","initialHeight","content","contentEditor","children","style","maxHeight","position","paddingBottom","ref","dangerouslySetInnerHTML","__html","bottom","width","transition","opacity","backgroundImage","height","left","Button","color","onClick","addTitle","useStyles","makeStyles","theme","createStyles","title","fontSize","margin","textTransform","fontWeight","addBox","palette","primary","main","display","alignItems","HorizontalScrollList","classes","items","length","empty","customEmpty","withAdd","Fragment","Typography","className","gutterBottom","Paper","padding","Box","overflowX","Card","borderRadius","cursor","flexShrink","marginRight","minHeight","CardActionArea","justifyContent","onAdd","CardContent","flex","flexDirection","AddCircle","map","item","index","marginTop","bottomContent","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","data","logout","push","home","success","errorCode","message","warning","error","successCode","status","cookies","tryAuth","token","dispatch","sessionStorage","setItem","get","rememberMe","remove","path","userId","jwt_decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","id","type","setData","setPageTitle","setFriendSearchResult","getListOfNeededResources","notFoundResources","store","requestedResources","user","account","progress","reward","activity","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","currentAccount","_i","_arr","concat","toConsumableArray","progresses","followProgresses","recent","filter","resourceType","resourceId","_step","_iterator","getListOfNeededResources_createForOfIteratorHelper","followPosts","s","n","done","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_i5","_arr5","_step5","_iterator5","rewardId","_step6","_iterator6","_step7","_iterator7","_step8","_iterator8","_i6","_arr6","currentGoal","participants","owner","users","likes","_step9","_iterator9","_step10","_iterator10","posts","_i7","_arr7","oldRewards","_i8","_arr8","oldActivities","currentPosts","_step11","_iterator11","postEl","_step12","_iterator12","parent","parentType","parentId","currentReward","_i9","_arr9","_step13","_iterator13","currentActivity","_i10","_arr10","_step14","_iterator14","friendSearchResult","_step15","_iterator15","reduce","obj","attr","Array","from","Set","includes","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","state","webSocket","checkData","__v","requestResource","check","getResourcesToMonitor","addData","listOfGroups","ConnectWebsocket","markNotFoundResource","ids","newNotFound","_this","setState","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","readyState","send","JSON","stringify","messageCode","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","set","expires","Date","getTime","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","notRequestedIds","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followResource","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","placeholderImages","getPH","matches","match","imagePH","parseInt","Math","abs","round","x","makeRand","images","picture","objectSpread","maxWidth","boxShadow","src","noLink","wordBreak","body","marginLeft","react_router_dom","to","onClickLink","TransitionComponent","Slide","direction","appBar","spacing","DialogFullscreen","Dialog","fullScreen","onClose","scroll","AppBar","Toolbar","IconButton","edge","aria-label","Close","variant","save","autoFocus","saveText","getAvatar","nickname","version","friendDataExp","getUserData","userName","text","name","typography","noWrap","userAvatar","ava","avatar","image","size","noClick","noName","badge","onlyName","stopPropagation","Group","noAva","span","es_button","pullData","callback","location","pathname","then","catch","cookieConsent","setCookieConsent","checkCookieConsent","remeberMeParam","basicURL","loginVisible","setLoginVisible","lineHeight","marginBottom","dist","window","FormControlLabel","control","Checkbox","checked","onChange","label","Divider","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","MenuItem","minimized","asText","preventDefault","wsActions","noFollow","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","root","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","target","search","SearchOutlined","components_FriendCard","language","languageText","breakpoints","up","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","drawCircle","drawMarker","keepCurrentZoomLevel","setView","flyTo","addTo","navigator","geolocation","getCurrentPosition","withLeaflet","withTranslation","uploadFile","file","filename","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","goalCategories","GoalCategories","category","Chip","nolim","pop","days","console","log","day","sort","Select","divider","EditResource","leafletElement","ELG","useMapBounds","GestureHandling","resource","positionIsProvided","coordinates","setPosition","initialPosition","setInitialPosition","_useState5","_useState6","positionRead","setPositionRead","_useState7","descriptionText","_useState8","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","mapClick","latlng","lat","lng","setFieldsValue","nomap","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","goToResource","autoComplete","initialValues","repeat","dueDate","labelCol","wrapperCol","onValuesChange","changedFields","allValues","Item","valuePropName","UI_ImagePickerMulti","rules","getValueFromEvent","Input","fullWidth","DatePicker","format","KeyboardButtonProps","EditResource_GoalCategories","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","UI_WeekDayPicker","Map","center","zoom","onclick","zIndex","gestureHandling","onlocationfound","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","react_leaflet_fullscreen_dist_default","speedDial","right","login","border","blogLabel","blogIcon","lastNotifications","isConnectingWS","recentShown","markRecentShown","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","speedDialOpen","setSpeedDialOpen","_useState9","_useState10","recentVisible","setRecentVisible","_useState11","_useState12","hideRecentTimeout","setHideRecentTimeout","openLink","isActivating","numberOfUnseenNots","Layout_createForOfIteratorHelper","not","notId","lastSeenNot","logedIn","scrollTrigger","useScrollTrigger","timeout","removeGutters","paths","checkPagePath","hide","cll","white","background","appear","in","elevation","LinearProgress","top","tabIndex","header","Link","components_LanguageSwitcher_LanguageSwitcher","Book","disableGutters","SpeedDial","ariaLabel","icon","SpeedDialIcon","reason","focus","onOpen","SpeedDialAction","Person","tooltipTitle","whiteSpace","tooltipOpen","Star","pointerEvents","onMouseDown","onScroll","onTouchStart","urlDir","CardMedia","backgroundSize","Badge","badgeContent","HomeRounded","Search","History","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","ImageCarousel","carousel","dots","autoplay","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","&>div::after","&>div::before","& textarea","setImageLoading","replyToUser","setMessageText","isTop","TextField","multiline","messageValue","replyToMessage","editedMessage","replyTo","editingMessage","onSend","spanStyle","showUploadList","FollowButton","EditPost","handleSave","handleCancel","ConfirmAction","confirm","dayjs","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","setEditingMessage","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","date","fromNow","startMessage","messageType","Post_EditPost","anchorOrigin","vertical","horizontal","overlap","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","alertVisible","setAlertVisible","setFriends","basicProps","href","media","leaveDelay","startIcon","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","ResourceHeader","followersVisible","setFollowersVisible","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","toString","getDropDownMeuItems","getStatusText","UI_ShareButton","progressId","progressName","ThemeProvider","finishDate","navi","ownProps","pathParts","ResourceCore_createForOfIteratorHelper","setResource","setPosts","Helmet","components_ResourceHeader","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","reverse","postOpen","setPostOpen","isPostPage","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","ThumbUpOutlined","AddCommentOutlined","messages","Post_createForOfIteratorHelper","getNumberOfMessages","Post_AddPost","b","components_Post_Post","TabPanel","other","objectWithoutProperties","role","hidden","aria-labelledby","a11yProps","aria-controls","setReward","currentTab","setCurrentTab","components_ResourceCore","Tabs","indicatorColor","textColor","Tab","description","components_MapPosition_MapPosition","Post_ResourcePosts","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","isOwner","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","activityId","EditProgressReward","initialValue","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","customTheme","purple","MuiListItem","secondaryAction","paddingRight","paddingLeft","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","year","dayOfYear","startOf","endOf","week","month","now","diff","stageId","getNowStageId","tabs","defaultActiveKey","findIndex","stage","stageDate","getStatus","dismissed","failBy","approvedBy","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","setProgress","Goal_TabPanel","components_Activities_Activities","components_Rewards_Rewards","setActivity","Activity_TabPanel","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","flexGrow","setTitle","all","setAll","method","query","json","Grid","container","xs","md","xl","subtitle","published_at","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","dataProp","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","positionChanged","setPositionChanged","radius","setRadius","changed","setChanged","withMap","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","Slider","valueLabelDisplay","whenReady","onzoomend","CircleMarker","frameBorder","allowFullScreen","allow","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","categories","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","Explore_MapSettings","components_Welcome","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","sectionTitle","increaseAvatarV","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","startProgressVisible","setStartProgressVisible","profileId","Profile_createForOfIteratorHelper","sub","loadedProgresses","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","profileName","components_Transactions_Transactions","newValue","scrollButtons","components_ProgressButton","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","p","v","stageName","itemName","price","buyer","as","getStageName","addedAccounts","ac","droppedAccounts","for","action","rewardName","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","_newOldPosts","resultPosts","neededPosts","nots","Dashboard_DashboardEvents","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","ReactHtmlParser","data-href","data-numposts","data-width","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","react_router","routes","exact","DashboardPosts","Explore","Goal","Reward","Activity","Profile","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","SET_RECENT_SHOWN","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","MM","y","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","useUtils_cfb96ac9","utils","DayUtils","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.73f00798.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\",\"bottomMenu\":\"Layout_bottomMenu__p7MZh\",\"logo\":\"Layout_logo__3_HwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\",\"step\":\"Welcome_step__3KDh2\",\"howWorks\":\"Welcome_howWorks__r5E6t\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    if (typeof props.value === 'string') {\n        const blocksFromHtml = htmlToDraft(props.value)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = props.value\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <Editor\n            placeholder={t('g.addSomeText')}\n            readOnly={props.readOnly}\n            // toolbarClassName=\"demo-toolbar-absolute\"\n            wrapperClassName=\"demo-wrapper\"\n            {...(!props.readOnly\n                ? { editorClassName: 'demo-editor' }\n                : { contentState: contentState })}\n            defaultContentState={contentState}\n            onContentStateChange={value => {\n                props.onEditorChange && props.onEditorChange(value)\n                props.onEditorChangePlain &&\n                    props.onEditorChangePlain(\n                        convertFromRaw(value).getPlainText(' ')\n                    )\n            }}\n            toolbar={{\n                inline: { inDropdown: true },\n                list: { inDropdown: true },\n                textAlign: { inDropdown: true },\n                link: { inDropdown: true },\n                history: { inDropdown: true },\n            }}\n            toolbarHidden={props.readOnly}\n            options={\n                !props.readOnly && [\n                    'inline',\n                    'blockType',\n                    'fontSize',\n                    'fontFamily',\n                    'list',\n                    'textAlign',\n                    'colorPicker',\n                    'link',\n                    'emoji',\n                    'remove',\n                    'history',\n                ]\n            }\n        />\n    )\n}\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                case 'reward created':\n                    message.success(t('processRes.rewardStarted'))\n                    break\n                case 'activity created':\n                    message.success(t('processRes.activityStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const markRecentShown = () => ({\n    type: 'SET_RECENT_SHOWN',\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentGoal\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                const reward = data.find(\n                    item => item._id === state.currentReward\n                )\n                if (reward) {\n                    dispatch(setData({ reward }))\n                }\n                break\n            case 'activity':\n                const activity = data.find(\n                    item => item._id === state.currentActivity\n                )\n                if (activity) {\n                    dispatch(setData({ activity }))\n                }\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","export default (props, notFoundResources) => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'goal')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'reward')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'activity')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(\n                    new Set(\n                        obj[attr].filter(\n                            item => !notFoundResources.includes(item)\n                        )\n                    )\n                )\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check1('reward', 'reward')\n    check1('activity', 'activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n    check('reward')\n    check('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport i18n from '../../translations/i18n'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n        notFoundResources: [],\n    }\n    markNotFoundResource = ids => {\n        const newNotFound = [...this.state.notFoundResources, ...ids]\n        this.setState({ notFoundResources: newNotFound })\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(i18n.t('processRes.success'))\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText || '/')\n                    break\n                case '404':\n                    message.error(i18n.t('processRes.404'))\n                    this.props.history.push(news.messageText || '/')\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'error':\n                    message.error(i18n.t('processRes.error'))\n                    break\n                case 'notFoundResource':\n                    this.markNotFoundResource(news._id)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            this.state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'reward':\n                check('reward')\n                break\n            case 'activity':\n                check('activity')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            'status',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import { Box } from '@material-ui/core'\nimport { relative } from 'path'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: '15px',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return (\n        <Box style={{ position: 'relative' }}>\n            {props.noLink ? (\n                <>\n                    {picture}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box style={{ flex: 1 }}>{props.body}</Box>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <>\n                    <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n                        {picture}\n                    </Link>\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Link\n                            to={props.onClickLink}\n                            style={{ cursor: 'pointer', flex: 1 }}\n                        >\n                            {props.body}\n                        </Link>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n        </Box>\n    )\n})\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.close}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {props.title}\n                    </Typography>\n                    {props.save && (\n                        <Button autoFocus color=\"inherit\" onClick={props.save}>\n                            {props.saveText || t('g.save')}\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n            {props.children}\n        </Dialog>\n    )\n}\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n\n            drawCircle: false,\n            drawMarker: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n            flyTo: true,\n        })\n        lc.addTo(map)\n        navigator.geolocation.getCurrentPosition(() => lc.start())\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst WeekDayPicker = props => {\n    const { t } = useTranslation()\n\n    const days =\n        props.language === 'ru' ? [1, 2, 3, 4, 5, 6, 0] : [0, 1, 2, 3, 4, 5, 6]\n    const value = props.value.map(item => parseInt(item))\n    console.log(value)\n    return days.map(day => (\n        <Chip\n            style={{ margin: '0px 10px 10px 0px' }}\n            size=\"small\"\n            label={t(\n                'g.' +\n                    (day === 0\n                        ? 'sun'\n                        : day === 1\n                        ? 'mon'\n                        : day === 2\n                        ? 'tue'\n                        : day === 3\n                        ? 'wed'\n                        : day === 4\n                        ? 'thu'\n                        : day === 5\n                        ? 'fri'\n                        : day === 6\n                        ? 'sat'\n                        : '')\n            )}\n            color={value.includes(day) ? 'primary' : 'default'}\n            onClick={() => {\n                props.onChange(\n                    value.includes(day)\n                        ? value.filter(item => item !== day)\n                        : [...value, day].sort()\n                )\n            }}\n        />\n    ))\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(WeekDayPicker)\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport WeekDayPicker from '../UI/WeekDayPicker'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const { resource, account, type } = props\n\n    const defPos = [40.689078, -74.044526]\n    const positionIsProvided =\n        resource && resource.position && resource.position.coordinates\n    const [position, setPosition] = useState(\n        positionIsProvided\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n    const [positionRead, setPositionRead] = useState(false)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type,\n            props.goToResource\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                        dueDate: new Date(),\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label={t('g.images')}\n                    valuePropName=\"images\"\n                    trigger=\"onValueChange\"\n                >\n                    <ImagePickerMulti />\n                </Form.Item>\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item\n                    label={t('g.desc')}\n                    name=\"description\"\n                    // rules={descriptionRules}\n                    trigger=\"onEditorChange\"\n                >\n                    <TinyEditor\n                        onEditorChangePlain={value =>\n                            setDescriptionPlain(value)\n                        }\n                    />\n                </Form.Item>\n\n                {type == 'goal' && (\n                    <Form.Item label={t('progress.dueDate')} name=\"dueDate\">\n                        <KeyboardDatePicker\n                            format=\"ddd, MMM D, YYYY\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Form.Item>\n                )}\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <WeekDayPicker />\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                            onlocationfound={e => {\n                                if (!positionIsProvided && !positionRead) {\n                                    mapClick(e)\n                                    setInitialPosition([\n                                        e.latlng.lat,\n                                        e.latlng.lng,\n                                    ])\n                                    setPositionRead(true)\n                                }\n                            }}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                            <FullscreenControl position=\"topright\" />\n                        </Map>\n                    </div>\n                </Form.Item>\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (accountId, value, type, goToResource) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n                goToResource,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const changeResourceStatus = (status, resourceId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeResourceStatus',\n                resourceId,\n                status,\n            })\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport * as cll from './Layout.module.css'\nimport * as actions from '../../store/actions'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Card,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    Cake,\n    FitnessCenter,\n    GifTwoTone,\n    History,\n    HomeRounded,\n    Launch,\n    Notifications,\n    Person,\n    Repeat,\n    Search,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../MasonryCard'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language, progressData, rewardData, activityData } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n    const [speedDialOpen, setSpeedDialOpen] = useState(false)\n    const [recentVisible, setRecentVisible] = useState(!props.recentShown)\n    const [hideRecentTimeout, setHideRecentTimeout] = useState()\n\n    const openLink = url => props.history.push(url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n\n    const classes = useStyles()\n    const scrollTrigger = !useScrollTrigger()\n    useEffect(() => {\n        if (!scrollTrigger) setRecentVisible(false)\n    }, [scrollTrigger])\n\n    useEffect(() => {\n        if (Boolean(logedIn && !isActivating && !props.recentShown)) {\n            const timeout = setTimeout(() => setRecentVisible(false), 6000)\n            setHideRecentTimeout(timeout)\n            props.markRecentShown()\n        }\n    }, [Boolean(logedIn && !isActivating)])\n\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                    <AppBar elevation={1} color=\"secondary\">\n                        {props.isConnectingWS && !logedIn && (\n                            <LinearProgress\n                                style={{\n                                    width: '100%',\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                }}\n                            />\n                        )}\n\n                        <Toolbar>\n                            <div\n                                tabIndex={0}\n                                ref={domRef}\n                                style={{ width: 0, height: 0 }}\n                            />\n                            {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                            {(account._id && props.header) || (\n                                <Box style={{ display: 'flex', flex: 1 }}>\n                                    <Box style={{ display: 'flex', flex: 1 }}>\n                                        <Button\n                                            component={Link}\n                                            to={'/'}\n                                            style={{ padding: '3px 8px' }}\n                                        >\n                                            <img\n                                                className={cll.logo}\n                                                src=\"/logo-addspire.png\"\n                                            />\n                                        </Button>\n                                    </Box>\n                                    <Box style={{ display: 'flex' }}>\n                                        <LanguageSwitcher />\n\n                                        <Button\n                                            component={Link}\n                                            to={`/${\n                                                language !== 'en'\n                                                    ? language + '/'\n                                                    : ''\n                                            }blog`}\n                                            style={{ marginRight: '20px' }}\n                                        >\n                                            <Book\n                                                className={classes.blogIcon}\n                                            />\n                                            <span className={classes.blogLabel}>\n                                                {t('layout.blog')}\n                                            </span>\n                                        </Button>\n\n                                        {(logedIn && isActivating) ||\n                                        (!logedIn && props.isConnectingWS) ? (\n                                            <Button\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/logout'\n                                                    )\n                                                }\n                                            >\n                                                {t('g.logout')}\n                                            </Button>\n                                        ) : (\n                                            !account._id && (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    // startIcon={<Person />}\n                                                    onClick={() =>\n                                                        setLoginVisible(true)\n                                                    }\n                                                >\n                                                    {t('layout.login')}\n                                                </Button>\n                                            )\n                                        )}\n                                    </Box>\n                                </Box>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                </Slide>\n                <Toolbar id=\"back-to-top-anchor\" />\n                <Container\n                    style={{ paddingTop: '20px', paddingBottom: '20px' }}\n                    disableGutters={Boolean(removeGutters)}\n                >\n                    {props.children}\n                </Container>\n\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n\n                {logedIn && !isActivating && (\n                    <SpeedDial\n                        ariaLabel=\"SpeedDial\"\n                        className={classes.speedDial}\n                        icon={<SpeedDialIcon />}\n                        onClose={(event, reason) => {\n                            if (reason !== 'mouseLeave') {\n                                domRef.current.focus()\n                                setSpeedDialOpen(false)\n                            }\n                        }}\n                        onOpen={(event, reason) =>\n                            reason === 'toggle' && setSpeedDialOpen(true)\n                        }\n                        open={speedDialOpen}\n                    >\n                        <SpeedDialAction\n                            icon={<Person />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addFriend')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setAddFriendOpen(true)\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                        {/* <SpeedDialAction\n                            icon={<Cake />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addReward')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('reward')\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                        <SpeedDialAction\n                            icon={<FitnessCenter />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addActivity')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('activity')\n                                setSpeedDialOpen(false)\n                            }}\n                        /> */}\n                        <SpeedDialAction\n                            icon={<Star />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addGoal')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('goal')\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                    </SpeedDial>\n                )}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n\n                <Slide appear={false} direction=\"up\" in={scrollTrigger}>\n                    <Box\n                        style={{\n                            position: 'fixed',\n                            bottom: '12px',\n                            width: '100%',\n                            zIndex: 1,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        {logedIn && !isActivating && (\n                            <>\n                                <Slide\n                                    appear={false}\n                                    direction=\"left\"\n                                    in={recentVisible}\n                                >\n                                    <Box style={{ margin: '6px 10px' }}>\n                                        <Paper\n                                            style={{\n                                                overflowX: 'auto',\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'space-between',\n                                                position: 'relative',\n                                                maxWidth: '400px',\n                                                padding: '5px',\n                                                margin: 'auto',\n                                                pointerEvents: 'auto',\n                                            }}\n                                            onMouseDown={() => {\n                                                clearTimeout(hideRecentTimeout)\n                                            }}\n                                            onScroll={() =>\n                                                clearTimeout(hideRecentTimeout)\n                                            }\n                                            onTouchStart={() =>\n                                                clearTimeout(hideRecentTimeout)\n                                            }\n                                        >\n                                            {account.recent.map(\n                                                (item, index) => {\n                                                    const urlDir =\n                                                        item.resourceType ===\n                                                        'goal'\n                                                            ? 'goals'\n                                                            : item.resourceType ===\n                                                              'reward'\n                                                            ? 'rewards'\n                                                            : 'activities'\n                                                    const dataType =\n                                                        item.resourceType ===\n                                                        'goal'\n                                                            ? progressData\n                                                            : item.resourceType ===\n                                                              'reward'\n                                                            ? rewardData\n                                                            : activityData\n\n                                                    const data =\n                                                        dataType[\n                                                            item.resourceId\n                                                        ]\n\n                                                    return data ? (\n                                                        <Card\n                                                            style={{\n                                                                overflow:\n                                                                    'hidden',\n                                                            }}\n                                                        >\n                                                            <CardActionArea>\n                                                                <Link\n                                                                    to={\n                                                                        '/' +\n                                                                        urlDir +\n                                                                        '/' +\n                                                                        data._id\n                                                                    }\n                                                                    onClick={() =>\n                                                                        setRecentVisible(\n                                                                            false\n                                                                        )\n                                                                    }\n                                                                >\n                                                                    <CardMedia\n                                                                        style={{\n                                                                            height:\n                                                                                '56px',\n                                                                            width:\n                                                                                '56px',\n                                                                            backgroundSize:\n                                                                                'cover',\n                                                                            borderRadius:\n                                                                                '28',\n                                                                        }}\n                                                                        image={\n                                                                            data\n                                                                                .images\n                                                                                .length >\n                                                                            0\n                                                                                ? data\n                                                                                      .images[0]\n                                                                                : placeholderImages[\n                                                                                      getPH(\n                                                                                          data._id\n                                                                                      )\n                                                                                  ]\n                                                                        }\n                                                                        title={\n                                                                            data.name\n                                                                        }\n                                                                    />\n                                                                    <CardContent\n                                                                        style={{\n                                                                            padding:\n                                                                                '0px',\n                                                                            position:\n                                                                                'absolute',\n                                                                            bottom:\n                                                                                '0px',\n                                                                            background:\n                                                                                'white',\n                                                                            width:\n                                                                                '100%',\n                                                                        }}\n                                                                    >\n                                                                        <Typography\n                                                                            variant=\"body2\"\n                                                                            noWrap\n                                                                            align=\"center\"\n                                                                        >\n                                                                            {\n                                                                                data.name\n                                                                            }\n                                                                        </Typography>\n                                                                    </CardContent>\n                                                                </Link>\n                                                            </CardActionArea>\n                                                        </Card>\n                                                    ) : null\n                                                }\n                                            )}\n                                        </Paper>\n                                    </Box>\n                                </Slide>\n                                <Box className={cll.bottomMenu}>\n                                    <Paper\n                                        elevation={3}\n                                        style={{\n                                            borderRadius: '37px',\n                                            pointerEvents: 'auto',\n                                        }}\n                                    >\n                                        <IconButton\n                                            onClick={() => openLink('/')}\n                                            color={\n                                                props.history.location\n                                                    .pathname === '/'\n                                                    ? 'primary'\n                                                    : 'default'\n                                            }\n                                        >\n                                            <Badge\n                                                badgeContent={\n                                                    numberOfUnseenNots\n                                                }\n                                                color=\"secondary\"\n                                            >\n                                                <HomeRounded fontSize=\"large\" />\n                                            </Badge>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() => openLink('/explore')}\n                                            color={\n                                                props.history.location\n                                                    .pathname === '/explore'\n                                                    ? 'primary'\n                                                    : 'default'\n                                            }\n                                        >\n                                            <Search fontSize=\"large\" />\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() =>\n                                                openLink(\n                                                    '/profile/' + account._id\n                                                )\n                                            }\n                                        >\n                                            <Badge\n                                                badgeContent={\n                                                    account.friends.filter(\n                                                        item =>\n                                                            item.status ===\n                                                            'inviting'\n                                                    ).length\n                                                }\n                                                color=\"secondary\"\n                                            >\n                                                <Avatar\n                                                    classes={\n                                                        props.history.location\n                                                            .pathname ===\n                                                        '/profile/' +\n                                                            account._id\n                                                            ? {\n                                                                  root:\n                                                                      classes.avatar,\n                                                              }\n                                                            : {}\n                                                    }\n                                                    src={getAvatar(\n                                                        account._id,\n                                                        account.image\n                                                    )}\n                                                />\n                                            </Badge>\n                                        </IconButton>\n                                        <IconButton\n                                            color={\n                                                recentVisible\n                                                    ? 'primary'\n                                                    : 'default'\n                                            }\n                                            onClick={() =>\n                                                setRecentVisible(!recentVisible)\n                                            }\n                                        >\n                                            <History fontSize=\"large\" />\n                                        </IconButton>\n                                    </Paper>\n                                </Box>\n                            </>\n                        )}\n                    </Box>\n                </Slide>\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            goToResource\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountLayout)\n)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo-addspire.png',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)} scroll=\"paper\">\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            {account && account._id && (\n                                <Button\n                                    color=\"primary\"\n                                    style={{ marginTop: '10px' }}\n                                    onClick={() =>\n                                        friends.length > 0 &&\n                                        wsActions.shareWithFriends(\n                                            account._id,\n                                            basicProps.url,\n                                            friends,\n                                            props.item\n                                        )\n                                    }\n                                >\n                                    {t('g.send')}\n                                </Button>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    fade,\n    IconButton,\n    Menu,\n    MenuItem,\n    MuiThemeProvider,\n    Paper,\n    Select,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { blue, green, orange, red } from '@material-ui/core/colors'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n\n    const getStatusText = () => {\n        const status = resource.status\n        switch (status) {\n            case 'fail':\n                return t('progress.failed')\n            case 'complete':\n                return t('progress.completed')\n            case 'dismissed':\n                return t('progress.dismissed')\n            default:\n                return t('progress.inProcess')\n        }\n    }\n\n    const getTag = () => {\n        return (\n            <MuiThemeProvider\n                theme={\n                    resource.status === 'process'\n                        ? blueTheme\n                        : resource.status === 'complete'\n                        ? greenTheme\n                        : resource.status === 'fail'\n                        ? redTheme\n                        : orangeTheme\n                }\n            >\n                <Box style={{ margin: '10px 0' }}>\n                    {resource.owner === account._id ? (\n                        <Select\n                            value={resource.status}\n                            onChange={e =>\n                                wsActions.changeResourceStatus(\n                                    e.target.value,\n                                    resource._id\n                                )\n                            }\n                        >\n                            <MenuItem value=\"complete\">\n                                {t('progress.complete')}\n                            </MenuItem>\n                            <MenuItem value=\"process\">\n                                {t('progress.inProcess')}\n                            </MenuItem>\n                            <MenuItem value=\"fail\">\n                                {t('progress.fail')}\n                            </MenuItem>\n                            <MenuItem value=\"dismissed\">\n                                {t('progress.dismiss')}\n                            </MenuItem>\n                        </Select>\n                    ) : (\n                        <Chip color=\"primary\" label={getStatusText()} />\n                    )}\n                </Box>\n            </MuiThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <Paper style={{ padding: '15px 15px 0px 15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                        {type === 'goal' && (\n                            <Box>\n                                {getTag()}\n                                <Typography>\n                                    {t('progress.dueDate')}:{' '}\n                                    {dayjs(resource.dueDate).format(\n                                        'ddd, MMM D, YYYY'\n                                    )}\n                                </Typography>\n                                {resource.status !== 'process' &&\n                                    resource.finishDate && (\n                                        <Typography>\n                                            {t('progress.finishDate')}:{' '}\n                                            {dayjs(resource.finishDate).format(\n                                                'ddd, MMM D, YYYY'\n                                            )}\n                                        </Typography>\n                                    )}\n                            </Box>\n                        )}\n                    </Box>\n                </div>\n\n                <Divider />\n                {props.navi}\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const activityData = {}\n                if (data.activityData)\n                    for (let activity of data.activityData)\n                        activityData[activity._id] = activity\n                const rewardData = {}\n                if (data.rewardData)\n                    for (let reward of data.rewardData)\n                        rewardData[reward._id] = reward\n                const post = {}\n                if (data.posts)\n                    for (let item of data.posts) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    post,\n                    account: {},\n                    activityData,\n                    rewardData,\n                    onlineUsers: data.onlineUsers,\n                    [type === 'goal' ? 'progress' : type]: data.resource,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, posts: props.posts, account: {} }\n    useEffect(() => {\n        if (resource && resource._id) props.setResource(resource)\n    }, [resource])\n    useEffect(() => {\n        props.setPosts(posts)\n    }, [posts])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {resource.name}\n                </Typography>\n            }\n        >\n            <div className=\"contentDiv\">\n                <Helmet>\n                    <title>\n                        {`${resource.name} ${t('g.by')}${\n                            resource.owner\n                        } - Addspire`}\n                    </title>\n                    <meta\n                        name=\"description\"\n                        content={resource.descriptionText}\n                    />\n                </Helmet>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                    navi={props.navi}\n                />\n\n                {props.children}\n            </div>\n        </Layout>\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource: state[ownProps.type === 'goal' ? 'progress' : ownProps.type],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                // maxWidth: '400px',\n                height: '200px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n            <FullscreenControl position=\"topright\" />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span>\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            {account._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.addPost')}\n                    </Typography>\n                    <AddPost\n                        parent={resource._id}\n                        account={account}\n                        parentType={type}\n                        // onSend={() => setEditingMessage('')}\n                    />\n                </>\n            )}\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Reward = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"reward\"\n            setResource={setReward}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                </Tabs>\n            }\n        >\n            {reward && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={reward.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={reward.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={reward}\n                            posts={posts}\n                            type=\"reward\"\n                        />\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link\n                                        to={\n                                            (wish\n                                                ? '/wishlist/'\n                                                : '/rewards/') + item._id\n                                        }\n                                    >\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward rewardId={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    console.log(isOwner)\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? t('g.forTheseActivities') : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToReward')}\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Box>\n                                            <Button\n                                                onClick={() =>\n                                                    wsActions.sendReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        selectedReward\n                                                    )\n                                                }\n                                                color=\"primary\"\n                                            >\n                                                {t('g.sendRewardManually')}\n                                            </Button>\n                                        </Box>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.editReward')}\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.removeReward')}\n                                        </Button>\n                                    </>\n                                )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <UserButton id={rewardObj.owner} />\n                                <span>\n                                    {t(\n                                        'g.' +\n                                            (rewardObj.repeat === 'manual'\n                                                ? 'manual'\n                                                : rewardObj.repeat === 'once'\n                                                ? 'once'\n                                                : rewardObj.repeat === 'time'\n                                                ? 'everyTime'\n                                                : '')\n                                    )}\n                                    {t('reward.forActivities')}\n                                    {rewardObj.activities.map(activity => {\n                                        if (activityData[activity]) {\n                                            return (\n                                                <Link\n                                                    to={\n                                                        '/activities/' +\n                                                        activityData[activity]\n                                                            ._id\n                                                    }\n                                                >\n                                                    {\n                                                        activityData[activity]\n                                                            .name\n                                                    }\n                                                </Link>\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                </span>\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            // return -1\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const { activityData, account, progress, activities } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const isOwner =\n        account && account._id && progress && account._id === progress.owner\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/activities/' + selectedActivity\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToActivity')}\n                            </Button>\n                            {isOwner && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    {t('g.removeActivity')}\n                                </Button>\n                            )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <ActivityTable activityId={selectedActivity} />\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../components/SimilarResources'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Goal = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    const [posts, setPosts] = useState([])\n\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"goal\"\n            setResource={setProgress}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n        >\n            {progress && progress._id && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={progress.description}\n                            />\n                        </Paper>\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={progress.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"goal\" /> */}\n\n                        <ResourcePosts\n                            resource={progress}\n                            posts={posts}\n                            type=\"goal\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Activities progress={progress} />\n                        <Rewards progress={progress} />\n                    </TabPanel>\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Activity = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(2)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore\n            type=\"activity\"\n            setResource={setActivity}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n        >\n            {activity && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            {activity.repeat !== 'no' && (\n                                <>\n                                    <p>\n                                        <RetweetOutlined />\n                                        {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                    </p>\n                                    <Divider\n                                        light\n                                        variant=\"middle\"\n                                        style={{ marginBottom: '15px' }}\n                                    />\n                                </>\n                            )}\n\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={activity.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={activity.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={activity}\n                            posts={posts}\n                            type=\"activity\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.tracking')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ActivityTable activityId={activity._id} />\n                        </Paper>\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                {/* <Welcome /> */}\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const {\n        mapVisible,\n        setMapVisible,\n        onSearch,\n        setSearch,\n        search,\n        positionChanged,\n        setPositionChanged,\n    } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={200}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => getRadius()}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={8}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                    onzoomend={() => getRadius()}\n                    onlocationfound={e => {\n                        if (!positionChanged) {\n                            mapClick(e)\n                            setInitialPosition([e.latlng.lat, e.latlng.lng])\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                    <FullscreenControl position=\"topright\" />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box style={{ margin: '10% 0px 2%' }}>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n\n            <Box\n                style={{\n                    margin: '40px auto 10px',\n                    textAlign: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    {t('welcome.button')}\n                </Button>\n            </Box>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n\n            <Box>\n                <Typography\n                    variant=\"h2\"\n                    align=\"center\"\n                    style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                >\n                    {t('welcome.stepsTitle')}\n                </Typography>\n\n                <Box className={classes.howWorks}>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon1.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle1')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody1')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon2.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle2')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody2')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon3.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle3')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody3')}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Badge,\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n    const [positionChanged, setPositionChanged] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                    positionChanged={positionChanged}\n                    setPositionChanged={setPositionChanged}\n                />\n                <Welcome />\n\n                {!(props.account && props.account._id) && (\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                    >\n                        {t('explore.topGoalsTitle')}\n                    </Typography>\n                )}\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => {\n                                return (\n                                    <MasonryCard\n                                        id={item._id}\n                                        key={index}\n                                        onClickLink={\n                                            '/' + urlDir + '/' + item._id\n                                        }\n                                        images={item.images}\n                                        body={\n                                            <>\n                                                <Box\n                                                    style={{\n                                                        position: 'absolute',\n                                                        top: '10px',\n                                                    }}\n                                                >\n                                                    <UserButton\n                                                        noName={true}\n                                                        id={item.owner}\n                                                        friendDataExp={\n                                                            props.friendData\n                                                        }\n                                                    />\n                                                </Box>\n                                                {item.status && (\n                                                    <Tooltip\n                                                        title={t(\n                                                            'progress.' +\n                                                                (item.status ===\n                                                                'process'\n                                                                    ? 'inProcess'\n                                                                    : item.status)\n                                                        )}\n                                                    >\n                                                        <Box\n                                                            style={{\n                                                                display:\n                                                                    'inline-block',\n                                                                width: '10px',\n                                                                height: '10px',\n                                                                borderRadius:\n                                                                    '5px',\n                                                                marginRight:\n                                                                    '5px',\n                                                                background:\n                                                                    item.status ===\n                                                                    'process'\n                                                                        ? 'blue'\n                                                                        : item.status ===\n                                                                          'fail'\n                                                                        ? 'red'\n                                                                        : item.status ===\n                                                                          'dismissed'\n                                                                        ? 'orange'\n                                                                        : item.status ===\n                                                                          'complete'\n                                                                        ? 'green'\n                                                                        : 'white',\n                                                            }}\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            </>\n                                        }\n                                        actions={\n                                            <ShareButton\n                                                link={\n                                                    'https://addspire.com/' +\n                                                    urlDir +\n                                                    '/' +\n                                                    item._id\n                                                }\n                                                title={\n                                                    item.name +\n                                                    t('explore.shareText')\n                                                }\n                                                media={\n                                                    item.images &&\n                                                    item.images[0]\n                                                }\n                                                item={{\n                                                    progressId: item._id,\n                                                    progressName: item.name,\n                                                }}\n                                            />\n                                        }\n                                    />\n                                )\n                            })}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const { transactionData, rewardData, account, transactions, owner } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <Link to={'/rewards/' + rewardObj._id}>\n                                    {rewardObj.name || 'Selected activity'}\n                                </Link>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    const progressData = {}\n                    if (data.progressData)\n                        for (let progress of data.progressData)\n                            progressData[progress._id] = progress\n\n                    const activityData = {}\n                    if (data.activityData)\n                        for (let activity of data.activityData)\n                            activityData[activity._id] = activity\n                    const rewardData = {}\n                    if (data.rewardData)\n                        for (let reward of data.rewardData)\n                            rewardData[reward._id] = reward\n                    const post = {}\n                    if (data.posts)\n                        for (let item of data.posts) post[item._id] = item\n\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        post,\n                        account: {},\n                        progressData,\n                        activityData,\n                        rewardData,\n                        onlineUsers: data.onlineUsers,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classesM.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {profile.name}\n                    </Typography>\n                }\n            >\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea>\n                            <Link to={'/goals/' + item._id}>\n                                <CardMedia\n                                    style={{\n                                        height: '150px',\n                                        backgroundSize: 'contain',\n                                    }}\n                                    image={\n                                        item.images.length > 0\n                                            ? item.images[0]\n                                            : placeholderImages[getPH(item._id)]\n                                    }\n                                    title={item.name}\n                                />\n                                <CardContent style={{ padding: '5px' }}>\n                                    <Typography\n                                        variant=\"body2\"\n                                        noWrap\n                                        align=\"center\"\n                                    >\n                                        {item.name}\n                                    </Typography>\n                                </CardContent>\n                            </Link>\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities activities={profile.activities} isOwner={isOwner} />\n                <ProfileRewards owner={profile} />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner={isOwner}\n                    owner={profile}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                Account activation\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLenght')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                v = parseInt(v.notId)\n                return p > v ? p : v\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                {/* <Welcome /> */}\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM D, YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            className=\"blogArticle\"\n                            style={{ fontSize: '1.05rem' }}\n                        >\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Goal from './containers/Goal/Goal'\nimport Reward from './containers/Reward/Reward'\nimport Activity from './containers/Activity/Activity'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route\n                path=\"/\"\n                exact\n                component={isAuthed ? DashboardPosts : Explore}\n            />\n            {isAuthed && <Route path=\"/explore\" exact component={Explore} />}\n            <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} />\n            <Route path=\"/profile\" component={Profile} />\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n    recentShown: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'progress',\n                'reward',\n                'activity',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n    SET_RECENT_SHOWN: (state: Object) => {\n        state.recentShown = true\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\n// pick a date util library\nimport DayUtils from '@date-io/dayjs'\n\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <MuiPickersUtilsProvider utils={DayUtils}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <ThemeProvider theme={outerTheme}>\n                    <App />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    </MuiPickersUtilsProvider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}