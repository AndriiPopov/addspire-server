{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/Layout.tsx","utils/processRes.js","store/actions/auth.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","containers/Shop/AddPerkForm.tsx","websocketActions/posts.tsx","websocketActions/wishlistAndPerks.tsx","websocketActions/friends.tsx","containers/Shop/AddPerk.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","containers/Shop/PerkCard.tsx","components/AddCard/AddCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Goals/Goals.tsx","utils/pullData.js","components/Post/AddMessage.tsx","components/UserButton/UserButton.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Goals/Goal.tsx","containers/Progresses/ProgressCard.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","containers/Progresses/GroupCard.tsx","containers/Progresses/Progresses.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","components/Post/AddPost.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/Shop.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Dashboard/DashboardEvents.tsx","containers/Dashboard/Dashboard.tsx","websocketActions/dashboard.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Account/Account.tsx","websocketActions/account.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","containers/Group/Group.tsx","containers/Dashboard/NotificationsTracker.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Background","Avatar","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","PageTitle","cookies","Cookies","withRouter","connect","state","lastUrl","props","_useState","useState","_useState2","Object","slicedToArray","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","get","basicURL","react_default","a","createElement","Fragment","className","classes","dist","onClick","window","location","concat","es_checkbox","checked","onChange","modal","title","visible","onOk","set","path","maxAge","onCancel","open","destroyOnClose","maskClosable","getAvatar","nickname","version","Content","account","pageTitle","isAuthed","lastNotifications","menuVisible","setMenuVisible","lastScrollY","setLastScrollY","_useState5","_useState6","headerVisible","setHeaderVisible","handleScroll","currentScrollY","scrollY","removeEventListener","addEventListener","toggleMenu","selectedKey","history","pathname","split","undefined","buttonProps","type","size","checkHighligh","url","ghost","openLink","push","isActivating","numberOfUnseenNots","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","not","value","parseInt","notId","lastSeenNot","err","return","_id","es_layout","join","es_button","assign","icon","MenuOutlined_default","main","LogoutOutlined_default","style","margin","cursor","avatar","border","src","image","children","badge","count","HomeFilled_default","RocketFilled_default","ShopFilled_default","friends","filter","item","status","length","TeamOutlined_default","drawer","closable","onClose","placement","es_menu","theme","mode","selectedKeys","_ref","key","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","includes","tooltip","mouseEnterDelay","processRes","res","data","logout","success","errorCode","message","warning","error","successCode","tryAuth","forceLogin","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","saveLastUrl","id","setData","setPageTitle","setFriendSearchResult","getListOfNeededResources","store","requestedResources","user","progress","group","progressData","friendData","postData","groupData","transactionData","neededResources","currentAccount","progresses","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","groups","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","followPosts","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","myPosts","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","transactions","transaction","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","friend","currentProfile","profile","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","currentGroup","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","users","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","posts","currentProgress","participants","owner","worker","toConsumableArray","experts","supporters","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","currentPosts","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","postEl","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","reduce","obj","attr","Array","from","Set","notNeededExist","notNeededResources","check1","check2","removeData","compareVersionsAndRerequest","versions","webSocket","checkData","requestResource","check","__v","getResourcesToMonitor","resources","addData","require","create","propertyFilter","name","context","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","readyState","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","_i","_arr","ids","nextProps","newRequestedResources","_loop","_arr2","_i2","console","log","this","Component","pulledFrom","actions","getState","myAccount","find","forceAuth","notRequestedIds","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","removedFields","field","indexOf","parState","element","defineProperty","updateData","uploadFile","file","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","resizeImageToSpecificSize","width","height","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","AddPerkForm","previewImage","setPreviewImage","connections","perkId","perk","deletePerk","onFinish","images","setImages","uploadImage","connectionsSelect","es_select","placeholder","map","Option","marginRight","_Form$useForm","Form","useForm","form","es_form","autoComplete","initialValues","labelCol","span","wrapperCol","label","valuePropName","getValueFromEvent","e","isArray","fileList","upload","listType","index","objectSpread","uid","onPreview","customRequest","_ref2","PlusOutlined_default","rules","input","TextArea","input_number","offset","htmlType","popconfirm","onConfirm","okText","cancelText","danger","footer","alt","sendMessage","accountId","postId","messageValue","imageUrl","replyToMessage","editedMessage","changeLikesMessage","messageId","addPost","parentId","parentType","buyPerk","buyer","seller","unfriend","friendId","setPerk","wishlist","itemId","goals","goalId","perks","Shop_AddPerkForm","wsActions","setEditPerkOpen","processedValue","ImageCarousel","carousel","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Card","Meta","setEditedPerk","card","bordered","extra","stopPropagation","onlyBuy","dropdown","overlay","EllipsisOutlined","display","alignItems","UI_ImageCarousel_ImageCarousel","price","AddCard","action","shape","icons_PlusOutlined","WishlistAndPerks","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","components_AddCard_AddCard","sub","listKey","Shop_PerkCard","Shop_WishlistAndPerks","pullData","options","imageLoading","setImageLoading","content","replyToUser","setMessageText","background","padding","boxShadow","replyTo","bottom","left","position","comment","autoSize","minRows","maxRows","rows","editingMessage","onSend","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","getUserData","userName","userAvatar","noClick","Group","noName","Message","replies","replyVisible","setReplyVisible","setReplyToUser","setEditingMessage","commentProps","isStart","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","author","Math","floor","random","messageType","details","components_UserButton_UserButton","datetime","timeago_react","date","live","Post_AddMessage","isTop","reply","noStartMessage","Post_Message","startMessage","textAlign","marginBottom","icons_LikeFilled","icons_LikeOutlined","messages","getNumberOfMessages","goal","whiteSpace","description","components_Post_Post","EditGoalAndProgressForm_connectionsSelect","onSelect","previewReward","setPreviewReward","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","rewardsGI","rewards","findIndex","rewardKey","setRewards","simple","money","itemName","for","progressId","rewardId","confirm","newRewards","indexIn","reward","rewardToSave","divider","itemImages","_ref3","_ref4","itemDescription","_ref5","hoverable","cover","descriptions","column","xxl","xl","lg","md","sm","xs","EditGoalAndProgressForm","milestones","setMilestones","withMilestones","setWithMilestones","_useState9","newTabIndex","_useState10","setNewTabIndex","_useState11","rewardsGroups","_useState12","addMilestone","milestone","newPanes","newKey","indexOfMile","mile","setFieldsValue","MilestoneControls","dropdown_dropdown","domEvent","newMilestones","Divider","pane","trigger","preventDefault","milestonesValues","mile1","onValuesChange","changedValues","components_Rewards_Rewards","es_switch","collapse","expandIconPosition","Panel","header","getFieldValue","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","inGroup","setStartProgressVisible","GroupCard_Meta","TabPane","Tabs","loadedProgresses","loadedGroups","startProgressVisible","active","editGoal","Modal","Progresses_AddProgress","tabs","marginTop","tab","Progresses_ProgressCard","Progresses_GroupCard","empty","imageStyle","Descriptions","ActivityTable","renderCheckbox","milestoneId","disabled","columns","dataIndex","render","previewMilestone","fixed","align","expert","getCheckboxStatus","stage","approvedBy","getMilestoneData","stages","paid","milestonesData","table","dataSource","scroll","x","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","toString","Progress_EditProgress","parent","zIndex","Post_AddPost","Progress_Activity","keepPageTitle","pulledProfile","wallet","PlusCircleOutlined_default","amount","aTransactionData","types","tag","color","es_tag","toUpperCase","record","cancelTransaction","confirmTransaction","tableData","sorted","sort","b","Date","getTime","to","Shop_Wallet","Shop_Transactions","statePosts","setPosts","startTime","sortNotifications","notifications","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","_loop2","_newOldPosts","resultPosts","slice","neededPosts","isEqual","getRewardText","as","progressName","addedAccounts","ac","droppedAccounts","activeTab","Dashboard_DashboardPosts","Dashboard_DashboardEvents","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","menu","additionalButtons","button","asText","DownOutlined","friendActions","friendActionButton","asIcons","searchResult","friendSearchResult","addFriendOpen","setAddFriendOpen","search","components_FriendCard","fullFriend","confirmedFriends","PendingFriends","Friends_AddFriends","increaseAvatarV","deleteVisible","setDeleteVisible","deleteField","setDeleteField","flex","maxWidth","overflow","profileId","_is","oneFriendData","containers_Progresses_Progresses","progressesData","noPullData","setAccountActivated","page_header","backIcon","nicknameNotUnique","items","Perk_Item","wishlistItem","groupId","filterSameNot","arr","myNotifications","accountNotActive","redirectTo","Logout","react_router","routes","exact","component","Goals","Goal","Progresses","Progress","Profile","Friends","Account","Dashboard","Shop","Perk","Wishlist","WishlistItem","Auth","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","reducer","createReducer","SET_DATA","REMOVE_DATA","_i3","_arr3","_i4","_arr4","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SAVE_LAST_URL","SET_ACCOUNT_ACTIVATED","__webpack_require__","d","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","react_router_dom","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.e385d665.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\",\"Background\":\"Auth_Background__39m_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Footer\":\"Layout_Footer__1Dfqu\",\"HideHeader\":\"Layout_HideHeader__2WRsh\",\"FooterButton\":\"Layout_FooterButton__1lZv2\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\",\"PageTitle\":\"Layout_PageTitle__368dw\"};","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.lastUrl) {\n        redirectParam = '&redirect=' + props.lastUrl\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return !cookieConsent ? (\n        <Modal\n            title=\"Cookies consent\"\n            visible={!cookieConsent}\n            onOk={agreeWithCookies}\n            onCancel={() => {\n                window.open('https://websiter.dev', '_self')\n            }}\n            destroyOnClose={true}\n            maskClosable={false}\n        >\n            <p>We use cookies only for login purposes. </p>\n            <p>\n                In order to proceed you need to agree with the use of cookies.\n            </p>\n        </Modal>\n    ) : (\n        <>\n            <div className={classes.Container}>\n                <h1>Welcome to Websiter!</h1>\n                <h2>This is where great progresses live.</h2>\n                <h1>Continue with:</h1>\n                <div className={classes.socialButtons}>\n                    <FacebookLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `facebook/start${remeberMeParam}`)\n                        }\n                    />\n                    <GoogleLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `google/start${remeberMeParam}`)\n                        }\n                    />\n                    <GithubLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `github/start${remeberMeParam}`)\n                        }\n                    />\n                </div>\n                <Checkbox checked={state} onChange={() => setState(!state)}>\n                    Remember me\n                </Checkbox>\n            </div>\n            <div className={classes.Background} />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lastUrl: state.lastUrl,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Auth))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport Badge from 'antd/es/badge'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport ShopFilled from '@ant-design/icons/ShopFilled'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport PageHeader from 'antd/es/page-header'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Header, Content, Footer } = Layout\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const [headerVisible, setHeaderVisible] = useState(true)\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY\n\n            if (currentScrollY > lastScrollY) {\n                setHeaderVisible(false)\n            } else {\n                setHeaderVisible(true)\n            }\n            setLastScrollY(currentScrollY)\n        }\n        window.removeEventListener('scroll', handleScroll)\n        window.addEventListener('scroll', handleScroll)\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [lastScrollY])\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url\n            ? {\n                  ghost: false,\n                  type: 'link',\n              }\n            : { type: 'text' }\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    return props.isAuthed && account._id ? (\n        <>\n            <Layout className={classes.Layout}>\n                <Header\n                    className={\n                        headerVisible\n                            ? classes.Header\n                            : [classes.Header, classes.HideHeader].join(' ')\n                    }\n                >\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            {!isActivating && (\n                                <Button\n                                    {...buttonProps}\n                                    icon={<MenuOutlined />}\n                                    onClick={toggleMenu}\n                                />\n                            )}\n                            <div className={classes.PageTitle}>\n                                {isActivating\n                                    ? 'Activate your account'\n                                    : props.pageTitle.main}\n                            </div>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {!isActivating ? (\n                                <span\n                                    onClick={() => openLink('account')}\n                                    style={{\n                                        margin: '0px 10px',\n                                        cursor: 'pointer',\n                                    }}\n                                >\n                                    <Avatar\n                                        style={{ border: '1px solid white' }}\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                    />\n                                </span>\n                            ) : (\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                >\n                                    Logout\n                                </Button>\n                            )}\n                        </div>\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                {!isActivating && (\n                    <Footer className={classes.Footer}>\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('dashboard')}\n                            onClick={() => openLink('dashboard')}\n                        >\n                            <Badge count={numberOfUnseenNots}>\n                                <HomeFilled />{' '}\n                                <div className={classes.FooterButton}>\n                                    Dashboard\n                                </div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('progresses')}\n                            onClick={() => openLink('progresses')}\n                        >\n                            <Badge count={0}>\n                                <RocketFilled />\n                                <div className={classes.FooterButton}>\n                                    Progresses\n                                </div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('shop')}\n                            onClick={() => openLink('shop')}\n                        >\n                            <Badge count={0}>\n                                <ShopFilled />\n                                <div className={classes.FooterButton}>Shop</div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('friends')}\n                            onClick={() => openLink('friends')}\n                        >\n                            <Badge\n                                count={\n                                    account.friends.filter(\n                                        item => item.status === 'inviting'\n                                    ).length\n                                }\n                            >\n                                <TeamOutlined />\n                                <div className={classes.FooterButton}>\n                                    Friends\n                                </div>\n                            </Badge>\n                        </Button>\n                    </Footer>\n                )}\n                {!isActivating && (\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                                Dashboard\n                            </Menu.Item>\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopFilled />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                )}\n            </Layout>\n        </>\n    ) : ['/login', 'logout'].includes(props.history.location.pathname) ? (\n        props.children\n    ) : (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner} />\n                        <div className={classes.QuickButtonContiner}>\n                            <Tooltip\n                                title=\"Sign in or Sign up\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => props.history.push('/login')}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    {/* <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={props.pageTitle && props.pageTitle.main}\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div> */}\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        dispatch(saveLastUrl(props.history.location.pathname))\n        if (forceLogin) props.history.push('/logout')\n    }\n}\n\nconst saveLastUrl = url => ({\n    type: 'SAVE_LAST_URL',\n    url,\n})\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    // console.log(res.data)\n                    // console.log(props.history.location.pathname)\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of store.account.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let group of store.account.groups) {\n                        if (!store.groupData[group]) {\n                            requestedResources.groupData.push(group)\n                        }\n                        neededResources.groupData.push(group)\n                    }\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let group of store.profile.groups) {\n                        if (!store.groupData[group]) {\n                            requestedResources.groupData.push(group)\n                        }\n                        neededResources.groupData.push(group)\n                    }\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                }\n            }\n            if (store.currentGroup) {\n                if (store.group._id !== store.currentGroup) {\n                    requestedResources.group.push(store.currentGroup)\n                } else {\n                    neededResources.group.push(store.group._id)\n                    for (let user of store.group.users) {\n                        if (!store.friendData[user]) {\n                            requestedResources.friendData.push(user)\n                        }\n                        neededResources.friendData.push(user)\n                    }\n                    for (let progress of store.group.progresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n                    for (let post of store.group.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n                    participants = [\n                        ...participants,\n                        ...(store.progress.experts || []),\n                        ...(store.progress.supporters || []),\n                    ]\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('group', 'group')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n    check2('groupData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n    check('group')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('groupData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.group.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.groupData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        group: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        groupData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.group._id) {\n        resources.group[store.group._id] = store.group.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('groupData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport * as wsActions from '../../websocketActions'\nimport cloneDeep from 'lodash.clonedeep'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        group: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        groupData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'group',\n            'postData',\n            'groupData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n    // componentDidMount() {\n    //     console.log('didmount')\n    //     this.initializeRequestResources(this.props)\n    // }\n    componentWillReceiveProps(nextProps) {\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'group',\n            'postData',\n            'groupData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    console.log('init send')\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n            case 'group':\n                const group = data.find(item => item._id === state.currentGroup)\n                if (group) {\n                    dispatch(setData({ group }))\n                }\n                break\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'groupData':\n                let groupData = {}\n                for (let item of data) {\n                    groupData[item._id] = item\n                }\n                dispatch(setData({ groupData }))\n                break\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'group':\n                check('group')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n            case 'groupData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    imageUrl,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                imageUrl,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    imageUrl?\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                imageUrl,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: mode === 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = account.friends\n        .filter(friend => friend.status === 'friend')\n        .map(friend => props.friendData[friend.friend])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={() => {\n                wsActions.deletePerk(account._id, perkId, mode)\n                props.setEditPerkOpen(false)\n            }}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import React from 'react'\nimport Carousel from 'antd/es/carousel'\n\nconst ImageCarousel = props =>\n    props.images && props.images.length > 0 ? (\n        <Carousel style={{ width: props.size || 'auto' }}>\n            {props.images.map(\n                image =>\n                    image && (\n                        <div>\n                            <div\n                                style={{\n                                    backgroundImage: 'url(\"' + image + '\")',\n                                    backgroundSize: 'contain',\n                                    backgroundPosition: 'center',\n                                    width: props.size || '100%',\n                                    height: props.size || '300px',\n                                    backgroundRepeat: 'no-repeat',\n                                }}\n                            />\n                        </div>\n                    )\n            )}\n        </Carousel>\n    ) : null\n\nexport default ImageCarousel\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport { withRouter } from 'react-router-dom'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\nimport * as wsActions from '../../websocketActions'\nimport Carousel from 'antd/es/carousel'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Button from 'antd/es/button'\nimport { EllipsisOutlined } from '@ant-design/icons'\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: '100%' }}\n            bordered={false}\n            extra={\n                <div onClick={e => e.stopPropagation()}>\n                    {owner._id === account._id &&\n                    !props.onlyBuy &&\n                    props.mode === 'shop' ? (\n                        <Dropdown.Button\n                            type=\"primary\"\n                            key=\"1\"\n                            onClick={() =>\n                                wsActions.buyPerk(\n                                    account._id,\n                                    owner._id,\n                                    perkId\n                                )\n                            }\n                            overlay={\n                                <Menu>\n                                    <Menu.Item\n                                        key=\"0\"\n                                        onClick={() => {\n                                            setEditedPerk(perkId)\n                                            setEditPerkOpen(true)\n                                        }}\n                                    >\n                                        Edit\n                                    </Menu.Item>\n                                </Menu>\n                            }\n                        >\n                            Buy\n                        </Dropdown.Button>\n                    ) : props.mode === 'shop' ? (\n                        <Button\n                            type=\"primary\"\n                            onClick={() =>\n                                wsActions.buyPerk(\n                                    account._id,\n                                    owner._id,\n                                    perkId\n                                )\n                            }\n                        >\n                            Buy\n                        </Button>\n                    ) : owner._id === account._id && !props.onlyBuy ? (\n                        <Dropdown\n                            overlay={\n                                <Menu>\n                                    <Menu.Item\n                                        key=\"0\"\n                                        onClick={() => {\n                                            setEditedPerk(perkId)\n                                            setEditPerkOpen(true)\n                                        }}\n                                    >\n                                        Edit\n                                    </Menu.Item>\n                                </Menu>\n                            }\n                        >\n                            <Button type=\"link\">\n                                <EllipsisOutlined />\n                            </Button>\n                        </Dropdown>\n                    ) : null}\n                </div>\n            }\n            title={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            `/${mode || 'shop'}/${owner._id}/${perkId}`\n                        )\n                    }\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                    }}\n                >\n                    <div style={{ width: '50px', marginRight: '20px' }}>\n                        <ImageCarousel images={perk.images} size={50} />\n                    </div>\n                    {perk.name}\n                    {mode === 'shop' && ` ($${perk.price})`}\n                </div>\n            }\n        />\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport { PlusOutlined } from '@ant-design/icons'\n\nconst AddCard = props => (\n    <Button\n        onClick={props.action}\n        type=\"primary\"\n        shape=\"round\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n    >\n        {props.title}\n    </Button>\n)\n\nexport default AddCard\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account._id ? (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        perkId={\n                            props.mode === 'wishlist' || props.mode === 'goals'\n                                ? perk.itemId\n                                : perk.perkId\n                        }\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    ) : null\n}\n\nexport default WishlistAndPerks\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Goals = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Goals', sub: '' })\n    }, [])\n\n    return props.account._id ? (\n        <WishlistAndPerks mode=\"goals\" account={props.account} />\n    ) : (\n        <span />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goals)\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    console.log('reqas')\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\n\nconst AddMessage = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                boxShadow:\n                    '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        false,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                size=\"large\"\n                                type=\"link\"\n                            />\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        wsActions.sendMessage(\n                                            state,\n                                            props,\n                                            '',\n                                            url,\n                                            props.replyTo,\n                                            props.editingMessage\n                                        )\n                                        if (props.onSend) props.onSend()\n                                    })\n                                }}\n                            >\n                                <Button\n                                    size=\"large\"\n                                    type=\"link\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureOutlined />\n                                        )\n                                    }\n                                />\n                            </Upload>\n                        </Form.Item>\n                    </>\n                }\n            />\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst UserButton = props => {\n    const { account, profile, friendData, id } = props\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : friendData[id]\n    const userName = id => (getUserData(id) ? getUserData(id).name : id)\n    const userAvatar = id =>\n        getUserData(id) ? (\n            <span\n                onClick={e => {\n                    e.stopPropagation()\n                    props.history.push('/profile/' + id)\n                }}\n            >\n                <Avatar\n                    src={getAvatar(id, getUserData(id).image)}\n                    size={props.size || (props.noClick ? 20 : 30)}\n                    style={props.group ? {} : { margin: ' 0 5px' }}\n                />\n            </span>\n        ) : null\n    return props.group ? (\n        <Avatar.Group style={{ margin: ' 0 5px' }}>\n            {props.ids.map(id => userAvatar(id))}\n        </Avatar.Group>\n    ) : !props.noClick ? (\n        <Button\n            type=\"link\"\n            style={{ padding: '0px 5px', height: 'auto' }}\n            onClick={() => props.history.push('/profile/' + props.id)}\n        >\n            {userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Button>\n    ) : (\n        <>\n            {userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport Card from 'antd/es/card'\nimport Carousel from 'antd/es/carousel'\nimport AddMessage from './AddMessage'\nimport getAvatar from '../../utils/getAvatar'\nimport Button from 'antd/es/button'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\n\nconst Message = props => {\n    const {\n        account,\n        state,\n        setState,\n        message,\n        friendData,\n        post,\n        replies,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const commentProps = {\n        actions: !props.isStart && [\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            <span\n                key=\"comment-basic-reply-to\"\n                onClick={() => {\n                    if (props.setReplyVisible) {\n                        props.setReplyVisible(true)\n                        props.setReplyToUser(props.message.author)\n                    } else {\n                        setReplyVisible(true)\n                        setReplyToUser('')\n                    }\n                }}\n            >\n                Reply to\n            </span>,\n            <span\n                key=\"comment-basic-reply-to\"\n                onClick={() => setEditingMessage(message.messageId)}\n            >\n                Edit\n            </span>,\n        ],\n        author: (\n            <a>\n                {friendData[message.author]\n                    ? friendData[message.author].name\n                    : message.author}\n            </a>\n        ),\n        avatar: (\n            <Avatar\n                src={getAvatar(\n                    message.author,\n                    friendData[message.author]\n                        ? friendData[message.author].image\n                        : Math.floor(Math.random() * 1000000)\n                )}\n            />\n        ),\n        content: (\n            <>\n                {message.image && message.image.length > 0 && (\n                    <ImageCarousel images={message.image} />\n                )}\n                {message.messageType === 'wishlist' && (\n                    <>\n                        {' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${message.details.owner}/${\n                                        message.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {message.details.name}\n                        </Button>\n                        from\n                        <UserButton id={message.details.owner} /> wishlist.\n                    </>\n                )}\n                {message.text && <p>{message.text}</p>}\n            </>\n        ),\n        datetime: (\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Card>\n                <Comment {...commentProps}>\n                    {props.isTop && replies && replies.length\n                        ? replies.map((reply, index) => (\n                              <Message\n                                  key={index}\n                                  message={reply}\n                                  post={post}\n                                  account={account}\n                                  friendData={friendData}\n                                  setReplyVisible={setReplyVisible}\n                                  setReplyToUser={setReplyToUser}\n                              />\n                          ))\n                        : null}\n\n                    {props.isTop && replyVisible ? (\n                        <AddMessage\n                            post={post}\n                            account={account}\n                            replyTo={message.messageId}\n                            replyToUser={replyToUser}\n                        />\n                    ) : null}\n                </Comment>\n            </Card>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                onSend={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport Tooltip from 'antd/es/tooltip'\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons'\nimport AddMessage from './AddMessage'\n\nconst Post = props => {\n    const { post, account, friendData } = props\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <Message\n                    message={post.startMessage}\n                    post={post}\n                    account={account}\n                    friendData={friendData}\n                    replies={[]}\n                    isStart={true}\n                />\n            )}\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div>\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        wsActions.changeLikesMessage(\n                                            'dislikeMessage',\n                                            post.startMessage.messageId,\n                                            account._id,\n                                            post._id\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        wsActions.changeLikesMessage(\n                                            'likeMessage',\n                                            post.startMessage.messageId,\n                                            account._id,\n                                            post._id\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {post.startMessage.likes.length}\n                        </span>\n                    </span>\n                    <span>\n                        <span key=\"comment-basic-reply-to\" onClick={() => {}}>\n                            Comment\n                        </span>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {getNumberOfMessages(post.messages)}\n                        </span>\n                    </span>\n                </div>\n\n                {post.messages && post.messages.length\n                    ? post.messages.map((message, index) => (\n                          <Message\n                              key={index}\n                              message={message}\n                              post={post}\n                              account={account}\n                              friendData={friendData}\n                              replies={message.replies}\n                              isTop={true}\n                          />\n                      ))\n                    : null}\n                <AddMessage post={post} account={account} />\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.goal) return null\n    const { goal, profile } = data\n    props.setData({ currentPosts: goal.post })\n    if (goal) {\n        props.setPageTitle({ main: goal.name, sub: profile._id })\n    }\n    return goal ? (\n        <Card\n            title={\n                <span>\n                    Goal from <UserButton id={profile._id} /> goals\n                </span>\n            }\n            bordered={false}\n        >\n            <ImageCarousel images={goal.images} />\n\n            <h1>{goal.name}</h1>\n            <p style={{ whiteSpace: 'pre-wrap' }}>{goal.description}</p>\n            <Post\n                noStartMessage={true}\n                post={props.post[goal.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst ProgressCard = props => {\n    const { progress } = props\n    const { goal } = progress\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: '100%' }}\n            bordered={false}\n            title={\n                <div\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress._id)\n                    }\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                    }}\n                >\n                    {goal.images.length > 0 && (\n                        <div style={{ width: '50px', marginRight: '20px' }}>\n                            <ImageCarousel images={goal.images} size={50} />\n                        </div>\n                    )}\n                    {goal.name} -{' '}\n                    <UserButton id={progress.owner} noName={true} /> =&gt;{' '}\n                    <UserButton ids={progress.goal.users} group={true} />\n                </div>\n            }\n        />\n    )\n}\n\nexport default withRouter(ProgressCard)\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onChange={onSelect}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(item => (\n            <Select.Option key={item._id}>\n                <UserButton id={item._id} noClick={true} />\n            </Select.Option>\n        ))}\n    </Select>\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport Popconfirm from 'antd/es/popconfirm'\nimport UserButton from '../UserButton/UserButton'\nimport { EllipsisOutlined } from '@ant-design/icons'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1 && props.setRewards)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => {\n                        return (\n                            <li>\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => setPreviewReward(item)}\n                                >\n                                    {item.mode === 'simple'\n                                        ? item.simple\n                                        : item.mode === 'money'\n                                        ? item.money + ' (money)'\n                                        : item.mode === 'item'\n                                        ? item.itemName\n                                        : ''}\n                                </Button>\n                                <UserButton id={item.owner} noName={true} />{' '}\n                                =&gt;\n                                <UserButton id={item.for} noName={true} />\n                                {item.owner === account._id && !readOnly && (\n                                    <>\n                                        <Dropdown\n                                            overlay={\n                                                <Menu>\n                                                    <Menu.Item\n                                                        onClick={() => {\n                                                            setEditedRewardIndex(\n                                                                index\n                                                            )\n                                                            setEditedReward(\n                                                                item\n                                                            )\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </Menu.Item>\n\n                                                    \n                                                        <Menu.Item\n                                                        onClick={() => {\n                                                            if(!window.confirm(\"Are you sure you want to delete this item?\")) return \n                                                            if (\n                                                                props.setRewards\n                                                            ) {\n                                                                const newRewards = [\n                                                                    ...props.rewards,\n                                                                ]\n                                                                newRewards[\n                                                                    rewardsGI\n                                                                ] = {\n                                                                    ...newRewards[\n                                                                        rewardsGI\n                                                                    ],\n                                                                    rewards: newRewards[\n                                                                        rewardsGI\n                                                                    ].rewards.filter(\n                                                                        (\n                                                                            item,\n                                                                            indexIn\n                                                                        ) =>\n                                                                            indexIn !==\n                                                                            index\n                                                                    ),\n                                                                }\n                                                                props.setRewards(\n                                                                    newRewards\n                                                                )\n                                                            } else {\n                                                                wsActions.deleteReward(\n                                                                    account._id,\n                                                                    progress._id,\n                                                                    props.rewardKey,\n                                                                    item.rewardId\n                                                                )\n                                                            }\n                                                        }}>\n                                                            Delete\n                                                        </Menu.Item>\n                                                </Menu>\n                                            }\n                                        >\n                                            <Button type=\"link\">\n                                                <EllipsisOutlined />\n                                            </Button>\n                                        </Dropdown>\n                                    </>\n                                )}\n                            </li>\n                        )\n                    })}\n                </ol>\n\n                {!readOnly && (\n                    <Button\n                        type=\"link\"\n                        onClick={() => {\n                            setEditedRewardIndex('new')\n                            setEditedReward({ mode: 'simple' })\n                        }}\n                    >\n                        <PlusOutlined />\n                        Add rewards\n                    </Button>\n                )}\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        const newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards[rewardsGI] = {\n                                ...newRewards[rewardsGI],\n                                rewards: [\n                                    ...newRewards[rewardsGI].rewards,\n                                    rewardToSave,\n                                ],\n                            }\n                        else\n                            newRewards[rewardsGI] = {\n                                ...newRewards[rewardsGI],\n                                rewards: newRewards[rewardsGI].rewards.map(\n                                    (item, index) => {\n                                        if (index === editedRewardIndex)\n                                            return rewardToSave\n                                        else return item\n                                    }\n                                ),\n                            }\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    }\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }}\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Reward for\">\n                            {connectionsSelect(\n                                account,\n                                friendData,\n                                editedReward.for,\n                                value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        for: value,\n                                    })\n                                }\n                            )}\n                            <p>(leave blank for all)</p>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item\n                                label=\"Description\"\n                                rules={[\n                                    ...descriptionRules,\n                                    {\n                                        required: true,\n                                        min: 1,\n                                        whitespace: true,\n                                        message:\n                                            'Desription is too short. Minimal length is 1.',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\" rules={priceRules}>\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }}\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((url, index) => ({\n                                            url,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) => {\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList.map(\n                                                    image => image.url\n                                                ),\n                                            })\n                                        }}\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            url,\n                                                        ],\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                </Form.Item>\n                                <Form.Item label=\"Name\" rules={nameRules}>\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={descriptionRules}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Descriptions.Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Descriptions.Item label=\"Money\">\n                                    {previewReward.money}\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const createGroup = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'createGroup',\n                progressId,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value, inGroup) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n                inGroup,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardKey, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardKey,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Collapse from 'antd/es/collapse'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\nimport Dropdown from 'antd/es/dropdown/dropdown'\nimport { EllipsisOutlined } from '@ant-design/icons'\nimport Menu from 'antd/es/menu'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const addMilestone = milestone => {\n        console.log(milestone)\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        if (typeof milestone !== 'undefined') {\n            const indexOfMile = milestones.findIndex(\n                mile => mile.key === milestone\n            )\n            if (indexOfMile < 0) return\n            newPanes.splice(indexOfMile + 1, 0, {\n                key: newKey,\n                name: 'New milestone',\n            })\n        } else {\n            console.log('here')\n            newPanes.push({\n                key: newKey,\n                name: 'New milestone',\n            })\n        }\n        setMilestones(newPanes)\n        setNewTabIndex(newTabIndex + 1)\n        form.setFieldsValue({\n            [newKey]: { key: newKey, name: 'New milestone' },\n        })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    const connections = connectionsSelect(account, friendData)\n\n    const MilestoneControls = props => {\n        const moveMilestoneUp = () => {\n            const indexOfMile = milestones.findIndex(\n                mile => mile.key === props.milestone\n            )\n            if (indexOfMile <= 0) return\n            const newMilestones = [...milestones]\n            newMilestones.splice(\n                indexOfMile - 1,\n                0,\n                newMilestones.splice(indexOfMile, 1)[0]\n            )\n            setMilestones(newMilestones)\n        }\n\n        const moveMilestoneDown = () => {\n            const indexOfMile = milestones.findIndex(\n                mile => mile.key === props.milestone\n            )\n            if (indexOfMile < 0 || indexOfMile >= milestones.length - 1) return\n            const newMilestones = [...milestones]\n            newMilestones.splice(\n                indexOfMile + 1,\n                0,\n                newMilestones.splice(indexOfMile, 1)[0]\n            )\n            setMilestones(newMilestones)\n        }\n\n        const addMilestoneBelow = () => {\n            addMilestone(props.milestone)\n        }\n\n        const deleteMilestone = () => {\n            const newPanes = milestones.filter(\n                pane => pane.key !== props.milestone\n            )\n            setMilestones(newPanes)\n        }\n\n        return (\n            <Dropdown\n                overlay={\n                    <Menu\n                        onClick={({ domEvent }) => domEvent.stopPropagation()}\n                    >\n                        <Menu.Item key=\"0\" onClick={addMilestoneBelow}>\n                            Add a milestone below\n                        </Menu.Item>\n                        <Menu.Item key=\"1\" onClick={moveMilestoneUp}>\n                            Move up\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" onClick={moveMilestoneDown}>\n                            Move down\n                        </Menu.Item>\n                        <Menu.Divider />\n                        <Menu.Item\n                            key=\"3\"\n                            danger={true}\n                            onClick={deleteMilestone}\n                        >\n                            Delete\n                        </Menu.Item>\n                    </Menu>\n                }\n                trigger={['click']}\n            >\n                <a\n                    className=\"ant-dropdown-link\"\n                    onClick={e => {\n                        e.preventDefault()\n                        e.stopPropagation()\n                    }}\n                >\n                    <EllipsisOutlined />\n                </a>\n            </Dropdown>\n        )\n    }\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connections}\n                </Form.Item>\n\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connections}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connections}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n                        <Collapse expandIconPosition=\"right\">\n                            {milestones.map(milestone => (\n                                <Collapse.Panel\n                                    header={form.getFieldValue([\n                                        milestone.key,\n                                        'name',\n                                    ])}\n                                    key={milestone.key}\n                                    extra={\n                                        <MilestoneControls\n                                            milestone={milestone.key}\n                                        />\n                                    }\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={nameRules}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                        rules={descriptionRules}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Collapse.Panel>\n                            ))}\n                        </Collapse>\n                        <Button type=\"link\" onClick={() => addMilestone()}>\n                            <PlusOutlined /> Add a new milestone\n                        </Button>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value, props.inGroup)\n                props.setStartProgressVisible(false)\n            }}\n            account={props.account}\n            friendData={props.friendData}\n        />\n    ) : null\n\nexport default AddProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\n\nconst { Meta } = Card\n\nconst GroupCard = props => {\n    const { group } = props\n\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            onClick={() => props.history.push('/groups/' + group._id)}\n        >\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/groups/' + group._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                'url(' +\n                                (group.images &&\n                                    group.images.length > 0 &&\n                                    group.images[0]) +\n                                ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                <Meta title={group.name} />\n            </Card>\n        </div>\n    )\n}\n\nexport default withRouter(GroupCard)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport Button from 'antd/es/button'\nimport Empty from 'antd/es/empty'\nimport ProgressCard from './ProgressCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\nimport GroupCard from './GroupCard'\n\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    props.setPageTitle({ main: 'Progresses', sub: '' })\n\n    const { progressData, account, groupData } = props\n    const { progresses, groups } = account\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    let loadedProgresses, loadedGroups\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n        loadedGroups = groups\n            .filter(item => groupData[item] && groupData[item].active)\n            .map(item => groupData[item])\n    }\n\n    const editGoal = (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => setStartProgressVisible(false)}\n            width=\"90%\"\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => setStartProgressVisible(false)}\n                >\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n            />\n        </Modal>\n    )\n\n    return loadedProgresses && loadedGroups ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <TabPane tab=\"Progresses\" key=\"1\">\n                <AddCard\n                    title=\"Start a new progress\"\n                    sub=\"Rich your goals or help others!\"\n                    action={() => {\n                        setStartProgressVisible(true)\n                    }}\n                />\n                {loadedProgresses.map((progress, index) => (\n                    <ProgressCard key={index} progress={progress} />\n                ))}\n                {editGoal}\n            </TabPane>\n            <TabPane tab=\"Groups\" key=\"2\">\n                {loadedGroups.length > 0 ? (\n                    loadedGroups.map((group, index) => (\n                        <GroupCard key={index} group={group} />\n                    ))\n                ) : (\n                    <Empty\n                        imageStyle={{\n                            height: 160,\n                        }}\n                        description={\n                            <span>\n                                Here you will find your groups. Groups can be\n                                created in existing progresses.\n                            </span>\n                        }\n                    />\n                )}\n            </TabPane>\n        </Tabs>\n    ) : null\n\n    // ) : (\n    //     <Empty\n    //         imageStyle={{\n    //             height: 160,\n    //         }}\n    //         description={\n    //             <span>\n    //                 This user has no progresses. You can create a goal and\n    //                 invite this user.\n    //             </span>\n    //         }\n    //     />\n    // )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        groupData: state.groupData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nimport UserButton from '../../components/UserButton/UserButton'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { progress, account, state, setState } = props\n    const { goal } = progress\n    const { rewardsGroups } = goal\n\n    const renderCheckbox = ({ checked, milestoneId, disabled }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(props, e.target.checked, milestoneId)\n            }\n            disabled={disabled}\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n            fixed: 'left',\n        },\n        {\n            title: 'Rewards',\n            dataIndex: 'rewards',\n            key: 'rewards',\n            render: rewards => (\n                <Rewards rewardKey={rewards} rewards={rewardsGroups} />\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <Rewards\n                            rewardKey={1}\n                            rewards={[{ rewards: status, key: 1 }]}\n                            readOnly={true}\n                        />\n                    )}\n                </>\n            ),\n        },\n        ...goal.users.map(user => ({\n            title: (\n                <>\n                    <UserButton id={user} noName={true} /> (ach)\n                </>\n            ),\n            dataIndex: user,\n            key: user,\n            render: renderCheckbox,\n            align: 'center',\n        })),\n        {\n            title: (\n                <>\n                    <UserButton id={progress.owner} noName={true} /> (own)\n                </>\n            ),\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n            align: 'center',\n        },\n        ...goal.experts.map(expert => ({\n            title: (\n                <>\n                    <UserButton id={expert} noName={true} /> (exp)\n                </>\n            ),\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n            align: 'center',\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n            disabled: id !== account._id,\n        }\n    }\n\n    const getMilestoneData = (milestone, index) => {\n        const stage = progress.stages.find(\n            stage => stage.milestoneId === milestone.key\n        ) || { approvedBy: [] }\n\n        const experts = {}\n        for (let expert of goal.experts) {\n            experts[expert] = getCheckboxStatus(expert, stage, milestone)\n        }\n\n        const users = {}\n        for (let user of goal.users) {\n            users[user] = getCheckboxStatus(user, stage, milestone)\n        }\n        return {\n            key: index,\n            name: milestone,\n            rewards: milestone.key,\n            status: stage.paid,\n            ...users,\n            owner: getCheckboxStatus(progress.owner, stage, milestone),\n            ...experts,\n        }\n    }\n\n    const milestonesData = [\n        getMilestoneData(\n            {\n                key: 'start',\n                name: 'Start',\n                description:\n                    'At this stage owner and user should agree to start this progress.',\n            },\n            'start'\n        ),\n        ...(goal.withMilestones\n            ? goal.milestonesValues.map(getMilestoneData)\n            : []),\n        getMilestoneData(\n            {\n                key: 'finish',\n                name: 'Finish',\n                description:\n                    'At this stage owner and user should agree to finish this progress.',\n            },\n            'finish'\n        ),\n    ]\n\n    return (\n        <>\n            <Table\n                columns={columns}\n                dataSource={milestonesData}\n                scroll={{ x: 'max-content' }}\n                bordered={true}\n            />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <Rewards\n                                    rewardKey={state.previewMilestone.key}\n                                    rewards={rewardsGroups}\n                                    readOnly={true}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState } = props\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport Popconfirm from 'antd/es/popconfirm'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst Activity = props => {\n    const { account, progress, state, setState } = props\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">\n                    {goal.users && <UserButton ids={goal.users} group={true} />}\n                </Item>\n                <Item label=\"Owner\">\n                    <UserButton id={progress.owner} noName={true} />\n                </Item>\n                <Item label=\"Supporters\">\n                    {goal.supporters && (\n                        <UserButton ids={goal.supporters} group={true} />\n                    )}\n                </Item>\n                <Item label=\"Experts\">\n                    {goal.experts && (\n                        <UserButton ids={goal.experts} group={true} />\n                    )}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable\n                progress={progress}\n                account={account}\n                state={state}\n                setState={setState}\n            />\n            {account._id === progress.owner && (\n                <Button\n                    style={{ margin: '0px 20px 50px 0px' }}\n                    type=\"primary\"\n                    onClick={() => {\n                        setState({ ...state, editProgressOpen: true })\n                    }}\n                >\n                    Edit progress\n                </Button>\n            )}\n            {account._id === progress.owner && (\n                <Popconfirm\n                    title=\"Create a group if you want to have more similar prgresses with the same people.\"\n                    onConfirm={() =>\n                        wsActions.createGroup(account._id, progress._id)\n                    }\n                >\n                    <Button\n                        style={{ margin: '0px 20px 50px 0px' }}\n                        type=\"primary\"\n                    >\n                        Create a group\n                    </Button>\n                </Popconfirm>\n            )}\n            {account.progresses &&\n                account.progresses.includes(progress._id.toString()) && (\n                    <Button\n                        danger={true}\n                        onClick={() => {\n                            wsActions.leaveProgress(props)\n                        }}\n                    >\n                        Leave the progress\n                    </Button>\n                )}\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\n\nconst AddPost = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                boxShadow:\n                    '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <h2>Post something new</h2>\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText\n                                    )\n                                    setMessageText('')\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                size=\"large\"\n                                type=\"link\"\n                            />\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        wsActions.addPost(\n                                            account._id,\n                                            parent,\n                                            parentType,\n                                            messageText,\n                                            url\n                                        )\n                                        if (props.onSend) props.onSend()\n                                    })\n                                }}\n                            >\n                                <Button\n                                    size=\"large\"\n                                    type=\"link\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureOutlined />\n                                        )\n                                    }\n                                />\n                            </Upload>\n                        </Form.Item>\n                    </>\n                }\n            />\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Activity from './Activity'\nimport Card from 'antd/es/card'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport Tabs from 'antd/es/tabs'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const progressId = props.history.location.pathname.split('/')[2]\n    useEffect(() => {\n        props.setData({ currentProgress: progressId })\n    }, [props.isAuthed])\n\n    const { progress, account, profile, friendData, posts } = props\n\n    if (!progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <>\n            <Tabs>\n                <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                    <AddPost\n                        parent={progressId}\n                        account={account}\n                        parentType=\"progress\"\n                        // onSend={() => setEditingMessage('')}\n                    />\n                    {progress.posts.map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <Card>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </Card>\n                            )\n                        } else return null\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Details\" key=\"details\">\n                    <Activity\n                        state={state}\n                        setState={setState}\n                        progress={progress}\n                        account={account}\n                    />\n                </Tabs.TabPane>\n            </Tabs>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst Wallet = props => {\n    if (!props.keepPageTitle)\n        props.setPageTitle({ main: 'Shop', sub: 'Wallet' })\n    const account = props.pulledProfile || props.account\n    return account.wallet\n        ? account.wallet.map((money, index) => (\n              <div\n                  onClick={() => props.history.push('/profile/' + money.user)}\n                  style={{ display: 'inline-block', margin: '4px 8px' }}\n              >\n                  <Card\n                      key={index}\n                      type=\"inner\"\n                      style={{\n                          width: 200,\n                      }}\n                      cover={\n                          <span style={{ padding: '25px' }}>\n                              <Avatar src={getAvatar(money.user)} size={150} />\n                          </span>\n                      }\n                      extra={\n                          <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                              Go to the shop\n                          </Button>\n                      }\n                  >\n                      <UserButton id={money.user} />\n                      {money.amount}\n                  </Card>\n              </div>\n          ))\n        : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wallet)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, aTransactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => aTransactionData[item])\n        .map(item => aTransactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Card>\n            <Table\n                columns={columns}\n                dataSource={tableData}\n                scroll={{ x: true }}\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        aTransactionData: state.aTransactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Transactions)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Shop', sub: 'My items' })\n    }, [])\n\n    return props.account._id ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                <WishlistAndPerks\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                    account={props.account}\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Card from 'antd/es/card'\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst DashboardPosts = props => {\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        groupData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [startTime] = useState(new Date().getTime())\n\n    const sortNotifications = (a, b) => {\n        if (a.notifications.length === 0 && b.notifications.length > 0) return 1\n        else if (a.notifications.length > 0 && b.notifications.length === 0)\n            return -1\n        else if (a.notifications.length === 0 && b.notifications.length === 0)\n            return 0\n        else\n            return new Date(a.notifications[0].date).getTime() <\n                new Date(b.notifications[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortNotifications)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.progresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item => item.code === 'add post'\n                ),\n            ]\n    }\n\n    for (let group of account.groups) {\n        if (groupData[group])\n            lastNotifications = [\n                ...lastNotifications,\n                ...groupData[group].notifications.filter(\n                    item => item.code === 'add post'\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return posts.map(item => {\n        let text = null\n\n        const not = item.notifications.length > 0 ? item.notifications[0] : null\n        if (not) {\n            switch (not.code) {\n                case 'edit wishlist item':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            edited item in wishlist.\n                        </span>\n                    )\n                    break\n                case 'edit goal':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            edited goal.\n                        </span>\n                    )\n                    break\n                case 'edit perk':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            edited item in shop.\n                        </span>\n                    )\n                    break\n\n                case 'comment':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            commented on the post you are following.\n                        </span>\n                    )\n                    break\n                case 'edit comment':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            edited comment on the post you are following.\n                        </span>\n                    )\n                    break\n                case 'like':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            added a like on the post you are following.\n                        </span>\n                    )\n                    break\n                case 'dislike':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            removed like from the post you are following.\n                        </span>\n                    )\n                    break\n                case 'dislike':\n                    text = (\n                        <span>\n                            <UserButton id={not.user} />\n                            removed like from the post you are following.\n                        </span>\n                    )\n                    break\n                default:\n                    text = null\n                    break\n            }\n        }\n        return (\n            <Card>\n                {text}\n                <Post friendData={friendData} account={account} post={item} />\n            </Card>\n        )\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        groupData: state.groupData,\n        currentPosts: state.currentPosts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst DashboardEvents = props => {\n    const { lastNotifications } = props\n    const getRewardText = item =>\n        item.details.reward.money\n            ? '$' + item.details.reward.money\n            : item.details.reward.simple || item.details.reward.itemName\n    return lastNotifications.map(item => {\n        let text = null\n\n        switch (item.code) {\n            case 'change name':\n                text = (\n                    <span>\n                        {' '}\n                        <UserButton id={item.user} /> changed name.\n                    </span>\n                )\n                break\n            case 'delete account':\n                text = (\n                    <span>\n                        {item.user}\n                        deleted account.\n                    </span>\n                )\n                break\n            case 'friend request':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> wants to become friends\n                        with you.\n                    </span>\n                )\n                break\n            case 'friend add':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> and{' '}\n                        <UserButton id={item.details.friend} /> became friends.\n                    </span>\n                )\n                break\n            case 'unfriend':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> and{' '}\n                        <UserButton id={item.details.friend} /> stopped being\n                        friends.\n                    </span>\n                )\n                break\n            case 'add wishlist item':\n            case 'edit wishlist item':\n                text = (\n                    <span>\n                        <UserButton id={item.user} />{' '}\n                        {item.code === 'add wishlist item'\n                            ? 'added to wishlist a new item'\n                            : 'edited in wishlist'}{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${item.user}/${\n                                        item.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </Button>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete wishlist item':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> deleted{' '}\n                        {item.details.itemName} from wishlist.\n                    </span>\n                )\n                break\n            case 'add goal':\n            case 'edit goal':\n                text = (\n                    <span>\n                        <UserButton id={item.user} />{' '}\n                        {item.code === 'add goal'\n                            ? 'added a new goal'\n                            : 'edited goal'}{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/goals/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </Button>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete goal':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> deleted{' '}\n                        {item.details.itemName} from goals.\n                    </span>\n                )\n                break\n            case 'add perk':\n            case 'edit perk':\n                text = (\n                    <span>\n                        <UserButton id={item.user} />{' '}\n                        {item.code === 'add perk'\n                            ? 'added to shop a new item'\n                            : 'edited in shop'}{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </Button>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete perk':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> deleted{' '}\n                        {item.details.itemName} from shop.\n                    </span>\n                )\n                break\n            case 'buy perk':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> bought\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </Button>{' '}\n                        from <UserButton id={item.details.owner} /> .\n                    </span>\n                )\n                break\n            case 'cancel transaction':\n            case 'confirm transaction':\n                text = (\n                    <span>\n                        <UserButton id={item.user} />{' '}\n                        {item.code === 'cancel transaction'\n                            ? 'cancelled'\n                            : 'confirmed'}\n                        purchase of\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </Button>{' '}\n                        by <UserButton id={item.details.buyer} /> .\n                    </span>\n                )\n                break\n            case 'start progress':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> started participating in\n                        progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </Button>{' '}\n                        as {item.details.as}.\n                    </span>\n                )\n                break\n            case 'approve milestone':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> approved milestone{' '}\n                        {item.details.itemName} in\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'disapprove milestone':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> disapproved milestone{' '}\n                        {item.details.itemName} in\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'finish progress':\n                text = (\n                    <span>\n                        Progress{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        was approved and finished.\n                    </span>\n                )\n                break\n            case 'milestone finish':\n                text = (\n                    <span>\n                        Milestone {item.details.itemName} in progress{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        was approved and finished.\n                    </span>\n                )\n                break\n            case 'get reward':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> recieved{' '}\n                        {getRewardText(item)} as a reward from{' '}\n                        <UserButton id={item.details.from} /> in progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'leave progress':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> left progress{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'edit progress':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> edited progress{' '}\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        {item.details.addedAccounts.length > 0 ? (\n                            <>\n                                {' '}\n                                and added{' '}\n                                {item.details.addedAccounts.map(ac => (\n                                    <UserButton id={ac} />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        {item.details.droppedAccounts.length > 0 ? (\n                            <>\n                                {' '}\n                                and removed{' '}\n                                {item.details.droppedAccounts.map(ac => (\n                                    <UserButton id={ac} />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        .\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> removed{' '}\n                        <UserButton id={item.details.account} /> from progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> added{' '}\n                        <UserButton id={item.details.account} /> to progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'add reward':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> added{' '}\n                        {getRewardText(item)} as a reward for asdasdasd\n                        {!item.details.for || item.details.for.length === 0\n                            ? 'all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton id={account} />,\n                                  </>\n                              ))}\n                        in progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            case 'delete reward':\n                text = (\n                    <span>\n                        <UserButton id={item.user} /> removed{' '}\n                        {getRewardText(item)} as a reward for{' '}\n                        {!item.details.for || item.details.for.length === 0\n                            ? 'all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton id={account} />,\n                                  </>\n                              ))}\n                        in progress\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                props.history.push(\n                                    `/progresses/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </Button>\n                        .\n                    </span>\n                )\n                break\n            default:\n                text = 'New event'\n                break\n        }\n        return <Card>{text}</Card>\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport Tabs from 'antd/es/tabs'\nimport DashboardPosts from './DashboardPosts'\nimport DashboardEvents from './DashboardEvents'\n\nconst Progress = props => {\n    const { account, lastNotifications } = props\n\n    if (!account._id) return null\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Tabs\n            onChange={activeTab => {\n                if (activeTab === 'events') {\n                    if (\n                        lastNotifications.length > 0 &&\n                        parseInt(account.lastSeenNot) !==\n                            parseInt(lastNotifications[0].notId)\n                    ) {\n                        wsActions.setLastSeenNot(\n                            account._id,\n                            parseInt(lastNotifications[0].notId)\n                        )\n                    }\n                }\n            }}\n        >\n            <Tabs.TabPane tab=\"Posts\" key=\"psts\">\n                <DashboardPosts />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Events\" key=\"events\">\n                <DashboardEvents />\n            </Tabs.TabPane>\n        </Tabs>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Progress)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React from 'react'\n\nimport * as wsActions from '../websocketActions'\nimport Menu from 'antd/es/menu'\nimport Dropdown from 'antd/es/dropdown'\nimport { EllipsisOutlined, DownOutlined } from '@ant-design/icons'\nimport Button from 'antd/es/button'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        accountId,\n    } = props\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const menu = (\n        <Menu onClick={({ domEvent }) => domEvent.stopPropagation()}>\n            {props.additionalButtons &&\n                props.additionalButtons.map((button, index) => (\n                    <Menu.Item key={index + 100} onClick={button.onClick}>\n                        {button.title}\n                    </Menu.Item>\n                ))}\n            {invitingFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"2\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Decline\n                </Menu.Item>\n            ) : invitedFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"3\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Cancel invitation\n                </Menu.Item>\n            ) : realFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"4\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Unfriend\n                </Menu.Item>\n            ) : (\n                <Menu.Item\n                    key=\"5\"\n                    onClick={() => wsActions.addFriend(accountId, _id)}\n                    danger={true}\n                >\n                    Become friends\n                </Menu.Item>\n            )}\n        </Menu>\n    )\n    return invitingFriends.find(item => item.friend === _id) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.acceptFriend(accountId, _id)\n            }}\n        >\n            Accept\n        </Dropdown.Button>\n    ) : (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a\n                // className=\"ant-dropdown-link\"\n                onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                }}\n            >\n                <Button type=\"link\">\n                    {props.asText ? (\n                        <>\n                            Actions <DownOutlined />\n                        </>\n                    ) : (\n                        <EllipsisOutlined />\n                    )}\n                </Button>\n            </a>\n        </Dropdown>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport friendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        accountId: props.account ? props.account._id : '',\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButtons: [\n            {\n                title: 'See profile',\n                onClick: () =>\n                    props.history.push('/profile/' + props.friend._id),\n            },\n        ],\n    })\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: '100%' }}\n            bordered={false}\n            extra={friendActions}\n            title={<UserButton id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult(null)\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst pendingFriends = props => {\n    const { realFriends, invitedFriends, invitingFriends } = props\n    return (\n        <>\n            {invitingFriends.length > 0 && (\n                <>\n                    <h2>People invited me to be friends</h2>\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <>\n                    <h2>I invited these people</h2>\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\nimport Tabs from 'antd/es/tabs'\nimport Empty from 'antd/es/empty'\nimport Badge from 'antd/es/badge'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n    const confirmedFriends =\n        realFriends.length > 0 ? (\n            realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                />\n            ))\n        ) : (\n            <Empty\n                image=\"https://websiter.s3.us-east-2.amazonaws.com/image+4.jpg\"\n                imageStyle={{ height: '250px', marginTop: '50px' }}\n                description={false}\n            />\n        )\n\n    return (\n        <>\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n            {invitedFriends.length > 0 || invitingFriends.length > 0 ? (\n                <Tabs>\n                    <Tabs.TabPane key=\"confirmed\" tab=\"Confrmed\">\n                        {confirmedFriends}\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane\n                        tab={\n                            <Badge\n                                count={invitingFriends.length}\n                                offset={[10, 0]}\n                            >\n                                Pending\n                            </Badge>\n                        }\n                        key=\"pending\"\n                    >\n                        <PendingFriends\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n            ) : (\n                confirmedFriends\n            )}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Modal from 'antd/es/modal'\nimport { accountNameRules } from '../../constants/fieldRules'\nimport * as wsActions from '../../websocketActions'\nimport message from 'antd/es/message'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\n\nconst Account = props => {\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const { account } = props\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Account', sub: '' })\n    }, [])\n\n    const loading = false\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 0 },\n    }\n    return account && account.name ? (\n        <Card>\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, 'avatar', () => {\n                        props.increaseAvatarV()\n                    })\n                }}\n            >\n                {account.image ? (\n                    <Avatar\n                        src={getAvatar(account._id, account.image)}\n                        size={150}\n                        style={{ margin: '25px' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.editAccount(value, account._id)}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: account.name,\n                    nickname: account._id,\n                }}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item label=\"Nickname\" name=\"nickname\">\n                    <Input disabled={true} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Dropdown.Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        overlay={\n                            <Menu>\n                                <Menu.Item\n                                    danger={true}\n                                    onClick={() => setDeleteVisible(true)}\n                                >\n                                    Delete account\n                                </Menu.Item>\n                            </Menu>\n                        }\n                    >\n                        Save\n                    </Dropdown.Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                title=\"Delete account\"\n                visible={deleteVisible}\n                onOk={() => {\n                    if (deleteField !== account._id) {\n                        message.warning('The nickmanme is not correct.')\n                    } else {\n                        wsActions.deleteAccount(account._id)\n                    }\n                }}\n                onCancel={() => {\n                    setDeleteVisible(false)\n                    setDeleteField('')\n                }}\n            >\n                <p>\n                    Please enter your nickname and press Ok to delete your\n                    account.\n                </p>\n                <Input onChange={e => setDeleteField(e.target.value)} />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Account)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Profile = props => {\n    useEffect(// () => {\n    // pullData(props, {\n    //     forceAuth: false,\n    //     forceActivate: false,\n    // })\n    // }\n    () => {\n        const profileId = props.history.location.pathname.split('/')[2]\n        props.setData({ currentProfile: profileId })\n    }, [props.history.location.pathname])\n\n    const { profile, account, friendData } = props\n    if (!profile._id || !profile.goals) return null\n    // props.setPageTitle({ main: profile.name, sub: profile._id })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        accountId: account ? account._id : '',\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n        asText: true,\n    })\n    return (\n        <Card>\n            <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                <Avatar\n                    src={getAvatar(profile._is, profile.image)}\n                    size={200}\n                />\n                <h1>{profile.name}</h1>\n                <h3>({profile._id})</h3>\n                {friendActions}\n            </div>\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    {profile.friends\n                        .filter(friend => friend.status === 'friend')\n                        .map(friend => {\n                            const oneFriendData = {\n                                ...friendData[friend.friend],\n                                ...friend.friend,\n                            }\n\n                            return (\n                                <FriendCard\n                                    key={oneFriendData._id}\n                                    {...props}\n                                    account={account}\n                                    friend={oneFriendData}\n                                    realFriends={realFriends}\n                                    invitingFriends={invitingFriends}\n                                    invitedFriends={invitedFriends}\n                                />\n                            )\n                        })}\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Progresses\n                        pulledProfile={profile}\n                        progressesData={profile.progressesData}\n                        keepPageTitle={true}\n                        noPullData={true}\n                    />\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    {profile.goals.map((goal, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={goal}\n                            perkId={goal.itemId}\n                            owner={profile}\n                            account={account}\n                            setEditedPerk={() => {}}\n                            setEditPerkOpen={() => {}}\n                            onlyBuy={true}\n                            mode=\"goals\"\n                        />\n                    ))}\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    {profile.perks &&\n                        profile.perks.map((perk, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={perk}\n                                perkId={perk.perkId}\n                                owner={profile}\n                                account={account}\n                                onlyBuy={true}\n                                mode=\"shop\"\n                            />\n                        ))}\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Wallet\n                        keepPageTitle={true}\n                        pulledProfile={profile}\n                        account={profile}\n                    />\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    {profile.wishlist.map((item, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={item}\n                            perkId={item.itemId}\n                            owner={profile}\n                            account={account}\n                            setEditedPerk={() => {}}\n                            setEditPerkOpen={() => {}}\n                            onlyBuy={true}\n                            mode=\"wishlist\"\n                        />\n                    ))}\n                </Tabs.TabPane>\n            </Tabs>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        pulledFrom: state.pulledFrom,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                    props.history.push('/account')\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => <UserButton id={item} />)\n        } else return items\n    }\n\n    return perk ? (\n        <Card\n            title={\n                <span>\n                    Item from <UserButton id={profile._id} /> shop\n                </span>\n            }\n            bordered={false}\n        >\n            <ImageCarousel images={perk.images} />\n\n            <h1>{perk.name}</h1>\n            <p style={{ whiteSpace: 'pre-wrap' }}>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Post\n                noStartMessage={true}\n                post={props.post[perk.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        pullData(props, data, setData, { forceAuth: false })\n    }, [props.isAuthed])\n    if (!data.wishlistItem) return null\n    const { wishlistItem, profile } = data\n    props.setData({ currentPosts: wishlistItem.post })\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <Card\n            title={\n                <span>\n                    Item from <UserButton id={profile._id} /> wishlist\n                </span>\n            }\n            bordered={false}\n        >\n            <ImageCarousel images={wishlistItem.images} />\n\n            <h1>{wishlistItem.name}</h1>\n            <p style={{ whiteSpace: 'pre-wrap' }}>{wishlistItem.description}</p>\n            <Post\n                noStartMessage={true}\n                post={props.post[wishlistItem.post]}\n                account={props.account}\n                friendData={props.friendData}\n            />\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n\n    return (\n        <>\n            {props.account._id ? (\n                <WishlistAndPerks mode=\"wishlist\" account={props.account} />\n            ) : (\n                <span />\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Card from 'antd/es/card'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport Tabs from 'antd/es/tabs'\nimport AddCard from '../../components/AddCard/AddCard'\nimport ProgressCard from '../Progresses/ProgressCard'\nimport AddProgress from '../Progresses/AddProgress'\n\nconst Group = props => {\n    const [state, setState] = useState({})\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    const groupId = props.history.location.pathname.split('/')[2]\n    useEffect(() => {\n        props.setData({ currentGroup: groupId })\n    }, [props.isAuthed])\n\n    const { group, account, friendData, posts, progressData } = props\n\n    if (!group._id) return null\n    props.setData({ currentPosts: group.posts })\n\n    props.setPageTitle({ main: group.name, sub: group.worker })\n\n    const loadedProgresses = group.progresses\n        .filter(item => progressData[item])\n        .map(item => progressData[item])\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => setStartProgressVisible(false)}\n            width=\"90%\"\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => setStartProgressVisible(false)}\n                >\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                inGroup={group._id}\n            />\n        </Modal>\n    )\n    return friendData ? (\n        <>\n            <Tabs>\n                <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                    <AddPost\n                        parent={groupId}\n                        account={account}\n                        parentType=\"progress\"\n                        // onSend={() => setEditingMessage('')}\n                    />\n                    {group.posts.map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <Card>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </Card>\n                            )\n                        } else return null\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key=\"progresses\">\n                    <AddCard\n                        title=\"Start a new progress\"\n                        sub=\"Rich your goals or help others!\"\n                        action={() => {\n                            setStartProgressVisible(true)\n                        }}\n                    />\n                    {loadedProgresses.map((progress, index) => (\n                        <ProgressCard key={index} progress={progress} />\n                    ))}\n                    {editGoal}\n                </Tabs.TabPane>\n            </Tabs>\n\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        group: state.group,\n        friendData: state.friendData,\n        progressData: state.progressData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Group)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData, groupData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.progresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let group of account.groups) {\n        if (groupData[group])\n            lastNotifications = [\n                ...lastNotifications,\n                ...groupData[group].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (friendData[friend.friend] && friend.status === 'friend')\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        groupData: state.groupData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goals/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\nimport Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport Group from './containers/Group/Group'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth(props)\n    }, [])\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/login\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/goals\" exact component={Goals} />\n            <Route path=\"/goals\" component={Goal} />\n\n            <Route path=\"/progresses\" exact component={Progresses} />\n            <Route path=\"/progresses\" component={Progress} />\n            <Route path=\"/groups\" component={Group} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/friends\" exact component={Friends} />\n\n            <Route path=\"/account\" exact component={Account} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n\n            <Route path=\"/shop\" exact component={Shop} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" exact component={Wishlist} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n            <Route path=\"/logout\" exact component={Logout} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            {isAuthed ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n                {isAuthed && <NotificationsTracker />}\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentGroup: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    group: {},\n    groupData: {},\n    pageTitle: {},\n    lastUrl: '',\n    friendSearchResult: null,\n    accountNotActive: false,\n    lastNotifications: [],\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentGroup',\n                'profile',\n                'group',\n                'currentProgress',\n                'progress',\n                'lastNotifications',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'groupData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'group',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'groupData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SAVE_LAST_URL: (state: Object, action: Object) => {\n        if (action.url !== '/login' && action.url !== '/logout')\n            state.lastUrl = action.url\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}