{"version":3,"sources":["components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/LoginModal.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","components/UserButton/UserButton.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/UI/MoreIcon.js","components/UI/ImageCarousel/ImageCarousel.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","components/Layout/Layout.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","components/MasonryCard.tsx","components/FollowButton.tsx","containers/Progress/Activity.tsx","components/Post/AddMessage.tsx","components/Post/Message.tsx","components/Post/Post.tsx","components/Post/AddPost.tsx","utils/pullData.js","containers/Progress/Progress.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Dashboard/DashboardEvents.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/Explore.tsx","components/AddCard/AddCard.tsx","components/UI/CustomEmpty.tsx","containers/Progresses/Progresses.tsx","containers/Dashboard/Dashboard.tsx","websocketActions/dashboard.tsx","containers/Blog/Blog.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","components/ProgressButton.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","websocketActions/wishlistAndPerks.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Dashboard/NotificationsTracker.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx","components/Layout/Layout.module.css"],"names":["module","exports","Container","socialButtons","Background","Dots","Avatar","Cookies","getAvatar","nickname","version","cookies","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","get","basicURL","react_default","a","createElement","modal","visible","loginVisible","onOk","document","body","removeAttribute","onCancel","setLoginVisible","destroyOnClose","maskClosable","footer","width","style","maxWidth","className","classes","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","concat","s","es_checkbox","checked","onChange","typography","Link","title","set","path","maxAge","processRes","res","data","logout","history","push","success","errorCode","message","warning","error","successCode","status","tryAuth","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","id","type","setData","setPageTitle","setFriendSearchResult","requestResource","ids","notRequestedIds","filter","includes","webSocket","readyState","send","JSON","stringify","messageCode","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","length","shift","attr","split","applyUpdateToPart","updatedFields","_step","applyDeleteToPart","splice","_iterator","updateResource_createForOfIteratorHelper","removedFields","n","done","field","value","indexOf","err","e","f","getListOfNeededResources","store","requestedResources","user","account","progress","progressData","friendData","postData","transactionData","neededResources","isAuthed","currentAccount","_i","_arr","toConsumableArray","progresses","followProgresses","getListOfNeededResources_createForOfIteratorHelper","followPosts","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","followingAccounts","followAccounts","item","currentProfile","profile","_i3","_arr3","_step5","_iterator5","_i4","_arr4","currentProgress","participants","owner","worker","_i5","_participants","_step6","_iterator6","posts","currentPosts","_step7","_iterator7","postEl","_step8","_iterator8","users","parent","parentType","parentId","reduce","obj","Array","from","Set","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","checkData","__v","check","getResourcesToMonitor","resources","addData","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","Component","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followProgress","progressId","unfollowProgress","followAccount","accountFollow","unfollowAccount","unfriend","friendId","uploadFile","file","size","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","height","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","console","log","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","friendSearchResult","friendDataExp","getUserData","userName","name","userAvatar","avatar","image","noClick","margin","onlyName","stopPropagation","Group","map","Fragment","noAva","noName","span","react_router_dom","objectSpread","cursor","display","to","inline","es_button","padding","EditGoalAndProgressForm_connectionsSelect","onSelect","es_select","placeholder","getPopupContainer","trigger","parentNode","Option","components_UserButton_UserButton","MoreIcon","viewBox","transform","d","ImageCarousel","previewImage","setPreviewImage","images","carousel","dots","index","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Modal","alt","_React$createElement","previewReward","setPreviewReward","_useState5","_useState6","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","RewardButton","simple","money","itemName","layout","labelCol","wrapperCol","rewards","onlyButton","es_form","assign","Item","label","rewardKey","paddingLeft","listStyleType","es_tag","alignItems","for","marginLeft","dropdown","overlay","es_menu","rewardId","confirm","setRewards","indexIn","color","PlusOutlined_default","closable","reward","rewardToSave","undefined","newRewards","connectionsSelect","divider","rules","input","TextArea","input_number","upload","listType","fileList","itemImages","uid","onPreview","_ref2","customRequest","_ref3","_ref4","itemDescription","_ref5","UI_ImageCarousel_ImageCarousel","whiteSpace","Select","EditGoalAndProgressForm","goal","setImages","_Form$useForm","Form","useForm","form","connections","goalId","onFinish","autoComplete","initialValues","repeat","days","onValuesChange","changedFields","allValues","setFieldsValue","sort","valuePropName","getValueFromEvent","isArray","autoSize","minRows","maxRows","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","components_Rewards_Rewards","textAlign","marginTop","cancel","htmlType","borderRadius","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","wsActions","setStartProgressVisible","pageTitle","lastNotifications","isConnectingWS","lastScrollY","setLastScrollY","headerVisible","setHeaderVisible","_useState9","_useState10","startProgressVisible","_useState11","pathname","_useState12","pageAddress","setPageAddress","handleScroll","currentScrollY","scrollY","removeEventListener","addEventListener","scrollTo","top","left","behavior","showSignIn","selectedKey","buttonProps","checkHighligh","ghost","openLink","isActivating","numberOfUnseenNots","Layout_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","logedIn","editGoal","Progresses_AddProgress","join","icon","shape","LogoutOutlined_default","border","marginRight","spin","indicator","LoadingOutlined_default","children","badge","count","HomeFilled_default","TeamOutlined_default","Layout_LoginModal","back_top","backgroundColor","UpOutlined_default","moment","format","ActivityTable","activeTab","setActiveTab","isOwner","lastStages","stages","slice","Math","b","aS","aF","bS","bF","old","day","year","dayOfYear","startOf","endOf","week","month","now","abs","diff","nowStageId","stageId","tabs","activeKey","defaultActiveKey","findIndex","toString","onTabClick","stage","stageDate","getStatus","dismissed","failBy","approvedBy","getTag","descriptions","tabTitle","myStatus","stageStatus","TabPane","tab","textTransform","es_radio","bordered","column","xxl","xl","lg","md","sm","xs","paid","EditProgress","editProgressOpen","placeholderImages","Card","matches","imagePH","round","x","makeRand","getPH","wordBreak","float","noLink","onClickLink","FollowButton","danger","Descriptions","followersVisible","setFollowersVisible","Helmet","content","description","PushpinFilled_default","add","likes","LikeFilled_default","LikeOutlined_default","orientation","Paragraph","ellipsis","rows","expandable","symbol","RetweetOutlined_default","getRepeatType","acc","val","getDay","Progress_ActivityTable","Progress_EditProgress","MasonryCard","components_FollowButton","imageLoading","setImageLoading","replyToUser","setMessageText","background","replyTo","bottom","comment","uploadImage","messageValue","replyToMessage","editedMessage","editingMessage","onSend","SendOutlined_default","showUploadList","PictureFilled_default","CloseCircleFilled_default","Message","replies","isStart","replyVisible","setReplyVisible","setReplyToUser","setEditingMessage","showReplies","setShowReplies","commentProps","timeago_react","datetime","date","live","tooltip","author","messageType","details","itemId","startMessage","Post_AddMessage","isTop","reply","postOpen","setPostOpen","noStartMessage","Post_Message","position","justifyContent","CommentOutlined_default","messages","Post_createForOfIteratorHelper","getNumberOfMessages","zIndex","pullData","options","pathParts","Progress_createForOfIteratorHelper","main","sub","Progress_Activity","Post_AddPost","paddingTop","components_Post_Post","statePosts","setPosts","Date","getTime","startTime","sortPosts","aN","notifications","bN","newPosts","newUnseenPosts","newOldPosts","oldPosts","DashboardPosts_createForOfIteratorHelper","_loop2","oldPostIndex","_newOldPosts","resultPosts","neededPosts","isEqual","nots","getRewardText","stageName","price","buyer","as","getStageName","progressName","addedAccounts","ac","droppedAccounts","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","isSearching","setIsSearching","foundProgresses","setFoundProgresses","setProgresses","noMore","setNoMore","noMorePopular","setNoMorePopular","searchValue","setSearchValue","onSearch","noNoMore","skip","newFriendData","Explore_createForOfIteratorHelper","Search","enterButton","allowClear","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","AddCard","action","CustomEmpty","forceAuth","loadedProgresses","components_AddCard_AddCard","Dashboard_createForOfIteratorHelper","tabBarStyle","last","containers_Explore_Explore","containers_Progresses_Progresses","Dashboard_DashboardPosts","offset","Dashboard_DashboardEvents","setTitle","replace","dangerouslySetInnerHTML","__html","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","menu","domEvent","additionalButtons","button","noFollow","Button","preventDefault","asText","DownOutlined_default","friendActions","friendActionButton","asIcons","handleClick","searchResult","addFriendOpen","setAddFriendOpen","search","card","components_FriendCard","Friends_createForOfIteratorHelper","fullFriend","confirmedFriends","empty","imageStyle","PendingFriends","Friends_AddFriends","AddPerkForm","perk","perkId","setEditPerkOpen","setPerk","wishlist","goals","perks","Shop_AddPerkForm","processedValue","WishlistAndPerks","editedPerk","setEditedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","onlyBuy","tableData","sorted","Transactions_createForOfIteratorHelper","types","amount","collapse","expandIconPosition","destroyInactivePanel","accordion","Panel","header","tag","toUpperCase","increaseAvatarV","followingVisible","setFollowingVisible","deleteVisible","setDeleteVisible","deleteField","setDeleteField","profileId","Profile_createForOfIteratorHelper","Title","level","editable","EditOutlined_default","borderTop","containers_Friends_Friends","oneFriendData","Shop_Transactions","Shop_WishlistAndPerks","components_ProgressButton","maxHeight","accountNotActive","setAccountActivated","page_header","backIcon","nicknameNotUnique","Perk_createForOfIteratorHelper","items","Perk_Item","wishlistItem","WishlistItem_createForOfIteratorHelper","popconfirm","onConfirm","okText","cancelText","sortNotifiacations","NotificationsTracker_createForOfIteratorHelper","filterSameNot","arr","myNotifications","mountedRef","useRef","timer","setTimer","explanationVisible","setExplanationVisible","setShowSignIn","auth","useCallback","current","abrupt","t0","Logout","react_router","routes","exact","component","Dashboard","Progress","Profile","Perk","WishlistItem","Blog","ActivateAccount","process","handleExplanationClose","Layout","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","reducer","createReducer","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","__webpack_require__","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","src_App","root","getElementById","ReactDOM","render","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle"],"mappings":"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","file":"static/js/main.80315f01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__f69s0\",\"socialButtons\":\"LoginModal_socialButtons__ex7dM\",\"Background\":\"LoginModal_Background__11ZaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__2JZGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__11bEV\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\nimport Typography from 'antd/es/typography'\n\nconst cookies = new Cookies()\n\nconst LoginModal = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <Modal\n            visible={props.loginVisible}\n            onOk={() => document.body.removeAttribute('style')}\n            onCancel={() => {\n                props.setLoginVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            destroyOnClose={true}\n            maskClosable={false}\n            footer={[]}\n            width=\"100%\"\n            style={{ maxWidth: '600px' }}\n        >\n            {!cookieConsent ? (\n                <Modal\n                    title=\"Cookies consent\"\n                    visible={!cookieConsent}\n                    onOk={agreeWithCookies}\n                    onCancel={() => {\n                        props.setLoginVisible(false)\n                        document.body.removeAttribute('style')\n                        setCookieConsent(false)\n                    }}\n                    destroyOnClose={true}\n                    maskClosable={false}\n                    width=\"100%\"\n                    style={{ maxWidth: '600px' }}\n                >\n                    <p style={{ marginBottom: '0.3em' }}>\n                        We use cookies only for login purposes.{' '}\n                    </p>\n                    <p>\n                        In order to proceed you need to agree with the use of\n                        cookies.\n                    </p>\n                </Modal>\n            ) : (\n                <div className=\"contentDiv\">\n                    <div className={classes.Container}>\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            Welcome to Addspire!\n                        </h1>\n                        <h3>This is where great inspiration lives.</h3>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                s\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <Checkbox\n                            checked={state}\n                            onChange={() => setState(!state)}\n                        >\n                            <Typography.Link style={{ fontSize: '17px' }}>\n                                Remember me\n                            </Typography.Link>\n                        </Checkbox>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(LoginModal)\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = () => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/inspirations')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.props.setConnectingToWS(true)\n    }\n    componentWillReceiveProps(nextProps) {\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\nexport const unfollowProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL('image/jpeg', 0.6)\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => (getUserData(id) ? getUserData(id).name : id)\n    const userAvatar = id =>\n        getUserData(id) ? (\n            <span key={id}>\n                <Avatar\n                    src={getAvatar(id, getUserData(id).image)}\n                    size={props.size || (props.noClick ? 20 : 40)}\n                    style={props.group ? {} : { margin: ' 0 5px' }}\n                />\n            </span>\n        ) : null\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <div>{!props.noAva && userAvatar(id)}</div>\n            <div>{!props.noName && userName(id)}</div>\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onChange={onSelect}\n        getPopupContainer={trigger => trigger.parentNode}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(\n            item =>\n                item &&\n                item._id && (\n                    <Select.Option key={item._id}>\n                        <UserButton id={item._id} noClick={true} />\n                    </Select.Option>\n                )\n        )}\n    </Select>\n)\n","import React from 'react'\n\nexport default props => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        width=\"18\"\n        height=\"18\"\n        style={{ transform: 'rotate(90deg)', display: 'block' }}\n    >\n        <path d=\"M2 10h4v4H2v-4zm8 4h4v-4h-4v4zm8-4v4h4v-4h-4z\" />\n    </svg>\n)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto' }}\n                dots={{ className: classes.Dots }}\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        backgroundRepeat: 'no-repeat',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport UserButton from '../UserButton/UserButton'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Card from 'antd/es/card'\nimport message from 'antd/es/message'\nimport MoreIcon from '../UI/MoreIcon'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport Tag from 'antd/es/tag'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n\n    const RewardButton = props => (\n        <span\n            style={{ fontWeight: 'bold', cursor: 'pointer' }}\n            onClick={() => setPreviewReward(props.item)}\n        >\n            {props.item.mode === 'simple'\n                ? props.item.simple\n                : props.item.mode === 'money'\n                ? props.item.money + ' (money)'\n                : props.item.mode === 'item'\n                ? props.item.itemName\n                : ''}\n        </span>\n    )\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    return props.rewards ? (\n        <div>\n            {props.onlyButton ? (\n                props.rewards.map((item, index) => (\n                    <RewardButton item={item} key={index} />\n                ))\n            ) : (\n                <Form {...layout} style={{ margin: 0 }}>\n                    <Form.Item\n                        label={props.label}\n                        key={props.rewardKey}\n                        style={{ margin: 0 }}\n                    >\n                        {props.rewards.length > 0 && (\n                            <ul\n                                style={{\n                                    paddingLeft: '5px',\n                                    listStyleType: 'none',\n                                }}\n                            >\n                                {props.rewards.map((item, index) => {\n                                    return (\n                                        <li key={index}>\n                                            <Tag>\n                                                <div\n                                                    style={{\n                                                        display: 'flex',\n                                                        alignItems: 'center',\n                                                    }}\n                                                >\n                                                    <div>\n                                                        <RewardButton\n                                                            item={item}\n                                                        />\n                                                        {' from '}\n                                                        <UserButton\n                                                            id={item.owner}\n                                                            noAva={true}\n                                                            inline={true}\n                                                        />\n                                                        {' for '}\n                                                        {item.for &&\n                                                        item.for.length > 0 ? (\n                                                            <UserButton\n                                                                id={item.for}\n                                                                noAva={true}\n                                                                inline={true}\n                                                            />\n                                                        ) : (\n                                                            <span\n                                                                style={{\n                                                                    fontWeight:\n                                                                        'bold',\n                                                                    marginLeft:\n                                                                        '5px',\n                                                                }}\n                                                            >\n                                                                All\n                                                            </span>\n                                                        )}\n                                                    </div>\n                                                    {item.owner ===\n                                                        account._id &&\n                                                        !readOnly && (\n                                                            <>\n                                                                <Dropdown\n                                                                    overlay={\n                                                                        <Menu>\n                                                                            <Menu.Item\n                                                                                onClick={() => {\n                                                                                    setEditedRewardIndex(\n                                                                                        index\n                                                                                    )\n                                                                                    setEditedReward(\n                                                                                        item\n                                                                                    )\n                                                                                }}\n                                                                            >\n                                                                                Edit\n                                                                            </Menu.Item>\n\n                                                                            <Menu.Item\n                                                                                onClick={() => {\n                                                                                    if (\n                                                                                        !window.confirm(\n                                                                                            'Are you sure you want to delete this item?'\n                                                                                        )\n                                                                                    )\n                                                                                        return\n                                                                                    if (\n                                                                                        props.setRewards\n                                                                                    ) {\n                                                                                        props.setRewards(\n                                                                                            props.rewards.filter(\n                                                                                                (\n                                                                                                    item,\n                                                                                                    indexIn\n                                                                                                ) =>\n                                                                                                    indexIn !==\n                                                                                                    index\n                                                                                            )\n                                                                                        )\n                                                                                    } else {\n                                                                                        wsActions.deleteReward(\n                                                                                            account._id,\n                                                                                            progress._id,\n                                                                                            item.rewardId\n                                                                                        )\n                                                                                    }\n                                                                                }}\n                                                                            >\n                                                                                Delete\n                                                                            </Menu.Item>\n                                                                        </Menu>\n                                                                    }\n                                                                >\n                                                                    <Button type=\"link\">\n                                                                        <MoreIcon />\n                                                                    </Button>\n                                                                </Dropdown>\n                                                            </>\n                                                        )}\n                                                </div>\n                                            </Tag>\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        )}\n\n                        {!readOnly && (\n                            <Button\n                                type=\"link\"\n                                style={{ paddingLeft: 0, color: '#1890ff' }}\n                                onClick={() => {\n                                    if (account && account._id) {\n                                        setEditedRewardIndex('new')\n                                        setEditedReward({ mode: 'simple' })\n                                    } else {\n                                        message.warning(\n                                            'You will be able to add rewards after you sign up.'\n                                        )\n                                    }\n                                }}\n                            >\n                                <PlusOutlined />\n                                Add rewards\n                            </Button>\n                        )}\n                    </Form.Item>\n                </Form>\n            )}\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setEditedReward()\n                    document.body.removeAttribute('style')\n                }}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        let newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards = [...newRewards, rewardToSave]\n                        else\n                            newRewards = newRewards.map((item, index) => {\n                                if (index === editedRewardIndex)\n                                    return rewardToSave\n                                else return item\n                            })\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    }\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form {...layout}>\n                            <Form.Item label=\"Reward type\">\n                                <Select\n                                    placeholder=\"Type\"\n                                    value={editedReward.mode}\n                                    onSelect={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            mode: value,\n                                        })\n                                    }}\n                                    style={{ width: '100%' }}\n                                    getPopupContainer={trigger =>\n                                        trigger.parentNode\n                                    }\n                                >\n                                    <Select.Option key=\"simple\" value=\"simple\">\n                                        Simple reward\n                                    </Select.Option>\n                                    <Select.Option key=\"item\" value=\"item\">\n                                        Item reward\n                                    </Select.Option>\n                                    {/* <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option> */}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Reward for\">\n                                {connectionsSelect(\n                                    account,\n                                    friendData,\n                                    editedReward.for,\n                                    value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            for: value,\n                                        })\n                                    }\n                                )}\n                                <p>(leave blank for all)</p>\n                            </Form.Item>\n                            <Divider type=\"horizontal\" />\n                            {editedReward.mode === 'simple' ? (\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={[\n                                        ...descriptionRules,\n                                        {\n                                            required: true,\n                                            min: 1,\n                                            whitespace: true,\n                                            message:\n                                                'Desription is too short. Minimal length is 1.',\n                                        },\n                                    ]}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.simple}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                simple: value,\n                                            })\n                                        }\n                                        placeholder=\"Explain how you will reward\"\n                                    />\n                                </Form.Item>\n                            ) : editedReward.mode === 'money' ? (\n                                <Form.Item label=\"Amount\" rules={priceRules}>\n                                    <InputNumber\n                                        value={editedReward.money}\n                                        onChange={value => {\n                                            setEditedReward({\n                                                ...editedReward,\n                                                money: value,\n                                            })\n                                        }}\n                                    />\n                                </Form.Item>\n                            ) : (\n                                <>\n                                    <Form.Item label=\"Images\">\n                                        <Upload\n                                            listType=\"picture-card\"\n                                            fileList={(\n                                                editedReward.itemImages || []\n                                            ).map((url, index) => ({\n                                                url,\n                                                uid: index,\n                                            }))}\n                                            onPreview={file => {\n                                                setPreviewImage(file.url)\n                                            }}\n                                            onChange={({ fileList }) => {\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemImages: fileList.map(\n                                                        image => image.url\n                                                    ),\n                                                })\n                                            }}\n                                            customRequest={({ file }) => {\n                                                uploadFile(\n                                                    file,\n                                                    800,\n                                                    undefined,\n                                                    url => {\n                                                        setEditedReward({\n                                                            ...editedReward,\n                                                            itemImages: [\n                                                                ...(editedReward.itemImages ||\n                                                                    []),\n                                                                url,\n                                                            ],\n                                                        })\n                                                    }\n                                                )\n                                            }}\n                                        >\n                                            {(editedReward.itemImages || [])\n                                                .length >= 8 ? null : (\n                                                <div>\n                                                    <PlusOutlined />\n                                                    <div className=\"ant-upload-text\">\n                                                        Upload\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item label=\"Name\" rules={nameRules}>\n                                        <Input\n                                            value={editedReward.itemName}\n                                            onChange={({ target: { value } }) =>\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemName: value,\n                                                })\n                                            }\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        rules={descriptionRules}\n                                    >\n                                        <Input.TextArea\n                                            value={editedReward.itemDescription}\n                                            onChange={({ target: { value } }) =>\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemDescription: value,\n                                                })\n                                            }\n                                        />\n                                    </Form.Item>\n                                </>\n                            )}\n                        </Form>\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => {\n                    setPreviewReward()\n                    document.body.removeAttribute('style')\n                }}\n                title=\"Reward details\"\n                destroyOnClose={true}\n            >\n                {previewReward ? (\n                    <>\n                        <ImageCarousel images={previewReward.itemImages} />\n\n                        {previewReward.mode === 'item' && (\n                            <h2>{previewReward.itemName}</h2>\n                        )}\n                        {previewReward.mode === 'item' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.itemDescription}\n                            </p>\n                        )}\n                        {previewReward.mode === 'simple' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.simple}\n                            </p>\n                        )}\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (value, accountId, progressId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                progressId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n\nexport const changeLikesProgress = (accountId, progressId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesProgress',\n                accountId,\n                progressId,\n                add,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\nimport Select from 'antd/es/select'\n\nconst { Option } = Select\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n\n    const [previewImage, setPreviewImage] = useState('')\n\n    const [rewards, setRewards] = useState((goal && goal.rewards) || [])\n\n    const onFinish = value => {\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            rewards,\n        })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    const connections = connectionsSelect(account, friendData)\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New achievement',\n                        repeat: 'no',\n                        days: ['0'],\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) =>\n                    allValues.days &&\n                    form.setFieldsValue({ days: allValues.days.sort() })\n                }\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connections}\n                </Form.Item>\n\n                <Form.Item label=\"Repeat\" name=\"repeat\">\n                    <Select>\n                        <Option value=\"no\">No repeat</Option>\n                        <Option value=\"day\">Every day</Option>\n                        <Option value=\"weekday\">Every day of week</Option>\n                        <Option value=\"week\">Every week</Option>\n                        <Option value=\"month\">Every month</Option>\n                        <Option value=\"year\">Every year</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    noStyle\n                    shouldUpdate={(prevValues, currentValues) =>\n                        prevValues.repeat !== currentValues.repeat\n                    }\n                >\n                    {({ getFieldValue }) => {\n                        return getFieldValue('repeat') === 'weekday' ? (\n                            <Form.Item label=\"Days of week\" name=\"days\">\n                                <Select mode=\"tags\">\n                                    <Option value=\"0\">Sunday</Option>\n                                    <Option value=\"1\">Monday</Option>\n                                    <Option value=\"2\">Tuesday</Option>\n                                    <Option value=\"3\">Wednesday</Option>\n                                    <Option value=\"4\">Thursday</Option>\n                                    <Option value=\"5\">Friday</Option>\n                                    <Option value=\"6\">Saturday</Option>\n                                </Select>\n                            </Form.Item>\n                        ) : null\n                    }}\n                </Form.Item>\n                <Rewards\n                    label=\"Rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button\n                        type=\"text\"\n                        size=\"large\"\n                        onClick={() => props.cancel(false)}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{\n                            borderRadius: '6px',\n                            padding: '0px 25px',\n                            marginLeft: '10px',\n                        }}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value)\n                props.setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            account={props.account}\n            friendData={props.friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n\nexport default AddProgress\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport Badge from 'antd/es/badge'\nimport * as classes from './Layout.module.css'\nimport CoffeeOutlined from '@ant-design/icons/CoffeeOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport ShopFilled from '@ant-design/icons/ShopFilled'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport SettingFilled from '@ant-design/icons/SettingFilled'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport Spin from 'antd/es/spin'\nimport BackTop from 'antd/es/back-top'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport UpOutlined from '@ant-design/icons/UpOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from '../../containers/Progresses/AddProgress'\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const [headerVisible, setHeaderVisible] = useState(true)\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [pageAddress, setPageAddress] = useState(\n        props.history.location.pathname\n    )\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY\n            if (window.scrollY < 100) setHeaderVisible(true)\n            else {\n                if (currentScrollY > lastScrollY) {\n                    setHeaderVisible(false)\n                } else {\n                    setHeaderVisible(true)\n                }\n            }\n            setLastScrollY(currentScrollY)\n        }\n        window.removeEventListener('scroll', handleScroll)\n        window.addEventListener('scroll', handleScroll)\n        if (pageAddress !== props.history.location.pathname) {\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            })\n            setPageAddress(props.history.location.pathname)\n        }\n        if (props.showSignIn) setLoginVisible(true)\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [lastScrollY, props.history.location.pathname, props.showSignIn])\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url\n            ? {\n                  type: 'link',\n                  ghost: true,\n                  style: { color: '#1890ff' },\n              }\n            : { type: 'text' }\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n    const editGoal = (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <div className={classes.Layout}>\n                <header\n                    className={\n                        headerVisible\n                            ? classes.Header\n                            : [classes.Header, classes.HideHeader].join(' ')\n                    }\n                >\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Link to=\"/\">\n                                <img\n                                    style={{ height: '30px' }}\n                                    src=\"/logo.jpg\"\n                                />\n                            </Link>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {(logedIn || !props.isConnectingWS) && (\n                                <div className={classes.PageTitle}>\n                                    {isActivating ? (\n                                        'Activate your account'\n                                    ) : (\n                                        <>\n                                            <Button\n                                                type=\"primary\"\n                                                icon={<PlusOutlined />}\n                                                shape=\"round\"\n                                                onClick={() => {\n                                                    account._id\n                                                        ? setStartProgressVisible(\n                                                              true\n                                                          )\n                                                        : setLoginVisible(true)\n                                                }}\n                                            >\n                                                Add inspiration\n                                            </Button>\n                                            {editGoal}\n                                        </>\n                                    )}\n                                </div>\n                            )}\n                            {logedIn ? (\n                                !isActivating ? (\n                                    <span\n                                        onClick={() => openLink('account')}\n                                        style={{\n                                            margin: '0px 10px',\n                                            cursor: 'pointer',\n                                        }}\n                                    >\n                                        <Avatar\n                                            style={{\n                                                border: '1px solid white',\n                                            }}\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                        />\n                                    </span>\n                                ) : (\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                )\n                            ) : props.isConnectingWS ? (\n                                <>\n                                    <span style={{ marginRight: '30px' }}>\n                                        <Spin\n                                            indicator={\n                                                <LoadingOutlined\n                                                    style={{\n                                                        color: 'white',\n                                                        marginRight: '10px',\n                                                    }}\n                                                />\n                                            }\n                                        />{' '}\n                                        Trying to login\n                                    </span>\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </>\n                            ) : (\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => setLoginVisible(true)}\n                                    style={{ fontSize: '13px' }}\n                                >\n                                    Sign in\n                                </Button>\n                            )}\n                        </div>\n                    </div>\n                </header>\n                <main className={classes.Main}>{props.children}</main>\n                {!isActivating && logedIn && (\n                    <footer className={classes.Footer}>\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh()}\n                            onClick={() => openLink('')}\n                        >\n                            <Badge count={numberOfUnseenNots}>\n                                <HomeFilled />{' '}\n                                <div className={classes.FooterButton}>\n                                    Highlights\n                                </div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('account')}\n                            onClick={() => openLink('account')}\n                        >\n                            <Badge\n                                count={\n                                    account.friends.filter(\n                                        item => item.status === 'inviting'\n                                    ).length\n                                }\n                            >\n                                <TeamOutlined />\n                                <div className={classes.FooterButton}>\n                                    Account\n                                </div>\n                            </Badge>\n                        </Button>\n                    </footer>\n                )}\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            <BackTop>\n                <div\n                    style={{\n                        height: 40,\n                        width: 40,\n                        lineHeight: '40px',\n                        borderRadius: '100%',\n                        backgroundColor: '#1088e9',\n                        color: '#fff',\n                        textAlign: 'center',\n                        fontSize: 14,\n                    }}\n                >\n                    <UpOutlined />\n                </div>\n            </BackTop>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import React, { useState } from 'react'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\nimport Tabs from 'antd/es/tabs'\nimport Tag from 'antd/es/tag'\nimport Radio from 'antd/es/radio'\nimport Badge from 'antd/es/badge'\nimport moment from 'moment'\nimport CaretRightOutlined from '@ant-design/icons/CaretRightOutlined'\n\nmoment().format()\n\nconst ActivityTable = props => {\n    const [activeTab, setActiveTab] = useState(-1)\n    const { progress, account } = props\n    const { goal } = progress\n\n    const isOwner = account && account._id === progress.owner\n\n    let lastStages = progress.stages\n        .slice(Math.max(progress.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = moment()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = moment()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = moment()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = moment()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = moment()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    const nowStageId = lastStages.length > 0 ? lastStages[0].stageId : 0\n\n    lastStages = progress.stages\n\n    return lastStages.length === 0 ? null : (\n        <div\n            style={{\n                border: '1px solid #eee',\n                padding: '10px 5px',\n            }}\n        >\n            <Tabs\n                activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? lastStages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {lastStages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getTag = id => {\n                        const status = getStatus(id)\n                        let text = 'In process',\n                            color = '#108ee9'\n                        switch (status) {\n                            case 'fail':\n                                text = 'Failed'\n                                color = '#f50'\n                                break\n                            case 'complete':\n                                text = 'Complete'\n                                color = '#87d068'\n                                break\n                            case 'dismissed':\n                                text = 'Dismissed'\n                                color = '#ffa500'\n                                break\n                            default:\n                                break\n                        }\n\n                        return <Tag color={color}>{text}</Tag>\n                    }\n\n                    const users = goal.users\n                        .filter(item => item !== progress.owner)\n                        .map(user => (\n                            <Descriptions.Item\n                                key={user}\n                                label={\n                                    <>\n                                        <UserButton\n                                            id={user}\n                                            noAva={true}\n                                            span={true}\n                                        />{' '}\n                                        {' (achiever)'}\n                                    </>\n                                }\n                            >\n                                {getTag(user)}\n                            </Descriptions.Item>\n                        ))\n\n                    const owner = [\n                        <Descriptions.Item\n                            key={progress.owner}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={progress.owner}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (owner)'}\n                                </>\n                            }\n                        >\n                            {getTag(progress.owner)}\n                        </Descriptions.Item>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('dddd')}</div>\n                                <div>{stageDate.format('D MMM YY')}</div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('wo')} week</div>\n                                <div>\n                                    {stageDate\n                                        .startOf('week')\n                                        .format('D MMM YY')}\n                                </div>\n                                <div>\n                                    {stageDate.endOf('week').format('D MMM YY')}\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('MMMM')}</div>\n                                <div>{stageDate.format('YYYY')}</div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = moment().year(stage.year)\n\n                        tabTitle = <div>{stageDate.format('YYYY')}</div>\n                    }\n\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(progress.owner)\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'rgba(0,0,0,0)'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            {account &&\n                                account._id &&\n                                (progress.owner === account._id ||\n                                    goal.users.includes(account._id)) && (\n                                    <>\n                                        Set status:\n                                        <Radio.Group\n                                            value={myStatus}\n                                            style={{ padding: '20px 0px ' }}\n                                            onChange={value =>\n                                                wsActions.changeStage(\n                                                    value.target.value,\n                                                    account._id,\n                                                    progress._id,\n                                                    stage.stageId\n                                                )\n                                            }\n                                        >\n                                            <Radio\n                                                value=\"complete\"\n                                                style={{ display: 'block' }}\n                                            >\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'complete'\n                                                            ? 'green'\n                                                            : '#87d068'\n                                                    }\n                                                    style={{\n                                                        padding: '5px 0px',\n                                                        width: '100%',\n                                                        fontSize: '18px',\n                                                        maxWidth: '200px',\n                                                        textAlign: 'center',\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    Complete\n                                                </Tag>\n                                            </Radio>\n                                            <Radio value=\"process\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'process'\n                                                            ? 'processing'\n                                                            : '#108ee9'\n                                                    }\n                                                    style={{\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    In process\n                                                </Tag>\n                                            </Radio>\n                                            <Radio value=\"fail\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'fail'\n                                                            ? 'volcano'\n                                                            : '#f50'\n                                                    }\n                                                    style={{\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    Fail\n                                                </Tag>\n                                            </Radio>\n                                            {isOwner && (\n                                                <Radio value=\"dismissed\">\n                                                    <Tag\n                                                        color={\n                                                            myStatus !==\n                                                            'dismissed'\n                                                                ? 'orange'\n                                                                : '#ffa500'\n                                                        }\n                                                        style={{\n                                                            margin: '10px 0px',\n                                                        }}\n                                                    >\n                                                        Dismiss\n                                                    </Tag>\n                                                </Radio>\n                                            )}\n                                        </Radio.Group>\n                                    </>\n                                )}\n\n                            <Descriptions\n                                size=\"small\"\n                                bordered\n                                column={{\n                                    xxl: 4,\n                                    xl: 3,\n                                    lg: 3,\n                                    md: 3,\n                                    sm: 2,\n                                    xs: 1,\n                                }}\n                            >\n                                {owner}\n                                {users}\n                            </Descriptions>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    <Divider style={{ fontSize: '15px' }}>\n                                        Earned rewards\n                                    </Divider>\n\n                                    <Rewards\n                                        rewardKey={1}\n                                        rewards={stage.paid}\n                                        readOnly={true}\n                                    />\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </div>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState, friendData } = props\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n        document.body.removeAttribute('style')\n    }\n\n    return progress.goal ? (\n        <EditGoalAndProgressForm\n            goal={progress.goal}\n            onFinish={onFinish}\n            account={account}\n            friendData={friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport default withRouter(props => {\n    const placeholderImages = [\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n    ]\n    const images = props.images || []\n\n    const getPH = () => {\n        if (!props.id) return 0\n        const makeRand = x => {\n            x = Math.abs(x)\n            while (x > 1) x = x / 10\n            return x\n        }\n        const matches = props.id.match(/\\d+$/)\n        const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n        return Math.abs(\n            Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n        )\n    }\n\n    const Card = (\n        <>\n            {!props.friends && (\n                <img\n                    style={{\n                        maxWidth: '100%',\n                        margin: 'auto',\n                        display: 'block',\n                        borderRadius: '15px',\n                        ...props.style,\n                    }}\n                    src={\n                        images.length > 0\n                            ? images[0]\n                            : placeholderImages[getPH()]\n                    }\n                />\n            )}\n\n            <div style={{ padding: '5px 0px', wordBreak: 'break-word' }}>\n                {props.actions && (\n                    <div style={{ float: 'right' }}>{props.actions}</div>\n                )}\n                <span style={{ float: 'none' }}>{props.body}</span>\n            </div>\n        </>\n    )\n    return props.noLink ? (\n        Card\n    ) : (\n        <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n            {Card}\n        </Link>\n    )\n})\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport * as wsActions from '../websocketActions'\n\nconst FollowButton = props => {\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type === 'progress') {\n            return account.followProgresses.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowProgress(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followProgress(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowAccount(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followAccount(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\n\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\n\nimport Typography from 'antd/es/typography'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nimport Tag from 'antd/es/tag'\nimport Rewards from '../../components/Rewards/Rewards'\nimport MasonryCard from '../../components/MasonryCard'\nimport FollowButton from '../../components/FollowButton'\nimport Helmet from 'react-helmet'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport PushpinFilled from '@ant-design/icons/PushpinFilled'\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport Divider from 'antd/es/divider'\n\nconst Activity = props => {\n    const { account, progress, state, setState, friendData } = props\n    const { goal } = progress\n    const [followersVisible, setFollowersVisible] = useState(false)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return 'Sunday'\n            case '1':\n                return 'Monday'\n            case '2':\n                return 'Tuesday'\n            case '3':\n                return 'Wednesday'\n            case '4':\n                return 'Thursday'\n            case '5':\n                return 'Friday'\n            case '6':\n                return 'Saturday'\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return 'every day'\n            case 'weekday':\n                return 'every day of week'\n            case 'week':\n                return 'every week'\n            case 'month':\n                return 'every month'\n            case 'year':\n                return 'every year'\n            default:\n                return ''\n        }\n    }\n    return goal ? (\n        <>\n            <Helmet>\n                <title>\n                    {goal.name} by {progress.owner} at Addspire\n                </title>\n                <meta name=\"description\" content={goal.description} />\n            </Helmet>\n            {goal.images.length > 0 && <ImageCarousel images={goal.images} />}\n            <div style={{ textAlign: 'center' }}>\n                <h1>{goal.name}</h1>\n                <Button type=\"text\" onClick={() => setFollowersVisible(true)}>\n                    <PushpinFilled style={{ fontSize: '20px' }} />\n                    {progress.followingAccounts.length} Followers\n                </Button>\n                <Button\n                    type=\"text\"\n                    onClick={() =>\n                        wsActions.changeLikesProgress(\n                            account._id,\n                            progress._id,\n                            !progress.likes.includes(account._id)\n                        )\n                    }\n                >\n                    {progress.likes.includes(account._id) ? (\n                        <LikeFilled style={{ fontSize: '20px' }} />\n                    ) : (\n                        <LikeOutlined style={{ fontSize: '20px' }} />\n                    )}\n                    Likes\n                    <span style={{ paddingLeft: '8px' }}>\n                        {progress.likes.length}\n                    </span>\n                </Button>\n\n                <div style={{ marginTop: '10px' }}>\n                    {account &&\n                    account._id &&\n                    account.followProgresses.includes(progress._id) ? (\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                wsActions.unfollowProgress(\n                                    account._id,\n                                    progress._id\n                                )\n                            }\n                        >\n                            Following\n                        </Button>\n                    ) : (\n                        account._id && (\n                            <Button\n                                type=\"primary\"\n                                onClick={() =>\n                                    wsActions.followProgress(\n                                        account._id,\n                                        progress._id\n                                    )\n                                }\n                            >\n                                Follow\n                            </Button>\n                        )\n                    )}\n                </div>\n                {account._id === progress.owner && (\n                    <Button\n                        style={{ marginTop: '10px' }}\n                        type=\"primary\"\n                        onClick={() => {\n                            setState({ ...state, editProgressOpen: true })\n                        }}\n                    >\n                        Edit progress\n                    </Button>\n                )}\n                {account.progresses &&\n                    account.progresses.includes(progress._id.toString()) && (\n                        <Button\n                            danger={true}\n                            type=\"link\"\n                            onClick={() => {\n                                wsActions.leaveProgress(props)\n                            }}\n                            style={{ marginLeft: '10px' }}\n                        >\n                            Leave the progress\n                        </Button>\n                    )}\n            </div>\n            <Divider orientation=\"left\">Desciption</Divider>\n            <Typography.Paragraph\n                ellipsis={{\n                    rows: 3,\n                    expandable: true,\n                    symbol: 'more',\n                }}\n                style={{ whiteSpace: 'pre-wrap', marginTop: '30px' }}\n            >\n                {goal.description}\n            </Typography.Paragraph>\n            {goal.repeat !== 'no' && (\n                <p>\n                    <RetweetOutlined />\n                    {' Repeats '}\n                    {getRepeatType(goal.repeat) +\n                        (goal.repeat === 'weekday'\n                            ? ' (' +\n                              goal.days.reduce(\n                                  (acc, val, index) =>\n                                      acc +\n                                      (index > 0 ? ', ' : '') +\n                                      getDay(val),\n                                  ''\n                              ) +\n                              ').'\n                            : '.')}\n                </p>\n            )}\n\n            <Divider orientation=\"left\">Rewards</Divider>\n\n            <Rewards rewards={goal.rewards} />\n            <Divider orientation=\"left\">Track progress</Divider>\n            <div style={{ margin: '20px 0px' }}>\n                <ActivityTable\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </div>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, editProgressOpen: false })\n                    document.body.removeAttribute('style')\n                }}\n                closable={true}\n                destroyOnClose={true}\n                width=\"100%\"\n                style={{ maxWidth: '1000px' }}\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                    friendData={friendData}\n                    cancel={() =>\n                        setState({ ...state, editProgressOpen: false })\n                    }\n                />\n            </Modal>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {progress.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport message from 'antd/es/message'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddMessage = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          //   position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules} style={{ margin: 0 }}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                                placeholder=\"Write a comment\"\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item style={{ margin: 0 }}>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        images,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {props.cancel && (\n                                <Button\n                                    onClick={props.cancel}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport AddMessage from './AddMessage'\nimport Button from 'antd/es/button'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\n\nconst Message = props => {\n    const {\n        account,\n        message,\n        friendData,\n        progressData,\n        post,\n        replies,\n        isStart,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const commentProps = {\n        actions: !props.isStart && [\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>,\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            message.author !== account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        if (props.setReplyVisible) {\n                            props.setReplyVisible(true)\n                            props.setReplyToUser(props.message.author)\n                        } else {\n                            setReplyVisible(true)\n                            setReplyToUser('')\n                        }\n                        setShowReplies(true)\n                    }}\n                >\n                    Reply\n                </span>\n            ),\n            message.author === account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => setEditingMessage(message.messageId)}\n                >\n                    Edit\n                </span>\n            ),\n        ],\n        avatar: <UserButton noName={true} id={message.author} span={true} />,\n        content: isStart ? (\n            <>\n                {message.messageType === 'wishlist' && (\n                    <>\n                        {' '}\n                        <span\n                            style={{\n                                fontWeight: 'bold',\n                                cursor: 'pointer',\n                                margin: '10px 0px 0px ',\n                            }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${message.details.owner}/${\n                                        message.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {message.details.name}\n                        </span>\n                    </>\n                )}\n                {message.text && <p>{message.text}</p>}\n            </>\n        ) : (\n            <>\n                <div\n                    style={{\n                        background: '#eee',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        display:\n                            message.image && message.image.length > 0\n                                ? 'block'\n                                : 'inline-block',\n                    }}\n                >\n                    <UserButton\n                        id={message.author}\n                        span={true}\n                        noAva={true}\n                        style={{ fontWeight: 'bold' }}\n                    />\n\n                    {message.image && message.image.length > 0 && (\n                        <ImageCarousel\n                            images={message.image}\n                            height=\"60vmin\"\n                            type=\"contain\"\n                        />\n                    )}\n\n                    {message.text && <p>{message.text}</p>}\n                </div>\n                <div />\n            </>\n        ),\n        author: isStart && (\n            <span\n                style={{ color: '#333', fontWeight: 'bold', fontSize: '14px' }}\n            >\n                <UserButton id={message.author} span={true} noAva={true} />{' '}\n                <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/inspirations/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )}\n                {post.startMessage &&\n                    ['wishlist', 'perk', 'goal'].includes(\n                        post.startMessage.messageType\n                    ) && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + message.author)\n                            }\n                        >\n                            {post.startMessage.messageType === 'wishlist'\n                                ? 'Wishlist'\n                                : post.startMessage.messageType === 'goals'\n                                ? 'Goals'\n                                : 'Shop'}\n                        </span>\n                    )}\n            </span>\n        ),\n        datetime: isStart && (\n            <span style={{ color: '#333' }}>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Comment {...commentProps}>\n                {props.isTop && replies && replies.length > 0 ? (\n                    showReplies ? (\n                        replies.map((reply, index) => (\n                            <Message\n                                key={index}\n                                message={reply}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                setReplyVisible={setReplyVisible}\n                                setReplyToUser={setReplyToUser}\n                            />\n                        ))\n                    ) : (\n                        <Button\n                            type=\"text\"\n                            onClick={() => setShowReplies(true)}\n                        >\n                            Show {replies.length} replies\n                        </Button>\n                    )\n                ) : null}\n\n                {props.isTop && replyVisible ? (\n                    <AddMessage\n                        post={post}\n                        account={account}\n                        replyTo={message.messageId}\n                        replyToUser={replyToUser}\n                        cancel={() => setReplyVisible(false)}\n                    />\n                ) : null}\n            </Comment>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                images={message.image}\n                onSend={() => setEditingMessage('')}\n                cancel={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport CommentOutlined from '@ant-design/icons/CommentOutlined'\nimport AddMessage from './AddMessage'\nimport Divider from 'antd/es/divider'\nimport Button from 'antd/es/button'\n\nconst Post = props => {\n    const { post, account, friendData, progressData } = props\n    const [postOpen, setPostOpen] = useState(props.showReplies)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <>\n                    <Message\n                        message={post.startMessage}\n                        post={post}\n                        account={account}\n                        friendData={friendData}\n                        progressData={progressData}\n                        replies={[]}\n                        isStart={true}\n                    />\n                    {post.startMessage.image &&\n                        post.startMessage.image.length > 0 && (\n                            <img\n                                style={{\n                                    maxWidth: '100%',\n                                    margin: 'auto',\n                                    display: 'block',\n                                }}\n                                src={post.startMessage.image[0]}\n                            />\n                        )}\n                </>\n            )}\n            <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    // marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div\n                    style={{ display: 'flex', justifyContent: 'space-around' }}\n                >\n                    <span key=\"comment-basic-like\">\n                        <Button\n                            type=\"text\"\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    post.startMessage.likes.includes(\n                                        account._id\n                                    )\n                                        ? 'dislikeMessage'\n                                        : 'likeMessage',\n                                    post.startMessage.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        >\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled style={{ fontSize: '20px' }} />\n                            ) : (\n                                <LikeOutlined style={{ fontSize: '20px' }} />\n                            )}\n                            Likes\n                            <span style={{ paddingLeft: '8px' }}>\n                                {post.startMessage.likes.length}\n                            </span>\n                        </Button>\n                    </span>\n                    <span>\n                        <Button onClick={() => setPostOpen(true)} type=\"text\">\n                            <CommentOutlined style={{ fontSize: '20px' }} />\n                            Comment\n                            <span style={{ paddingLeft: '8px' }}>\n                                {getNumberOfMessages(post.messages)}\n                            </span>\n                        </Button>\n                    </span>\n                </div>\n                <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n                {postOpen && (\n                    <>\n                        <AddMessage post={post} account={account} />\n                        {post.messages && post.messages.length\n                            ? post.messages.map((message, index) => (\n                                  <Message\n                                      key={index}\n                                      message={message}\n                                      post={post}\n                                      account={account}\n                                      friendData={friendData}\n                                      replies={message.replies}\n                                      isTop={true}\n                                  />\n                              ))\n                            : null}\n                    </>\n                )}\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport Modal from 'antd/es/modal/Modal'\nimport Divider from 'antd/es/divider'\n\nconst AddPost = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState([])\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <Divider orientation=\"left\">Posts and comments</Divider>\n\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText,\n                                        images\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {messageText || images.length ? (\n                                <Button\n                                    onClick={() => {\n                                        setMessageText('')\n                                        setImages([])\n                                    }}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            ) : null}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Activity from './Activity'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport pullData from '../../utils/pullData'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const progressId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!progressId) return null\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({ currentProgress: progressId })\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const post = {}\n                for (let item of data.post) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    posts: post,\n                    account: {},\n                    progress: data.progress,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { progress, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, account: {} }\n\n    if (!progress || !progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <div className=\"contentDiv\">\n            <Activity\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n                friendData={friendData}\n            />\n\n            {account._id && (\n                <AddPost\n                    parent={progressId}\n                    account={account}\n                    parentType=\"progress\"\n                    // onSend={() => setEditingMessage('')}\n                />\n            )}\n            {posts &&\n                progress.posts.map(postId => {\n                    if (posts[postId]) {\n                        const post = posts[postId]\n                        return (\n                            <div key={postId}>\n                                <div\n                                    style={{\n                                        height: '5px',\n                                        background: '#ddd',\n                                        width: 'calc(100% + 8px)',\n                                        position: 'absolute',\n                                        left: '-8px',\n                                    }}\n                                />\n                                <div style={{ paddingTop: '10px' }}>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    } else return null\n                })}\n\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, previewImage: '' })\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\n\nconst DashboardPosts = props => {\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return posts.map((item, index) => {\n        let text = null\n        const nots = item.notifications.filter(not => not.user !== account._id)\n        const not = nots.length > 0 ? nots[0] : null\n        if (not) {\n            switch (not.code) {\n                case 'edit wishlist item':\n                    text = 'edited item in wishlist.'\n\n                    break\n                case 'edit goal':\n                    text = 'edited goal.'\n\n                    break\n                case 'edit perk':\n                    text = 'edited item in shop.'\n\n                    break\n\n                case 'comment':\n                    text = 'added a comment.'\n\n                    break\n                case 'edit comment':\n                    text = 'edited a comment.'\n\n                    break\n                case 'like':\n                    text = 'added a like.'\n\n                    break\n                case 'dislike':\n                    text = 'removed a like.'\n\n                    break\n                default:\n                    text = null\n                    break\n            }\n        }\n        return (\n            <div key={index}>\n                <div\n                    style={{\n                        height: '5px',\n                        background: '#ddd',\n                        width: 'calc(100% + 8px)',\n                        position: 'absolute',\n                        left: '-8px',\n                    }}\n                />\n                <div style={{ paddingTop: '10px' }}>\n                    {text && (\n                        <>\n                            <span>\n                                <UserButton\n                                    id={not.user}\n                                    noAva={true}\n                                    span={true}\n                                    style={{ fontWeight: 'bold' }}\n                                />{' '}\n                                {text}\n                            </span>\n                            <Divider\n                                type=\"horizontal\"\n                                style={{ margin: '5px 0' }}\n                            />\n                        </>\n                    )}\n                    <Post\n                        friendData={friendData}\n                        account={account}\n                        post={item}\n                        progressData={progressData}\n                    />\n                </div>\n            </div>\n        )\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport moment from 'moment'\n\nmoment().format()\n\nconst DashboardEvents = props => {\n    const { lastNotifications } = props\n    const getRewardText = item => (\n        <span style={{ fontWeight: 'bold' }}>\n            {item.details.reward.money\n                ? '$' + item.details.reward.money\n                : item.details.reward.simple || item.details.reward.itemName}\n        </span>\n    )\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = moment()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = moment()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate.startOf('week').format('wo [week] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = moment()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = moment().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n    return lastNotifications.map((item, index) => {\n        let text = null,\n            stageName\n\n        switch (item.code) {\n            case 'change name':\n                text = (\n                    <span>\n                        {' '}\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' changed name.'}\n                    </span>\n                )\n                break\n            case 'delete account':\n                text = (\n                    <span>\n                        {item.user}\n                        deleted account.\n                    </span>\n                )\n                break\n            case 'friend request':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' wants to become friends with you.'}\n                    </span>\n                )\n                break\n            case 'friend add':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' became friends.'}\n                    </span>\n                )\n                break\n            case 'unfriend':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' stopped being friends.'}\n                    </span>\n                )\n                break\n            case 'add wishlist item':\n            case 'edit wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add wishlist item'\n                            ? 'added to wishlist a new item'\n                            : 'edited in wishlist'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${item.user}/${\n                                        item.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from wishlist.\n                    </span>\n                )\n                break\n            case 'add goal':\n            case 'edit goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add goal'\n                            ? 'added a new goal'\n                            : 'edited goal'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/goals/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from goals.\n                    </span>\n                )\n                break\n            case 'add perk':\n            case 'edit perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add perk'\n                            ? 'added to shop a new item'\n                            : 'edited in shop'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from shop.\n                    </span>\n                )\n                break\n            case 'buy perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' bought '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.owner}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'cancel transaction':\n            case 'confirm transaction':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'cancel transaction'\n                            ? 'cancelled'\n                            : 'confirmed'}\n                        {' purchase of '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' by '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.buyer}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'start progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' started participating in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' as '}\n                        {item.details.as}.\n                    </span>\n                )\n                break\n            case 'stage approve':\n            case 'stage progress':\n            case 'stage fail':\n            case 'stage dismiss':\n                stageName = getStageName(item.details)\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {item.code === 'stage approve'\n                            ? ' approved  '\n                            : item.code === 'stage progress'\n                            ? ' put into process '\n                            : item.code === 'stage fail'\n                            ? ' marked as failed '\n                            : ' dismissed '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n                        .\n                    </span>\n                )\n                break\n\n            case 'stage complete':\n                text = (\n                    <span>\n                        {'Progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'milestone finish':\n                text = (\n                    <span>\n                        Milestone {item.details.itemName}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'get reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' recieved '}\n                        {getRewardText(item)}\n                        {' as a reward from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.from}\n                        />\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'leave progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' left progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'edit progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' edited progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {item.details.addedAccounts.length > 0 ? (\n                            <>\n                                {' and added '}\n                                {item.details.addedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        {item.details.droppedAccounts.length > 0 ? (\n                            <>\n                                {' and removed '}\n                                {item.details.droppedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}\n                                {' .'}\n                            </>\n                        ) : (\n                            '.'\n                        )}\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' from progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add to progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' to progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        {getRewardText(item)} as a reward for\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          noAva={true}\n                                          span={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'delete reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        {getRewardText(item)}\n                        {' as a reward for '}\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          span={true}\n                                          noAva={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            default:\n                text = 'New event'\n                break\n        }\n        return (\n            <div key={index}>\n                <Divider style={{ margin: '5px 0px' }} />\n                <Comment\n                    avatar={\n                        <UserButton noName={true} id={item.user} span={true} />\n                    }\n                    content={text}\n                />\n            </div>\n        )\n\n        // <Card>{text}</Card>\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ marginTop: '40px', ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport axios from 'axios'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nconst Explore = props => {\n    const [isSearching, setIsSearching] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n    const [progresses, setProgresses] = useState([])\n    const [noMore, setNoMore] = useState(false)\n    const [noMorePopular, setNoMorePopular] = useState(false)\n    const [searchValue, setSearchValue] = useState('')\n    const onSearch = (value, noNoMore) => {\n        if (!noMore || noNoMore) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || searchValue,\n                    skip: noNoMore ? 0 : foundProgresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses(res.data.progresses)\n                        if (res.data.progresses.length === 0)\n                            message.warning('There are no progresses found.')\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n    const onGetPopular = () => {\n        if (!noMorePopular) {\n            setNoMorePopular(true)\n            axios\n                .post('/api/explore/popular', {\n                    skip: progresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMorePopular(res.data.noMore)\n                        setProgresses([...progresses, ...res.data.progresses])\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Input.Search\n                placeholder=\"Find great inspirations!\"\n                onSearch={value => {\n                    if (value) {\n                        setIsSearching(true)\n                        if (value !== searchValue) {\n                            setNoMore(false)\n                            setFoundProgresses([])\n                            setSearchValue(value)\n                            onSearch(value, true)\n                        }\n                    } else {\n                        setNoMore(false)\n                        setSearchValue(value)\n                        setIsSearching(false)\n                    }\n                }}\n                onChange={e => {\n                    if (!e.target.value) {\n                        setNoMore(false)\n                        setFoundProgresses([])\n                        setIsSearching(false)\n                        setSearchValue('')\n                    }\n                }}\n                enterButton\n                allowClear\n                style={{\n                    maxWidth: '500px',\n                    borderRadius: '10px',\n                }}\n            />\n            {isSearching ? (\n                foundProgresses.length > 0 ? (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={onSearch(searchValue)}\n                        hasMore={!noMore}\n                        loader={\n                            <div className=\"loader\" key={0}>\n                                Loading ...\n                            </div>\n                        }\n                    >\n                        <MasonryGrid>\n                            {foundProgresses.map((item, index) => (\n                                <MasonryCard\n                                    id={item._id}\n                                    key={index}\n                                    onClickLink={'/inspirations/' + item._id}\n                                    images={item.goal.images}\n                                    body={\n                                        <>\n                                            {/* <UserButton\n                                                noName={true}\n                                                id={item.owner}\n                                                friendDataExp={friendData}\n                                            /> */}\n                                            <span\n                                                style={{ fontWeight: 'bold' }}\n                                            >\n                                                {item.name}\n                                            </span>\n                                        </>\n                                    }\n                                />\n                            ))}\n                        </MasonryGrid>\n                    </InfiniteScroll>\n                ) : null\n            ) : (\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={onGetPopular}\n                    hasMore={!noMorePopular}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            Loading ...\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {progresses.map((item, index) => (\n                            <MasonryCard\n                                id={item._id}\n                                key={index}\n                                onClickLink={'/inspirations/' + item._id}\n                                images={item.goal.images}\n                                body={\n                                    <>\n                                        {/* <UserButton\n                                            noName={true}\n                                            id={item.owner}\n                                            friendDataExp={friendData}\n                                        /> */}\n                                        <span style={{ fontWeight: 'bold' }}>\n                                            {item.name}\n                                        </span>\n                                    </>\n                                }\n                            />\n                        ))}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            )}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Explore)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nconst AddCard = props => (\n    <Button\n        onClick={props.action}\n        type=\"primary\"\n        shape=\"round\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n    >\n        {props.title}\n    </Button>\n)\n\nexport default AddCard\n","import React from 'react'\n\nexport default props => (\n    <div\n        style={{\n            margin: 'auto',\n            textAlign: 'center',\n            width: '90%',\n            maxWidth: '400px',\n            padding: '30px 0px',\n        }}\n    >\n        <img\n            src={props.url}\n            style={{\n                width: '100%',\n                height: 'auto',\n                marginBottom: '20px',\n            }}\n        />\n        <span>{props.text}</span>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Progresses = props => {\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    const { isOwner, progressData, account, profile } = props\n\n    const { progresses } = !isOwner ? profile : account\n\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    const editGoal = !isOwner ? null : loadedProgresses ? (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    ) : null\n\n    return !loadedProgresses || loadedProgresses.length === 0 ? (\n        <CustomEmpty\n            url=\"/inspiration.png\"\n            text=\"You will see your inspirations here. You can add a new inspiration for yourself or for people you care.\"\n        />\n    ) : (\n        <div>\n            {isOwner && (\n                <>\n                    <AddCard\n                        title=\"Add inspiration\"\n                        sub=\"Rich your goals or help others!\"\n                        action={() => {\n                            setStartProgressVisible(true)\n                        }}\n                    />\n                    {editGoal}\n                </>\n            )}\n            <MasonryGrid style={{ marginTop: '40px' }}>\n                {loadedProgresses.map((item, index) => (\n                    <MasonryCard\n                        id={item._id}\n                        key={index}\n                        onClickLink={'/inspirations/' + item._id}\n                        images={item.goal.images}\n                        body={\n                            <>\n                                <UserButton\n                                    ids={item.goal.users}\n                                    group={true}\n                                />\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {item.name}\n                                </span>\n                            </>\n                        }\n                    />\n                ))}\n            </MasonryGrid>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport Tabs from 'antd/es/tabs'\nimport DashboardPosts from './DashboardPosts'\nimport DashboardEvents from './DashboardEvents'\nimport Badge from 'antd/es/badge'\nimport Helmet from 'react-helmet'\nimport Explore from '../Explore/Explore'\nimport Progresses from '../Progresses/Progresses'\n\nconst Progress = props => {\n    const { account, lastNotifications } = props\n\n    let numberOfUnseenNots = 0\n\n    for (let not of lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    return (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Tabs\n                tabBarStyle={!account._id ? { display: 'none' } : {}}\n                type=\"card\"\n                onChange={activeTab => {\n                    if (activeTab === 'events') {\n                        const last = parseInt(\n                            lastNotifications.reduce((res, not) => {\n                                return parseInt(not.notId) > parseInt(res)\n                                    ? not.notId\n                                    : res\n                            }, 0)\n                        )\n                        if (\n                            lastNotifications.length > 0 &&\n                            parseInt(account.lastSeenNot) !== last\n                        ) {\n                            wsActions.setLastSeenNot(account._id, last)\n                        }\n                    }\n                }}\n            >\n                <Tabs.TabPane tab=\"Explore\" key=\"explore\">\n                    <Explore />\n                </Tabs.TabPane>\n                {account._id && (\n                    <Tabs.TabPane tab=\"My inspirations\" key=\"inspirations\">\n                        <Progresses isOwner={true} />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                        <DashboardPosts />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane\n                        tab={\n                            <Badge count={numberOfUnseenNots} offset={[10, 0]}>\n                                Events\n                            </Badge>\n                        }\n                        key=\"events\"\n                    >\n                        <DashboardEvents />\n                    </Tabs.TabPane>\n                )}\n            </Tabs>\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Progress)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\n\nconst styles = `<style> article,  aside,  details,  figcaption,  figure,  footer,  header,  hgroup,  menu,  nav,  section {      display: block;  }   html {      height: 100%;      padding: 0;      margin: 0;  }   body {      margin: auto;      font-weight: 300;      font-family: 'Open Sans', sans-serif !important;      color: #444;      font-size: 17px;      line-height: 1.231;      height: 100%;  }   .clearafter:after {      clear: both;      content: '.';      display: block;      height: 0;      visibility: hidden;  }   h1 {      margin: 0px;  }   .twofold a {      color: #888;      text-decoration: none;  }   .twofold a:hover {      color: #3665c1;  }   .twofold {      display: inline-block;      margin: 5px 0px;      width: 143px;      padding-left: 35px;      font-family: 'Open Sans', sans-serif !important;      color: #999;      font-size: 12px;  }   .twofold_mail {      display: inline-block;      margin: 5px 0px;      cursor: pointer;      color: #999;      padding-left: 35px;      width: 120px;      font-family: 'Open Sans', sans-serif !important;      font-size: 12px;  }   .twofold_mail:hover {      color: #4683ea;  }   .wrapp {      min-height: 100%;      position: relative;      margin: auto;  }   .cont {      width: 94%;      margin: auto;      padding-bottom: 320px;      text-align: center;  }   .logo_back {      padding: 9px 4%;  }   a.logo {      border: none;      text-decoration: none;  }   a img {      border: none;  }   .maintext0 {      font-weight: 300;      font-size: 45px;      color: #222;      margin: 50px auto 10px;      text-align: center;  }   .maintext1 {      font-size: 20px;      font-weight: 300;      letter-spacing: -1px;      margin: 0px auto 20px;      text-align: center;  }   .leftTitle {      font-size: 22px;      font-weight: 600;      margin: 20px auto 20px;      text-align: left;  }   .maintext2 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 100px 0px 0px;      color: #222;  }   .maintext3 {      font-size: 22px;      font-weight: 300;      text-align: center;      margin: 50px 0px 20px;      color: #222;  }   .maintext4 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 25px 0px 35px;      color: #222;  }   .contactusleft:hover {      background: #FF5935;  }   .facebookleft:hover {      background: #2350A2;  }   .googleleft:hover {      background: #d34836;  }   .linkedinleft:hover {      background: #006699;  }   .twitterleft:hover {      background: #00ACEF;  }   .twitterleft,  .linkedinleft,  .googleleft,  .facebookleft,  .contactusleft {      background: none;      border: none;      cursor: pointer;      width: 28px;      height: 34px;      outline: none;  }   .noselect {      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .totop {      position: absolute;      color: #2B7BC7;      bottom: 0px;      right: 0px;      text-decoration: none;      font-size: 15px;  }   .totop:hover {      text-decoration: underline;  }   .totopmap {      margin-left: 965px;      color: #2B7BC7;      text-decoration: none;      font-size: 15px;  }   .totopmap:hover {      text-decoration: underline;  }   .arrow {      padding-right: 15px;  }   .regulartitlemap {      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 100px 0px 20px 20px;      font-weight: 600;  }   .regulartitleprice {      top: 0px;      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 80px 0px 0px 20px;      font-weight: 600;  }   .even {      padding: 3px;      border-bottom: 1px solid #EEE;      height: 34px;  }   .even:hover {      background-color: #EAFBFB;  }   .pricing {      width: 700px;      margin: auto;      border: 0px solid black;      border-bottom: none;      border-bottom: 1px solid black;      border-collapse: collapse;      font-size: 17px;      text-align: center;      margin-top: 70px;  }   .countries {      list-style-type: none;      top: 0px;      margin: 100px 0px 100px;      text-align: left;  }   .countries li {      width: 188px;      margin: 5px 0 24px 0px;      display: inline-block;  }   .countries li.clear {      clear: left;  }   .countries li svg {      float: left;      margin: 0 10px 0 0;      border: 1px solid #e6e6e6;  }   .countries li a {      display: table;      width: 160px;      color: #666;      *display: block;      *position: relative;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .countries li a:hover {      color: #08c;  }   .countries li span {      display: table-cell;      width: 160px;      vertical-align: middle;      *display: block;      *position: absolute;      *top: 50%;  }   .countries li span span {      width: 100%;      *display: block;      *position: relative;      *top: -50%;  }   /* .menu { position:absolute; left:196px; top:27px; *font-family: arial, sans-serif; } .menu ul{ \tmargin:0px; \tlist-style-type: none; } .menu ul li{ \tfloat:left; \tpadding:0px; \tmargin:0px 35px 0px 5px; } .menu ul li a { \tdisplay:table; \tcolor:#999;     height:24px; \tcursor:pointer; \ttext-decoration:none; \tvertical-align:middle; } .menu ul li a:hover {  color:#333; } .menu ul li span { \tdisplay:table-cell;  padding: 0px;  font-size:14px; \tfont-weight:600; \tvertical-align:middle; \ttext-align:center; } .login {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .login:hover {  color:#333; } .signup {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .signup:hover {  color:#333; } */  .menu {      position: absolute;      right: 240px;      top: 27px;      *font-family: arial, sans-serif;  }   .menu ul {      margin: 0px;      list-style-type: none;  }   .menu ul li {      float: left;      padding: 0px;      margin: 0px 45px 0px 5px;  }   .menu ul li a {      display: table;      color: #888;      height: 24px;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .menu ul li a:hover {      color: #333;  }   .menu ul li span {      display: table-cell;      padding: 0px;      font-size: 14px;      font-weight: 600;      vertical-align: middle;      text-align: center;  }   .login {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .login:hover {      color: #333;  }   .signup {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .signup:hover {      color: #333;  }   .language {      cursor: pointer;  }   .language:hover {}   .language svg {      border: 1px solid #e6e6e6;  }   .download {      height: 24px;      background: #1EAB4B;      padding: 0px 25px 0px;      float: right;      border: none;      border-radius: 3px;      color: white;      font-family: 'Open Sans';      font-weight: 900;  }   button {      cursor: pointer;  }   .download:hover {      background: #27ae60;  }   .social_footer {      padding-left: 35px;      height: 12px;      display: inline-block;      margin: 5px 0px;      width: 120px;  }   .social_footer p {      float: left;      display: inline;      margin: 0px 13px;      color: #999;  }   .social_footer svg {      float: left;      display: inline;  }   .tmsdownloads {      background: #1EAB4B;      border: none;      line-height: 13px;      cursor: pointer;      min-height: 37px;      padding: 7px 0px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .tmsdownloads:hover {      background: #27ae60;  }   .blueBut {      background: #4683ea;      border: none;      cursor: pointer;      height: 37px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .blueBut:hover {      background: #4d92f7;  }   .orderBut {      background: #F6F9FF;      outline: none;  }   .orderBut:hover {      background: #dce9ff;  }   .hpLoginBlocks {      vertical-align: top;      max-width: 400px;      min-width: 310px;      width: 100%;      display: inline-block;      margin-bottom: 30px;  }   .market:hover {      box-shadow: 1px 2px #ddd;  }   #readMore {      margin: 30px auto 0px;      color: #0087e2;      fill: #0087e2;      cursor: pointer;  }   #readMore:hover,  #readMore:hover path {      color: #4d92f7;      fill: #4d92f7;  }   .simplelink {      text-decoration: none;      color: #333;  }   .simplelink:hover {      text-decoration: none;      color: #3665c1;  }   .right_submenu {      position: absolute;      height: 39px;      right: 45px;      top: 18px;      display: block;      border: 1px solid #E6E6E6;  }   footer {      font-size: 12px;      background: #f3f3f3;      background: -moz-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #f3f3f3), color-stop(100%, #fff));      background: -webkit-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -o-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -ms-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: linear-gradient(top, #f3f3f3 0, #fff 100%);      font-size: 12px;      padding: 30px 0 0px;      margin-top: 100px;      width: 100%;      height: 158px;      color: #888;      position: absolute;      bottom: 0px;  }   .footer_header {      font-weight: 300;      color: #555;      font-size: 13px;      text-align: left;      padding-left: 35px;  }   .flag svg {      border: 1px solid #e6e6e6;  }   .price {      width: 80%;      margin: auto;      border-collapse: collapse;  }   .price tr {      height: 36px;      border-bottom: 1px solid #ddd;  }   table .yel:hover td {      background: #e7f4fd;  }   .gre {      padding-left: 10px;      background: #fff;  }   .price button {      cursor: pointer;      font-size: 23px;      color: #fff;      border: none;      border-radius: 3px;      min-height: 40px;      box-shadow: 0px 2px 1px 1px #adadad;      padding: 0px 35px;  }   .doodle {      height: 0px;      position: relative;      bottom: 26px;  }   .signup_free {      background: #1EAB4B;  }   .signup_free:hover {      background: #27ae60;  }   .signup_pro {      background: #1548B8;  }   .signup_pro:hover {      background: #1851CE;  }   .free {      color: #1EAB4B;      font-size: 13px;      background: #f5f5f5;  }   .pro {      color: #1548B8;      font-size: 13px;      background: #f5f5f5;  }   .pricing_image {      margin: 85px auto 0px;      text-align: center;  }   .tworow {      width: 49.999%;      float: left;      display: inline;      text-align: center;      margin-top: 80px;  }   .tworow>div {      width: 30%;      max-width: 80px;      text-align: center;      margin: auto;  }   .half {      margin: 10px 10%;      text-align: center;      line-height: 1.6;  }   .oneimage {      text-align: center;      margin: auto;      margin-top: 85px;      max-width: 750px;      width: 100%;  }   #placeholder #lozenge {      fill: #666;  }   #placeholder:hover #lozenge {      fill: url(#SVGID_1_);  }   .passbut:hover {      text-decoration: underline;  }   #regbut:hover {      background: #21b951;  }   #loginbut:hover {      background: #70bcf0;  }   .passbut {      text-decoration: none;      color: #4683ea;  }   #regbut {      background: #1eab4b;  }   #loginbut {      background: #51aded;  }   input {      width: 300px;      height: 35px;      border: 1px solid #cccccc;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;      color: #555555;      font-size: 15px;  }   input[type='checkbox'] {      height: 16px;      width: 16px;  }   .linksimple {      color: #4683ea;      text-decoration: none;  }   .linksimple:hover {      color: #4683ea;      text-decoration: underline;  }   .linksimple:visited {      color: #4683ea;      text-decoration: none;  }   .LoginButton {      cursor: pointer;      border: none;      height: 62px;      color: white;      font-size: 16px;      font-weight: bold;      box-shadow: 0px 2px 1px 1px #adadad;      width: 330px;      margin: 15px auto 15px;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   #reghome {      background: #1eab4b;  }   #reghome:hover {      background: #21b951;  }   .regtable {      width: 55%;      margin: auto;      border-collapse: collapse;      text-align: center;  }   .regtable tr {      height: 48px;  }   .regtable td {      width: 50%;  }   .regtable input {      padding-left: 5px;      height: 30px;      color: #111;      background: #fff;  }   ::-webkit-input-placeholder {      color: #999;  }   :-moz-placeholder {      color: #999;      opacity: 1;  }   ::-moz-placeholder {      color: #999;      opacity: 1;  }   :-ms-input-placeholder {      color: #999;  }   .logo_svg:hover polygon {      fill: #00CACD;  }   .logo_svg:hover path {      fill: #00CACD;  }   /* FLOAT DIV STYLES */  .floatDiv {      position: absolute;      background: grey;      width: 300px;      height: 200px;      resize: both;      overflow: hidden;      border: 1px solid #bbb;      top: 100px;      left: 300px;  }   .floatDivTH {      width: 100%;      height: 25px;      background: #eee;      border: 1px solid #bbb;      cursor: pointer;      line-height: 0px;  }   .floatDivTH td {      width: 25px;  }   .floatDivTH td:first-child {      width: auto;      white-space: nowrap;  }   .rollDiv {      left: 0px;      top: 0px;      width: 200px;      resize: none;  }   .expandDiv {      left: 0px;      top: 0px;      height: 100%;      width: 100%;      resize: none;      border: none;  }   .topPan {      width: 100%;      height: 25px;      background: #eee;  }   .topClose {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 2px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topExpand {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 27px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topRoll {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 53px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .dock {      left: 0px;      bottom: 0px;      height: 33px;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;  }   .undock {      left: 0px;      bottom: 0px;      height: auto;      max-height: 100%;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;      overflow-y: auto;  }   .expandDock {      position: absolute;      left: 199px;      bottom: 0px;      width: 33px;      height: 33px;      cursor: pointer;      background: #eee;  }   .expandDock table,  .expandDock table tr td {      border: 1px solid #bbb;      text-align: center;      width: 100%;      height: 100%;      line-height: 0;  }   .rollDiv .topPan {      cursor: pointer;  }   .floatDiv .topPan {      cursor: default;  }   .st0,  .floatDivTH path {      fill: #444 !important;  }   #ratioWrap {      width: 95%;      max-width: 640px;      display: inline-block;      position: relative;      margin: 40px auto 20px;      /* z-index:25; */  }   #ratioWrap:after {      padding-top: 56.25%;      display: block;      content: '';  }   #div1 {      margin: auto;      position: absolute;      top: 0;      bottom: 0;      right: 0;      left: 0;      cursor: pointer;      text-align: center;      background: #fff;      \" } #placeholder{   margin:auto;   position: absolute;   top: 0;   bottom: 0;   right: 0;   left: 0;   cursor:pointer;   text-align:center;   background:#fff;\"  }   #contLogin {      margin-top: 0px;      padding-top: 30px;      padding-bottom: 130px;  }   #header {      position: fixed;      height: 79px;      width: 100%;      display: block;      background: white;      z-index: 21;      top: 0px;  }   .prodList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .prodList a {      color: inherit;      display: inline-block;      margin: 0px 46px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;      text-decoration: none;      vertical-align: top;  }   .prodList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;  }   .prodList table {      width: 100%;      border-collapse: collapse;      border: none;      text-align: center;  }   .prodList tr:first-child td {      padding-top: 33px;  }   .prodList tr:nth-child(2) td {      padding: 9px 20px 20px;  }   .prodList tr:last-child td {      padding: 0px 20px 33px;      font-size: 14px;  }   .appList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .appList a {      color: inherit;  }   .appList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      cursor: pointer;  }   .sharePan {      width: 100%;      list-style-type: none;      padding: 0;  }   .sharePan li {      width: 25%;      float: left;      box-sizing: border-box;      height: 30px;  }   .sharePan a {      color: white;      text-decoration: none;      display: block;      width: 100%;      height: 100%;      position: relative;  }   .sharePan a div {      position: absolute;      top: 5px;      left: 40px;      font-weight: 700;  }   .sharePan a svg {      margin: 8px 15px;  }   .sharePan li:nth-child(1) {      background: #3b5998;  }   .sharePan li:nth-child(2) {      background: #1da1f2;  }   .sharePan li:nth-child(3) {      background: #006fa6;  }   .sharePan li:nth-child(4) {      background: #db4437;  }   .tag {      display: inline-block;      border-radius: 3px;      padding: 4px 20px;      margin: 5px 10px 5px 0px;      border: 1px solid transparent;      cursor: pointer;      font-size: 15px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .processes .tag {      background: rgba(70, 131, 234, 0.2);  }   .processes .tag:hover {      border: 1px solid background:rgba(70, 131, 234, 0.5);      background: rgba(70, 131, 234, 0.4);  }   .processes .activeTag {      background: rgba(70, 131, 234, 1);      color: white;  }   .processes .activeTag:hover {      background: #4d92f7;      border: 1px solid #4d92f7;  }   .services .tag {      background: rgba(30, 171, 75, 0.2);  }   .services .tag:hover {      border: 1px solid background:rgba(30, 171, 75, 0.5);      background: rgba(30, 171, 75, 0.4);  }   .services .activeTag {      background: rgba(30, 171, 75, 1);      color: white;  }   .services .activeTag:hover {      background: #1EAB4B;      border: 1px solid #1EAB4B;  }   .articles {      text-align: center;  }   .articles>a {      text-align: left;      display: inline-block;      margin: 20px 10px 0px 10px;      border-radius: 3px;      border: 1px solid transparent;      cursor: pointer;      text-decoration: none;      color: #777;      max-width: 284px;      width: 100%;      vertical-align: top;  }   .articles>a:hover {      opacity: .8;  }   .toKnowledge {      margin: 50px auto 30px;      text-align: right;  }   .toKnowledge a {      padding: 10px 20px;      background: #0087e2;      border: 1px solid #bbb;      color: white;      border-radius: 3px;  }   .toKnowledge a:hover {      background: #4d92f7;      border: 1px solid #ccc;      text-decoration: none;  }   .blueLink {      text-decoration: none;      color: #0087e2;  }   .blueLink:hover {      text-decoration: underline;  }   .articleTags {      width: 100%;  }   .articleTags div {      display: inline-block;      border-radius: 3px;      padding: 2px 4px;      margin: 5px 5px 5px 0px;      cursor: pointer;      font-size: 14px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .artProcTag {      background: rgba(70, 131, 234, 0.2);      color: #777;  }   .artProcTag.active {      background: rgba(70, 131, 234, 1);      color: white;  }   .artServTag {      background: rgba(30, 171, 75, 0.2);      color: #777;  }   .artServTag,  .active {      background: rgba(30, 171, 75, 1);      color: white;  }   .article h3 {      font-weight: 600;      font-size: 20px;      margin: 7px 0px 10px;  }   .article p {      font-style: italic;      margin: 0px 0px 8px;      font-size: 15px;  }   /* ------------------ARTICLES--------------------- */  .artB {      color: #444;      font-size: 18px;      line-height: 26px;  }   .artB h1 {      font-size: 44px;      font-weight: 700;      color: #191919;      text-align: center;      line-height: 60px;  }   .artB h2 {      font-size: 30px;      font-weight: 400;      color: #191919;      text-align: center;      line-height: 35px;  }   .artB table {      width: 100%;      vertical-align: top;      border-collapse: collapse;  }   .artB table.twotd td {      width: 50%;      vertical-align: top;  }   .artB table.threetd td {      width: 33%;      vertical-align: top;  }   .artB td {      border: 1px solid #999;      padding-left: 10px;  }   .artB td ol {      margin: 0px;  }   .artB ol {      margin: 0px;      margin: 35px 0px -13px 0px;      font-style: italic;      font-weight: 600;  }   .artB ol p {      color: #444;      /*font-size: 17px;*/      line-height: 26px;      font-style: initial;      font-weight: 300;      margin-left: -40px;  }   .artB ol i p {      font-style: italic;      color: #008b8b;  }   .artB p.total {      color: #134f5c;      font-weight: bold;      margin-top: 0px;  }   .artB iframe {      margin: auto;      display: block;  }   @media screen and (min-width: 1200px) {       #mob-menu-but,      #mob-menu {          display: none !important;      }       #cont {          display: block !important;      }  }   @media screen and (max-width: 1100px) {      .footSep {          visibility: hidden;      }  }   @media screen and (max-width: 1200px) {       #menu,      #submenu {          display: none;      }       #mob-menu-but {          width: 30px;          height: 30px;          position: absolute;          right: 4%;          top: 21px;          display: block;      }       #mob-menu {          display: none;          width: 100%;          background: white;          z-index: 9999;          margin: 0px;          padding: 0px;          margin-top: 89px;      }       #mob-menu li {          text-align: center;          list-style: none;          margin: 20px;      }       #mob-menu a {          text-decoration: none;          font-size: 16px;          font-weight: 500;          color: #0F3F9F !important;          cursor: pointer;      }  }   @media screen and (max-width: 750px) {      .maintext0 {          font-size: 30px;      }       .maintext1 {          font-size: 18px;      }       .maintext2,      .maintext4 {          font-size: 26px;      }       .maintext4 {          margin: 15px 0px 30px;      }       .pricing_image {          margin: 70px auto 20px;      }       .half {          14px;      }       #cont {          margin-top: 50px;      }  }   @media screen and (max-width: 650px) {      .sharePan div {          display: none;      }       .articles>a {          margin: 50px 0px 0px 0px;      }  }   @media screen and (max-width: 450px) {      .artB h1 {          font-size: 26px;          font-weight: 400;          color: #191919;          text-align: center;          line-height: 40px;      }       .artB h2 {          font-size: 22px;          font-weight: 400;          font-style: italic;          color: #191919;          text-align: center;          line-height: 30px;      }       .maintext0 {          font-size: 26px;      }       .maintext1 {          font-size: 18px;      }       .maintext2 {          font-size: 25px;          margin: 50px 0px 0px;      }       .maintext4 {          font-size: 25px;          margin: 10px 0px 20px;      }       .pricing_image {          margin: 40px auto 20px;      }       .half {          14px;      }       .tworow {          width: 100%;      }       .hpLoginBlocks {          min-width: initial;      }       #cont {          margin-top: 30px;      }  }   /* ------------------------LOGOS---------------------------- */  .logo_svg_maintain:hover svg {      fill: #0044ff;  }   .logo_svg_order:hover svg {      fill: #ff4400;  }   /* ------------------------LOGOS END------------------------ */  /* ------------------------PRODUCTS MENU-------------------- */  #products_menu {      position: absolute;      right: -100px;      top: 35px;      width: 346px;      background: white;      border-radius: 3px;      border: 1px solid #ccc;      display: none;      box-shadow: 0 2px 10px rgba(0, 0, 0, .2);      box-sizing: border-box;      font-size: 15px;      color: #222;  }   #products_menu>div {      padding: 30px 30px 30px 30px;      box-sizing: border-box;  }   #products_menu>div>a {      display: inline-block;      width: 90px;      height: 90px;      border: 1px solid transparent;      vertical-align: top;      text-align: center;      cursor: pointer;      border-radius: 3px;      box-sizing: border-box;      text-decoration: none;      color: #222;  }   #products_menu>div>a:hover {      border: 1px solid #e6e6e6;  }   #products_menu>a>button {      width: 100%;      background: #eee;      height: 40px;      border: none;  }   #products_menu>a>button:hover {      width: 100%;      background: #e7e7e7;      height: 40px;      border: none;  }   /* ------------------------PRODUCTS MENU END----------------- */  /* ------------------------SUPPORT MENU---------------------- */  .collapseDiv {      width: 100%;      display: none;      padding: 15px 0px;      box-sizing: border-box;      background: #333;  }   .collapseDiv>a {      display: block;      text-decoration: none;      width: 100%;      background: #333;      padding: 5px 30px 5px 40px;      box-sizing: border-box;      cursor: pointer;      color: #fff;  }   .collapseDiv>a:hover {      background: #222;  }   .plusM {      float: right;      margin-right: 10px;  }   .supMen {      width: 100%;      background: #eee;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMen:hover {      background: #ddd;  }   .supMenAct {      width: 100%;      background: #c5c5c5;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMenAct:hover {      background: #bbb;  }   @media screen and (max-width: 400px) {      .plusM {          visibility: hidden;      }  }   .artImg {      width: 100%;  }   .supArtMenIt {      width: 100%;      padding: 10px 0px;  }   .supArtMenIt>a {      display: block;      text-decoration: none;      width: 100%;      cursor: pointer;      padding: 10px 10px;      font-size: 14px;      box-sizing: border-box;      color: #444;      text-align: left;  }   .supArtMenIt>a:hover {      background: #eee;  }   .supArtMenItAct {      color: blue;      border-left: 3px solid blue;      font-weight: 600;  }   .supMenArt {      vertical-align: top;      display: inline-block;      max-width: 280px;      min-width: 250px;      margin: 80px auto;      box-shadow: -10px 5px 20px -5px #ccc;      border-left: 1px solid #ccc;      box-sizing: border-box;      float: right;      color: #222;  }   @media screen and (max-width: 1070px) {      .supMenArt {          display: block;          float: none;          max-width: 600px;          min-width: 0px;          box-shadow: -4px 7px 50px -5px #ccc;      }  }   /* ------------------------SUPPORT MENU END------------------ */  /* ------------------------SUPPORT ARTICLE------------------- */  .artS {      max-width: 700px;      text-align: left;      margin-top: 68px;      color: #222;      font-size: 15px;      line-height: 31px;      display: inline-block;  }   .artS h1,  .artS h2 {      text-align: left;      font-weight: 400;  }   .artS h1 {      font-size: 40px;      line-height: 60px;  }   .artS img {      width: 100%;      height: auto;  }   .artS .emb {      width: 100%;      text-align: center;  }   .artS .emb div {      font-size: 27px;      margin: 43px auto;      color: #999;  }   .artS .emb img {      width: 90%;      margin: auto;  }   .artS .emb p {      text-align: left;  }   .artS .emb textarea {      width: 90%;      font-size: 15px;      height: 100px;  }   .artS .artImg {      width: 100%;      max-width: 120px;      float: right;      margin: 18px 10px 10px 40px;  }   .artS .clearD {      width: 100%;      height: 40px;      visibility: hidden;      clear: both;  }   .artS ol {      margin: 0px;      font-style: normal;      font-weight: inherit;  }   .artS a {      color: #4184f1;      text-decoration: none;  }   .artS a:hover {      text-decoration: underline;  }   .artS .aNewT:after {      content: '';      background: no-repeat url(http://www.logision.com/img/newBlank.png);      display: inline-block;      height: 10px;      margin: 0 3px 0 5px;      width: 10px;  }   /* ------------------------SUPPORT ARTICLE END--------------- */</style>`\n\nconst Blog = props => {\n    console.log(props.history.location.pathname)\n    const [state, setState] = useState('')\n    const [title, setTitle] = useState('')\n    useEffect(() => {\n        const url = 'https://websiter.dev' + props.history.location.pathname\n        console.log(url)\n        axios\n            .post('/api/blog', { url })\n            .then(res => {\n                setState(\n                    styles +\n                        res.data.body\n                            .replace(\n                                /\\/images\\/blog/gi,\n                                'https://websiter.dev/images/blog'\n                            )\n                            .replace(\n                                /href=\"https:\\/\\/websiter.dev/gi,\n                                'href=\"https://addspire.com'\n                            )\n                )\n                setTitle(res.data.title)\n            })\n            .catch(err => {})\n    }, [props.history.location.pathname])\n\n    return (\n        <div>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <div dangerouslySetInnerHTML={{ __html: state }} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React from 'react'\n\nimport * as wsActions from '../websocketActions'\nimport Menu from 'antd/es/menu'\nimport Dropdown from 'antd/es/dropdown'\nimport DownOutlined from '@ant-design/icons/DownOutlined'\nimport Button from 'antd/es/button'\nimport MoreIcon from './UI/MoreIcon'\n\nconst FriendActionButton = props => {\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const menu = (\n        <Menu onClick={({ domEvent }) => domEvent.stopPropagation()}>\n            {props.additionalButtons &&\n                props.additionalButtons.map((button, index) => (\n                    <Menu.Item key={index + 100} onClick={button.onClick}>\n                        {button.title}\n                    </Menu.Item>\n                ))}\n            {invitingFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"2\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Decline\n                </Menu.Item>\n            ) : invitedFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"3\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Cancel invitation\n                </Menu.Item>\n            ) : realFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"4\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Unfriend\n                </Menu.Item>\n            ) : null}\n            {props.noFollow ? null : account.followAccounts.includes(_id) ? (\n                <Menu.Item\n                    key=\"5\"\n                    onClick={() => wsActions.unfollowAccount(accountId, _id)}\n                    danger={true}\n                >\n                    Unfollow\n                </Menu.Item>\n            ) : (\n                <Menu.Item\n                    key=\"6\"\n                    onClick={() => wsActions.followAccount(accountId, _id)}\n                >\n                    Follow\n                </Menu.Item>\n            )}\n        </Menu>\n    )\n    return invitingFriends.find(item => item.friend === _id) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.acceptFriend(accountId, _id)\n            }}\n        >\n            Accept friendship\n        </Dropdown.Button>\n    ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n          item => item.friend === _id\n      ) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.addFriend(accountId, _id)\n            }}\n        >\n            Become friends\n        </Dropdown.Button>\n    ) : (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a\n                // className=\"ant-dropdown-link\"\n                onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                }}\n            >\n                <Button type={props.asText ? 'primary' : 'link'}>\n                    {props.asText ? (\n                        <>\n                            Actions <DownOutlined />\n                        </>\n                    ) : (\n                        <MoreIcon />\n                    )}\n                </Button>\n            </a>\n        </Dropdown>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport friendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        account: props.account,\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButtons: [\n            {\n                title: 'See profile',\n                onClick: () =>\n                    props.history.push('/profile/' + props.friend._id),\n            },\n        ],\n    })\n\n    return (\n        <MasonryCard\n            actions={friendActions}\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n            noLink={true}\n            friends={true}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Avatar from 'antd/es/avatar'\n\nconst ProgressButton = props => {\n    const { id } = props\n    const userName = id => props.progressData[id].goal.name\n    const userAvatar = id => (\n        <span\n            onClick={() => {\n                handleClick(id)\n            }}\n        >\n            <Avatar\n                src={\n                    props.progressData[id].goal.images.length > 0 &&\n                    props.progressData[id].goal.images[0]\n                }\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group ? {} : { margin: ' 0 5px' }}\n            />\n        </span>\n    )\n\n    const handleClick = id =>\n        props.history.push('/inspirations/' + (id || props.id))\n    return (\n        <span\n            style={{ cursor: 'pointer', fontWeight: 'bold', ...props.style }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {userAvatar(id)}\n            {userName(id)}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult({})\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setAddFriendOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => {\n                        setAddFriendOpen(false)\n                        document.body.removeAttribute('style')\n                    }}\n                >\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>\n                To find a friend you need to enter your friend's name or\n                nickname.\n            </p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult._id && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendCard from '../../components/FriendCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst pendingFriends = props => {\n    const { realFriends, invitedFriends, invitingFriends } = props\n    return (\n        <>\n            {invitingFriends.length > 0 && (\n                <>\n                    <h2>People invited me to be friends</h2>\n                    <MasonryGrid friends={true}>\n                        {invitingFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <>\n                    <h2>I invited these people</h2>\n                    <MasonryGrid friends={true}>\n                        {invitedFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\nimport Tabs from 'antd/es/tabs'\nimport Empty from 'antd/es/empty'\nimport Badge from 'antd/es/badge'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const confirmedFriends =\n        realFriends.length > 0 ? (\n            <MasonryGrid friends={true}>\n                {realFriends.map(friend => (\n                    <FriendCard\n                        {...props}\n                        key={friend.friend}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n            </MasonryGrid>\n        ) : (\n            <Empty\n                image=\"https://websiter.s3.us-east-2.amazonaws.com/image+4.jpg\"\n                imageStyle={{ height: '250px', marginTop: '50px' }}\n                description={false}\n            />\n        )\n    return (\n        <div>\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n            {invitedFriends.length > 0 || invitingFriends.length > 0 ? (\n                <Tabs>\n                    <Tabs.TabPane key=\"confirmed\" tab=\"Confrmed\">\n                        {confirmedFriends}\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane\n                        tab={\n                            <Badge\n                                count={invitingFriends.length}\n                                offset={[10, 0]}\n                            >\n                                Pending\n                            </Badge>\n                        }\n                        key=\"pending\"\n                    >\n                        <PendingFriends\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n            ) : (\n                confirmedFriends\n            )}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                    >\n                        Save\n                    </Button>\n\n                    <Button\n                        type=\"link\"\n                        danger\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                        onClick={() => {\n                            props.setEditPerkOpen(false)\n                            document.body.removeAttribute('style')\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = [\n        account,\n        ...account.friends\n            .filter(friend => friend.status === 'friend')\n            .map(friend => props.friendData[friend.friend]),\n    ]\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perk={perk}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n            setEditPerkOpen={props.setEditPerkOpen}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport MasonryCard from '../../components/MasonryCard'\n\nconst PerkCard = props => {\n    const { perk, perkId, owner, mode } = props\n\n    return (\n        <MasonryCard\n            id={perkId}\n            onClickLink={`/${mode || 'shop'}/${owner._id}/${perkId}`}\n            images={perk.images}\n            body={\n                <span style={{ fontWeight: 'bold' }}>\n                    {perk.name}\n                    {mode === 'shop' && ` ($${perk.price})`}\n                </span>\n            }\n        />\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account, profile, isOwner } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"90%\"\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account && account._id && isOwner ? (\n        <>\n            {isOwner && (\n                <>\n                    <AddCard\n                        action={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        title=\"Add item\"\n                        sub={props.mode === 'shop' && 'Set price'}\n                    />\n                    {editPerk}\n                </>\n            )}\n            <MasonryGrid>\n                {account[props.listKey || props.mode] &&\n                    account[props.listKey || props.mode].map((perk, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={perk}\n                            perkId={\n                                props.mode === 'wishlist' ||\n                                props.mode === 'goals'\n                                    ? perk.itemId\n                                    : perk.perkId\n                            }\n                            owner={profile}\n                            account={account}\n                            setEditedPerk={setEditedPerk}\n                            setEditPerkOpen={setEditPerkOpen}\n                            mode={props.mode}\n                            style={{ cursor: 'pointer' }}\n                        />\n                    ))}\n            </MasonryGrid>\n        </>\n    ) : (\n        <MasonryGrid>\n            {profile.wishlist.map((item, index) => (\n                <PerkCard\n                    key={index}\n                    perk={item}\n                    perkId={item.itemId}\n                    owner={profile}\n                    account={account || {}}\n                    setEditedPerk={() => {}}\n                    setEditPerkOpen={() => {}}\n                    onlyBuy={true}\n                    mode=\"wishlist\"\n                />\n            ))}\n        </MasonryGrid>\n    )\n}\n\nexport default WishlistAndPerks\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\nimport Collapse from 'antd/es/collapse'\nimport Badge from 'antd/es/badge'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Descriptions from 'antd/es/descriptions'\nimport Typography from 'antd/es/typography'\nimport Empty from 'antd/es/empty'\nimport moment from 'moment'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nmoment().format()\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, transactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => transactionData[item])\n        .map(item => transactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/inspirations/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return sorted.length > 0 ? (\n        <Collapse\n            expandIconPosition=\"right\"\n            style={{ marginBottom: '50px' }}\n            destroyInactivePanel={true}\n            accordion\n        >\n            {sorted.map((transaction, index) => {\n                const types = []\n                if (\n                    transaction.from === account._id &&\n                    transaction.to === account.id\n                ) {\n                    types.push('internal')\n                }\n                if (transaction.to === account._id) {\n                    if (transaction.progress) {\n                        types.push('earn')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('buy')\n                            types.push('item')\n                        } else {\n                            types.push('recieve gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                } else if (transaction.from === account._id) {\n                    if (transaction.progress) {\n                        types.push('pay')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('sell')\n                            types.push('item')\n                        } else {\n                            types.push('send gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                }\n\n                const user =\n                    transaction.to !== account._id\n                        ? transaction.to\n                        : transaction.from\n\n                tableData.push({\n                    key: tableData.length,\n                    types,\n                    user,\n                    perk: transaction.item,\n                    amount: transaction.amount,\n                    date: transaction.date,\n                    progress: transaction.progress,\n                    status: transaction.status,\n                    transaction,\n                })\n                const { item: reward } = transaction\n                console.log(moment(transaction.date))\n                return (\n                    <Collapse.Panel\n                        style={{ padding: 0 }}\n                        header={\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Badge\n                                        color={\n                                            transaction.status ===\n                                            'Not confirmed'\n                                                ? 'blue'\n                                                : transaction.status ===\n                                                  'Cancelled'\n                                                ? 'red'\n                                                : 'green'\n                                        }\n                                    />\n                                    <Typography.Paragraph\n                                        ellipsis={{ rows: 1 }}\n                                        style={{ display: 'inline', margin: 0 }}\n                                    >\n                                        {reward.mode === 'simple'\n                                            ? reward.simple\n                                            : reward.mode === 'money'\n                                            ? reward.money + ' (money)'\n                                            : reward.mode === 'item'\n                                            ? reward.itemName\n                                            : ''}\n                                    </Typography.Paragraph>\n                                    <UserButton\n                                        noName={true}\n                                        id={\n                                            transaction.to !== account._id\n                                                ? transaction.to\n                                                : transaction.from\n                                        }\n                                    />\n                                </div>\n                                <div>\n                                    <TimeAgo datetime={transaction.date} live />\n                                </div>\n                            </>\n                        }\n                        key={index}\n\n                        // extra={}\n                    >\n                        <Descriptions\n                            layout=\"vertical\"\n                            size=\"small\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Descriptions.Item label=\"Type\">\n                                {types.map(tag => {\n                                    let color =\n                                        tag.length > 5 ? 'geekblue' : 'green'\n                                    if (tag === 'loser') {\n                                        color = 'volcano'\n                                    }\n                                    return (\n                                        <Tag color={color} key={tag}>\n                                            {tag.toUpperCase()}\n                                        </Tag>\n                                    )\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Transaction with\">\n                                <UserButton\n                                    id={\n                                        transaction.to !== account._id\n                                            ? transaction.to\n                                            : transaction.from\n                                    }\n                                />\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Item\">\n                                {\n                                    <Rewards\n                                        onlyButton={true}\n                                        rewardKey={1}\n                                        label=\"Rewards\"\n                                        rewards={[transaction.item]}\n                                        readOnly={true}\n                                    />\n                                }\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Date\">\n                                {moment(transaction.date).format(\n                                    'dddd[,] MMM Do YYYY'\n                                )}\n                            </Descriptions.Item>\n\n                            {transaction.progress && transaction.progressId && (\n                                <Descriptions.Item label=\"Progress\">\n                                    <Button\n                                        type=\"text\"\n                                        onClick={() =>\n                                            props.history.push(\n                                                '/inspirations/' +\n                                                    transaction.progressId\n                                            )\n                                        }\n                                    >\n                                        {transaction.progress}\n                                    </Button>\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </Collapse.Panel>\n                )\n            })}\n        </Collapse>\n    ) : (\n        <CustomEmpty\n            url=\"/reward.png\"\n            text=\"Here you will see all rewards that you got or gave. You can add a reward for anybody in inspirations.\"\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        transactionData: state.transactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport MasonryCard from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\nimport Tag from 'antd/es/tag'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport * as classes from './Profile.module.css'\nimport Typography from 'antd/es/typography'\nimport Input from 'antd/es/input'\nimport message from 'antd/es/message'\nimport Friends from '../Friends/Friends'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\nimport Transactions from '../Shop/Transactions'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Profile = props => {\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState(false)\n    const [followingVisible, setFollowingVisible] = useState(false)\n    const { profile, friendData, account } = props.isAuthed ? props : data\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n                    const progressData = {}\n                    for (let progress of data.progressData)\n                        progressData[progress._id] = progress\n\n                    props.setData({\n                        // profile: data.profile,\n                        friendData,\n                        progressData,\n                        account: {},\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        account,\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n        asText: true,\n    })\n    const loading = false\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} - Addspire - Explore inspirations and ideas\n                    from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <div>\n                <Card>\n                    <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', () => {\n                                        props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <div>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            Upload\n                                        </div>\n                                    </div>\n                                )}\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n                        <Typography.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <EditOutlined\n                                                  style={{ fontSize: '16px' }}\n                                              />\n                                          ),\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </Typography.Title>\n                        {/* <h1 style={{ margin: 0 }}>{profile.name}</h1> */}\n                        <h3>({profile._id})</h3>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowersVisible(true)}\n                        >\n                            {profile.followingAccounts.length} Followers\n                        </Button>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowingVisible(true)}\n                        >\n                            {profile.followProgresses.length +\n                                profile.followAccounts.length}{' '}\n                            Following\n                        </Button>\n                        {isOwner && (\n                            <div style={{ borderTop: '1px #ccc solid' }}>\n                                <Button\n                                    icon={<LogoutOutlined />}\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    danger\n                                    type=\"text\"\n                                >\n                                    Logout\n                                </Button>\n                            </div>\n                        )}\n                        <div>\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Tag color=\"green\">Friends</Tag>\n                                    ) : null}\n                                    {account.followAccounts.includes(\n                                        profile._id\n                                    ) ? (\n                                        <Tag\n                                            style={{ marginRight: '10px' }}\n                                            color=\"purple\"\n                                        >\n                                            Following\n                                        </Tag>\n                                    ) : (\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                        >\n                                            Follow\n                                        </Button>\n                                    )}\n                                </span>\n                            )}\n                            {friendActions}\n                        </div>\n                    </div>\n                    <Tabs type=\"card\">\n                        <Tabs.TabPane tab=\"Inspirations\" key={0}>\n                            <Progresses isOwner={isOwner} />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Friends\" key={1}>\n                            {isOwner ? (\n                                <Friends />\n                            ) : (\n                                <MasonryGrid friends={true}>\n                                    {profile.friends.filter(\n                                        friend => friend.status === 'friend'\n                                    ).length === 0 ? (\n                                        <CustomEmpty\n                                            url=\"/friend.png\"\n                                            text=\"Here you will all confirmed friends of this account. You can create inspirations with your friends.\"\n                                        />\n                                    ) : (\n                                        profile.friends\n                                            .filter(\n                                                friend =>\n                                                    friend.status === 'friend'\n                                            )\n                                            .map(friend => {\n                                                const oneFriendData = {\n                                                    ...friendData[\n                                                        friend.friend\n                                                    ],\n                                                    _id: friend.friend,\n                                                }\n                                                return (\n                                                    <FriendCard\n                                                        key={oneFriendData._id}\n                                                        {...props}\n                                                        account={account}\n                                                        friend={oneFriendData}\n                                                        realFriends={\n                                                            realFriends\n                                                        }\n                                                        invitingFriends={\n                                                            invitingFriends\n                                                        }\n                                                        invitedFriends={\n                                                            invitedFriends\n                                                        }\n                                                    />\n                                                )\n                                            })\n                                    )}\n                                </MasonryGrid>\n                            )}\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Rewards\" key={4}>\n                            <Transactions />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Wishlist\" key={7}>\n                            <WishlistAndPerks\n                                mode=\"wishlist\"\n                                account={account}\n                                profile={profile}\n                                isOwner={isOwner}\n                            />\n                        </Tabs.TabPane>\n                        {isOwner && (\n                            <Tabs.TabPane tab=\"Settings\" key={8}>\n                                <Button\n                                    danger={true}\n                                    onClick={() => setDeleteVisible(true)}\n                                >\n                                    Delete account\n                                </Button>\n                                <Modal\n                                    title=\"Delete account\"\n                                    visible={deleteVisible}\n                                    onOk={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                        document.body.removeAttribute('style')\n                                    }}\n                                    onCancel={() => {\n                                        setDeleteVisible(false)\n                                        setDeleteField('')\n                                        document.body.removeAttribute('style')\n                                    }}\n                                >\n                                    <p>\n                                        Please enter your nickname and press Ok\n                                        to delete your account.\n                                    </p>\n                                    <Input\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </Modal>\n                            </Tabs.TabPane>\n                        )}\n                    </Tabs>\n                </Card>\n            </div>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {profile.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n            <Modal\n                title=\"Following\"\n                visible={followingVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowingVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <Tabs>\n                    <Tabs.TabPane tab=\"People\" key=\"1\">\n                        {profile.followAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton account={account} id={item} />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Inspirations\" key={2}>\n                        {profile.followProgresses.map(item => (\n                            <MasonryCard\n                                id={item}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        type=\"progress\"\n                                        account={account}\n                                        id={item}\n                                    />\n                                }\n                                body={\n                                    <ProgressButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                                style={{\n                                    maxHeight: '170px',\n                                    marginTop: '20px',\n                                }}\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                </Tabs>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport Helmet from 'react-helmet'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const { account } = props\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 3) {\n            const accountId = pathParts[2]\n            if (props.isAuthed && account._id === accountId) {\n                const perk = account.perks.find(\n                    item => item.perkId === pathParts[3]\n                )\n                setData({ profile: account, perk })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    props.setData({\n                        post: { [data.post._id]: data.post },\n                        friendData,\n                    })\n                })\n            }\n        }\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => <UserButton id={item} />)\n        } else return items\n    }\n\n    return perk ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    {perk.name} by {profile.id}\n                </title>\n                <meta name=\"description\" content={perk.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        Item from <UserButton id={profile._id} /> shop\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={perk.images} />\n\n                <h1>{perk.name}</h1>\n                <p style={{ whiteSpace: 'pre-wrap' }}>{perk.description}</p>\n\n                <Descriptions\n                    title=\"Goal description\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                    <Item label=\"Price\">{perk.price}</Item>\n                </Descriptions>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[perk.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport AddPerk from '../Shop/AddPerk'\nimport Popconfirm from 'antd/es/popconfirm'\nimport * as wsActions from '../../websocketActions'\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { account } = props\n\n    let accountId\n    const pathParts = props.history.location.pathname.split('/')\n    if (pathParts.length > 3) {\n        accountId = pathParts[2]\n    } else return null\n\n    useEffect(() => {\n        if (!props.isAuthed || account._id === accountId) {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n\n                props.setData({\n                    post: { [data.post._id]: data.post },\n                    friendData,\n                })\n            })\n        }\n    }, [props.isAuthed])\n\n    let wishlistItem, profile\n    if (props.isAuthed && account._id === accountId) {\n        wishlistItem = account.wishlist.find(\n            item => item.itemId === pathParts[3]\n        )\n\n        profile = account\n    } else {\n        wishlistItem = data.wishlistItem\n        profile = data.profile\n    }\n    if (!wishlistItem) return null\n    props.setData({ currentPosts: wishlistItem.post })\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    return wishlistItem ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>{`${wishlistItem.name} by ${profile.name}`}</title>\n                <meta name=\"description\" content={wishlistItem.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        <UserButton id={profile._id} /> wishlist\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={wishlistItem.images} />\n                <div style={{ textAlign: 'center' }}>\n                    <h1>{wishlistItem.name}</h1>\n                    {isOwner && (\n                        <>\n                            <Button\n                                type=\"primary\"\n                                style={{ margin: '10px' }}\n                                onClick={() => {\n                                    setEditedPerk(wishlistItem.itemId)\n                                    setEditPerkOpen(true)\n                                }}\n                            >\n                                Edit\n                            </Button>\n\n                            <Popconfirm\n                                title=\"Are you sure you want to delete this item?\"\n                                onConfirm={() => {\n                                    wsActions.deletePerk(\n                                        account._id,\n                                        wishlistItem.itemId,\n                                        'wishlist'\n                                    )\n                                    props.history.push(\n                                        '/profile/' + profile._id\n                                    )\n                                }}\n                                onCancel={() => {}}\n                                okText=\"Confirm\"\n                                cancelText=\"Cancel\"\n                            >\n                                <Button\n                                    danger\n                                    type=\"text\"\n                                    style={{ margin: '10px' }}\n                                >\n                                    Delete\n                                </Button>\n                            </Popconfirm>\n                        </>\n                    )}\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap' }}>\n                    {wishlistItem.description}\n                </p>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[wishlistItem.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n            <Modal\n                title=\"Edit item\"\n                visible={editPerkOpen}\n                maskClosable\n                closable\n                onCancel={() => {\n                    setEditPerkOpen(false)\n                    document.body.removeAttribute('style')\n                }}\n                width=\"90%\"\n                footer={null}\n                destroyOnClose={true}\n            >\n                <AddPerk\n                    setEditPerkOpen={setEditPerkOpen}\n                    perkId={editedPerk}\n                    mode=\"wishlist\"\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Progress from './containers/Progress/Progress'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\nimport Modal from 'antd/es/modal/Modal'\nimport Button from 'antd/es/button'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const [timer, setTimer] = useState(null)\n    const [explanationVisible, setExplanationVisible] = useState(false)\n    const [showSignIn, setShowSignIn] = useState(false)\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    if (!isAuthed) {\n        if (!cookies.get('explanationSeen') && !timer)\n            setTimer(setTimeout(() => setExplanationVisible(true), 5000))\n    } else if (timer) {\n        window.clearTimeout(timer)\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n\n            <Route path=\"/inspirations\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/account\" exact component={Profile} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru\" component={Blog} />\n            <Route path=\"/blog\" component={Blog} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n    const handleExplanationClose = () => {\n        cookies.set('explanationSeen', 'true', {\n            path: '/',\n            maxAge: 86400,\n        })\n        setExplanationVisible(false)\n        setShowSignIn(true)\n        document.body.removeAttribute('style')\n    }\n    return (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout showSignIn={showSignIn}>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n                {isAuthed && <NotificationsTracker />}\n            </div>\n            <Modal\n                visible={explanationVisible}\n                // footer={<Button onClick={handleExplanationClose}>Close</Button>}\n                footer={null}\n                onCancel={handleExplanationClose}\n            >\n                <div>\n                    <h1>Welcome to Addspire!</h1>\n                    <p style={{ fontSize: '16px' }}>\n                        This is a social network where people share and get\n                        support for their ideas, pomises and resolutions.\n                    </p>\n                    <h3 style={{ fontSize: '16px', marginTop: '30px' }}>\n                        Here is how Addspire works:\n                    </h3>\n\n                    <p style={{ fontSize: '16px', marginTop: '30px' }}>\n                        1. You can create an inspiration for your idea\n                    </p>\n                    <img\n                        src=\"/intro/1.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        Or you can inspire people you care.\n                    </p>\n                    <img\n                        src=\"/intro/2.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        2. Start working on your goal, share updates and make\n                        posts. Your friends and the Addspire community will\n                        support you.\n                    </p>\n                    <img\n                        src=\"/intro/3.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        3. Achieve your goal and start a new one!\n                    </p>\n                    <img\n                        src=\"/intro/4.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        More than 60% of people make promises and resolutions\n                        every year and more than 90% of them fail.\n                    </p>\n                    <h3 style={{ marginTop: '50px' }}>\n                        Make sure that you will achieve your goals!\n                    </h3>\n                    <div style={{ textAlign: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            style={{\n                                background: 'green',\n                                fontSize: '20px',\n                                padding: '10px 40px',\n                                fontWeight: 'bold',\n                                height: 'auto',\n                                margin: '30px auto',\n                            }}\n                            onClick={handleExplanationClose}\n                        >\n                            Sign Up\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    pageTitle: {},\n    friendSearchResult: {},\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'profile',\n                'currentProgress',\n                'progress',\n                'lastNotifications',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of ['user', 'account', 'profile', 'progress']) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Footer\":\"Layout_Footer__1Dfqu\",\"HideHeader\":\"Layout_HideHeader__2WRsh\",\"FooterButton\":\"Layout_FooterButton__1lZv2\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\",\"PageTitle\":\"Layout_PageTitle__368dw\"};"],"sourceRoot":""}