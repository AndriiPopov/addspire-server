{"version":3,"sources":["components/Layout/Layout.module.css","containers/Auth/Auth.module.css","containers/Account/Account.module.css","containers/Auth/Logout/Logout.tsx","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","components/Layout/Layout.tsx","utils/checkAuth.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.js","components/FriendCard.js","containers/Friends/Friends.tsx","containers/Account/Account.tsx","utils/checkImageExists.js","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","index.tsx"],"names":["module","exports","componentsLayoutDemoCustomTriggerTrigger","componentsLayoutDemoCustomTriggerLogo","siteLayoutSiteLayoutBackground","Container","socialButtons","Avatar","Logout","this","props","onLogout","react_default","a","createElement","Redirect","to","Component","Svg","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","Header","Layout","Sider","Content","selectedKey","pathname","split","undefined","console","log","isAuthenticated","es_layout","style","collapsible","collapsed","onCollapse","menu","theme","mode","selectedKeys","_ref","Item","RocketOutlined_default","AimOutlined_default","SettingOutlined_default","TeamOutlined_default","HeartOutlined_default","UserOutlined_default","LogoutOutlined_default","margin","padding","overflow","pullData","data","setData","options","objectSpread","forceAuth","forceActivate","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","_id","checkAuth","user","status","then","res","catch","err","uploadFile","file","size","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","visible","title","closable","onCancel","onOk","rewardToSave","readOnlyError","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","WrapTabNode","DropTarget","drop","monitor","dragKey","getItem","hoverKey","moveTabNode","connect","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","assign","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","account","friendsData","connectionsSelect","avatar","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","message","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","nickname","success","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","hoverable","cover","backgroundImage","backgroundSize","actions","PlusCircleOutlined_default","ownerId","Meta","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","cursor","startProgress","defaultActiveKey","alignItems","justifyContent","fontSize","goals","Goals_GoalCard","indexG","users","includes","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","page_header","backIcon","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","logout","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","accountId","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","tooltip","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","flex","flexDirection","getMessages","Progress_ProgressMessage","replies","ref","autoSize","minRows","maxRows","rows","showUploadList","marginLeft","LoadingOutlined_default","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","activityOpen","Progress_Messages","drawer","placement","onClose","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transactionId","transaction","from","tableData","sorted","Date","getTime","AddPerk","setPerk","perkId","setEditPerkOpen","setEditedPerk","onlyBuy","currency","buyPerk","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","WishlistAndPerks_Meta","listKey","Shop_PerkCard","_fetchMyAPI","fetchMyAPI","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","unfriend","FriendCard","components_FriendActionButton","FriendCard_Meta","Friends","addFriendOpen","setAddFriendOpen","pendingFriendsOpen","setPendingFriendsOpen","searchResult","setSearchResult","friendRef","fullFriend","addFriendModal","min","components_FriendCard","pendingFriendsModal","Friends_Meta","Math","floor","random","imageV","setImageV","imageExists","setImageExists","image_url","onerror","checkImageExists","icons_PlusOutlined","whitespace","pattern","disabled","friendData","containers_Progresses_Progresses","perks","nicknameNotUnique","Perk_Item","WishlistItem","wishlistItem","setIsAuthenticated","redirectTo","routes","Switch","Route","exact","component","Goals","Goal","Progresses","Progress","Profile","Account","Shop","Perk","Wishlist","Auth","ActivateAccount","process","baseURL","app","BrowserRouter","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.c14fe742.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"componentsLayoutDemoCustomTriggerTrigger\":\"Layout_componentsLayoutDemoCustomTriggerTrigger__VU7p5\",\"componentsLayoutDemoCustomTriggerLogo\":\"Layout_componentsLayoutDemoCustomTriggerLogo__1yevl\",\"siteLayoutSiteLayoutBackground\":\"Layout_siteLayoutSiteLayoutBackground__3hzn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n// type Props = {\n//     onLogout: () => {},\n// }\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout()\n    }\n\n    render() {\n        return <Redirect to=\"/login\" />\n    }\n}\n\nexport default Logout\n","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Layout from 'antd/es/layout'\nimport Menu from 'antd/es/menu'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartOutlined from '@ant-design/icons/HeartOutlined'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport SettingOutlined from '@ant-design/icons/SettingOutlined'\n\nconst { Header, Sider, Content } = Layout\n\nconst AccountLayout = props => {\n    const [state, setState] = useState()\n\n    const toggle = () => {\n        setState(!state)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    console.log(selectedKey)\n\n    return (\n        <>\n            {props.isAuthenticated ? (\n                <Layout style={{ height: '100%' }}>\n                    <Sider collapsible collapsed={state} onCollapse={toggle}>\n                        <div\n                            className={\n                                classes.componentsLayoutDemoCustomTriggerLogo\n                            }\n                        />\n                        <Menu\n                            theme=\"dark\"\n                            mode=\"inline\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => props.history.push('/' + key)}\n                        >\n                            <Menu.Item\n                                key=\"dashboard\"\n                                icon={<RocketOutlined />}\n                            >\n                                Dashboard\n                            </Menu.Item>\n                            <Menu.Item\n                                key=\"progresses\"\n                                icon={<RocketOutlined />}\n                            >\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<SettingOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartOutlined />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout className=\"site-layout\">\n                        <Header\n                            className={classes.siteLayoutSiteLayoutBackground}\n                        />\n                        <Content\n                            className={classes.siteLayoutSiteLayoutBackground}\n                            style={{\n                                margin: '24px 16px',\n                                padding: 24,\n                                overflow: 'auto',\n                            }}\n                        >\n                            {props.children}\n                        </Content>\n                    </Layout>\n                </Layout>\n            ) : (\n                props.children\n            )}\n        </>\n    )\n}\n\nexport default withRouter(AccountLayout)\n","import Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst cookies = new Cookies()\n\nexport default () => {\n    sessionStorage.setItem('systemRefresh', '0')\n\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n\n        return userId._id\n    } else {\n        return false\n    }\n}\n","import axios from 'axios'\nimport checkAuth from './checkAuth'\n\nexport default (props, data, setData, options) => {\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n    const isAuthenticated = checkAuth()\n    if (options.forceAuth) {\n        if (!isAuthenticated) {\n            props.history.push({\n                pathname: '/login',\n                state: props.history.location.pathname,\n            })\n        }\n    }\n    if (options.forceActivate) {\n        if (\n            props.isAuthenticated &&\n            data.user &&\n            !data.user.status === 'notactivated'\n        ) {\n            props.history.push('/activate-account')\n        }\n    }\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                if (res.data.status && res.data.status === 'no account')\n                    props.history.push('/activate-account')\n                setData({ ...res.data, isAuthenticated })\n                return res.data\n            })\n            .catch(err => {})\n    } else return\n}\n","import axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    console.log(props.rewards)\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    const rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nimport startProgress from '../../Actions/startProgress'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && setEditedGoal && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {(available || owner._id === account._id) && (\n                        <Button\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Start a progress\n                        </Button>\n                    )}\n                    {owner._id === account._id && setInviteGoal && (\n                        <Button\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Invite friends\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Card.Meta title={goal.name} description={goal.description} />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <Card title=\"Important goals for me and people I care\">\n                        <Card\n                            type=\"inner\"\n                            style={{ width: 200, display: 'inline-block' }}\n                            hoverable\n                            cover={\n                                <div\n                                    style={{\n                                        height: 200,\n                                        width: 200,\n                                        backgroundSize: 'cover',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    <PlusCircleOutlined\n                                        style={{\n                                            fontSize: '60px',\n                                        }}\n                                    />\n                                </div>\n                            }\n                            actions={[\n                                <Button\n                                    key=\"1\"\n                                    onClick={() => {\n                                        setEditedGoal('')\n                                        setEditGoalOpen(true)\n                                    }}\n                                    icon={<PlusCircleOutlined />}\n                                >\n                                    Add goal\n                                </Button>,\n                            ]}\n                        >\n                            <Meta title=\"Add a goal\" description=\"\" />\n                        </Card>\n\n                        {account.goals &&\n                            account.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={index}\n                                    goal={goal}\n                                    owner={account}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    <Card title=\"Important goals that I can work on\">\n                        {account.friendsData &&\n                            [account, ...account.friendsData].map(\n                                (friend, indexG) =>\n                                    friend.goals.map((goal, index) =>\n                                        goal.users.includes(account._id) ||\n                                        friend._id === account._id ? (\n                                            <GoalCard\n                                                key={indexG + '_' + index}\n                                                goal={goal}\n                                                owner={friend}\n                                                available={goal.users.includes(\n                                                    account._id\n                                                )}\n                                                account={account}\n                                                setEditedGoal={setEditedGoal}\n                                                setEditGoalOpen={\n                                                    setEditGoalOpen\n                                                }\n                                                setInviteGoal={setInviteGoal}\n                                            />\n                                        ) : null\n                                    )\n                            )}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    <Card title=\"Important goals created by my friends\">\n                        {account.friendsData &&\n                            account.friendsData.map((friend, indexG) =>\n                                friend.goals.map((goal, index) => (\n                                    <GoalCard\n                                        key={indexG + '_' + index}\n                                        goal={goal}\n                                        owner={friend}\n                                        available={goal.users.includes(\n                                            account._id\n                                        )}\n                                        account={account}\n                                        setEditedGoal={setEditedGoal}\n                                        setEditGoalOpen={setEditGoalOpen}\n                                        setInviteGoal={setInviteGoal}\n                                    />\n                                ))\n                            )}\n                    </Card>\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    console.log(rewardsGroup)\n    return rewardsGroup ? (\n        <>\n            <ol>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                    display: 'inline-block',\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        )\n    })\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"All roles\" key=\"1\">\n                    <Card title=\"All progresses where I have a role\">\n                        {progressesData &&\n                            progressesData.map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    <Card title=\"All progresses where I am achieving goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.worker === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    <Card title=\"All progresses where I motivate friends to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.owner === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    <Card title=\"All progresses where I check and approve progresses\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.experts.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.experts.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    <Card title=\"All progresses where I support friend to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.supporters.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.supporters.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                        console.log('HURRAY')\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        console.log('jjjjj')\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Comment\n            actions={[\n                <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Like\">\n                        {message.likes.includes(account._id) ? (\n                            <LikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeLikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <LikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'likeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.likes.length}\n                    </span>\n                </span>,\n                <span key=\"comment-basic-dislike\">\n                    <Tooltip title=\"Dislike\">\n                        {message.dislikes.includes(account._id) ? (\n                            <DislikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeDislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <DislikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'dislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.dislikes.length}\n                    </span>\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            replyToMessage: message.messageId,\n                            editedMessage: '',\n                        })\n                    }}\n                >\n                    Reply to\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            messageValue: message.text,\n                            editedMessage: message.messageId,\n                            replyToMessage: '',\n                        })\n                    }}\n                >\n                    Edit\n                </span>,\n            ]}\n            author={\n                <a>\n                    {account.friendsData.find(\n                        item => item._id === message.author\n                    ).name +\n                        ' (' +\n                        message.author +\n                        ')'}\n                </a>\n            }\n            avatar={\n                <Avatar\n                    src={\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                        message.author +\n                        '/avatar'\n                    }\n                />\n            }\n            content={\n                message.action === 'message' ? (\n                    <p>{message.text}</p>\n                ) : message.action === 'image' ? (\n                    <div\n                        style={{\n                            backgroundImage: 'url(' + message.text + ')',\n                            width: '200px',\n                            height: '200px',\n                            backgroundSize: 'cover',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() =>\n                            setState({ ...state, previewImage: message.text })\n                        }\n                    />\n                ) : null\n            }\n            datetime={\n                <span>\n                    <TimeAgo datetime={message.date} live />\n                </span>\n            }\n        >\n            {props.children}\n        </Comment>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        flex: 1,\n                        overflow: 'auto',\n                    }}\n                >\n                    {getMessages(progress.messages)}\n                </div>\n                <div>\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </span>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </span>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 4, maxRows: 8 }}\n                                        rows={4}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        type=\"primary\"\n                                    >\n                                        Send message\n                                    </Button>\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button style={{ marginLeft: '20px' }}>\n                                            {imageLoading ? (\n                                                <>\n                                                    <LoadingOutlined /> Loading\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <PlusOutlined /> Add a photo\n                                                </>\n                                            )}\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            console.log(milestone)\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n            <div\n                style={{\n                    height: '100%',\n                    flexDirection: 'column',\n                    overflow: 'hidden',\n                    display: 'flex',\n                }}\n            >\n                <PageHeader\n                    className=\"site-page-header\"\n                    title={goal.name}\n                    backIcon={false}\n                />\n                <div>\n                    <Button\n                        type=\"primary\"\n                        onClick={() =>\n                            setState({ ...state, activityOpen: true })\n                        }\n                    >\n                        Show activity and settings\n                    </Button>\n                </div>\n                <Messages\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n\n                <Drawer\n                    title=\"Activity\"\n                    placement=\"right\"\n                    closable={true}\n                    onClose={() => setState({ ...state, activityOpen: false })}\n                    visible={state.activityOpen}\n                    width={'90%'}\n                >\n                    <Activity\n                        data={data}\n                        setData={setData}\n                        state={state}\n                        setState={setState}\n                    />\n                </Drawer>\n                <Modal\n                    visible={state.previewImage}\n                    footer={null}\n                    onCancel={() => setState({ ...state, previewImage: '' })}\n                >\n                    <img\n                        alt=\"example\"\n                        style={{ width: '100%' }}\n                        src={state.previewImage}\n                    />\n                </Modal>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    return (\n        <Card title=\"Your wallet with all money that you have\">\n            {props.data.account.wallet &&\n                props.data.account.wallet.map((money, index) => (\n                    <Card\n                        key={index}\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        cover={\n                            <span\n                                onClick={() =>\n                                    props.history.push('/progile/' + money.user)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        money.user +\n                                        '/avatar'\n                                    }\n                                    size={100}\n                                />\n                            </span>\n                        }\n                        hoverable\n                        actions={[\n                            <Button\n                                key=\"1\"\n                                onClick={() => {\n                                    props.history.push('/progile/' + money.user)\n                                }}\n                                icon={<PlusCircleOutlined />}\n                            >\n                                Go to the shop\n                            </Button>,\n                        ]}\n                    >\n                        <Meta title={money.amount} description={money.user} />\n                    </Card>\n                ))}\n        </Card>\n    )\n}\n\nexport default withRouter(Wallet)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\n\nconst Transactions = props => {\n    const { account } = props.data\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const confirmTransaction = transactionId => {\n        axios\n            .post('/api/shop/confirm', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const cancelTransaction = transactionId => {\n        axios\n            .post('/api/shop/cancel', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk => {\n                console.log(perk)\n                if (perk.simple) return perk.simple\n                else\n                    return (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: [perk], key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )\n            },\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    cancelTransaction(record.transaction._id)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        confirmTransaction(\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    console.log(account)\n    return <Table columns={columns} dataSource={tableData} />\n}\n\nexport default withRouter(Transactions)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [previewImage, setPreviewImage] = useState('')\n    const [images, setImages] = useState([])\n\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${props.mode || 'shop'}/${props.nickname}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        setPerk(res.data.perk)\n                        setImages(\n                            res.data.perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${props.mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: props.perkId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditPerkOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${props.mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData || []\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    perk || {\n                        name: 'New item',\n                    }\n                }\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\">\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Button\n                            type=\"link\"\n                            onClick={deletePerk}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerk\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const { perk, owner, account, setEditedPerk, setEditPerkOpen } = props\n\n    const buyPerk = () => {\n        const currency = account.wallet.find(item => item.user === owner._id)\n        if (currency && currency.amount >= perk.price) {\n            axios\n                .post('/api/shop/buy', {\n                    perkId: perk.perkId,\n                    ownerId: owner._id,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        props.setData({ ...props.data, ...res.data })\n                    }\n                })\n                .catch(err => {})\n        } else {\n            alert(\n                'You cannot buy this item as you do not have enough money from this user.'\n            )\n        }\n    }\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/shop/' + owner._id + '/' + perk.perkId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && !props.onlyBuy && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedPerk(perk.perkId)\n                                setEditPerkOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {props.mode === 'shop' && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                buyPerk()\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Buy\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { data, setData } = props\n    const { account } = data\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                account={account}\n                setEditPerkOpen={setEditPerkOpen}\n                setData={setData}\n                data={data}\n                perkId={editedPerk}\n                nickname={account && account._id}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <Card title=\"Nice things that you can do or give people that you care\">\n            <Card\n                type=\"inner\"\n                style={{ width: 200, display: 'inline-block' }}\n                hoverable\n                cover={\n                    <div\n                        style={{\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <PlusCircleOutlined\n                            style={{\n                                fontSize: '60px',\n                            }}\n                        />\n                    </div>\n                }\n                actions={[\n                    <Button\n                        key=\"1\"\n                        onClick={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        icon={<PlusCircleOutlined />}\n                    >\n                        Add item\n                    </Button>,\n                ]}\n            >\n                <Meta title=\"Add an item\" description=\"\" />\n            </Card>\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </Card>\n    )\n}\n\nexport default withRouter(WishlistAndPerks)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Perks from './Perks'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <Tabs>\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                {/* <Perks data={data} setData={setData} /> */}\n                <WishlistAndPerks\n                    data={data}\n                    setData={setData}\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet data={data} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions data={data} setData={setData} />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport axios from 'axios'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        callback,\n        accountId,\n    } = props\n\n    const acceptFriend = id => {\n        axios\n            .post('/api/friends/accept', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const addFriend = id => {\n        axios\n            .post('/api/friends/add', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const unfriend = id => {\n        axios\n            .post('/api/friends/unfriend', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    if (accountId.toString() === _id.toString()) return null\n\n    return invitingFriends.find(\n        item => item.friend.toString() === _id.toString()\n    )\n        ? [\n              <Button\n                  key=\"0\"\n                  onClick={() => acceptFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Accept\n              </Button>,\n              <Button\n                  key=\"1\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Decline\n              </Button>,\n          ]\n        : invitedFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"2\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Cancel invitation\n              </Button>,\n          ]\n        : realFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"3\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Unfriend\n              </Button>,\n          ]\n        : [\n              <Button\n                  key=\"4\"\n                  onClick={() => addFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Become friends\n              </Button>,\n          ]\n}\n\nexport default FriendActionButton\n","import React from 'react'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport pullData from '../utils/pullData'\nimport FriendActionButton from './FriendActionButton'\nconst { Meta } = Card\n\nconst FriendCard = props => (\n    <Card\n        type=\"inner\"\n        style={{ width: 200, display: 'inline-block' }}\n        cover={\n            <span\n                onClick={() =>\n                    props.history.push('/profile/' + props.friend._id)\n                }\n            >\n                <Avatar\n                    src={\n                        props.friend.image &&\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            props.friend._id +\n                            '/avatar'\n                    }\n                    size={100}\n                />\n            </span>\n        }\n        actions={[\n            <FriendActionButton\n                accountId={props.account ? props.account._id : ''}\n                realFriends={props.realFriends}\n                invitedFriends={props.invitedFriends}\n                invitingFriends={props.invitingFriends}\n                _id={props.friend._id}\n                callback={() =>\n                    pullData(props, props.data, props.setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />,\n        ]}\n    >\n        <Meta title={props.friend.name} description={props.friend._id} />\n    </Card>\n)\n\nexport default FriendCard\n","import React, { useState, useEffect } from 'react'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nconst { Meta } = Card\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!data) return null\n    const { account } = data\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    alert('Accounts with this nickname do not exist.')\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const addFriendModal = (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n\n    const pendingFriendsModal = (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My friends\"\n                backIcon={false}\n            />\n\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <Button\n                    style={{ margin: '30px 0px ' }}\n                    type=\"primary\"\n                    onClick={() => setPendingFriendsOpen(true)}\n                >\n                    Show pending friends\n                </Button>\n            )}\n            <Card>\n                <Card\n                    onClick={() => setAddFriendOpen(true)}\n                    type=\"inner\"\n                    style={{ width: 200, display: 'inline-block' }}\n                    cover={\n                        <div\n                            style={{\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <PlusCircleOutlined\n                                style={{\n                                    fontSize: '60px',\n                                }}\n                            />\n                        </div>\n                    }\n                >\n                    <Meta title=\"Add a friend\" />\n                </Card>\n\n                {realFriends.map(friend => (\n                    <FriendCard\n                        key={friend._id}\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                ))}\n            </Card>\n            {addFriendModal}\n            {pendingFriendsModal}\n        </>\n    )\n}\n\nexport default Friends\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Account = props => {\n    const [data, setData] = useState()\n    const [imageV, setImageV] = useState(Math.floor(Math.random() * 10000))\n    const [imageExists, setImageExists] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!imageExists && data)\n        checkImageExists(\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                data.account._id +\n                '/avatar',\n            setImageExists\n        )\n\n    const imageUrl =\n        imageExists &&\n        data &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' +\n            data.account._id +\n            '/avatar'\n    const loading = false\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {})\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    console.log(file)\n                    uploadFile(file, 800, 'avatar', () => {\n                        setImageV(Math.floor(Math.random() * 10000))\n                    })\n                }}\n            >\n                {imageUrl ? (\n                    <img\n                        src={imageUrl + '?version=' + imageV}\n                        alt=\"avatar\"\n                        style={{ width: '100%' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: data.account.name,\n                    nickname: data.account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input\n                        disabled={true}\n                        placeholder=\"Must be more than 1 character long\"\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    ) : null\n}\n\nexport default withRouter(Account)\n","export default (image_url, callback) => {\n    var img = new Image()\n    img.src = image_url\n    img.onload = () => callback(true)\n    img.onerror = () => callback(false)\n}\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport { withRouter } from 'react-router-dom'\nimport FriendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (!data || !data.profile) return null\n\n    const { profile, account } = data\n    const imageUrl =\n        profile &&\n        profile.image &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' + profile._id + '/avatar'\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={profile.name}\n                backIcon={false}\n            />\n            <div>Nickname - {profile._id}</div>\n            <Avatar src={imageUrl} size={200} />\n            <FriendActionButton\n                accountId={account ? account._id : ''}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                _id={profile._id}\n                callback={() =>\n                    pullData(props, data, setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Friends\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.nicknameNotUnique) {\n                    alert('THis nickname is taken. Try another one.')\n                }\n                props.history.push('/set-goals')\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default withRouter(ActivateAccount)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { perk, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={perk.name}\n                backIcon={false}\n            />\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Perk)\n","import React, { useEffect, useState } from 'react'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Modal from 'antd/es/modal'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { wishlistItem } = data\n\n    return wishlistItem ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={wishlistItem.name}\n                backIcon={false}\n            />\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default WishlistItem\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <WishlistAndPerks data={data} setData={setData} mode=\"wishlist\" />\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Logout from './containers/Auth/Logout/Logout'\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport Spinner from './components/UI/Spinner/Spinner'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\n\nconst cookies = new Cookies()\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState()\n    useEffect(() => {\n        async function fetchMyAPI() {\n            sessionStorage.setItem('systemRefresh', '0')\n            const token = cookies.get('auth_token')\n            const rememberMe = cookies.get('rememberme')\n            if (rememberMe) {\n                cookies.remove('rememberme', {\n                    path: '/',\n                })\n                if (rememberMe === 'false') {\n                    cookies.remove('auth_token', {\n                        path: '/',\n                    })\n                }\n            }\n            const userId = jwt.decode(token)\n            axios.defaults.headers.post['Content-Type'] = 'application/json'\n            axios.defaults.headers.put['Content-Type'] = 'application/json'\n            axios.defaults.headers.delete['Content-Type'] = 'application/json'\n            axios.defaults.headers.common.Accept = 'application/json'\n            if (token && userId) {\n                axios.defaults.headers.common['x-auth-token'] = token\n                axios.defaults.headers.post['x-auth-token'] = token\n                axios.defaults.headers.get['x-auth-token'] = token\n                axios.defaults.headers.delete['x-auth-token'] = token\n                axios.defaults.headers.put['x-auth-token'] = token\n                setIsAuthenticated(userId._id)\n            } else {\n                setIsAuthenticated(false)\n            }\n        }\n        fetchMyAPI()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const routes = (\n        <AccountLayout isAuthenticated={isAuthenticated}>\n            <Switch>\n                <Route path=\"/goals\" exact component={Goals} />\n                <Route path=\"/goals\" component={Goal} />\n\n                <Route path=\"/progresses\" exact component={Progresses} />\n                <Route path=\"/progresses\" component={Progress} />\n\n                <Route path=\"/profile\" component={Profile} />\n\n                <Route path=\"/friends\" exact component={Friends} />\n\n                <Route path=\"/account\" exact component={Account} />\n\n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/shop\" component={Perk} />\n                <Route path=\"/wishlist\" exact component={Wishlist} />\n                <Route path=\"/wishlist\" component={WishlistItem} />\n                {!isAuthenticated && (\n                    <Route path=\"/login\" exact component={Auth} />\n                )}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthenticated && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n\n                <Redirect to=\"/dashboard\" />\n            </Switch>\n        </AccountLayout>\n    )\n\n    return typeof isAuthenticated === 'undefined' ? null : redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>{routes}</div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}