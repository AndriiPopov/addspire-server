{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Progress/Messages.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","components/Layout/Layout.tsx","utils/checkAuth.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","components/AddCard/AddCard.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.js","components/FriendCard.js","containers/Friends/Friends.tsx","containers/Account/Account.tsx","utils/checkImageExists.js","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Messages","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","Content","menuVisible","setMenuVisible","toggleMenu","selectedKey","pathname","split","undefined","console","log","accountId","sessionStorage","getItem","buttonProps","ghost","size","checkHighligh","url","openLink","es_layout","tooltip","title","placement","mouseEnterDelay","assign","MenuOutlined_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","cursor","avatar","src","page_header","onBack","goBack","main","charAt","toUpperCase","slice","subTitle","sub","drawer","closable","onClose","visible","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","LogoutOutlined_default","pullData","data","setData","options","objectSpread","forceAuth","forceActivate","isAuthenticated","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","_id","checkAuth","user","status","then","res","account","catch","err","uploadFile","file","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","this","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","Component","WrapTabNode","DropTarget","drop","monitor","dragKey","hoverKey","moveTabNode","connect","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","message","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","nickname","success","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","cover","backgroundImage","backgroundSize","actions","EditFilled_default","fontSize","ownerId","RocketOutlined_default","Meta","AddCard","hoverable","alignItems","justifyContent","PlusCircleOutlined_default","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","setTitle","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","startProgress","background","boxShadow","marginTop","components_AddCard_AddCard","goals","Goals_GoalCard","indexG","users","includes","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","padding","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","keepPageTitle","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","logout","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","textAlign","marginBottom","getMessages","Progress_ProgressMessage","replies","ref","position","bottom","left","autoSize","minRows","maxRows","rows","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","activityOpen","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","Progress_Messages","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","perk","record","transactionId","transaction","from","tableData","sorted","Date","getTime","to","AddPerk","setPerk","perkId","setEditPerkOpen","setEditedPerk","onlyBuy","currency","buyPerk","DollarCircleOutlined_default","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","_fetchMyAPI","fetchMyAPI","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","getFriendActionButtons","invitingFriends","invitedFriends","realFriends","acceptFriend","addFriend","unfriend","asIcons","ResultButtun","SmileOutlined_default","FrownOutlined_default","FriendCard","EyeOutlined_default","FriendCard_Meta","Friends","addFriendOpen","setAddFriendOpen","pendingFriendsOpen","setPendingFriendsOpen","searchResult","setSearchResult","friendRef","fullFriend","addFriendModal","min","components_FriendCard","pendingFriendsModal","Math","floor","random","imageV","setImageV","imageExists","setImageExists","image_url","onerror","checkImageExists","backIcon","icons_PlusOutlined","whitespace","pattern","disabled","friendData","containers_Progresses_Progresses","perks","nicknameNotUnique","Perk_Item","WishlistItem","wishlistItem","setIsAuthenticated","setTitleSate","newTitle","redirectTo","withProps","matchProps","routes","Switch","Route","exact","component","Goals","Goal","Progresses","Progress","Profile","Account","Shop","Perk","Wishlist","Auth","Redirect","ActivateAccount","process","baseURL","app","BrowserRouter","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.c285c344.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1mGAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    console.log(selectedKey)\n    const accountId = sessionStorage.getItem('accountId')\n    const buttonProps = {\n        type: 'link',\n        ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n\n    return (\n        <>\n            {/* {props.isAuthenticated ? ( */}\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Tooltip\n                                title=\"Menu\"\n                                placement=\"bottomLeft\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    icon={<MenuOutlined />}\n                                    onClick={toggleMenu}\n                                />\n                            </Tooltip>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {/* <Tooltip\n                                title=\"Dashboard\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                            </Tooltip> */}\n                            <Tooltip\n                                title=\"Progresses\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('progresses')}\n                                    icon={<RocketFilled />}\n                                    onClick={() => openLink('progresses')}\n                                />\n                            </Tooltip>\n                            <Tooltip\n                                title=\"Shop\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('shop')}\n                                    icon={<ShopOutlined />}\n                                    onClick={() => openLink('shop')}\n                                />\n                            </Tooltip>\n                            <Tooltip\n                                title=\"Friends\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<TeamOutlined />}\n                                    onClick={() => openLink('friends')}\n                                />\n                            </Tooltip>\n                            <Tooltip\n                                title=\"Account\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <span\n                                    onClick={() => openLink('account')}\n                                    style={{\n                                        margin: '0px 10px',\n                                        cursor: 'pointer',\n                                    }}\n                                >\n                                    <Avatar\n                                        src={\n                                            accountId &&\n                                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                                accountId +\n                                                '/avatar'\n                                        }\n                                    />\n                                </span>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={\n                                (props.title && props.title.main) ||\n                                selectedKey.charAt(0).toUpperCase() +\n                                    selectedKey.slice(1)\n                            }\n                            subTitle={(props.title && props.title.sub) || ''}\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                <Drawer\n                    title=\"Menu\"\n                    closable={true}\n                    onClose={toggleMenu}\n                    visible={menuVisible}\n                    placement=\"left\"\n                >\n                    <Menu\n                        theme=\"light\"\n                        mode=\"vertical\"\n                        selectedKeys={[selectedKey]}\n                        onClick={({ key }) => {\n                            props.history.push('/' + key)\n                            toggleMenu()\n                        }}\n                        overflowedIndicator={<MenuOutlined />}\n                    >\n                        {/* <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                            Dashboard\n                        </Menu.Item> */}\n                        <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                            Progresses\n                        </Menu.Item>\n                        <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                            Goals\n                        </Menu.Item>\n                        <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                            Shop\n                        </Menu.Item>\n                        <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                            Friends\n                        </Menu.Item>\n                        <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                            Wishlist\n                        </Menu.Item>\n                        <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                            Account\n                        </Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                            Logout\n                        </Menu.Item>\n                    </Menu>\n                </Drawer>\n            </Layout>\n            {/* // ) : (\n            //     { content }\n            // )} */}\n        </>\n    )\n}\n\nexport default withRouter(AccountLayout)\n","import Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst cookies = new Cookies()\n\nexport default () => {\n    sessionStorage.setItem('systemRefresh', '0')\n\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n\n        return userId._id\n    } else {\n        return false\n    }\n}\n","import axios from 'axios'\nimport checkAuth from './checkAuth'\n\nexport default (props, data, setData, options) => {\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n    const isAuthenticated = checkAuth()\n    if (options.forceAuth) {\n        if (!isAuthenticated) {\n            props.history.push({\n                pathname: '/logout',\n                state: props.history.location.pathname,\n            })\n        }\n    }\n    if (options.forceActivate) {\n        if (\n            props.isAuthenticated &&\n            data.user &&\n            !data.user.status === 'notactivated'\n        ) {\n            props.history.push('/activate-account')\n        }\n    }\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                if (res.data.status && res.data.status === 'no account')\n                    props.history.push('/activate-account')\n                if (res.data.account) {\n                    sessionStorage.setItem('accountId', res.data.account._id)\n                }\n                setData({ ...res.data, isAuthenticated })\n                return res.data\n            })\n            .catch(err => {})\n    } else return\n}\n","import axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    console.log(props.rewards)\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\n\nimport startProgress from '../../Actions/startProgress'\nimport Tooltip from 'antd/es/tooltip'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        cursor: 'pointer',\n                    }}\n                />\n            }\n            actions={[\n                owner._id === account._id && setEditedGoal && (\n                    <Tooltip title=\"Edit\">\n                        <span\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                        >\n                            <EditFilled style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                (available || owner._id === account._id) && (\n                    <Tooltip title=\"Start progress\">\n                        <span\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                        >\n                            <RocketOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                owner._id === account._id && setInviteGoal && (\n                    <Tooltip title=\"Invite friends\">\n                        <span\n                            type=\"link\"\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                        >\n                            <TeamOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n            ]}\n        >\n            <Card.Meta\n                title={\n                    <span\n                        onClick={() =>\n                            props.history.push(\n                                '/goals/' + owner._id + '/' + goal.goalId\n                            )\n                        }\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {goal.name}\n                    </span>\n                }\n            />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport Tooltip from 'antd/es/tooltip'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Meta from 'antd/es/card/Meta'\n\nconst AddCard = props => (\n    <Card\n        type=\"inner\"\n        style={{\n            width: 200,\n            display: 'inline-block',\n            margin: '4px 8px',\n        }}\n        hoverable\n        cover={\n            <div\n                style={{\n                    height: 200,\n                    width: 200,\n                    backgroundSize: 'cover',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n                onClick={props.action}\n            >\n                <PlusCircleOutlined\n                    style={{\n                        fontSize: '60px',\n                    }}\n                />\n            </div>\n        }\n        actions={[\n            <Tooltip title=\"Add goal\">\n                <span\n                    type=\"link\"\n                    key=\"3\"\n                    onClick={props.action}\n                    style={{ fontSize: '18px' }}\n                >\n                    <PlusCircleOutlined />\n                </span>\n            </Tooltip>,\n        ]}\n    >\n        <Meta\n            title={\n                <span onClick={props.action} style={{ cursor: 'pointer' }}>\n                    {props.title}\n                </span>\n            }\n            description={typeof props.sub !== 'undefined' && props.sub}\n        />\n    </Card>\n)\n\nexport default AddCard\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleFilled from '@ant-design/icons/PlusCircleFilled'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\nimport Tooltip from 'antd/es/tooltip'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n        props.setTitle({ main: 'Goals', sub: '' })\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <AddCard\n                        onClick={() => {\n                            setEditedGoal('')\n                            setEditGoalOpen(true)\n                        }}\n                        title=\"Add goal\"\n                    />\n\n                    {account.goals &&\n                        account.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={account}\n                                account={account}\n                                setEditedGoal={setEditedGoal}\n                                setEditGoalOpen={setEditGoalOpen}\n                                setInviteGoal={setInviteGoal}\n                            />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    {account.friendsData &&\n                        [account, ...account.friendsData].map(\n                            (friend, indexG) =>\n                                friend.goals.map((goal, index) =>\n                                    goal.users.includes(account._id) ||\n                                    friend._id === account._id ? (\n                                        <GoalCard\n                                            key={indexG + '_' + index}\n                                            goal={goal}\n                                            owner={friend}\n                                            available={goal.users.includes(\n                                                account._id\n                                            )}\n                                            account={account}\n                                            setEditedGoal={setEditedGoal}\n                                            setEditGoalOpen={setEditGoalOpen}\n                                            setInviteGoal={setInviteGoal}\n                                        />\n                                    ) : null\n                                )\n                        )}\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    {account.friendsData &&\n                        account.friendsData.map((friend, indexG) =>\n                            friend.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={indexG + '_' + index}\n                                    goal={goal}\n                                    owner={friend}\n                                    available={goal.users.includes(account._id)}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))\n                        )}\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    console.log(rewardsGroup)\n    return rewardsGroup ? (\n        <>\n            <ol style={{ padding: 0 }}>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: goal.owner })\n    }\n    return goal ? (\n        <Card>\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </Card>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n        if (!props.keepPageTitle && props.setTitle)\n            props.setTitle({ main: 'Progresses', sub: '' })\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <div\n                style={{\n                    display: 'inline-block',\n                    margin: '4px 8px',\n                }}\n                onClick={() =>\n                    props.history.push('/progresses/' + progress._id)\n                }\n            >\n                <Card\n                    type=\"inner\"\n                    style={{\n                        width: 200,\n                    }}\n                    hoverable\n                    cover={\n                        <div\n                            onClick={() =>\n                                props.history.push(\n                                    '/progresses/' + progress._id\n                                )\n                            }\n                            style={{\n                                backgroundImage:\n                                    goal &&\n                                    'url(' +\n                                        (goal.images.length > 0 &&\n                                            goal.images[0]) +\n                                        ')',\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                            }}\n                        />\n                    }\n                >\n                    {goal && (\n                        <>\n                            <Meta title={goal.name} />\n                            <Meta\n                                title={'Made by ' + progress.worker}\n                                description={'In goal by ' + progress.owner}\n                            />\n                        </>\n                    )}\n                </Card>\n            </div>\n        )\n    })\n\n    return account ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"All roles\" key=\"1\">\n                    {progressesData &&\n                        progressesData.map((progress, index) => (\n                            <ProgressCard key={index} progress={progress} />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.worker === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.owner === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.experts.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.experts.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.supporters.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.supporters.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                        console.log('HURRAY')\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\nimport Card from 'antd/es/card'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        console.log('jjjjj')\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Card>\n            <Comment\n                actions={[\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {message.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeLikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'likeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.likes.length}\n                        </span>\n                    </span>,\n                    <span key=\"comment-basic-dislike\">\n                        <Tooltip title=\"Dislike\">\n                            {message.dislikes.includes(account._id) ? (\n                                <DislikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeDislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <DislikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'dislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.dislikes.length}\n                        </span>\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                replyToMessage: message.messageId,\n                                editedMessage: '',\n                            })\n                        }}\n                    >\n                        Reply to\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                messageValue: message.text,\n                                editedMessage: message.messageId,\n                                replyToMessage: '',\n                            })\n                        }}\n                    >\n                        Edit\n                    </span>,\n                ]}\n                author={\n                    <a>\n                        {account.friendsData.find(\n                            item => item._id === message.author\n                        ).name +\n                            ' (' +\n                            message.author +\n                            ')'}\n                    </a>\n                }\n                avatar={\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            message.author +\n                            '/avatar'\n                        }\n                    />\n                }\n                content={\n                    message.action === 'message' ? (\n                        <p>{message.text}</p>\n                    ) : message.action === 'image' ? (\n                        <div\n                            style={{\n                                backgroundImage: 'url(' + message.text + ')',\n                                width: '200px',\n                                height: '200px',\n                                backgroundSize: 'cover',\n                                cursor: 'pointer',\n                            }}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    previewImage: message.text,\n                                })\n                            }\n                        />\n                    ) : null\n                }\n                datetime={\n                    <span>\n                        <TimeAgo datetime={message.date} live />\n                    </span>\n                }\n            >\n                {props.children}\n            </Comment>\n        </Card>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as classes from './Messages.module.css'\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\nimport Divider from 'antd/es/divider'\nimport Drawer from 'antd/es/drawer'\nimport Activity from './Activity'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState, setData } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                }}\n                className={classes.Messages}\n            >\n                {getMessages(progress.messages)}\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: '0px',\n                        width: '100%',\n                        background: '#fff',\n                        left: '0px',\n                        padding: '0px 10px',\n                        boxShadow:\n                            '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                    }}\n                >\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </Button>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </Button>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                        rows={1}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        icon={<SendOutlined />}\n                                        size=\"large\"\n                                        type=\"link\"\n                                    />\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button\n                                            size=\"large\"\n                                            type=\"link\"\n                                            icon={\n                                                imageLoading ? (\n                                                    <LoadingOutlined />\n                                                ) : (\n                                                    <PictureOutlined />\n                                                )\n                                            }\n                                        />\n                                    </Upload>\n\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={() =>\n                                            setState({\n                                                ...state,\n                                                activityOpen: true,\n                                            })\n                                        }\n                                    >\n                                        Activity and settings\n                                    </Button>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            console.log(milestone)\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                style={{ margin: '0px 20px 50px 0px' }}\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: progress.worker })\n    }\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n\n            <Messages\n                data={data}\n                setData={setData}\n                state={state}\n                setState={setState}\n            />\n\n            <Drawer\n                title=\"Progress activity and settings\"\n                placement=\"right\"\n                closable={true}\n                onClose={() => setState({ ...state, activityOpen: false })}\n                visible={state.activityOpen}\n                width={'100%'}\n            >\n                <Activity\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            </Drawer>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    return (\n        props.data.account.wallet &&\n        props.data.account.wallet.map((money, index) => (\n            <div\n                onClick={() => props.history.push('/profile/' + money.user)}\n                style={{ display: 'inline-block', margin: '4px 8px' }}\n            >\n                <Card\n                    key={index}\n                    type=\"inner\"\n                    style={{\n                        width: 200,\n                    }}\n                    cover={\n                        <span style={{ padding: '25px' }}>\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    money.user +\n                                    '/avatar'\n                                }\n                                size={150}\n                            />\n                        </span>\n                    }\n                    hoverable\n                    actions={[\n                        <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                            Go to the shop\n                        </Button>,\n                    ]}\n                >\n                    <Meta title={money.user} description={money.amount} />\n                </Card>\n            </div>\n        ))\n    )\n}\n\nexport default withRouter(Wallet)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\n\nconst Transactions = props => {\n    const { account } = props.data\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const confirmTransaction = transactionId => {\n        axios\n            .post('/api/shop/confirm', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const cancelTransaction = transactionId => {\n        axios\n            .post('/api/shop/cancel', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk => {\n                console.log(perk)\n                if (perk.simple) return perk.simple\n                else\n                    return (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: [perk], key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )\n            },\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    cancelTransaction(record.transaction._id)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        confirmTransaction(\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    console.log(account)\n    return (\n        <Card>\n            <Table columns={columns} dataSource={tableData} />\n        </Card>\n    )\n}\n\nexport default withRouter(Transactions)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [previewImage, setPreviewImage] = useState('')\n    const [images, setImages] = useState([])\n\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${props.mode || 'shop'}/${props.nickname}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        setPerk(res.data.perk)\n                        setImages(\n                            res.data.perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${props.mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: props.perkId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditPerkOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${props.mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData || []\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    perk || {\n                        name: 'New item',\n                    }\n                }\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\">\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Button\n                            type=\"link\"\n                            onClick={deletePerk}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerk\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const { perk, owner, account, setEditedPerk, setEditPerkOpen } = props\n\n    const buyPerk = () => {\n        const currency = account.wallet.find(item => item.user === owner._id)\n        if (currency && currency.amount >= perk.price) {\n            axios\n                .post('/api/shop/buy', {\n                    perkId: perk.perkId,\n                    ownerId: owner._id,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        props.setData({ ...props.data, ...res.data })\n                    }\n                })\n                .catch(err => {})\n        } else {\n            alert(\n                'You cannot buy this item as you do not have enough money from this user.'\n            )\n        }\n    }\n    console.log(owner)\n    console.log(account)\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/shop/' + owner._id + '/' + perk.perkId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                ...(owner._id === account._id && !props.onlyBuy\n                    ? [\n                          <Tooltip title=\"Edit\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() => {\n                                      setEditedPerk(perk.perkId)\n                                      setEditPerkOpen(true)\n                                  }}\n                              >\n                                  <EditFilled style={{ fontSize: '18px' }} />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n                props.mode === 'shop' && (\n                    <Tooltip title=\"Buy\">\n                        <span\n                            key=\"1\"\n                            onClick={() => {\n                                buyPerk()\n                            }}\n                        >\n                            <DollarCircleOutlined\n                                style={{ fontSize: '18px' }}\n                            />\n                        </span>\n                    </Tooltip>\n                ),\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { data, setData } = props\n    const { account } = data\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                account={account}\n                setEditPerkOpen={setEditPerkOpen}\n                setData={setData}\n                data={data}\n                perkId={editedPerk}\n                nickname={account && account._id}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <AddCard\n                onClick={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    )\n}\n\nexport default withRouter(WishlistAndPerks)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Perks from './Perks'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n        props.setTitle({ main: 'Shop', sub: '' })\n    }, [])\n\n    return data.account ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                {/* <Perks data={data} setData={setData} /> */}\n                <WishlistAndPerks\n                    data={data}\n                    setData={setData}\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet data={data} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions data={data} setData={setData} />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Tooltip from 'antd/es/tooltip'\nimport FrownOutlined from '@ant-design/icons/FrownOutlined'\nimport SmileOutlined from '@ant-design/icons/SmileOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\n\nconst getFriendActionButtons = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        callback,\n        accountId,\n    } = props\n\n    const acceptFriend = id => {\n        axios\n            .post('/api/friends/accept', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const addFriend = id => {\n        axios\n            .post('/api/friends/add', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const unfriend = id => {\n        axios\n            .post('/api/friends/unfriend', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    if (accountId.toString() === _id.toString()) return []\n\n    const { asIcons } = props\n    console.log(asIcons)\n    const ResultButtun = props =>\n        asIcons ? (\n            <Tooltip title={props.text}>\n                <span\n                    type=\"link\"\n                    key={props.key}\n                    onClick={props.onClick}\n                    style={{ fontSize: '18px' }}\n                >\n                    {props.icon}\n                </span>\n            </Tooltip>\n        ) : (\n            <Button {...props}>{props.text}</Button>\n        )\n\n    console.log(\n        invitingFriends.find(item => item.friend.toString() === _id.toString())\n            ? [\n                  <ResultButtun\n                      text=\"Accept\"\n                      key=\"0\"\n                      onClick={() => acceptFriend(_id)}\n                      icon={<SmileOutlined />}\n                  />,\n                  <ResultButtun\n                      text=\"Decline\"\n                      key=\"1\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                  />,\n              ]\n            : invitedFriends.find(\n                  item => item.friend.toString() === _id.toString()\n              )\n            ? [\n                  <ResultButtun\n                      text=\"Cancel invitation\"\n                      key=\"2\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                  />,\n              ]\n            : realFriends.find(\n                  item => item.friend.toString() === _id.toString()\n              )\n            ? [\n                  <ResultButtun\n                      key=\"3\"\n                      onClick={() => unfriend(_id)}\n                      icon={<FrownOutlined />}\n                      text=\"Unfriend\"\n                  />,\n              ]\n            : [\n                  <ResultButtun\n                      text=\"Become friends\"\n                      key=\"4\"\n                      onClick={() => addFriend(_id)}\n                      icon={<SmileOutlined />}\n                  />,\n              ]\n    )\n\n    return invitingFriends.find(\n        item => item.friend.toString() === _id.toString()\n    )\n        ? [\n              <ResultButtun\n                  text=\"Accept\"\n                  key=\"0\"\n                  onClick={() => acceptFriend(_id)}\n                  icon={<SmileOutlined />}\n                  type=\"primary\"\n              />,\n              <ResultButtun\n                  text=\"Decline\"\n                  key=\"1\"\n                  onClick={() => unfriend(_id)}\n                  icon={<DeleteOutlined />}\n                  danger={true}\n              />,\n          ]\n        : invitedFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <ResultButtun\n                  text=\"Cancel invitation\"\n                  key=\"2\"\n                  onClick={() => unfriend(_id)}\n                  icon={<DeleteOutlined />}\n                  danger={true}\n              />,\n          ]\n        : realFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <ResultButtun\n                  key=\"3\"\n                  onClick={() => unfriend(_id)}\n                  icon={<FrownOutlined />}\n                  text=\"Unfriend\"\n                  danger={true}\n              />,\n          ]\n        : [\n              <ResultButtun\n                  text=\"Become friends\"\n                  key=\"4\"\n                  onClick={() => addFriend(_id)}\n                  icon={<SmileOutlined />}\n                  type=\"primary\"\n              />,\n          ]\n}\n\nexport default getFriendActionButtons\n","import React from 'react'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport pullData from '../utils/pullData'\nimport Tooltip from 'antd/es/tooltip'\nimport EyeOutlined from '@ant-design/icons/EyeOutlined'\nimport getFriendActionButtons from './FriendActionButton'\nconst { Meta } = Card\n\nconst FriendCard = props => (\n    <Card\n        type=\"inner\"\n        style={{ width: 200, display: 'inline-block', margin: '4px 8px' }}\n        cover={\n            <span\n                style={{ padding: '25px', cursor: 'pointer' }}\n                onClick={() =>\n                    props.history.push('/profile/' + props.friend._id)\n                }\n            >\n                <Avatar\n                    src={\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                        props.friend._id +\n                        '/avatar'\n                    }\n                    size={150}\n                />\n            </span>\n        }\n        actions={[\n            <Tooltip title=\"See profile\">\n                <span\n                    type=\"link\"\n                    key=\"100\"\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                    style={{ fontSize: '18px' }}\n                >\n                    <EyeOutlined />\n                </span>\n            </Tooltip>,\n            ...getFriendActionButtons({\n                accountId: props.account ? props.account._id : '',\n                realFriends: props.realFriends,\n                invitedFriends: props.invitedFriends,\n                invitingFriends: props.invitingFriends,\n                _id: props.friend._id,\n                callback: () =>\n                    pullData(props, props.data, props.setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    }),\n                asIcons: true,\n            }),\n        ]}\n    >\n        <Meta\n            title={\n                <span\n                    style={{ cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    {props.friend.name}\n                </span>\n            }\n            description={\n                <span\n                    style={{ cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    {props.friend._id}\n                </span>\n            }\n        />\n    </Card>\n)\n\nexport default FriendCard\n","import React, { useState, useEffect } from 'react'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nconst { Meta } = Card\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!data) return null\n    const { account } = data\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    alert('Accounts with this nickname do not exist.')\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const addFriendModal = (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n\n    const pendingFriendsModal = (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n\n    return (\n        <>\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <Button\n                    style={{ margin: '30px 0px ' }}\n                    type=\"primary\"\n                    onClick={() => setPendingFriendsOpen(true)}\n                >\n                    Show pending friends\n                </Button>\n            )}\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n\n            {realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                    data={data}\n                    setData={setData}\n                />\n            ))}\n            {addFriendModal}\n            {pendingFriendsModal}\n        </>\n    )\n}\n\nexport default Friends\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Account = props => {\n    const [data, setData] = useState()\n    const [imageV, setImageV] = useState(Math.floor(Math.random() * 10000))\n    const [imageExists, setImageExists] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!imageExists && data)\n        checkImageExists(\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                data.account._id +\n                '/avatar',\n            setImageExists\n        )\n\n    const imageUrl =\n        imageExists &&\n        data &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' +\n            data.account._id +\n            '/avatar'\n    const loading = false\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {})\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return data ? (\n        <Card>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    console.log(file)\n                    uploadFile(file, 800, 'avatar', () => {\n                        setImageV(Math.floor(Math.random() * 10000))\n                    })\n                }}\n            >\n                {imageUrl ? (\n                    <img\n                        src={imageUrl + '?version=' + imageV}\n                        alt=\"avatar\"\n                        style={{ width: '100%' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: data.account.name,\n                    nickname: data.account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input\n                        disabled={true}\n                        placeholder=\"Must be more than 1 character long\"\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    ) : null\n}\n\nexport default withRouter(Account)\n","export default (image_url, callback) => {\n    var img = new Image()\n    img.src = image_url\n    img.onload = () => callback(true)\n    img.onerror = () => callback(false)\n}\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport { withRouter } from 'react-router-dom'\nimport FriendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getFriendActionButtons from '../../components/FriendActionButton'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (!data || !data.profile) return null\n\n    const { profile, account } = data\n    const imageUrl =\n        'https://websiter.s3.us-east-2.amazonaws.com/' + profile._id + '/avatar'\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    if (profile && props.setTitle) {\n        props.setTitle({ main: profile.name, sub: profile._id })\n    }\n    return data ? (\n        <>\n            <Avatar src={imageUrl} size={200} />\n            <h1>{profile.name}</h1>\n            <h2>{profile._id}</h2>\n\n            {getFriendActionButtons({\n                accountId: account ? account._id : '',\n                realFriends: realFriends,\n                invitedFriends: invitedFriends,\n                invitingFriends: invitingFriends,\n                _id: profile._id,\n                callback: () =>\n                    pullData(props, data, setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    }),\n            })}\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Progresses\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                            keepPageTitle={true}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                    mode=\"shop\"\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.nicknameNotUnique) {\n                    alert('THis nickname is taken. Try another one.')\n                }\n                props.history.push('/set-goals')\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default withRouter(ActivateAccount)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { perk, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n    if (perk && props.setTitle) {\n        props.setTitle({ main: perk.name, sub: profile._id })\n    }\n    return perk ? (\n        <Card>\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nexport default withRouter(Perk)\n","import React, { useEffect, useState } from 'react'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Modal from 'antd/es/modal'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { wishlistItem, profile } = data\n    if (wishlistItem && props.setTitle) {\n        props.setTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <>\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default WishlistItem\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <WishlistAndPerks data={data} setData={setData} mode=\"wishlist\" />\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n// import Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\n\nconst cookies = new Cookies()\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState()\n\n    const [title, setTitleSate] = useState({})\n\n    const setTitle = newTitle => {\n        if (newTitle && title) {\n            if (newTitle.main !== title.main || newTitle.sub !== title.sub) {\n                setTitleSate(newTitle)\n            }\n        }\n    }\n\n    useEffect(() => {\n        async function fetchMyAPI() {\n            sessionStorage.setItem('systemRefresh', '0')\n            const token = cookies.get('auth_token')\n            const rememberMe = cookies.get('rememberme')\n            if (rememberMe) {\n                cookies.remove('rememberme', {\n                    path: '/',\n                })\n                if (rememberMe === 'false') {\n                    cookies.remove('auth_token', {\n                        path: '/',\n                    })\n                }\n            }\n            const userId = jwt.decode(token)\n            axios.defaults.headers.post['Content-Type'] = 'application/json'\n            axios.defaults.headers.put['Content-Type'] = 'application/json'\n            axios.defaults.headers.delete['Content-Type'] = 'application/json'\n            axios.defaults.headers.common.Accept = 'application/json'\n            if (token && userId) {\n                axios.defaults.headers.common['x-auth-token'] = token\n                axios.defaults.headers.post['x-auth-token'] = token\n                axios.defaults.headers.get['x-auth-token'] = token\n                axios.defaults.headers.delete['x-auth-token'] = token\n                axios.defaults.headers.put['x-auth-token'] = token\n                setIsAuthenticated(userId._id)\n            } else {\n                setIsAuthenticated(false)\n            }\n        }\n        fetchMyAPI()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        cookies.remove('auth_token', {\n            path: '/',\n        })\n        delete axios.defaults.headers.common['x-auth-token']\n        delete axios.defaults.headers.post['x-auth-token']\n        delete axios.defaults.headers.get['x-auth-token']\n        delete axios.defaults.headers.delete['x-auth-token']\n        delete axios.defaults.headers.put['x-auth-token']\n        setIsAuthenticated(false)\n        return <Redirect to=\"/login\" />\n    }\n\n    const withProps = (Component, props) => matchProps => (\n        <Component {...props} {...matchProps} />\n    )\n\n    const routes = (\n        <AccountLayout isAuthenticated={isAuthenticated} title={title}>\n            <Switch>\n                <Route\n                    path=\"/goals\"\n                    exact\n                    component={withProps(Goals, { setTitle })}\n                />\n                <Route\n                    path=\"/goals\"\n                    component={withProps(Goal, { setTitle })}\n                />\n\n                <Route\n                    path=\"/progresses\"\n                    exact\n                    component={withProps(Progresses, { setTitle })}\n                />\n                <Route\n                    path=\"/progresses\"\n                    component={withProps(Progress, { setTitle })}\n                />\n\n                <Route\n                    path=\"/profile\"\n                    component={withProps(Profile, { setTitle })}\n                />\n\n                <Route path=\"/friends\" exact component={Friends} />\n\n                <Route\n                    path=\"/account\"\n                    exact\n                    component={withProps(Account, { setTitle })}\n                />\n                {/* <Route\n                    path=\"/dashboard\"\n                    exact\n                    component={withProps(Dashboard, { setTitle })}\n                /> */}\n\n                <Route\n                    path=\"/shop\"\n                    exact\n                    component={withProps(Shop, { setTitle })}\n                />\n                <Route path=\"/shop\" component={withProps(Perk, { setTitle })} />\n                <Route\n                    path=\"/wishlist\"\n                    exact\n                    component={withProps(Wishlist, { setTitle })}\n                />\n                <Route\n                    path=\"/wishlist\"\n                    component={withProps(WishlistItem, { setTitle })}\n                />\n                {!isAuthenticated && (\n                    <Route path=\"/login\" exact component={Auth} />\n                )}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={withProps(ActivateAccount, { setTitle })}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthenticated && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n\n                <Redirect to=\"/progresses\" />\n            </Switch>\n        </AccountLayout>\n    )\n\n    return typeof isAuthenticated === 'undefined' ? null : redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>{routes}</div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}