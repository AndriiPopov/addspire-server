{"version":3,"sources":["components/Welcome/Welcome.module.scss","components/Layout/LoginModal.module.css","components/Layout/Layout.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","containers/Auth/AuthTest.tsx","components/UI/TinyEditor.tsx","components/UI/ReadMore.tsx","components/UI/HorizontalScrollList.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","components/MasonryCard.tsx","components/UI/DialogFullscreen.tsx","utils/getAvatar.js","components/UserButton/UserButton.tsx","utils/pullData.js","components/Layout/LoginModal.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","components/Post/EditPost.tsx","components/Post/AddPost.tsx","components/Post/AddMessage.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/FollowButton.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/UI/ShareButton.tsx","components/Post/Post.tsx","components/Post/ResourcePosts.tsx","components/SimilarResources.tsx","components/ResourceHeader.tsx","components/ResourceCore.tsx","components/MapPosition/MapPosition.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","components/Welcome/index.tsx","containers/Blog/Blog.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","components/ProgressButton.tsx","containers/Explore/MapSettings.tsx","containers/Explore/Explore.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Blog/BlogArticle.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","Container","socialButtons","Background","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","Dots","Avatar","Cookies","TinyEditor","props","contentState","t","useTranslation","value","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","react_default","a","createElement","react_draft_wysiwyg","Object","assign","placeholder","readOnly","wrapperClassName","editorClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbar","inline","inDropdown","list","textAlign","link","history","toolbarHidden","options","ReadMore","_useState","useState","_useState2","slicedToArray","overflow","setOverflow","_useState3","_useState4","open","setOpen","descRef","useRef","useEffect","current","offsetHeight","initialHeight","content","contentEditor","children","style","maxHeight","position","paddingBottom","ref","dangerouslySetInnerHTML","__html","bottom","width","transition","opacity","backgroundImage","height","left","Button","color","onClick","addTitle","useStyles","makeStyles","theme","createStyles","title","fontSize","margin","textTransform","fontWeight","addBox","palette","primary","main","display","alignItems","HorizontalScrollList","classes","items","length","empty","customEmpty","withAdd","Fragment","Typography","className","gutterBottom","Paper","padding","Box","overflowX","Card","borderRadius","cursor","flexShrink","marginRight","minHeight","CardActionArea","justifyContent","onAdd","CardContent","flex","flexDirection","AddCircle","map","item","index","marginTop","bottomContent","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","data","logout","push","home","success","errorCode","message","warning","error","successCode","status","cookies","tryAuth","token","dispatch","sessionStorage","setItem","get","rememberMe","remove","path","userId","jwt_decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","id","type","setData","setPageTitle","setFriendSearchResult","getListOfNeededResources","store","requestedResources","user","account","progress","reward","activity","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","currentAccount","_i","_arr","concat","toConsumableArray","progresses","followProgresses","recent","filter","resourceType","_step","_iterator","getListOfNeededResources_createForOfIteratorHelper","followPosts","s","n","done","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_i5","_arr5","_step5","_iterator5","rewardId","_step6","_iterator6","_step7","_iterator7","_step8","_iterator8","_i6","_arr6","currentGoal","participants","owner","users","likes","_step9","_iterator9","_step10","_iterator10","posts","_i7","_arr7","oldRewards","_i8","_arr8","oldActivities","currentPosts","_step11","_iterator11","postEl","_step12","_iterator12","parent","parentType","parentId","currentReward","_i9","_arr9","_step13","_iterator13","currentActivity","_i10","_arr10","_step14","_iterator14","friendSearchResult","_step15","_iterator15","reduce","obj","attr","Array","from","Set","notNeededExist","notNeededResources","check1","key","mode","includes","check2","removeData","compareVersionsAndRerequest","versions","state","webSocket","checkData","requestResource","check","__v","getResourcesToMonitor","addData","listOfGroups","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","readyState","send","JSON","stringify","messageCode","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","set","expires","Date","getTime","text","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","ids","nextProps","newRequestedResources","_loop","setState","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","notRequestedIds","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followResource","resourceId","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","placeholderImages","getPH","matches","match","imagePH","parseInt","Math","abs","round","x","makeRand","images","picture","objectSpread","maxWidth","boxShadow","src","noLink","wordBreak","body","marginLeft","react_router_dom","to","onClickLink","TransitionComponent","Slide","direction","appBar","spacing","DialogFullscreen","Dialog","fullScreen","onClose","AppBar","Toolbar","IconButton","edge","aria-label","Close","variant","save","autoFocus","saveText","getAvatar","nickname","version","friendDataExp","getUserData","userName","name","typography","noWrap","userAvatar","ava","avatar","image","size","noClick","noName","badge","onlyName","stopPropagation","Group","noAva","span","es_button","pullData","callback","location","pathname","then","catch","cookieConsent","setCookieConsent","checkCookieConsent","remeberMeParam","basicURL","loginVisible","setLoginVisible","lineHeight","marginBottom","dist","window","FormControlLabel","control","Checkbox","checked","onChange","label","Divider","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","MenuItem","minimized","asText","preventDefault","wsActions","noFollow","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","root","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","target","search","SearchOutlined","components_FriendCard","language","languageText","breakpoints","up","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","onActivate","drawCircle","keepCurrentZoomLevel","setView","addTo","withLeaflet","withTranslation","uploadFile","file","filename","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","goalCategories","GoalCategories","category","Chip","nolim","pop","Select","divider","EditResource","leafletElement","ELG","useMapBounds","GestureHandling","resource","coordinates","setPosition","initialPosition","_useState5","descriptionText","_useState6","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","autoComplete","initialValues","repeat","days","nomap","labelCol","wrapperCol","onValuesChange","changedFields","allValues","setFieldsValue","sort","Item","valuePropName","UI_ImagePickerMulti","rules","getValueFromEvent","Input","fullWidth","EditResource_GoalCategories","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","Map","center","zoom","onclick","latlng","lat","lng","zIndex","gestureHandling","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","speedDial","right","login","border","blogLabel","blogIcon","lastNotifications","isConnectingWS","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","_useState7","_useState8","speedDialOpen","setSpeedDialOpen","openLink","isActivating","numberOfUnseenNots","Layout_createForOfIteratorHelper","not","notId","lastSeenNot","logedIn","scrollTrigger","useScrollTrigger","removeGutters","paths","checkPagePath","hide","cll","white","background","appear","in","elevation","LinearProgress","top","tabIndex","header","Link","visibility","components_LanguageSwitcher_LanguageSwitcher","Book","disableGutters","SpeedDial","ariaLabel","icon","SpeedDialIcon","reason","focus","onOpen","SpeedDialAction","Person","tooltipTitle","whiteSpace","tooltipOpen","Star","Launch","HomeRounded","Badge","badgeContent","Notifications","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","EditPost","setMessageText","handleSave","handleCancel","postOpen","setPostOpen","Post_EditPost","messageValue","onSend","&>div::after","&>div::before","& textarea","setImageLoading","replyToUser","isTop","TextField","multiline","replyToMessage","editedMessage","replyTo","editingMessage","spanStyle","showUploadList","ImageCarousel","carousel","dots","autoplay","backgroundSize","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","FollowButton","ConfirmAction","confirm","dayjs","format","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","_useState9","_useState10","setEditingMessage","_useState11","_useState12","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","date","fromNow","startMessage","messageType","anchorOrigin","vertical","horizontal","overlap","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","alertVisible","setAlertVisible","setFriends","basicProps","href","media","leaveDelay","startIcon","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","isPostPage","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","ThumbUpOutlined","AddCommentOutlined","UI_ShareButton","messages","Post_createForOfIteratorHelper","getNumberOfMessages","Post_AddPost","b","components_Post_Post","reverse","similarResources","setSimilarResources","similarIsRequested","setSimilarIsRequested","urlDir","categories","currentId","CardMedia","ResourceHeader","followersVisible","setFollowersVisible","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","toString","getDropDownMeuItems","progressId","progressName","ownProps","pathParts","ResourceCore_createForOfIteratorHelper","setResource","Helmet","components_ResourceHeader","components_SimilarResources","Post_ResourcePosts","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","setReward","components_ResourceCore","description","components_MapPosition_MapPosition","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","isOwner","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","activityId","EditProgressReward","initialValue","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","customTheme","purple","MuiListItem","secondaryAction","paddingRight","paddingLeft","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","day","year","dayOfYear","startOf","endOf","week","month","now","diff","stageId","getNowStageId","ThemeProvider","tabs","defaultActiveKey","findIndex","stage","stageDate","getStatus","dismissed","failBy","approvedBy","getStatusText","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","setProgress","components_Activities_Activities","components_Rewards_Rewards","setActivity","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","frameBorder","allowFullScreen","allow","flexGrow","setPosts","setTitle","all","setAll","method","query","json","components_Welcome","Grid","container","xs","md","xl","subtitle","published_at","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","dataProp","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","radius","setRadius","changed","setChanged","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","withMap","Slider","valueLabelDisplay","whenReady","CircleMarker","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","loadedProgresses","recentProgresses","Explore_MapSettings","Tabs","indicatorColor","textColor","Tab","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","sectionTitle","increaseAvatarV","currentTab","setCurrentTab","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","startProgressVisible","setStartProgressVisible","profileId","Profile_createForOfIteratorHelper","sub","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","profileName","components_Transactions_Transactions","newValue","scrollButtons","components_ProgressButton","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","console","p","v","stageName","itemName","price","buyer","as","getStageName","addedAccounts","ac","droppedAccounts","for","action","rewardName","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","_newOldPosts","resultPosts","neededPosts","nots","Dashboard_DashboardEvents","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","ReactHtmlParser","data-href","data-numposts","data-width","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","react_router","routes","exact","Explore","DashboardPosts","Goal","Reward","Activity","Profile","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","MM","y","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.5b46402e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    if (typeof props.value === 'string') {\n        const blocksFromHtml = htmlToDraft(props.value)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = props.value\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <Editor\n            placeholder={t('g.addSomeText')}\n            readOnly={props.readOnly}\n            // toolbarClassName=\"demo-toolbar-absolute\"\n            wrapperClassName=\"demo-wrapper\"\n            {...(!props.readOnly\n                ? { editorClassName: 'demo-editor' }\n                : { contentState: contentState })}\n            defaultContentState={contentState}\n            onContentStateChange={value => {\n                props.onEditorChange && props.onEditorChange(value)\n                props.onEditorChangePlain &&\n                    props.onEditorChangePlain(\n                        convertFromRaw(value).getPlainText(' ')\n                    )\n            }}\n            toolbar={{\n                inline: { inDropdown: true },\n                list: { inDropdown: true },\n                textAlign: { inDropdown: true },\n                link: { inDropdown: true },\n                history: { inDropdown: true },\n            }}\n            toolbarHidden={props.readOnly}\n            options={\n                !props.readOnly && [\n                    'inline',\n                    'blockType',\n                    'fontSize',\n                    'fontFamily',\n                    'list',\n                    'textAlign',\n                    'colorPicker',\n                    'link',\n                    'emoji',\n                    'remove',\n                    'history',\n                ]\n            }\n        />\n    )\n}\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentGoal\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                const reward = data.find(\n                    item => item._id === state.currentReward\n                )\n                if (reward) {\n                    dispatch(setData({ reward }))\n                }\n                break\n            case 'activity':\n                const activity = data.find(\n                    item => item._id === state.currentActivity\n                )\n                if (activity) {\n                    dispatch(setData({ activity }))\n                }\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent.filter(\n                            item => item.resourceType === 'goal'\n                        ),\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent.filter(\n                            item => item.resourceType === 'reward'\n                        ),\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent.filter(\n                            item => item.resourceType === 'activity'\n                        ),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check1('reward', 'reward')\n    check1('activity', 'activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n    check('reward')\n    check('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText)\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'reward':\n                check('reward')\n                break\n            case 'activity':\n                check('activity')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import { Box } from '@material-ui/core'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: '15px',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return props.noLink ? (\n        <>\n            {picture}\n            <div\n                style={{\n                    padding: '5px 0px',\n                    wordBreak: 'break-word',\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <Box style={{ flex: 1 }}>{props.body}</Box>\n                {props.actions && (\n                    <div style={{ marginLeft: '10px' }}>{props.actions}</div>\n                )}\n            </div>\n        </>\n    ) : (\n        <>\n            <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n                {picture}\n            </Link>\n            <div\n                style={{\n                    padding: '5px 0px',\n                    wordBreak: 'break-word',\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <Link\n                    to={props.onClickLink}\n                    style={{ cursor: 'pointer', flex: 1 }}\n                >\n                    {props.body}\n                </Link>\n                {props.actions && (\n                    <div style={{ marginLeft: '10px' }}>{props.actions}</div>\n                )}\n            </div>\n        </>\n    )\n})\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.close}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {props.title}\n                    </Typography>\n                    {props.save && (\n                        <Button autoFocus color=\"inherit\" onClick={props.save}>\n                            {props.saveText || t('g.save')}\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n            {props.children}\n        </Dialog>\n    )\n}\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n            onActivate: () => {}, // callback before engine starts retrieving locations\n            drawCircle: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n        })\n        lc.addTo(map)\n\n        lc.start()\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const { resource, account, type } = props\n\n    const defPos = [40.689078, -74.044526]\n    const [position, setPosition] = useState(\n        resource && resource.position && resource.position.coordinates\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label={t('g.images')}\n                    valuePropName=\"images\"\n                    trigger=\"onValueChange\"\n                >\n                    <ImagePickerMulti />\n                </Form.Item>\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item\n                    label={t('g.desc')}\n                    name=\"description\"\n                    // rules={descriptionRules}\n                    trigger=\"onEditorChange\"\n                >\n                    <TinyEditor\n                        onEditorChangePlain={value =>\n                            setDescriptionPlain(value)\n                        }\n                    />\n                </Form.Item>\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <Select\n                                            mode=\"tags\"\n                                            getPopupContainer={trigger =>\n                                                trigger.parentNode\n                                            }\n                                        >\n                                            <Option value=\"0\">\n                                                {t('g.sunday')}\n                                            </Option>\n                                            <Option value=\"1\">\n                                                {t('g.monday')}\n                                            </Option>\n                                            <Option value=\"2\">\n                                                {t('g.tuesday')}\n                                            </Option>\n                                            <Option value=\"3\">\n                                                {t('g.wednesday')}\n                                            </Option>\n                                            <Option value=\"4\">\n                                                {t('g.thursday')}\n                                            </Option>\n                                            <Option value=\"5\">\n                                                {t('g.friday')}\n                                            </Option>\n                                            <Option value=\"6\">\n                                                {t('g.saturday')}\n                                            </Option>\n                                        </Select>\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                        </Map>\n                    </div>\n                </Form.Item>\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (accountId, value, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n","import React, { useState, useRef } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport * as cll from './Layout.module.css'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    GifTwoTone,\n    HomeRounded,\n    Launch,\n    Notifications,\n    Person,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n    const [speedDialOpen, setSpeedDialOpen] = useState(false)\n\n    const openLink = url => props.history.push(url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n\n    const classes = useStyles()\n    const scrollTrigger = !useScrollTrigger()\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                    <AppBar elevation={1} color=\"secondary\">\n                        {props.isConnectingWS && !logedIn && (\n                            <LinearProgress\n                                style={{\n                                    width: '100%',\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                }}\n                            />\n                        )}\n\n                        <Toolbar>\n                            <div\n                                tabIndex={0}\n                                ref={domRef}\n                                style={{ width: 0, height: 0 }}\n                            />\n                            {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                            {(account._id && props.header) || (\n                                <Box style={{ display: 'flex', flex: 1 }}>\n                                    <Box style={{ display: 'flex', flex: 1 }}>\n                                        <Button component={Link} to={'/'}>\n                                            <img\n                                                style={{\n                                                    height: '100%',\n                                                    position: 'absolute',\n                                                    left: 0,\n                                                }}\n                                                src=\"/android-icon-36x36.png\"\n                                            />\n                                            <img\n                                                style={{\n                                                    height: '18px',\n                                                    visibility: 'hidden',\n                                                }}\n                                                src=\"/android-icon-36x36.png\"\n                                            />\n                                            <Typography\n                                                variant=\"button\"\n                                                className={classes.blogLabel}\n                                            >\n                                                Addspire\n                                            </Typography>\n                                        </Button>\n                                    </Box>\n                                    <Box style={{ display: 'flex' }}>\n                                        <LanguageSwitcher />\n\n                                        <Button\n                                            component={Link}\n                                            to={`/${\n                                                language !== 'en'\n                                                    ? language + '/'\n                                                    : ''\n                                            }blog`}\n                                            style={{ marginRight: '20px' }}\n                                        >\n                                            <Book\n                                                className={classes.blogIcon}\n                                            />\n                                            <span className={classes.blogLabel}>\n                                                {t('layout.blog')}\n                                            </span>\n                                        </Button>\n\n                                        {(logedIn && isActivating) ||\n                                        (!logedIn && props.isConnectingWS) ? (\n                                            <Button\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/logout'\n                                                    )\n                                                }\n                                            >\n                                                {t('g.logout')}\n                                            </Button>\n                                        ) : (\n                                            !account._id && (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    // startIcon={<Person />}\n                                                    onClick={() =>\n                                                        setLoginVisible(true)\n                                                    }\n                                                >\n                                                    {t('layout.login')}\n                                                </Button>\n                                            )\n                                        )}\n                                    </Box>\n                                </Box>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                </Slide>\n                <Toolbar id=\"back-to-top-anchor\" />\n                <Container\n                    style={{ paddingTop: '20px', paddingBottom: '20px' }}\n                    disableGutters={Boolean(removeGutters)}\n                >\n                    {props.children}\n                </Container>\n\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n\n                {logedIn && !isActivating && (\n                    <SpeedDial\n                        ariaLabel=\"SpeedDial\"\n                        className={classes.speedDial}\n                        icon={<SpeedDialIcon />}\n                        onClose={(event, reason) => {\n                            if (reason !== 'mouseLeave') {\n                                domRef.current.focus()\n                                setSpeedDialOpen(false)\n                            }\n                        }}\n                        onOpen={(event, reason) =>\n                            reason === 'toggle' && setSpeedDialOpen(true)\n                        }\n                        open={speedDialOpen}\n                    >\n                        <SpeedDialAction\n                            icon={<Person />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addFriend')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setAddFriendOpen(true)\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                        <SpeedDialAction\n                            icon={<Star />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addGoal')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('goal')\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                        <SpeedDialAction\n                            icon={<Launch />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addActivity')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('activity')\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                        <SpeedDialAction\n                            icon={<Star />}\n                            tooltipTitle={\n                                <span\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                >\n                                    {t('g.addReward')}\n                                </span>\n                            }\n                            tooltipOpen\n                            onClick={() => {\n                                domRef.current.focus()\n                                setStartResourceVisible('reward')\n                                setSpeedDialOpen(false)\n                            }}\n                        />\n                    </SpeedDial>\n                )}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n\n                <Slide appear={false} direction=\"up\" in={!useScrollTrigger()}>\n                    <Box\n                        style={{\n                            position: 'fixed',\n                            bottom: '12px',\n                            width: '100%',\n                        }}\n                    >\n                        {logedIn && !isActivating && (\n                            <Box\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                }}\n                            >\n                                <Paper\n                                    elevation={3}\n                                    style={{ borderRadius: '37px' }}\n                                >\n                                    <IconButton\n                                        onClick={() => openLink('/')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <HomeRounded fontSize=\"large\" />\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/posts')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/posts'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={numberOfUnseenNots}\n                                            color=\"secondary\"\n                                        >\n                                            <Notifications fontSize=\"large\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() =>\n                                            openLink('/profile/' + account._id)\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={\n                                                account.friends.filter(\n                                                    item =>\n                                                        item.status ===\n                                                        'inviting'\n                                                ).length\n                                            }\n                                            color=\"secondary\"\n                                        >\n                                            <Avatar\n                                                classes={\n                                                    props.history.location\n                                                        .pathname ===\n                                                    '/profile/' + account._id\n                                                        ? {\n                                                              root:\n                                                                  classes.avatar,\n                                                          }\n                                                        : {}\n                                                }\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                </Paper>\n                            </Box>\n                        )}\n                    </Box>\n                </Slide>\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        language: state.language,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo.jpg',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)}>\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            <Button\n                                color=\"primary\"\n                                style={{ marginTop: '10px' }}\n                                onClick={() =>\n                                    friends.length > 0 &&\n                                    wsActions.shareWithFriends(\n                                        account._id,\n                                        basicProps.url,\n                                        friends,\n                                        props.item\n                                    )\n                                }\n                            >\n                                {t('g.send')}\n                            </Button>\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{ border: 'none', background: 'none' }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span>\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {account._id && (\n                <AddPost\n                    parent={resource._id}\n                    account={account}\n                    parentType={type}\n                    // onSend={() => setEditingMessage('')}\n                />\n            )}\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from './UI/HorizontalScrollList'\nimport { useTranslation } from 'react-i18next'\nimport {\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from './MasonryCard'\n\nconst SimilarResources = props => {\n    const { t } = useTranslation()\n    const { resource, type } = props\n    const [similarResources, setSimilarResources] = useState([])\n    const [similarIsRequested, setSimilarIsRequested] = useState(false)\n    const title =\n        type === 'goal'\n            ? t('g.similarGoals')\n            : type === 'reward'\n            ? t('g.similarRewards')\n            : t('g.similarActivities')\n    const urlDir =\n        type === 'goal' ? 'goals' : type === 'reward' ? 'rewards' : 'activitie'\n    useEffect(() => {\n        if (resource && resource._id && !similarIsRequested) {\n            setSimilarIsRequested(true)\n            axios\n                .post('/api/similar', {\n                    search: {\n                        categories: resource.category || [],\n                        position: resource.position,\n                        currentId: resource._id,\n                        type: type,\n                    },\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setSimilarResources(res.data.resources)\n                    }\n                })\n                .catch(err => {})\n        }\n    }, [resource && resource._id])\n    return similarResources.length > 0 ? (\n        <HorizontalScrollList\n            title={title}\n            items={similarResources}\n            content={item => (\n                <CardActionArea>\n                    <Link to={'/' + urlDir + '/' + item._id}>\n                        <CardMedia\n                            style={{\n                                height: '150px',\n                                backgroundSize: 'contain',\n                            }}\n                            image={\n                                item.images.length > 0\n                                    ? item.images[0]\n                                    : placeholderImages[getPH(item._id)]\n                            }\n                            title={item.name}\n                        />\n                        <CardContent style={{ padding: '5px' }}>\n                            <Typography variant=\"body2\" noWrap>\n                                {item.name}\n                            </Typography>\n                        </CardContent>\n                    </Link>\n                </CardActionArea>\n            )}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(SimilarResources))\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Menu,\n    MenuItem,\n    Paper,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n    return (\n        <>\n            <Paper style={{ padding: '15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                    </Box>\n                </div>\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const activityData = {}\n                if (data.activityData)\n                    for (let activity of data.activityData)\n                        activityData[activity._id] = activity\n                const rewardData = {}\n                if (data.rewardData)\n                    for (let reward of data.rewardData)\n                        rewardData[reward._id] = reward\n                const post = {}\n                if (data.posts)\n                    for (let item of data.posts) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    post,\n                    account: {},\n                    activityData,\n                    rewardData,\n                    onlineUsers: data.onlineUsers,\n                    [type === 'goal' ? 'progress' : type]: data.resource,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, posts: props.posts, account: {} }\n    useEffect(() => {\n        props.setResource(resource)\n    }, [resource])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {resource.name}\n                </Typography>\n            }\n        >\n            <div className=\"contentDiv\">\n                <Helmet>\n                    <title>\n                        {`${resource.name} ${t('g.by')}${\n                            resource.owner\n                        } - Addspire`}\n                    </title>\n                    <meta\n                        name=\"description\"\n                        content={resource.descriptionText}\n                    />\n                </Helmet>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                />\n                {/* <Activity\n                    state={state}\n                    setState={setState}\n                    resource={resource}\n                    account={account}\n                    friendData={friendData}\n                /> */}\n                {props.children}\n\n                <SimilarResources resource={resource} type={type} />\n\n                <ResourcePosts\n                    resource={resource}\n                    posts={posts}\n                    friendData={friendData}\n                    type={type}\n                />\n            </div>\n        </Layout>\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource: state[ownProps.type === 'goal' ? 'progress' : ownProps.type],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                height: '300px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport { makeStyles, Paper, Typography } from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Reward = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n\n    return (\n        <ResourceCore type=\"reward\" setResource={setReward}>\n            {reward && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={reward.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={reward.position} />\n                    </Paper>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link\n                                        to={\n                                            (wish\n                                                ? '/wishlist/'\n                                                : '/rewards/') + item._id\n                                        }\n                                    >\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward rewardId={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? 'For these activities:' : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                Go to reward item\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Button\n                                            onClick={() =>\n                                                wsActions.sendReward(\n                                                    account._id,\n                                                    progress._id,\n                                                    selectedReward\n                                                )\n                                            }\n                                            color=\"primary\"\n                                        >\n                                            Send reward manually\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            Edit reward\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            Remove reward\n                                        </Button>\n                                    </>\n                                )}\n\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                                {' details'}\n                            </Typography>\n                            <UserButton id={rewardObj.owner} />\n                            <span>\n                                {t(\n                                    'g.' +\n                                        (rewardObj.repeat === 'manual'\n                                            ? 'manual'\n                                            : rewardObj.repeat === 'once'\n                                            ? 'once'\n                                            : rewardObj.repeat === 'time'\n                                            ? 'everyTime'\n                                            : '')\n                                )}\n                                {t('reward.forActivities')}\n                                {rewardObj.activities.map(activity => {\n                                    if (activityData[activity]) {\n                                        return (\n                                            <Link\n                                                to={\n                                                    '/activities/' +\n                                                    activityData[activity]._id\n                                                }\n                                            >\n                                                {activityData[activity].name}\n                                            </Link>\n                                        )\n                                    }\n                                    return ''\n                                })}\n                            </span>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const { activityData, account, progress, activities } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/activities/' + selectedActivity\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                Go to activity\n                            </Button>\n                            {progress && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    Remove activity\n                                </Button>\n                            )}\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                                {' tracking'}\n                            </Typography>\n                            <ActivityTable activityId={selectedActivity} />\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport { makeStyles, Paper, Typography } from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Goal = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    return (\n        <ResourceCore type=\"goal\" setResource={setProgress}>\n            {progress && progress._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={progress.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={progress.position} />\n                    </Paper>\n                    <Activities progress={progress} />\n                    <Rewards progress={progress} />\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport { Divider, makeStyles, Paper, Typography } from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Activity = () => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore type=\"activity\" setResource={setActivity}>\n            {activity && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.tracking')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ActivityTable activityId={activity._id} />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        {activity.repeat !== 'no' && (\n                            <>\n                                <p>\n                                    <RetweetOutlined />\n                                    {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                </p>\n                                <Divider\n                                    light\n                                    variant=\"middle\"\n                                    style={{ marginBottom: '15px' }}\n                                />\n                            </>\n                        )}\n\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={activity.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={activity.position} />\n                    </Paper>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\nimport { accountNameRules } from '../../constants/fieldRules'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n            {!props.account._id && (\n                <>\n                    <Box\n                        style={{\n                            margin: '40px auto 10px',\n                            textAlign: 'center',\n                        }}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={() => setLoginVisible(true)}\n                        >\n                            {t('welcome.button')}\n                        </Button>\n                    </Box>\n                    <LoginModal\n                        loginVisible={loginVisible}\n                        setLoginVisible={setLoginVisible}\n                    />\n                </>\n            )}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                <Welcome />\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const { mapVisible, setMapVisible, onSearch, setSearch, search } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={500}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => {\n                        getRadius()\n                    }}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={11}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const { account, progressData } = props\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    let loadedProgresses = []\n    if (account._id && account.recentProgresses) {\n        loadedProgresses = account.recentProgresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                />\n                <Welcome />\n                <HorizontalScrollList\n                    title={t('explore.recentViewedGoals')}\n                    items={loadedProgresses}\n                    content={item => (\n                        <CardActionArea>\n                            <Link to={'/goals/' + item._id}>\n                                <CardMedia\n                                    style={{\n                                        height: '150px',\n                                        backgroundSize: 'contain',\n                                    }}\n                                    image={\n                                        item.images.length > 0\n                                            ? item.images[0]\n                                            : placeholderImages[getPH(item._id)]\n                                    }\n                                    title={item.name}\n                                />\n                                <CardContent style={{ padding: '5px' }}>\n                                    <Typography variant=\"body2\" noWrap>\n                                        {item.name}\n                                    </Typography>\n                                </CardContent>\n                            </Link>\n                        </CardActionArea>\n                    )}\n                />\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('explore.topGoalsTitle')}\n                </Typography>\n\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => (\n                                <MasonryCard\n                                    id={item._id}\n                                    key={index}\n                                    onClickLink={'/' + urlDir + '/' + item._id}\n                                    images={item.images}\n                                    body={\n                                        <>\n                                            {/* <UserButton\n                                                noName={true}\n                                                id={item.owner}\n                                                friendDataExp={friendData}\n                                            /> */}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {item.name}\n                                            </span>\n                                        </>\n                                    }\n                                    actions={\n                                        <ShareButton\n                                            link={\n                                                'https://addspire.com/' +\n                                                urlDir +\n                                                '/' +\n                                                item._id\n                                            }\n                                            title={\n                                                item.name +\n                                                t('explore.shareText')\n                                            }\n                                            media={\n                                                item.images && item.images[0]\n                                            }\n                                            item={{\n                                                progressId: item._id,\n                                                progressName: item.name,\n                                            }}\n                                        />\n                                    }\n                                />\n                            ))}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const { transactionData, rewardData, account, transactions, owner } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <Link to={'/rewards/' + rewardObj._id}>\n                                    {rewardObj.name || 'Selected activity'}\n                                </Link>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    const progressData = {}\n                    if (data.progressData)\n                        for (let progress of data.progressData)\n                            progressData[progress._id] = progress\n\n                    const activityData = {}\n                    if (data.activityData)\n                        for (let activity of data.activityData)\n                            activityData[activity._id] = activity\n                    const rewardData = {}\n                    if (data.rewardData)\n                        for (let reward of data.rewardData)\n                            rewardData[reward._id] = reward\n                    const post = {}\n                    if (data.posts)\n                        for (let item of data.posts) post[item._id] = item\n\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        post,\n                        account: {},\n                        progressData,\n                        activityData,\n                        rewardData,\n                        onlineUsers: data.onlineUsers,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classesM.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {profile.name}\n                    </Typography>\n                }\n            >\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea>\n                            <Link to={'/goals/' + item._id}>\n                                <CardMedia\n                                    style={{\n                                        height: '150px',\n                                        backgroundSize: 'contain',\n                                    }}\n                                    image={\n                                        item.images.length > 0\n                                            ? item.images[0]\n                                            : placeholderImages[getPH(item._id)]\n                                    }\n                                    title={item.name}\n                                />\n                                <CardContent style={{ padding: '5px' }}>\n                                    <Typography\n                                        variant=\"body2\"\n                                        noWrap\n                                        align=\"center\"\n                                    >\n                                        {item.name}\n                                    </Typography>\n                                </CardContent>\n                            </Link>\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities activities={profile.activities} isOwner />\n                <ProfileRewards owner={profile} />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner\n                    owner={profile}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)}>\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                Account activation\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLenght')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                v = parseInt(v.notId)\n                return p > v ? p : v\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                <Welcome />\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM Do[,] YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography variant=\"body1\" className=\"blogArticle\">\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Goal from './containers/Goal/Goal'\nimport Reward from './containers/Reward/Reward'\nimport Activity from './containers/Activity/Activity'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={Explore} />\n            {isAuthed !== null && (\n                <Route path=\"/posts\" exact component={DashboardPosts} />\n            )}\n\n            <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'progress',\n                'reward',\n                'activity',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\n\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <ThemeProvider theme={outerTheme}>\n                <App />\n            </ThemeProvider>\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}