{"version":3,"sources":["containers/Auth/Auth.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Layout/Layout.module.css","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/LoginModal.tsx","utils/processRes.js","store/actions/auth.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","store/actions/saveResources.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/wishlistAndPerks.tsx","websocketActions/friends.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","components/UserButton/UserButton.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/UI/MoreIcon.js","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","components/Layout/Layout.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/MasonryCard.tsx","components/FollowButton.tsx","containers/Progress/Activity.tsx","components/Post/AddMessage.tsx","components/Post/Message.tsx","components/Post/Post.tsx","components/Post/AddPost.tsx","utils/pullData.js","containers/Progress/Progress.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Dashboard/DashboardEvents.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/Explore.tsx","components/AddCard/AddCard.tsx","containers/Progresses/Progresses.tsx","containers/Dashboard/Dashboard.tsx","websocketActions/dashboard.tsx","containers/Blog/Blog.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","containers/Shop/Wallet.tsx","containers/Shop/PerkCard.tsx","components/ProgressButton.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Wishlist/Wishlist.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Shop/Transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Dashboard/NotificationsTracker.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Background","Dots","Avatar","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","cookies","Cookies","withRouter","connect","state","lastUrl","props","_useState","useState","_useState2","Object","slicedToArray","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","get","basicURL","react_default","a","createElement","className","classes","dist","onClick","window","location","concat","es_checkbox","checked","onChange","modal","title","visible","onOk","set","path","maxAge","onCancel","open","destroyOnClose","maskClosable","getAvatar","nickname","version","loginVisible","setLoginVisible","footer","width","style","maxWidth","fontWeight","lineHeight","marginBottom","fontSize","s","typography","Link","processRes","res","data","logout","history","push","success","errorCode","message","warning","error","successCode","status","tryAuth","forceLogin","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","saveLastUrl","pathname","pathParts","split","length","includes","url","type","id","setData","setPageTitle","setFriendSearchResult","requestResource","ids","notRequestedIds","filter","webSocket","readyState","send","JSON","stringify","messageCode","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","attr","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","removedFields","Symbol","iterator","next","done","field","value","indexOf","err","return","getListOfNeededResources","store","requestedResources","user","account","progress","progressData","friendData","postData","transactionData","neededResources","isAuthed","currentAccount","_i","_arr","toConsumableArray","progresses","followProgresses","followPosts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","myPosts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","transactions","transaction","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","friends","friend","_i2","_arr2","followingAccounts","followAccounts","item","currentProfile","profile","_i3","_arr3","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_i4","_arr4","currentProgress","participants","owner","worker","experts","supporters","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","posts","currentPosts","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","postEl","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","users","parent","parentType","parentId","reduce","obj","Array","from","Set","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","checkData","__v","check","getResourcesToMonitor","resources","addData","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","Component","pulledFrom","actions","getState","myAccount","find","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followProgress","progressId","unfollowProgress","followAccount","accountFollow","unfollowAccount","buyPerk","buyer","seller","perkId","unfriend","friendId","uploadFile","file","size","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","resizeImageToSpecificSize","height","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","console","log","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","friendSearchResult","friendDataExp","getUserData","userName","name","userAvatar","avatar","image","noClick","margin","onlyName","e","stopPropagation","Group","map","Fragment","noAva","noName","span","react_router_dom","objectSpread","cursor","to","es_button","padding","EditGoalAndProgressForm_connectionsSelect","onSelect","es_select","placeholder","getPopupContainer","trigger","parentNode","Option","components_UserButton_UserButton","MoreIcon","viewBox","transform","display","d","_React$createElement","previewImage","setPreviewImage","previewReward","setPreviewReward","_useState5","_useState6","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","RewardButton","simple","money","itemName","rewards","onlyButton","index","es_form","Item","label","rewardKey","for","marginLeft","dropdown","overlay","es_menu","rewardId","confirm","setRewards","indexIn","paddingLeft","color","PlusOutlined_default","closable","reward","rewardToSave","newRewards","connectionsSelect","divider","rules","input","TextArea","input_number","upload","listType","fileList","itemImages","uid","onPreview","_ref2","customRequest","_ref3","_ref4","itemDescription","_ref5","alt","card","hoverable","cover","backgroundImage","backgroundSize","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","whiteSpace","Select","EditGoalAndProgressForm","goal","images","setImages","_Form$useForm","Form","useForm","form","connections","goalId","assign","onFinish","autoComplete","initialValues","repeat","days","labelCol","wrapperCol","onValuesChange","changedFields","allValues","setFieldsValue","sort","valuePropName","getValueFromEvent","isArray","autoSize","minRows","maxRows","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","components_Rewards_Rewards","textAlign","marginTop","cancel","htmlType","borderRadius","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","wsActions","setStartProgressVisible","body","removeAttribute","pageTitle","lastNotifications","isConnectingWS","lastScrollY","setLastScrollY","headerVisible","setHeaderVisible","_useState9","_useState10","startProgressVisible","_useState11","_useState12","pageAddress","setPageAddress","handleScroll","currentScrollY","scrollY","removeEventListener","addEventListener","scrollTo","top","left","behavior","selectedKey","buttonProps","checkHighligh","ghost","openLink","isActivating","numberOfUnseenNots","not","parseInt","notId","lastSeenNot","logedIn","editGoal","Modal","Progresses_AddProgress","join","icon","shape","LogoutOutlined_default","border","marginRight","spin","indicator","LoadingOutlined_default","children","badge","count","HomeFilled_default","TeamOutlined_default","Layout_LoginModal","back_top","backgroundColor","UpOutlined_default","moment","format","ActivityTable","isOwner","lastStages","stages","slice","Math","b","aS","aF","bS","bF","old","day","year","dayOfYear","startOf","endOf","week","month","now","abs","diff","nowStageId","stageId","tabs","defaultActiveKey","findIndex","toString","stage","stageDate","getStatus","dismissed","failBy","approvedBy","getTag","es_tag","expert","tabTitle","myStatus","stageStatus","TabPane","tab","textTransform","es_radio","CheckableTag","paid","EditProgress","editProgressOpen","ImageCarousel","carousel","dots","backgroundPosition","backgroundRepeat","Card","wordBreak","float","noLink","onClickLink","FollowButton","danger","Descriptions","followersVisible","setFollowersVisible","Helmet","content","description","UI_ImageCarousel_ImageCarousel","PushpinFilled_default","add","likes","LikeFilled_default","LikeOutlined_default","Paragraph","ellipsis","rows","expandable","symbol","getDay","Progress_ActivityTable","Progress_EditProgress","MasonryCard","components_FollowButton","imageLoading","setImageLoading","replyToUser","setMessageText","background","replyTo","bottom","comment","uploadImage","messageValue","replyToMessage","editedMessage","editingMessage","onSend","SendOutlined_default","showUploadList","PictureFilled_default","CloseCircleFilled_default","Message","replies","isStart","replyVisible","setReplyVisible","setReplyToUser","setEditingMessage","showReplies","setShowReplies","commentProps","timeago_react","datetime","date","live","tooltip","author","messageType","details","itemId","startMessage","Post_AddMessage","isTop","reply","postOpen","setPostOpen","noStartMessage","Post_Message","position","justifyContent","CommentOutlined_default","messages","getNumberOfMessages","zIndex","pullData","options","main","sub","Progress_Activity","Post_AddPost","paddingTop","components_Post_Post","statePosts","setPosts","Date","getTime","startTime","sortPosts","aN","notifications","bN","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","_loop2","_newOldPosts","resultPosts","neededPosts","isEqual","nots","getRewardText","stageName","price","as","getStageName","progressName","addedAccounts","ac","droppedAccounts","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","isSearching","setIsSearching","foundProgresses","setFoundProgresses","setProgresses","noMore","setNoMore","noMorePopular","setNoMorePopular","searchValue","setSearchValue","onSearch","noNoMore","skip","newFriendData","Search","enterButton","allowClear","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","AddCard","action","forceAuth","loadedProgresses","components_AddCard_AddCard","tabBarStyle","activeTab","last","containers_Explore_Explore","containers_Progresses_Progresses","Dashboard_DashboardPosts","offset","Dashboard_DashboardEvents","setTitle","replace","dangerouslySetInnerHTML","__html","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","menu","domEvent","additionalButtons","button","noFollow","Button","preventDefault","asText","DownOutlined_default","friendActions","friendActionButton","asIcons","pulledProfile","wallet","amount","perk","setEditedPerk","setEditPerkOpen","onlyBuy","handleClick","AddPerkForm","deletePerk","popconfirm","onConfirm","okText","cancelText","setPerk","wishlist","goals","perks","Shop_AddPerkForm","processedValue","WishlistAndPerks","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","Shop_WishlistAndPerks","searchResult","addFriendOpen","setAddFriendOpen","search","components_FriendCard","fullFriend","confirmedFriends","empty","imageStyle","PendingFriends","Friends_AddFriends","tableData","sorted","types","collapse","expandIconPosition","destroyInactivePanel","accordion","Panel","header","alignItems","layout","tag","toUpperCase","cancelTransaction","record","confirmTransaction","increaseAvatarV","followingVisible","setFollowingVisible","deleteVisible","setDeleteVisible","deleteField","setDeleteField","profileId","Title","level","editable","EditOutlined_default","containers_Friends_Friends","oneFriendData","Shop_Transactions","Shop_Wallet","containers_Wishlist_Wishlist","components_ProgressButton","accountNotActive","setAccountActivated","page_header","backIcon","nicknameNotUnique","items","Perk_Item","wishlistItem","sortNotifiacations","filterSameNot","arr","myNotifications","redirectTo","Logout","react_router","routes","exact","component","Dashboard","Progress","Profile","Perk","WishlistItem","Blog","ActivateAccount","process","Auth","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","reducer","createReducer","SET_DATA","REMOVE_DATA","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SAVE_LAST_URL","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","__webpack_require__","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","src_App","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a96331b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\",\"Background\":\"Auth_Background__39m_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__2JZGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__11bEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Footer\":\"Layout_Footer__1Dfqu\",\"HideHeader\":\"Layout_HideHeader__2WRsh\",\"FooterButton\":\"Layout_FooterButton__1lZv2\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\",\"PageTitle\":\"Layout_PageTitle__368dw\"};","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from './Auth.module.css'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.lastUrl) {\n        redirectParam = '&redirect=' + props.lastUrl\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return !cookieConsent ? (\n        <Modal\n            title=\"Cookies consent\"\n            visible={!cookieConsent}\n            onOk={agreeWithCookies}\n            onCancel={() => {\n                window.open('https://websiter.dev', '_self')\n            }}\n            destroyOnClose={true}\n            maskClosable={false}\n        >\n            <p>We use cookies only for login purposes. </p>\n            <p>\n                In order to proceed you need to agree with the use of cookies.\n            </p>\n        </Modal>\n    ) : (\n        <div className=\"contentDiv\">\n            <div className={classes.Container}>\n                <h1>Welcome to Addspire!</h1>\n                <h2>This is where great progresses live.</h2>\n                <h1>Continue with:</h1>\n                <div className={classes.socialButtons}>\n                    <FacebookLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `facebook/start${remeberMeParam}`)\n                        }\n                    />\n                    <GoogleLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `google/start${remeberMeParam}`)\n                        }\n                    />\n                    <GithubLoginButton\n                        onClick={() =>\n                            (window.location =\n                                basicURL + `github/start${remeberMeParam}`)\n                        }\n                    />\n                </div>\n                <Checkbox checked={state} onChange={() => setState(!state)}>\n                    Remember me\n                </Checkbox>\n            </div>\n            <div className={classes.Background} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lastUrl: state.lastUrl,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Auth))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from '../../containers/Auth/Auth.module.css'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\nimport Typography from 'antd/es/typography'\n\nconst cookies = new Cookies()\n\nconst LoginModal = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.lastUrl) {\n        redirectParam = '&redirect=' + props.lastUrl\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <Modal\n            visible={props.loginVisible}\n            onOk={() => {}}\n            onCancel={() => props.setLoginVisible(false)}\n            destroyOnClose={true}\n            maskClosable={false}\n            footer={[]}\n            width=\"100%\"\n            style={{ maxWidth: '600px' }}\n        >\n            {!cookieConsent ? (\n                <Modal\n                    title=\"Cookies consent\"\n                    visible={!cookieConsent}\n                    onOk={agreeWithCookies}\n                    onCancel={() => {\n                        window.open('https://addspire.com', '_self')\n                    }}\n                    destroyOnClose={true}\n                    maskClosable={false}\n                    width=\"100%\"\n                    style={{ maxWidth: '600px' }}\n                >\n                    <p style={{ marginBottom: '0.3em' }}>\n                        We use cookies only for login purposes.{' '}\n                    </p>\n                    <p>\n                        In order to proceed you need to agree with the use of\n                        cookies.\n                    </p>\n                </Modal>\n            ) : (\n                <div className=\"contentDiv\">\n                    <div className={classes.Container}>\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            Welcome to Addspire!\n                        </h1>\n                        <h3>This is where great inspiration lives.</h3>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                s\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <Checkbox\n                            checked={state}\n                            onChange={() => setState(!state)}\n                        >\n                            <Typography.Link style={{ fontSize: '17px' }}>\n                                Remember me\n                            </Typography.Link>\n                        </Checkbox>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lastUrl: state.lastUrl,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(LoginModal))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        dispatch(saveLastUrl(props.history.location.pathname))\n        const pathParts = props.history.location.pathname.split('/')\n        if (\n            pathParts.length === 2 &&\n            !['explore', 'login', 'logintest'].includes(pathParts[1])\n        )\n            props.history.push('/logout')\n\n        if (forceLogin) props.history.push('/logout')\n    }\n}\n\nconst saveLastUrl = url => ({\n    type: 'SAVE_LAST_URL',\n    url,\n})\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n                    participants = [\n                        ...participants,\n                        ...(store.progress.experts || []),\n                        ...(store.progress.supporters || []),\n                    ]\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/inspirations')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.props.setConnectingToWS(true)\n    }\n    componentWillReceiveProps(nextProps) {\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\nexport const unfollowProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL('image/jpeg', 0.6)\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => (getUserData(id) ? getUserData(id).name : id)\n    const userAvatar = id =>\n        getUserData(id) ? (\n            <span key={id}>\n                <Avatar\n                    src={getAvatar(id, getUserData(id).image)}\n                    size={props.size || (props.noClick ? 20 : 40)}\n                    style={props.group ? {} : { margin: ' 0 5px' }}\n                />\n            </span>\n        ) : null\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{ cursor: 'pointer', fontWeight: 'bold', ...props.style }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onChange={onSelect}\n        getPopupContainer={trigger => trigger.parentNode}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(\n            item =>\n                item &&\n                item._id && (\n                    <Select.Option key={item._id}>\n                        <UserButton id={item._id} noClick={true} />\n                    </Select.Option>\n                )\n        )}\n    </Select>\n)\n","import React from 'react'\n\nexport default props => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        width=\"18\"\n        height=\"18\"\n        style={{ transform: 'rotate(90deg)', display: 'block' }}\n    >\n        <path d=\"M2 10h4v4H2v-4zm8 4h4v-4h-4v4zm8-4v4h4v-4h-4z\" />\n    </svg>\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport UserButton from '../UserButton/UserButton'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Card from 'antd/es/card'\nimport MoreIcon from '../UI/MoreIcon'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n\n    const RewardButton = props => (\n        <Button type=\"link\" onClick={() => setPreviewReward(props.item)}>\n            {props.item.mode === 'simple'\n                ? props.item.simple\n                : props.item.mode === 'money'\n                ? props.item.money + ' (money)'\n                : props.item.mode === 'item'\n                ? props.item.itemName\n                : ''}\n        </Button>\n    )\n\n    return props.rewards ? (\n        <div>\n            {props.onlyButton ? (\n                props.rewards.map((item, index) => (\n                    <RewardButton item={item} key={index} />\n                ))\n            ) : (\n                <Form.Item label={props.label} key={props.rewardKey}>\n                    {props.rewards.length > 0 && (\n                        <ol>\n                            {props.rewards.map((item, index) => {\n                                return (\n                                    <li key={index}>\n                                        <RewardButton item={item} />\n                                        <UserButton\n                                            id={item.owner}\n                                            noName={true}\n                                        />{' '}\n                                        in\n                                        {item.for && item.for.length > 0 ? (\n                                            <UserButton\n                                                id={item.for}\n                                                noName={true}\n                                            />\n                                        ) : (\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                    marginLeft: '5px',\n                                                }}\n                                            >\n                                                All\n                                            </span>\n                                        )}\n                                        {item.owner === account._id &&\n                                            !readOnly && (\n                                                <>\n                                                    <Dropdown\n                                                        overlay={\n                                                            <Menu>\n                                                                <Menu.Item\n                                                                    onClick={() => {\n                                                                        setEditedRewardIndex(\n                                                                            index\n                                                                        )\n                                                                        setEditedReward(\n                                                                            item\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    Edit\n                                                                </Menu.Item>\n\n                                                                <Menu.Item\n                                                                    onClick={() => {\n                                                                        if (\n                                                                            !window.confirm(\n                                                                                'Are you sure you want to delete this item?'\n                                                                            )\n                                                                        )\n                                                                            return\n                                                                        if (\n                                                                            props.setRewards\n                                                                        ) {\n                                                                            props.setRewards(\n                                                                                props.rewards.filter(\n                                                                                    (\n                                                                                        item,\n                                                                                        indexIn\n                                                                                    ) =>\n                                                                                        indexIn !==\n                                                                                        index\n                                                                                )\n                                                                            )\n                                                                        } else {\n                                                                            wsActions.deleteReward(\n                                                                                account._id,\n                                                                                progress._id,\n                                                                                item.rewardId\n                                                                            )\n                                                                        }\n                                                                    }}\n                                                                >\n                                                                    Delete\n                                                                </Menu.Item>\n                                                            </Menu>\n                                                        }\n                                                    >\n                                                        <Button type=\"link\">\n                                                            <MoreIcon />\n                                                        </Button>\n                                                    </Dropdown>\n                                                </>\n                                            )}\n                                    </li>\n                                )\n                            })}\n                        </ol>\n                    )}\n\n                    {!readOnly && (\n                        <Button\n                            type=\"link\"\n                            style={{ paddingLeft: 0, color: '#1890ff' }}\n                            onClick={() => {\n                                setEditedRewardIndex('new')\n                                setEditedReward({ mode: 'simple' })\n                            }}\n                        >\n                            <PlusOutlined />\n                            Add rewards\n                        </Button>\n                    )}\n                </Form.Item>\n            )}\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                destroyOnClose={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        let newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards = [...newRewards, rewardToSave]\n                        else\n                            newRewards = newRewards.map((item, index) => {\n                                if (index === editedRewardIndex)\n                                    return rewardToSave\n                                else return item\n                            })\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    }\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }}\n                                style={{ width: '100%' }}\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                {/* <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option> */}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Reward for\">\n                            {connectionsSelect(\n                                account,\n                                friendData,\n                                editedReward.for,\n                                value => {\n                                    setEditedReward({\n                                        ...editedReward,\n                                        for: value,\n                                    })\n                                }\n                            )}\n                            <p>(leave blank for all)</p>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item\n                                label=\"Description\"\n                                rules={[\n                                    ...descriptionRules,\n                                    {\n                                        required: true,\n                                        min: 1,\n                                        whitespace: true,\n                                        message:\n                                            'Desription is too short. Minimal length is 1.',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\" rules={priceRules}>\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }}\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((url, index) => ({\n                                            url,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) => {\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList.map(\n                                                    image => image.url\n                                                ),\n                                            })\n                                        }}\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            url,\n                                                        ],\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                </Form.Item>\n                                <Form.Item label=\"Name\" rules={nameRules}>\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={descriptionRules}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n                destroyOnClose={true}\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Descriptions.Item label=\"Description\">\n                                    <p style={{ whiteSpace: 'pre-wrap' }}>\n                                        {previewReward.itemDescription}\n                                    </p>\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Descriptions.Item label=\"Description\">\n                                    <p style={{ whiteSpace: 'pre-wrap' }}>\n                                        {previewReward.simple}\n                                    </p>\n                                </Descriptions.Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Descriptions.Item label=\"Money\">\n                                    {previewReward.money}\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (value, accountId, progressId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                progressId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n\nexport const changeLikesProgress = (accountId, progressId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesProgress',\n                accountId,\n                progressId,\n                add,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\nimport Select from 'antd/es/select'\n\nconst { Option } = Select\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n\n    const [previewImage, setPreviewImage] = useState('')\n\n    const [rewards, setRewards] = useState((goal && goal.rewards) || [])\n\n    const onFinish = value => {\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            rewards,\n        })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    const connections = connectionsSelect(account, friendData)\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New achievement',\n                        repeat: 'no',\n                        days: ['0'],\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) =>\n                    allValues.days &&\n                    form.setFieldsValue({ days: allValues.days.sort() })\n                }\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connections}\n                </Form.Item>\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connections}\n                </Form.Item>\n                <Form.Item label=\"Repeat\" name=\"repeat\">\n                    <Select>\n                        <Option value=\"no\">No repeat</Option>\n                        <Option value=\"day\">Every day</Option>\n                        <Option value=\"weekday\">Every day of week</Option>\n                        <Option value=\"week\">Every week</Option>\n                        <Option value=\"month\">Every month</Option>\n                        <Option value=\"year\">Every year</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    noStyle\n                    shouldUpdate={(prevValues, currentValues) =>\n                        prevValues.repeat !== currentValues.repeat\n                    }\n                >\n                    {({ getFieldValue }) => {\n                        return getFieldValue('repeat') === 'weekday' ? (\n                            <Form.Item label=\"Days of week\" name=\"days\">\n                                <Select mode=\"tags\">\n                                    <Option value=\"0\">Sunday</Option>\n                                    <Option value=\"1\">Monday</Option>\n                                    <Option value=\"2\">Tuesday</Option>\n                                    <Option value=\"3\">Wednesday</Option>\n                                    <Option value=\"4\">Thursday</Option>\n                                    <Option value=\"5\">Friday</Option>\n                                    <Option value=\"6\">Saturday</Option>\n                                </Select>\n                            </Form.Item>\n                        ) : null\n                    }}\n                </Form.Item>\n                <Rewards\n                    label=\"Rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button\n                        type=\"text\"\n                        size=\"large\"\n                        onClick={() => props.cancel(false)}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{\n                            borderRadius: '6px',\n                            padding: '0px 25px',\n                            marginLeft: '10px',\n                        }}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value)\n                props.setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            account={props.account}\n            friendData={props.friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n\nexport default AddProgress\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport Badge from 'antd/es/badge'\nimport * as classes from './Layout.module.css'\nimport CoffeeOutlined from '@ant-design/icons/CoffeeOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport ShopFilled from '@ant-design/icons/ShopFilled'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport SettingFilled from '@ant-design/icons/SettingFilled'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport Spin from 'antd/es/spin'\nimport BackTop from 'antd/es/back-top'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport UpOutlined from '@ant-design/icons/UpOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from '../../containers/Progresses/AddProgress'\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const [headerVisible, setHeaderVisible] = useState(true)\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [pageAddress, setPageAddress] = useState(\n        props.history.location.pathname\n    )\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY\n            if (window.scrollY < 100) setHeaderVisible(true)\n            else {\n                if (currentScrollY > lastScrollY) {\n                    setHeaderVisible(false)\n                } else {\n                    setHeaderVisible(true)\n                }\n            }\n            setLastScrollY(currentScrollY)\n        }\n        window.removeEventListener('scroll', handleScroll)\n        window.addEventListener('scroll', handleScroll)\n        if (pageAddress !== props.history.location.pathname) {\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            })\n            setPageAddress(props.history.location.pathname)\n        }\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [lastScrollY, props.history.location.pathname])\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url\n            ? {\n                  type: 'link',\n                  ghost: true,\n                  style: { color: '#1890ff' },\n              }\n            : { type: 'text' }\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n    const editGoal = (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => setStartProgressVisible(false)}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <div className={classes.Layout}>\n                <header\n                    className={\n                        headerVisible\n                            ? classes.Header\n                            : [classes.Header, classes.HideHeader].join(' ')\n                    }\n                >\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Link to=\"/\">\n                                <img\n                                    style={{ height: '30px' }}\n                                    src=\"/logo.jpg\"\n                                />\n                            </Link>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {(logedIn || !props.isConnectingWS) && (\n                                <div className={classes.PageTitle}>\n                                    {isActivating ? (\n                                        'Activate your account'\n                                    ) : (\n                                        <>\n                                            <Button\n                                                type=\"default\"\n                                                icon={<PlusOutlined />}\n                                                shape=\"round\"\n                                                onClick={() => {\n                                                    account._id\n                                                        ? setStartProgressVisible(\n                                                              true\n                                                          )\n                                                        : setLoginVisible(true)\n                                                }}\n                                            >\n                                                Add inspiration\n                                            </Button>\n                                            {editGoal}\n                                        </>\n                                    )}\n                                </div>\n                            )}\n                            {logedIn ? (\n                                !isActivating ? (\n                                    <span\n                                        onClick={() => openLink('account')}\n                                        style={{\n                                            margin: '0px 10px',\n                                            cursor: 'pointer',\n                                        }}\n                                    >\n                                        <Avatar\n                                            style={{\n                                                border: '1px solid white',\n                                            }}\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                        />\n                                    </span>\n                                ) : (\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                )\n                            ) : props.isConnectingWS ? (\n                                <>\n                                    <span style={{ marginRight: '30px' }}>\n                                        <Spin\n                                            indicator={\n                                                <LoadingOutlined\n                                                    style={{\n                                                        color: 'white',\n                                                        marginRight: '10px',\n                                                    }}\n                                                />\n                                            }\n                                        />{' '}\n                                        Trying to login\n                                    </span>\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </>\n                            ) : (\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => setLoginVisible(true)}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            )}\n                        </div>\n                    </div>\n                </header>\n                <main className={classes.Main}>{props.children}</main>\n                {!isActivating && logedIn && (\n                    <footer className={classes.Footer}>\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh()}\n                            onClick={() => openLink('')}\n                        >\n                            <Badge count={numberOfUnseenNots}>\n                                <HomeFilled />{' '}\n                                <div className={classes.FooterButton}>\n                                    Highlights\n                                </div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('account')}\n                            onClick={() => openLink('account')}\n                        >\n                            <Badge\n                                count={\n                                    account.friends.filter(\n                                        item => item.status === 'inviting'\n                                    ).length\n                                }\n                            >\n                                <TeamOutlined />\n                                <div className={classes.FooterButton}>\n                                    Account\n                                </div>\n                            </Badge>\n                        </Button>\n                    </footer>\n                )}\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            <BackTop>\n                <div\n                    style={{\n                        height: 40,\n                        width: 40,\n                        lineHeight: '40px',\n                        borderRadius: '100%',\n                        backgroundColor: '#1088e9',\n                        color: '#fff',\n                        textAlign: 'center',\n                        fontSize: 14,\n                    }}\n                >\n                    <UpOutlined />\n                </div>\n            </BackTop>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import React from 'react'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\nimport Tabs from 'antd/es/tabs'\nimport Tag from 'antd/es/tag'\nimport Radio from 'antd/es/radio'\nimport Badge from 'antd/es/badge'\nimport moment from 'moment'\n\nmoment().format()\n\nconst ActivityTable = props => {\n    const { progress, account } = props\n    const { goal } = progress\n\n    const isOwner = account && account._id === progress.owner\n\n    let lastStages = progress.stages\n        .slice(Math.max(progress.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = moment()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = moment()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = moment()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = moment()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = moment()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    const nowStageId = lastStages.length > 0 ? lastStages[0].stageId : 0\n\n    lastStages = progress.stages\n\n    return lastStages.length === 0 ? null : (\n        <div\n            style={{\n                border: '1px solid #eee',\n                padding: '10px 5px',\n            }}\n        >\n            <Tabs\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? lastStages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // className={classes.fff}\n            >\n                {lastStages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getTag = id => {\n                        const status = getStatus(id)\n                        let text = 'In process',\n                            color = '#108ee9'\n                        switch (status) {\n                            case 'fail':\n                                text = 'Failed'\n                                color = '#f50'\n                                break\n                            case 'complete':\n                                text = 'Complete'\n                                color = '#87d068'\n                                break\n                            case 'dismissed':\n                                text = 'Dismissed'\n                                color = '#ffa500'\n                                break\n                            default:\n                                break\n                        }\n\n                        return <Tag color={color}>{text}</Tag>\n                    }\n\n                    const experts = goal.experts.map(expert => (\n                        <Descriptions.Item\n                            key={expert}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={expert}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (expert)'}\n                                </>\n                            }\n                        >\n                            {getTag(expert)}\n                        </Descriptions.Item>\n                    ))\n\n                    const users = goal.users.map(user => (\n                        <Descriptions.Item\n                            key={user}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={user}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (achiever)'}\n                                </>\n                            }\n                        >\n                            {getTag(user)}\n                        </Descriptions.Item>\n                    ))\n\n                    const owner = [\n                        <Descriptions.Item\n                            key={progress.owner}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={progress.owner}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (owner)'}\n                                </>\n                            }\n                        >\n                            {getTag(progress.owner)}\n                        </Descriptions.Item>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('dddd')}</div>\n                                <div>{stageDate.format('D MMM YY')}</div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('wo')} week</div>\n                                <div>\n                                    {stageDate\n                                        .startOf('week')\n                                        .format('D MMM YY')}\n                                </div>\n                                <div>\n                                    {stageDate.endOf('week').format('D MMM YY')}\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('MMMM')}</div>\n                                <div>{stageDate.format('YYYY')}</div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = moment().year(stage.year)\n\n                        tabTitle = <div>{stageDate.format('YYYY')}</div>\n                    }\n\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(progress.owner)\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'rgba(0,0,0,0)'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            {account && account._id && (\n                                <>\n                                    Set status:\n                                    <Radio.Group\n                                        value={myStatus}\n                                        style={{ padding: '20px 0px ' }}\n                                        onChange={value =>\n                                            wsActions.changeStage(\n                                                value.target.value,\n                                                account._id,\n                                                progress._id,\n                                                stage.stageId\n                                            )\n                                        }\n                                    >\n                                        <Radio value=\"process\">\n                                            <Tag.CheckableTag\n                                                color={\n                                                    myStatus !== 'process'\n                                                        ? 'processing'\n                                                        : '#108ee9'\n                                                }\n                                            >\n                                                In process\n                                            </Tag.CheckableTag>\n                                        </Radio>\n                                        <Radio value=\"complete\">\n                                            <Tag\n                                                color={\n                                                    myStatus !== 'complete'\n                                                        ? 'green'\n                                                        : '#87d068'\n                                                }\n                                            >\n                                                Complete\n                                            </Tag>\n                                        </Radio>\n                                        <Radio value=\"fail\">\n                                            <Tag\n                                                color={\n                                                    myStatus !== 'fail'\n                                                        ? 'volcano'\n                                                        : '#f50'\n                                                }\n                                            >\n                                                Fail\n                                            </Tag>\n                                        </Radio>\n                                        {isOwner && (\n                                            <Radio value=\"dismissed\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'dismissed'\n                                                            ? 'orange'\n                                                            : '#ffa500'\n                                                    }\n                                                >\n                                                    Dismiss\n                                                </Tag>\n                                            </Radio>\n                                        )}\n                                    </Radio.Group>\n                                </>\n                            )}\n\n                            <Descriptions\n                                size=\"small\"\n                                bordered\n                                column={{\n                                    xxl: 4,\n                                    xl: 3,\n                                    lg: 3,\n                                    md: 3,\n                                    sm: 2,\n                                    xs: 1,\n                                }}\n                            >\n                                {owner}\n                                {users}\n                                {experts}\n                            </Descriptions>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    <Divider style={{ fontSize: '15px' }}>\n                                        Paid rewards\n                                    </Divider>\n\n                                    <Rewards\n                                        rewardKey={1}\n                                        rewards={stage.paid}\n                                        readOnly={true}\n                                    />\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </div>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState, friendData } = props\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n        document.body.removeAttribute('style')\n    }\n\n    return progress.goal ? (\n        <EditGoalAndProgressForm\n            goal={progress.goal}\n            onFinish={onFinish}\n            account={account}\n            friendData={friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto' }}\n                dots={{ className: classes.Dots }}\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        backgroundRepeat: 'no-repeat',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport default withRouter(props => {\n    const Card = (\n        <>\n            {props.images && props.images.length > 0 && (\n                <img\n                    style={{\n                        maxWidth: '100%',\n                        margin: 'auto',\n                        display: 'block',\n                        borderRadius: '15px',\n                    }}\n                    src={props.images.length > 0 ? props.images[0] : ''}\n                />\n            )}\n            <div style={{ padding: '5px 0px', wordBreak: 'break-word' }}>\n                {props.actions && (\n                    <div style={{ float: 'right' }}>{props.actions}</div>\n                )}\n                <span style={{ float: 'none' }}>{props.body}</span>\n            </div>\n        </>\n    )\n    return props.noLink ? (\n        Card\n    ) : (\n        <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n            {Card}\n        </Link>\n    )\n})\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport * as wsActions from '../websocketActions'\n\nconst FollowButton = props => {\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type === 'progress') {\n            return account.followProgresses.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowProgress(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followProgress(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowAccount(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followAccount(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\n\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\n\nimport Typography from 'antd/es/typography'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nimport Tag from 'antd/es/tag'\nimport Rewards from '../../components/Rewards/Rewards'\nimport MasonryCard from '../../components/MasonryCard'\nimport FollowButton from '../../components/FollowButton'\nimport Helmet from 'react-helmet'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport PushpinFilled from '@ant-design/icons/PushpinFilled'\n\nconst Activity = props => {\n    const { account, progress, state, setState, friendData } = props\n    const { goal } = progress\n    const [followersVisible, setFollowersVisible] = useState(false)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return 'Sunday'\n            case '1':\n                return 'Monday'\n            case '2':\n                return 'Tuesday'\n            case '3':\n                return 'Wednesday'\n            case '4':\n                return 'Thursday'\n            case '5':\n                return 'Friday'\n            case '6':\n                return 'Saturday'\n\n            default:\n                return ''\n        }\n    }\n    return goal ? (\n        <>\n            <Helmet>\n                <title>\n                    {goal.name} by {progress.owner} at Addspire\n                </title>\n                <meta name=\"description\" content={goal.description} />\n            </Helmet>\n            {goal.images.length > 0 && <ImageCarousel images={goal.images} />}\n            <div style={{ textAlign: 'center' }}>\n                <h1>{goal.name}</h1>\n                <Button type=\"text\" onClick={() => setFollowersVisible(true)}>\n                    <PushpinFilled style={{ fontSize: '20px' }} />\n                    {progress.followingAccounts.length} Followers\n                </Button>\n                <Button\n                    type=\"text\"\n                    onClick={() =>\n                        wsActions.changeLikesProgress(\n                            account._id,\n                            progress._id,\n                            !progress.likes.includes(account._id)\n                        )\n                    }\n                >\n                    {progress.likes.includes(account._id) ? (\n                        <LikeFilled style={{ fontSize: '20px' }} />\n                    ) : (\n                        <LikeOutlined style={{ fontSize: '20px' }} />\n                    )}\n                    Likes\n                    <span style={{ paddingLeft: '8px' }}>\n                        {progress.likes.length}\n                    </span>\n                </Button>\n\n                <div style={{ marginTop: '10px' }}>\n                    {account &&\n                    account._id &&\n                    account.followProgresses.includes(progress._id) ? (\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                wsActions.unfollowProgress(\n                                    account._id,\n                                    progress._id\n                                )\n                            }\n                        >\n                            Following\n                        </Button>\n                    ) : (\n                        <Button\n                            type=\"primary\"\n                            onClick={() =>\n                                wsActions.followProgress(\n                                    account._id,\n                                    progress._id\n                                )\n                            }\n                        >\n                            Follow\n                        </Button>\n                    )}\n                </div>\n                {account._id === progress.owner && (\n                    <Button\n                        style={{ marginTop: '10px' }}\n                        type=\"primary\"\n                        onClick={() => {\n                            setState({ ...state, editProgressOpen: true })\n                        }}\n                    >\n                        Edit progress\n                    </Button>\n                )}\n            </div>\n            <Typography.Paragraph\n                ellipsis={{\n                    rows: 3,\n                    expandable: true,\n                    symbol: 'more',\n                }}\n                style={{ whiteSpace: 'pre-wrap', marginTop: '30px' }}\n            >\n                {goal.description}\n            </Typography.Paragraph>\n\n            <Descriptions\n                size=\"small\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Repeat\">{goal.repeat || ''}</Item>\n                {goal.repeat === 'weekday' && (\n                    <Item label=\"Days\">\n                        {goal.days.map((day, index) => (\n                            <Tag key={index}>{getDay(day)}</Tag>\n                        ))}\n                    </Item>\n                )}\n                <Item label=\"Rewards\">\n                    <Rewards rewards={goal.rewards} />\n                </Item>\n            </Descriptions>\n            <div style={{ margin: '50px 0px' }}>\n                <ActivityTable\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </div>\n\n            {account.progresses &&\n                account.progresses.includes(progress._id.toString()) && (\n                    <Button\n                        danger={true}\n                        onClick={() => {\n                            wsActions.leaveProgress(props)\n                        }}\n                        style={{ marginBottom: '50px' }}\n                    >\n                        Leave the progress\n                    </Button>\n                )}\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"100%\"\n                style={{ maxWidth: '1000px' }}\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                    friendData={friendData}\n                    cancel={() =>\n                        setState({ ...state, editProgressOpen: false })\n                    }\n                />\n            </Modal>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => setFollowersVisible(false)}\n            >\n                {progress.followingAccounts.map(item => (\n                    <MasonryCard\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport message from 'antd/es/message'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddMessage = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          //   position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules} style={{ margin: 0 }}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                                placeholder=\"Write a comment\"\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item style={{ margin: 0 }}>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        images,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {props.cancel && (\n                                <Button\n                                    onClick={props.cancel}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport AddMessage from './AddMessage'\nimport Button from 'antd/es/button'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\n\nconst Message = props => {\n    const {\n        account,\n        message,\n        friendData,\n        progressData,\n        post,\n        replies,\n        isStart,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const commentProps = {\n        actions: !props.isStart && [\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>,\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            message.author !== account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        if (props.setReplyVisible) {\n                            props.setReplyVisible(true)\n                            props.setReplyToUser(props.message.author)\n                        } else {\n                            setReplyVisible(true)\n                            setReplyToUser('')\n                        }\n                        setShowReplies(true)\n                    }}\n                >\n                    Reply\n                </span>\n            ),\n            message.author === account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => setEditingMessage(message.messageId)}\n                >\n                    Edit\n                </span>\n            ),\n        ],\n        avatar: <UserButton noName={true} id={message.author} span={true} />,\n        content: isStart ? (\n            <>\n                {message.messageType === 'wishlist' && (\n                    <>\n                        {' '}\n                        <span\n                            style={{\n                                fontWeight: 'bold',\n                                cursor: 'pointer',\n                                margin: '10px 0px 0px ',\n                            }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${message.details.owner}/${\n                                        message.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {message.details.name}\n                        </span>\n                    </>\n                )}\n                {message.text && <p>{message.text}</p>}\n            </>\n        ) : (\n            <>\n                <div\n                    style={{\n                        background: '#eee',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        display:\n                            message.image && message.image.length > 0\n                                ? 'block'\n                                : 'inline-block',\n                    }}\n                >\n                    <UserButton\n                        id={message.author}\n                        span={true}\n                        noAva={true}\n                        style={{ fontWeight: 'bold' }}\n                    />\n\n                    {message.image && message.image.length > 0 && (\n                        <ImageCarousel\n                            images={message.image}\n                            height=\"60vmin\"\n                            type=\"contain\"\n                        />\n                    )}\n\n                    {message.text && <p>{message.text}</p>}\n                </div>\n                <div />\n            </>\n        ),\n        author: isStart && (\n            <span\n                style={{ color: '#333', fontWeight: 'bold', fontSize: '14px' }}\n            >\n                <UserButton id={message.author} span={true} noAva={true} />{' '}\n                <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/inspirations/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )}\n                {post.startMessage &&\n                    ['wishlist', 'perk', 'goal'].includes(\n                        post.startMessage.messageType\n                    ) && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + message.author)\n                            }\n                        >\n                            {post.startMessage.messageType === 'wishlist'\n                                ? 'Wishlist'\n                                : post.startMessage.messageType === 'goals'\n                                ? 'Goals'\n                                : 'Shop'}\n                        </span>\n                    )}\n            </span>\n        ),\n        datetime: isStart && (\n            <span style={{ color: '#333' }}>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Comment {...commentProps}>\n                {props.isTop && replies && replies.length > 0 ? (\n                    showReplies ? (\n                        replies.map((reply, index) => (\n                            <Message\n                                key={index}\n                                message={reply}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                setReplyVisible={setReplyVisible}\n                                setReplyToUser={setReplyToUser}\n                            />\n                        ))\n                    ) : (\n                        <Button\n                            type=\"text\"\n                            onClick={() => setShowReplies(true)}\n                        >\n                            Show {replies.length} replies\n                        </Button>\n                    )\n                ) : null}\n\n                {props.isTop && replyVisible ? (\n                    <AddMessage\n                        post={post}\n                        account={account}\n                        replyTo={message.messageId}\n                        replyToUser={replyToUser}\n                        cancel={() => setReplyVisible(false)}\n                    />\n                ) : null}\n            </Comment>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                images={message.image}\n                onSend={() => setEditingMessage('')}\n                cancel={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport CommentOutlined from '@ant-design/icons/CommentOutlined'\nimport AddMessage from './AddMessage'\nimport Divider from 'antd/es/divider'\nimport Button from 'antd/es/button'\n\nconst Post = props => {\n    const { post, account, friendData, progressData } = props\n    const [postOpen, setPostOpen] = useState(props.showReplies)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <>\n                    <Message\n                        message={post.startMessage}\n                        post={post}\n                        account={account}\n                        friendData={friendData}\n                        progressData={progressData}\n                        replies={[]}\n                        isStart={true}\n                    />\n                    {post.startMessage.image &&\n                        post.startMessage.image.length > 0 && (\n                            <img\n                                style={{\n                                    maxWidth: '100%',\n                                    margin: 'auto',\n                                    display: 'block',\n                                }}\n                                src={post.startMessage.image[0]}\n                            />\n                        )}\n                </>\n            )}\n            <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    // marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div\n                    style={{ display: 'flex', justifyContent: 'space-around' }}\n                >\n                    <span key=\"comment-basic-like\">\n                        <Button\n                            type=\"text\"\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    post.startMessage.likes.includes(\n                                        account._id\n                                    )\n                                        ? 'dislikeMessage'\n                                        : 'likeMessage',\n                                    post.startMessage.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        >\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled style={{ fontSize: '20px' }} />\n                            ) : (\n                                <LikeOutlined style={{ fontSize: '20px' }} />\n                            )}\n                            Likes\n                            <span style={{ paddingLeft: '8px' }}>\n                                {post.startMessage.likes.length}\n                            </span>\n                        </Button>\n                    </span>\n                    <span>\n                        <Button onClick={() => setPostOpen(true)} type=\"text\">\n                            <CommentOutlined style={{ fontSize: '20px' }} />\n                            Comment\n                            <span style={{ paddingLeft: '8px' }}>\n                                {getNumberOfMessages(post.messages)}\n                            </span>\n                        </Button>\n                    </span>\n                </div>\n                <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n                {postOpen && (\n                    <>\n                        <AddMessage post={post} account={account} />\n                        {post.messages && post.messages.length\n                            ? post.messages.map((message, index) => (\n                                  <Message\n                                      key={index}\n                                      message={message}\n                                      post={post}\n                                      account={account}\n                                      friendData={friendData}\n                                      replies={message.replies}\n                                      isTop={true}\n                                  />\n                              ))\n                            : null}\n                    </>\n                )}\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddPost = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState([])\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <h2>Posts and comments:</h2>\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText,\n                                        images\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {messageText || images.length ? (\n                                <Button\n                                    onClick={() => {\n                                        setMessageText('')\n                                        setImages([])\n                                    }}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            ) : null}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Activity from './Activity'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport pullData from '../../utils/pullData'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const progressId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!progressId) return null\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({ currentProgress: progressId })\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const post = {}\n                for (let item of data.post) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    posts: post,\n                    account: {},\n                    progress: data.progress,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { progress, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, account: {} }\n\n    if (!progress || !progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <div className=\"contentDiv\">\n            <Activity\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n                friendData={friendData}\n            />\n\n            {account._id && (\n                <AddPost\n                    parent={progressId}\n                    account={account}\n                    parentType=\"progress\"\n                    // onSend={() => setEditingMessage('')}\n                />\n            )}\n            {posts &&\n                progress.posts.map(postId => {\n                    if (posts[postId]) {\n                        const post = posts[postId]\n                        return (\n                            <div key={postId}>\n                                <div\n                                    style={{\n                                        height: '5px',\n                                        background: '#ddd',\n                                        width: 'calc(100% + 8px)',\n                                        position: 'absolute',\n                                        left: '-8px',\n                                    }}\n                                />\n                                <div style={{ paddingTop: '10px' }}>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    } else return null\n                })}\n\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\n\nconst DashboardPosts = props => {\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return posts.map((item, index) => {\n        let text = null\n        const nots = item.notifications.filter(not => not.user !== account._id)\n        const not = nots.length > 0 ? nots[0] : null\n        if (not) {\n            switch (not.code) {\n                case 'edit wishlist item':\n                    text = 'edited item in wishlist.'\n\n                    break\n                case 'edit goal':\n                    text = 'edited goal.'\n\n                    break\n                case 'edit perk':\n                    text = 'edited item in shop.'\n\n                    break\n\n                case 'comment':\n                    text = 'added a comment.'\n\n                    break\n                case 'edit comment':\n                    text = 'edited a comment.'\n\n                    break\n                case 'like':\n                    text = 'added a like.'\n\n                    break\n                case 'dislike':\n                    text = 'removed a like.'\n\n                    break\n                default:\n                    text = null\n                    break\n            }\n        }\n        return (\n            <div key={index}>\n                <div\n                    style={{\n                        height: '5px',\n                        background: '#ddd',\n                        width: 'calc(100% + 8px)',\n                        position: 'absolute',\n                        left: '-8px',\n                    }}\n                />\n                <div style={{ paddingTop: '10px' }}>\n                    {text && (\n                        <>\n                            <span>\n                                <UserButton\n                                    id={not.user}\n                                    noAva={true}\n                                    span={true}\n                                    style={{ fontWeight: 'bold' }}\n                                />{' '}\n                                {text}\n                            </span>\n                            <Divider\n                                type=\"horizontal\"\n                                style={{ margin: '5px 0' }}\n                            />\n                        </>\n                    )}\n                    <Post\n                        friendData={friendData}\n                        account={account}\n                        post={item}\n                        progressData={progressData}\n                    />\n                </div>\n            </div>\n        )\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport moment from 'moment'\n\nmoment().format()\n\nconst DashboardEvents = props => {\n    const { lastNotifications } = props\n    const getRewardText = item => (\n        <span style={{ fontWeight: 'bold' }}>\n            {item.details.reward.money\n                ? '$' + item.details.reward.money\n                : item.details.reward.simple || item.details.reward.itemName}\n        </span>\n    )\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = moment()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = moment()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate.startOf('week').format('wo [week] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = moment()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = moment().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n    return lastNotifications.map((item, index) => {\n        let text = null,\n            stageName\n\n        switch (item.code) {\n            case 'change name':\n                text = (\n                    <span>\n                        {' '}\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' changed name.'}\n                    </span>\n                )\n                break\n            case 'delete account':\n                text = (\n                    <span>\n                        {item.user}\n                        deleted account.\n                    </span>\n                )\n                break\n            case 'friend request':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' wants to become friends with you.'}\n                    </span>\n                )\n                break\n            case 'friend add':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' became friends.'}\n                    </span>\n                )\n                break\n            case 'unfriend':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' stopped being friends.'}\n                    </span>\n                )\n                break\n            case 'add wishlist item':\n            case 'edit wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add wishlist item'\n                            ? 'added to wishlist a new item'\n                            : 'edited in wishlist'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${item.user}/${\n                                        item.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from wishlist.\n                    </span>\n                )\n                break\n            case 'add goal':\n            case 'edit goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add goal'\n                            ? 'added a new goal'\n                            : 'edited goal'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/goals/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from goals.\n                    </span>\n                )\n                break\n            case 'add perk':\n            case 'edit perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add perk'\n                            ? 'added to shop a new item'\n                            : 'edited in shop'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from shop.\n                    </span>\n                )\n                break\n            case 'buy perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' bought '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.owner}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'cancel transaction':\n            case 'confirm transaction':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'cancel transaction'\n                            ? 'cancelled'\n                            : 'confirmed'}\n                        {' purchase of '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' by '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.buyer}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'start progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' started participating in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' as '}\n                        {item.details.as}.\n                    </span>\n                )\n                break\n            case 'stage approve':\n            case 'stage progress':\n            case 'stage fail':\n            case 'stage dismiss':\n                stageName = getStageName(item.details)\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {item.code === 'stage approve'\n                            ? ' approved  '\n                            : item.code === 'stage progress'\n                            ? ' put into process '\n                            : item.code === 'stage fail'\n                            ? ' marked as failed '\n                            : ' dismissed '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n                        .\n                    </span>\n                )\n                break\n\n            case 'stage complete':\n                text = (\n                    <span>\n                        {'Progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'milestone finish':\n                text = (\n                    <span>\n                        Milestone {item.details.itemName}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'get reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' recieved '}\n                        {getRewardText(item)}\n                        {' as a reward from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.from}\n                        />\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'leave progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' left progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'edit progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' edited progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {item.details.addedAccounts.length > 0 ? (\n                            <>\n                                {' and added '}\n                                {item.details.addedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        {item.details.droppedAccounts.length > 0 ? (\n                            <>\n                                {' and removed '}\n                                {item.details.droppedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}\n                                {' .'}\n                            </>\n                        ) : (\n                            '.'\n                        )}\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' from progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add to progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' to progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        {getRewardText(item)} as a reward for\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          noAva={true}\n                                          span={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'delete reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        {getRewardText(item)}\n                        {' as a reward for '}\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          span={true}\n                                          noAva={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            default:\n                text = 'New event'\n                break\n        }\n        return (\n            <div key={index}>\n                <Divider style={{ margin: '5px 0px' }} />\n                <Comment\n                    avatar={\n                        <UserButton noName={true} id={item.user} span={true} />\n                    }\n                    content={text}\n                />\n            </div>\n        )\n\n        // <Card>{text}</Card>\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ marginTop: '40px', ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport axios from 'axios'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nconst Explore = props => {\n    const [isSearching, setIsSearching] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n    const [progresses, setProgresses] = useState([])\n    const [noMore, setNoMore] = useState(false)\n    const [noMorePopular, setNoMorePopular] = useState(false)\n    const [searchValue, setSearchValue] = useState('')\n    const onSearch = (value, noNoMore) => {\n        if (!noMore || noNoMore) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || searchValue,\n                    skip: noNoMore ? 0 : foundProgresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses(res.data.progresses)\n                        if (res.data.progresses.length === 0)\n                            message.warning('There are no progresses found.')\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n    const onGetPopular = () => {\n        if (!noMorePopular) {\n            setNoMorePopular(true)\n            axios\n                .post('/api/explore/popular', {\n                    skip: progresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMorePopular(res.data.noMore)\n                        setProgresses([...progresses, ...res.data.progresses])\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Input.Search\n                placeholder=\"Find great inspirations!\"\n                onSearch={value => {\n                    if (value) {\n                        setIsSearching(true)\n                        if (value !== searchValue) {\n                            setNoMore(false)\n                            setFoundProgresses([])\n                            setSearchValue(value)\n                            onSearch(value, true)\n                        }\n                    } else {\n                        setNoMore(false)\n                        setSearchValue(value)\n                        setIsSearching(false)\n                    }\n                }}\n                onChange={e => {\n                    if (!e.target.value) {\n                        setNoMore(false)\n                        setFoundProgresses([])\n                        setIsSearching(false)\n                        setSearchValue('')\n                    }\n                }}\n                enterButton\n                allowClear\n                style={{\n                    maxWidth: '500px',\n                    borderRadius: '10px',\n                }}\n            />\n            {isSearching ? (\n                foundProgresses.length > 0 ? (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={onSearch(searchValue)}\n                        hasMore={!noMore}\n                        loader={\n                            <div className=\"loader\" key={0}>\n                                Loading ...\n                            </div>\n                        }\n                    >\n                        <MasonryGrid>\n                            {foundProgresses.map((item, index) => (\n                                <MasonryCard\n                                    key={index}\n                                    onClickLink={'/inspirations/' + item._id}\n                                    images={item.goal.images}\n                                    body={\n                                        <>\n                                            {/* <UserButton\n                                                noName={true}\n                                                id={item.owner}\n                                                friendDataExp={friendData}\n                                            /> */}\n                                            <span\n                                                style={{ fontWeight: 'bold' }}\n                                            >\n                                                {item.name}\n                                            </span>\n                                        </>\n                                    }\n                                />\n                            ))}\n                        </MasonryGrid>\n                    </InfiniteScroll>\n                ) : null\n            ) : (\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={onGetPopular}\n                    hasMore={!noMorePopular}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            Loading ...\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {progresses.map((item, index) => (\n                            <MasonryCard\n                                key={index}\n                                onClickLink={'/inspirations/' + item._id}\n                                images={item.goal.images}\n                                body={\n                                    <>\n                                        {/* <UserButton\n                                            noName={true}\n                                            id={item.owner}\n                                            friendDataExp={friendData}\n                                        /> */}\n                                        <span style={{ fontWeight: 'bold' }}>\n                                            {item.name}\n                                        </span>\n                                    </>\n                                }\n                            />\n                        ))}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            )}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Explore)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nconst AddCard = props => (\n    <Button\n        onClick={props.action}\n        type=\"primary\"\n        shape=\"round\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n    >\n        {props.title}\n    </Button>\n)\n\nexport default AddCard\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\n\nconst Progresses = props => {\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    const { isOwner, progressData, account, profile } = props\n\n    const { progresses } = !isOwner ? profile : account\n\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    const editGoal = !isOwner ? null : loadedProgresses ? (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => setStartProgressVisible(false)}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    ) : null\n\n    return loadedProgresses ? (\n        <div>\n            {isOwner && (\n                <>\n                    <AddCard\n                        title=\"Add inspiration\"\n                        sub=\"Rich your goals or help others!\"\n                        action={() => {\n                            setStartProgressVisible(true)\n                        }}\n                    />\n                    {editGoal}\n                </>\n            )}\n            <MasonryGrid style={{ marginTop: '40px' }}>\n                {loadedProgresses.map((item, index) => (\n                    <MasonryCard\n                        key={index}\n                        onClickLink={'/inspirations/' + item._id}\n                        images={item.goal.images}\n                        body={\n                            <>\n                                <UserButton\n                                    ids={item.goal.users}\n                                    group={true}\n                                />\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {item.name}\n                                </span>\n                            </>\n                        }\n                    />\n                ))}\n            </MasonryGrid>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport Tabs from 'antd/es/tabs'\nimport DashboardPosts from './DashboardPosts'\nimport DashboardEvents from './DashboardEvents'\nimport Badge from 'antd/es/badge'\nimport Helmet from 'react-helmet'\nimport Explore from '../Explore/Explore'\nimport Progresses from '../Progresses/Progresses'\n\nconst Progress = props => {\n    const { account, lastNotifications } = props\n\n    let numberOfUnseenNots = 0\n\n    for (let not of lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    return (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Tabs\n                tabBarStyle={!account._id ? { display: 'none' } : {}}\n                type=\"card\"\n                onChange={activeTab => {\n                    if (activeTab === 'events') {\n                        const last = parseInt(\n                            lastNotifications.reduce((res, not) => {\n                                return parseInt(not.notId) > parseInt(res)\n                                    ? not.notId\n                                    : res\n                            }, 0)\n                        )\n                        if (\n                            lastNotifications.length > 0 &&\n                            parseInt(account.lastSeenNot) !== last\n                        ) {\n                            wsActions.setLastSeenNot(account._id, last)\n                        }\n                    }\n                }}\n            >\n                <Tabs.TabPane tab=\"Explore\" key=\"explore\">\n                    <Explore />\n                </Tabs.TabPane>\n                {account._id && (\n                    <Tabs.TabPane tab=\"My inspirations\" key=\"inspirations\">\n                        <Progresses isOwner={true} />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                        <DashboardPosts />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane\n                        tab={\n                            <Badge count={numberOfUnseenNots} offset={[10, 0]}>\n                                Events\n                            </Badge>\n                        }\n                        key=\"events\"\n                    >\n                        <DashboardEvents />\n                    </Tabs.TabPane>\n                )}\n            </Tabs>\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Progress)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\n\nconst styles = `<style> article,  aside,  details,  figcaption,  figure,  footer,  header,  hgroup,  menu,  nav,  section {      display: block;  }   html {      height: 100%;      padding: 0;      margin: 0;  }   body {      margin: auto;      font-weight: 300;      font-family: 'Open Sans', sans-serif !important;      color: #444;      font-size: 17px;      line-height: 1.231;      height: 100%;  }   .clearafter:after {      clear: both;      content: '.';      display: block;      height: 0;      visibility: hidden;  }   h1 {      margin: 0px;  }   .twofold a {      color: #888;      text-decoration: none;  }   .twofold a:hover {      color: #3665c1;  }   .twofold {      display: inline-block;      margin: 5px 0px;      width: 143px;      padding-left: 35px;      font-family: 'Open Sans', sans-serif !important;      color: #999;      font-size: 12px;  }   .twofold_mail {      display: inline-block;      margin: 5px 0px;      cursor: pointer;      color: #999;      padding-left: 35px;      width: 120px;      font-family: 'Open Sans', sans-serif !important;      font-size: 12px;  }   .twofold_mail:hover {      color: #4683ea;  }   .wrapp {      min-height: 100%;      position: relative;      margin: auto;  }   .cont {      width: 94%;      margin: auto;      padding-bottom: 320px;      text-align: center;  }   .logo_back {      padding: 9px 4%;  }   a.logo {      border: none;      text-decoration: none;  }   a img {      border: none;  }   .maintext0 {      font-weight: 300;      font-size: 45px;      color: #222;      margin: 50px auto 10px;      text-align: center;  }   .maintext1 {      font-size: 20px;      font-weight: 300;      letter-spacing: -1px;      margin: 0px auto 20px;      text-align: center;  }   .leftTitle {      font-size: 22px;      font-weight: 600;      margin: 20px auto 20px;      text-align: left;  }   .maintext2 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 100px 0px 0px;      color: #222;  }   .maintext3 {      font-size: 22px;      font-weight: 300;      text-align: center;      margin: 50px 0px 20px;      color: #222;  }   .maintext4 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 25px 0px 35px;      color: #222;  }   .contactusleft:hover {      background: #FF5935;  }   .facebookleft:hover {      background: #2350A2;  }   .googleleft:hover {      background: #d34836;  }   .linkedinleft:hover {      background: #006699;  }   .twitterleft:hover {      background: #00ACEF;  }   .twitterleft,  .linkedinleft,  .googleleft,  .facebookleft,  .contactusleft {      background: none;      border: none;      cursor: pointer;      width: 28px;      height: 34px;      outline: none;  }   .noselect {      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .totop {      position: absolute;      color: #2B7BC7;      bottom: 0px;      right: 0px;      text-decoration: none;      font-size: 15px;  }   .totop:hover {      text-decoration: underline;  }   .totopmap {      margin-left: 965px;      color: #2B7BC7;      text-decoration: none;      font-size: 15px;  }   .totopmap:hover {      text-decoration: underline;  }   .arrow {      padding-right: 15px;  }   .regulartitlemap {      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 100px 0px 20px 20px;      font-weight: 600;  }   .regulartitleprice {      top: 0px;      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 80px 0px 0px 20px;      font-weight: 600;  }   .even {      padding: 3px;      border-bottom: 1px solid #EEE;      height: 34px;  }   .even:hover {      background-color: #EAFBFB;  }   .pricing {      width: 700px;      margin: auto;      border: 0px solid black;      border-bottom: none;      border-bottom: 1px solid black;      border-collapse: collapse;      font-size: 17px;      text-align: center;      margin-top: 70px;  }   .countries {      list-style-type: none;      top: 0px;      margin: 100px 0px 100px;      text-align: left;  }   .countries li {      width: 188px;      margin: 5px 0 24px 0px;      display: inline-block;  }   .countries li.clear {      clear: left;  }   .countries li svg {      float: left;      margin: 0 10px 0 0;      border: 1px solid #e6e6e6;  }   .countries li a {      display: table;      width: 160px;      color: #666;      *display: block;      *position: relative;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .countries li a:hover {      color: #08c;  }   .countries li span {      display: table-cell;      width: 160px;      vertical-align: middle;      *display: block;      *position: absolute;      *top: 50%;  }   .countries li span span {      width: 100%;      *display: block;      *position: relative;      *top: -50%;  }   /* .menu { position:absolute; left:196px; top:27px; *font-family: arial, sans-serif; } .menu ul{ \tmargin:0px; \tlist-style-type: none; } .menu ul li{ \tfloat:left; \tpadding:0px; \tmargin:0px 35px 0px 5px; } .menu ul li a { \tdisplay:table; \tcolor:#999;     height:24px; \tcursor:pointer; \ttext-decoration:none; \tvertical-align:middle; } .menu ul li a:hover {  color:#333; } .menu ul li span { \tdisplay:table-cell;  padding: 0px;  font-size:14px; \tfont-weight:600; \tvertical-align:middle; \ttext-align:center; } .login {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .login:hover {  color:#333; } .signup {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .signup:hover {  color:#333; } */  .menu {      position: absolute;      right: 240px;      top: 27px;      *font-family: arial, sans-serif;  }   .menu ul {      margin: 0px;      list-style-type: none;  }   .menu ul li {      float: left;      padding: 0px;      margin: 0px 45px 0px 5px;  }   .menu ul li a {      display: table;      color: #888;      height: 24px;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .menu ul li a:hover {      color: #333;  }   .menu ul li span {      display: table-cell;      padding: 0px;      font-size: 14px;      font-weight: 600;      vertical-align: middle;      text-align: center;  }   .login {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .login:hover {      color: #333;  }   .signup {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .signup:hover {      color: #333;  }   .language {      cursor: pointer;  }   .language:hover {}   .language svg {      border: 1px solid #e6e6e6;  }   .download {      height: 24px;      background: #1EAB4B;      padding: 0px 25px 0px;      float: right;      border: none;      border-radius: 3px;      color: white;      font-family: 'Open Sans';      font-weight: 900;  }   button {      cursor: pointer;  }   .download:hover {      background: #27ae60;  }   .social_footer {      padding-left: 35px;      height: 12px;      display: inline-block;      margin: 5px 0px;      width: 120px;  }   .social_footer p {      float: left;      display: inline;      margin: 0px 13px;      color: #999;  }   .social_footer svg {      float: left;      display: inline;  }   .tmsdownloads {      background: #1EAB4B;      border: none;      line-height: 13px;      cursor: pointer;      min-height: 37px;      padding: 7px 0px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .tmsdownloads:hover {      background: #27ae60;  }   .blueBut {      background: #4683ea;      border: none;      cursor: pointer;      height: 37px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .blueBut:hover {      background: #4d92f7;  }   .orderBut {      background: #F6F9FF;      outline: none;  }   .orderBut:hover {      background: #dce9ff;  }   .hpLoginBlocks {      vertical-align: top;      max-width: 400px;      min-width: 310px;      width: 100%;      display: inline-block;      margin-bottom: 30px;  }   .market:hover {      box-shadow: 1px 2px #ddd;  }   #readMore {      margin: 30px auto 0px;      color: #0087e2;      fill: #0087e2;      cursor: pointer;  }   #readMore:hover,  #readMore:hover path {      color: #4d92f7;      fill: #4d92f7;  }   .simplelink {      text-decoration: none;      color: #333;  }   .simplelink:hover {      text-decoration: none;      color: #3665c1;  }   .right_submenu {      position: absolute;      height: 39px;      right: 45px;      top: 18px;      display: block;      border: 1px solid #E6E6E6;  }   footer {      font-size: 12px;      background: #f3f3f3;      background: -moz-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #f3f3f3), color-stop(100%, #fff));      background: -webkit-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -o-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -ms-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: linear-gradient(top, #f3f3f3 0, #fff 100%);      font-size: 12px;      padding: 30px 0 0px;      margin-top: 100px;      width: 100%;      height: 158px;      color: #888;      position: absolute;      bottom: 0px;  }   .footer_header {      font-weight: 300;      color: #555;      font-size: 13px;      text-align: left;      padding-left: 35px;  }   .flag svg {      border: 1px solid #e6e6e6;  }   .price {      width: 80%;      margin: auto;      border-collapse: collapse;  }   .price tr {      height: 36px;      border-bottom: 1px solid #ddd;  }   table .yel:hover td {      background: #e7f4fd;  }   .gre {      padding-left: 10px;      background: #fff;  }   .price button {      cursor: pointer;      font-size: 23px;      color: #fff;      border: none;      border-radius: 3px;      min-height: 40px;      box-shadow: 0px 2px 1px 1px #adadad;      padding: 0px 35px;  }   .doodle {      height: 0px;      position: relative;      bottom: 26px;  }   .signup_free {      background: #1EAB4B;  }   .signup_free:hover {      background: #27ae60;  }   .signup_pro {      background: #1548B8;  }   .signup_pro:hover {      background: #1851CE;  }   .free {      color: #1EAB4B;      font-size: 13px;      background: #f5f5f5;  }   .pro {      color: #1548B8;      font-size: 13px;      background: #f5f5f5;  }   .pricing_image {      margin: 85px auto 0px;      text-align: center;  }   .tworow {      width: 49.999%;      float: left;      display: inline;      text-align: center;      margin-top: 80px;  }   .tworow>div {      width: 30%;      max-width: 80px;      text-align: center;      margin: auto;  }   .half {      margin: 10px 10%;      text-align: center;      line-height: 1.6;  }   .oneimage {      text-align: center;      margin: auto;      margin-top: 85px;      max-width: 750px;      width: 100%;  }   #placeholder #lozenge {      fill: #666;  }   #placeholder:hover #lozenge {      fill: url(#SVGID_1_);  }   .passbut:hover {      text-decoration: underline;  }   #regbut:hover {      background: #21b951;  }   #loginbut:hover {      background: #70bcf0;  }   .passbut {      text-decoration: none;      color: #4683ea;  }   #regbut {      background: #1eab4b;  }   #loginbut {      background: #51aded;  }   input {      width: 300px;      height: 35px;      border: 1px solid #cccccc;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;      color: #555555;      font-size: 15px;  }   input[type='checkbox'] {      height: 16px;      width: 16px;  }   .linksimple {      color: #4683ea;      text-decoration: none;  }   .linksimple:hover {      color: #4683ea;      text-decoration: underline;  }   .linksimple:visited {      color: #4683ea;      text-decoration: none;  }   .LoginButton {      cursor: pointer;      border: none;      height: 62px;      color: white;      font-size: 16px;      font-weight: bold;      box-shadow: 0px 2px 1px 1px #adadad;      width: 330px;      margin: 15px auto 15px;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   #reghome {      background: #1eab4b;  }   #reghome:hover {      background: #21b951;  }   .regtable {      width: 55%;      margin: auto;      border-collapse: collapse;      text-align: center;  }   .regtable tr {      height: 48px;  }   .regtable td {      width: 50%;  }   .regtable input {      padding-left: 5px;      height: 30px;      color: #111;      background: #fff;  }   ::-webkit-input-placeholder {      color: #999;  }   :-moz-placeholder {      color: #999;      opacity: 1;  }   ::-moz-placeholder {      color: #999;      opacity: 1;  }   :-ms-input-placeholder {      color: #999;  }   .logo_svg:hover polygon {      fill: #00CACD;  }   .logo_svg:hover path {      fill: #00CACD;  }   /* FLOAT DIV STYLES */  .floatDiv {      position: absolute;      background: grey;      width: 300px;      height: 200px;      resize: both;      overflow: hidden;      border: 1px solid #bbb;      top: 100px;      left: 300px;  }   .floatDivTH {      width: 100%;      height: 25px;      background: #eee;      border: 1px solid #bbb;      cursor: pointer;      line-height: 0px;  }   .floatDivTH td {      width: 25px;  }   .floatDivTH td:first-child {      width: auto;      white-space: nowrap;  }   .rollDiv {      left: 0px;      top: 0px;      width: 200px;      resize: none;  }   .expandDiv {      left: 0px;      top: 0px;      height: 100%;      width: 100%;      resize: none;      border: none;  }   .topPan {      width: 100%;      height: 25px;      background: #eee;  }   .topClose {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 2px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topExpand {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 27px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topRoll {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 53px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .dock {      left: 0px;      bottom: 0px;      height: 33px;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;  }   .undock {      left: 0px;      bottom: 0px;      height: auto;      max-height: 100%;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;      overflow-y: auto;  }   .expandDock {      position: absolute;      left: 199px;      bottom: 0px;      width: 33px;      height: 33px;      cursor: pointer;      background: #eee;  }   .expandDock table,  .expandDock table tr td {      border: 1px solid #bbb;      text-align: center;      width: 100%;      height: 100%;      line-height: 0;  }   .rollDiv .topPan {      cursor: pointer;  }   .floatDiv .topPan {      cursor: default;  }   .st0,  .floatDivTH path {      fill: #444 !important;  }   #ratioWrap {      width: 95%;      max-width: 640px;      display: inline-block;      position: relative;      margin: 40px auto 20px;      /* z-index:25; */  }   #ratioWrap:after {      padding-top: 56.25%;      display: block;      content: '';  }   #div1 {      margin: auto;      position: absolute;      top: 0;      bottom: 0;      right: 0;      left: 0;      cursor: pointer;      text-align: center;      background: #fff;      \" } #placeholder{   margin:auto;   position: absolute;   top: 0;   bottom: 0;   right: 0;   left: 0;   cursor:pointer;   text-align:center;   background:#fff;\"  }   #contLogin {      margin-top: 0px;      padding-top: 30px;      padding-bottom: 130px;  }   #header {      position: fixed;      height: 79px;      width: 100%;      display: block;      background: white;      z-index: 21;      top: 0px;  }   .prodList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .prodList a {      color: inherit;      display: inline-block;      margin: 0px 46px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;      text-decoration: none;      vertical-align: top;  }   .prodList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;  }   .prodList table {      width: 100%;      border-collapse: collapse;      border: none;      text-align: center;  }   .prodList tr:first-child td {      padding-top: 33px;  }   .prodList tr:nth-child(2) td {      padding: 9px 20px 20px;  }   .prodList tr:last-child td {      padding: 0px 20px 33px;      font-size: 14px;  }   .appList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .appList a {      color: inherit;  }   .appList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      cursor: pointer;  }   .sharePan {      width: 100%;      list-style-type: none;      padding: 0;  }   .sharePan li {      width: 25%;      float: left;      box-sizing: border-box;      height: 30px;  }   .sharePan a {      color: white;      text-decoration: none;      display: block;      width: 100%;      height: 100%;      position: relative;  }   .sharePan a div {      position: absolute;      top: 5px;      left: 40px;      font-weight: 700;  }   .sharePan a svg {      margin: 8px 15px;  }   .sharePan li:nth-child(1) {      background: #3b5998;  }   .sharePan li:nth-child(2) {      background: #1da1f2;  }   .sharePan li:nth-child(3) {      background: #006fa6;  }   .sharePan li:nth-child(4) {      background: #db4437;  }   .tag {      display: inline-block;      border-radius: 3px;      padding: 4px 20px;      margin: 5px 10px 5px 0px;      border: 1px solid transparent;      cursor: pointer;      font-size: 15px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .processes .tag {      background: rgba(70, 131, 234, 0.2);  }   .processes .tag:hover {      border: 1px solid background:rgba(70, 131, 234, 0.5);      background: rgba(70, 131, 234, 0.4);  }   .processes .activeTag {      background: rgba(70, 131, 234, 1);      color: white;  }   .processes .activeTag:hover {      background: #4d92f7;      border: 1px solid #4d92f7;  }   .services .tag {      background: rgba(30, 171, 75, 0.2);  }   .services .tag:hover {      border: 1px solid background:rgba(30, 171, 75, 0.5);      background: rgba(30, 171, 75, 0.4);  }   .services .activeTag {      background: rgba(30, 171, 75, 1);      color: white;  }   .services .activeTag:hover {      background: #1EAB4B;      border: 1px solid #1EAB4B;  }   .articles {      text-align: center;  }   .articles>a {      text-align: left;      display: inline-block;      margin: 20px 10px 0px 10px;      border-radius: 3px;      border: 1px solid transparent;      cursor: pointer;      text-decoration: none;      color: #777;      max-width: 284px;      width: 100%;      vertical-align: top;  }   .articles>a:hover {      opacity: .8;  }   .toKnowledge {      margin: 50px auto 30px;      text-align: right;  }   .toKnowledge a {      padding: 10px 20px;      background: #0087e2;      border: 1px solid #bbb;      color: white;      border-radius: 3px;  }   .toKnowledge a:hover {      background: #4d92f7;      border: 1px solid #ccc;      text-decoration: none;  }   .blueLink {      text-decoration: none;      color: #0087e2;  }   .blueLink:hover {      text-decoration: underline;  }   .articleTags {      width: 100%;  }   .articleTags div {      display: inline-block;      border-radius: 3px;      padding: 2px 4px;      margin: 5px 5px 5px 0px;      cursor: pointer;      font-size: 14px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .artProcTag {      background: rgba(70, 131, 234, 0.2);      color: #777;  }   .artProcTag.active {      background: rgba(70, 131, 234, 1);      color: white;  }   .artServTag {      background: rgba(30, 171, 75, 0.2);      color: #777;  }   .artServTag,  .active {      background: rgba(30, 171, 75, 1);      color: white;  }   .article h3 {      font-weight: 600;      font-size: 20px;      margin: 7px 0px 10px;  }   .article p {      font-style: italic;      margin: 0px 0px 8px;      font-size: 15px;  }   /* ------------------ARTICLES--------------------- */  .artB {      color: #444;      font-size: 18px;      line-height: 26px;  }   .artB h1 {      font-size: 44px;      font-weight: 700;      color: #191919;      text-align: center;      line-height: 60px;  }   .artB h2 {      font-size: 30px;      font-weight: 400;      color: #191919;      text-align: center;      line-height: 35px;  }   .artB table {      width: 100%;      vertical-align: top;      border-collapse: collapse;  }   .artB table.twotd td {      width: 50%;      vertical-align: top;  }   .artB table.threetd td {      width: 33%;      vertical-align: top;  }   .artB td {      border: 1px solid #999;      padding-left: 10px;  }   .artB td ol {      margin: 0px;  }   .artB ol {      margin: 0px;      margin: 35px 0px -13px 0px;      font-style: italic;      font-weight: 600;  }   .artB ol p {      color: #444;      /*font-size: 17px;*/      line-height: 26px;      font-style: initial;      font-weight: 300;      margin-left: -40px;  }   .artB ol i p {      font-style: italic;      color: #008b8b;  }   .artB p.total {      color: #134f5c;      font-weight: bold;      margin-top: 0px;  }   .artB iframe {      margin: auto;      display: block;  }   @media screen and (min-width: 1200px) {       #mob-menu-but,      #mob-menu {          display: none !important;      }       #cont {          display: block !important;      }  }   @media screen and (max-width: 1100px) {      .footSep {          visibility: hidden;      }  }   @media screen and (max-width: 1200px) {       #menu,      #submenu {          display: none;      }       #mob-menu-but {          width: 30px;          height: 30px;          position: absolute;          right: 4%;          top: 21px;          display: block;      }       #mob-menu {          display: none;          width: 100%;          background: white;          z-index: 9999;          margin: 0px;          padding: 0px;          margin-top: 89px;      }       #mob-menu li {          text-align: center;          list-style: none;          margin: 20px;      }       #mob-menu a {          text-decoration: none;          font-size: 16px;          font-weight: 500;          color: #0F3F9F !important;          cursor: pointer;      }  }   @media screen and (max-width: 750px) {      .maintext0 {          font-size: 30px;      }       .maintext1 {          font-size: 18px;      }       .maintext2,      .maintext4 {          font-size: 26px;      }       .maintext4 {          margin: 15px 0px 30px;      }       .pricing_image {          margin: 70px auto 20px;      }       .half {          14px;      }       #cont {          margin-top: 50px;      }  }   @media screen and (max-width: 650px) {      .sharePan div {          display: none;      }       .articles>a {          margin: 50px 0px 0px 0px;      }  }   @media screen and (max-width: 450px) {      .artB h1 {          font-size: 26px;          font-weight: 400;          color: #191919;          text-align: center;          line-height: 40px;      }       .artB h2 {          font-size: 22px;          font-weight: 400;          font-style: italic;          color: #191919;          text-align: center;          line-height: 30px;      }       .maintext0 {          font-size: 26px;      }       .maintext1 {          font-size: 18px;      }       .maintext2 {          font-size: 25px;          margin: 50px 0px 0px;      }       .maintext4 {          font-size: 25px;          margin: 10px 0px 20px;      }       .pricing_image {          margin: 40px auto 20px;      }       .half {          14px;      }       .tworow {          width: 100%;      }       .hpLoginBlocks {          min-width: initial;      }       #cont {          margin-top: 30px;      }  }   /* ------------------------LOGOS---------------------------- */  .logo_svg_maintain:hover svg {      fill: #0044ff;  }   .logo_svg_order:hover svg {      fill: #ff4400;  }   /* ------------------------LOGOS END------------------------ */  /* ------------------------PRODUCTS MENU-------------------- */  #products_menu {      position: absolute;      right: -100px;      top: 35px;      width: 346px;      background: white;      border-radius: 3px;      border: 1px solid #ccc;      display: none;      box-shadow: 0 2px 10px rgba(0, 0, 0, .2);      box-sizing: border-box;      font-size: 15px;      color: #222;  }   #products_menu>div {      padding: 30px 30px 30px 30px;      box-sizing: border-box;  }   #products_menu>div>a {      display: inline-block;      width: 90px;      height: 90px;      border: 1px solid transparent;      vertical-align: top;      text-align: center;      cursor: pointer;      border-radius: 3px;      box-sizing: border-box;      text-decoration: none;      color: #222;  }   #products_menu>div>a:hover {      border: 1px solid #e6e6e6;  }   #products_menu>a>button {      width: 100%;      background: #eee;      height: 40px;      border: none;  }   #products_menu>a>button:hover {      width: 100%;      background: #e7e7e7;      height: 40px;      border: none;  }   /* ------------------------PRODUCTS MENU END----------------- */  /* ------------------------SUPPORT MENU---------------------- */  .collapseDiv {      width: 100%;      display: none;      padding: 15px 0px;      box-sizing: border-box;      background: #333;  }   .collapseDiv>a {      display: block;      text-decoration: none;      width: 100%;      background: #333;      padding: 5px 30px 5px 40px;      box-sizing: border-box;      cursor: pointer;      color: #fff;  }   .collapseDiv>a:hover {      background: #222;  }   .plusM {      float: right;      margin-right: 10px;  }   .supMen {      width: 100%;      background: #eee;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMen:hover {      background: #ddd;  }   .supMenAct {      width: 100%;      background: #c5c5c5;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMenAct:hover {      background: #bbb;  }   @media screen and (max-width: 400px) {      .plusM {          visibility: hidden;      }  }   .artImg {      width: 100%;  }   .supArtMenIt {      width: 100%;      padding: 10px 0px;  }   .supArtMenIt>a {      display: block;      text-decoration: none;      width: 100%;      cursor: pointer;      padding: 10px 10px;      font-size: 14px;      box-sizing: border-box;      color: #444;      text-align: left;  }   .supArtMenIt>a:hover {      background: #eee;  }   .supArtMenItAct {      color: blue;      border-left: 3px solid blue;      font-weight: 600;  }   .supMenArt {      vertical-align: top;      display: inline-block;      max-width: 280px;      min-width: 250px;      margin: 80px auto;      box-shadow: -10px 5px 20px -5px #ccc;      border-left: 1px solid #ccc;      box-sizing: border-box;      float: right;      color: #222;  }   @media screen and (max-width: 1070px) {      .supMenArt {          display: block;          float: none;          max-width: 600px;          min-width: 0px;          box-shadow: -4px 7px 50px -5px #ccc;      }  }   /* ------------------------SUPPORT MENU END------------------ */  /* ------------------------SUPPORT ARTICLE------------------- */  .artS {      max-width: 700px;      text-align: left;      margin-top: 68px;      color: #222;      font-size: 15px;      line-height: 31px;      display: inline-block;  }   .artS h1,  .artS h2 {      text-align: left;      font-weight: 400;  }   .artS h1 {      font-size: 40px;      line-height: 60px;  }   .artS img {      width: 100%;      height: auto;  }   .artS .emb {      width: 100%;      text-align: center;  }   .artS .emb div {      font-size: 27px;      margin: 43px auto;      color: #999;  }   .artS .emb img {      width: 90%;      margin: auto;  }   .artS .emb p {      text-align: left;  }   .artS .emb textarea {      width: 90%;      font-size: 15px;      height: 100px;  }   .artS .artImg {      width: 100%;      max-width: 120px;      float: right;      margin: 18px 10px 10px 40px;  }   .artS .clearD {      width: 100%;      height: 40px;      visibility: hidden;      clear: both;  }   .artS ol {      margin: 0px;      font-style: normal;      font-weight: inherit;  }   .artS a {      color: #4184f1;      text-decoration: none;  }   .artS a:hover {      text-decoration: underline;  }   .artS .aNewT:after {      content: '';      background: no-repeat url(http://www.logision.com/img/newBlank.png);      display: inline-block;      height: 10px;      margin: 0 3px 0 5px;      width: 10px;  }   /* ------------------------SUPPORT ARTICLE END--------------- */</style>`\n\nconst Blog = props => {\n    console.log(props.history.location.pathname)\n    const [state, setState] = useState('')\n    const [title, setTitle] = useState('')\n    useEffect(() => {\n        const url = 'https://websiter.dev' + props.history.location.pathname\n        console.log(url)\n        axios\n            .post('/api/blog', { url })\n            .then(res => {\n                setState(\n                    styles +\n                        res.data.body\n                            .replace(\n                                /\\/images\\/blog/gi,\n                                'https://websiter.dev/images/blog'\n                            )\n                            .replace(\n                                /href=\"https:\\/\\/websiter.dev/gi,\n                                'href=\"https://addspire.com'\n                            )\n                )\n                setTitle(res.data.title)\n            })\n            .catch(err => {})\n    }, [props.history.location.pathname])\n\n    return (\n        <div>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <div dangerouslySetInnerHTML={{ __html: state }} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React from 'react'\n\nimport * as wsActions from '../websocketActions'\nimport Menu from 'antd/es/menu'\nimport Dropdown from 'antd/es/dropdown'\nimport DownOutlined from '@ant-design/icons/DownOutlined'\nimport Button from 'antd/es/button'\nimport MoreIcon from './UI/MoreIcon'\n\nconst FriendActionButton = props => {\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const menu = (\n        <Menu onClick={({ domEvent }) => domEvent.stopPropagation()}>\n            {props.additionalButtons &&\n                props.additionalButtons.map((button, index) => (\n                    <Menu.Item key={index + 100} onClick={button.onClick}>\n                        {button.title}\n                    </Menu.Item>\n                ))}\n            {invitingFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"2\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Decline\n                </Menu.Item>\n            ) : invitedFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"3\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Cancel invitation\n                </Menu.Item>\n            ) : realFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"4\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Unfriend\n                </Menu.Item>\n            ) : null}\n            {props.noFollow ? null : account.followAccounts.includes(_id) ? (\n                <Menu.Item\n                    key=\"5\"\n                    onClick={() => wsActions.unfollowAccount(accountId, _id)}\n                    danger={true}\n                >\n                    Unfollow\n                </Menu.Item>\n            ) : (\n                <Menu.Item\n                    key=\"6\"\n                    onClick={() => wsActions.followAccount(accountId, _id)}\n                >\n                    Follow\n                </Menu.Item>\n            )}\n        </Menu>\n    )\n    return invitingFriends.find(item => item.friend === _id) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.acceptFriend(accountId, _id)\n            }}\n        >\n            Accept friendship\n        </Dropdown.Button>\n    ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n          item => item.friend === _id\n      ) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.addFriend(accountId, _id)\n            }}\n        >\n            Become friends\n        </Dropdown.Button>\n    ) : (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a\n                // className=\"ant-dropdown-link\"\n                onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                }}\n            >\n                <Button type={props.asText ? 'primary' : 'link'}>\n                    {props.asText ? (\n                        <>\n                            Actions <DownOutlined />\n                        </>\n                    ) : (\n                        <MoreIcon />\n                    )}\n                </Button>\n            </a>\n        </Dropdown>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport friendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        account: props.account,\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButtons: [\n            {\n                title: 'See profile',\n                onClick: () =>\n                    props.history.push('/profile/' + props.friend._id),\n            },\n        ],\n    })\n\n    return (\n        <MasonryCard\n            actions={friendActions}\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n            noLink={true}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\n\nconst Wallet = props => {\n    const account = props.pulledProfile || props.account\n    return account.wallet ? (\n        <MasonryGrid friends={true}>\n            {account.wallet.map((money, index) => (\n                <Link to={'/profile/' + money.user} key={index}>\n                    <MasonryCard\n                        body={\n                            <>\n                                <span style={{ fontWeight: 'bold' }}>\n                                    ${money.amount}\n                                </span>\n                                <UserButton span={true} id={money.user} />\n                            </>\n                        }\n                    />\n                </Link>\n            ))}\n        </MasonryGrid>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Wallet))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Button from 'antd/es/button'\nimport MasonryCard from '../../components/MasonryCard'\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Card from 'antd/es/card'\nimport MoreIcon from '../../components/UI/MoreIcon'\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <MasonryCard\n            onClickLink={`/${mode || 'shop'}/${owner._id}/${perkId}`}\n            images={perk.images}\n            actions={\n                <span onClick={e => e.stopPropagation()}>\n                    {owner._id === account._id &&\n                    !props.onlyBuy &&\n                    props.mode === 'shop' ? (\n                        <Dropdown.Button\n                            type=\"primary\"\n                            key=\"1\"\n                            onClick={() =>\n                                wsActions.buyPerk(\n                                    account._id,\n                                    owner._id,\n                                    perkId\n                                )\n                            }\n                            overlay={\n                                <Menu>\n                                    <Menu.Item\n                                        key=\"0\"\n                                        onClick={() => {\n                                            setEditedPerk(perkId)\n                                            setEditPerkOpen(true)\n                                        }}\n                                    >\n                                        Edit\n                                    </Menu.Item>\n                                </Menu>\n                            }\n                        >\n                            Buy\n                        </Dropdown.Button>\n                    ) : props.mode === 'shop' ? (\n                        <Button\n                            type=\"primary\"\n                            onClick={() =>\n                                wsActions.buyPerk(\n                                    account._id,\n                                    owner._id,\n                                    perkId\n                                )\n                            }\n                        >\n                            Buy\n                        </Button>\n                    ) : owner._id === account._id && !props.onlyBuy ? (\n                        <Dropdown\n                            trigger={['click', 'hover']}\n                            overlay={\n                                <Menu>\n                                    <Menu.Item\n                                        key=\"0\"\n                                        onClick={() => {\n                                            setEditedPerk(perkId)\n                                            setEditPerkOpen(true)\n                                        }}\n                                    >\n                                        Edit\n                                    </Menu.Item>\n                                </Menu>\n                            }\n                        >\n                            <Button type=\"link\">\n                                <MoreIcon />\n                            </Button>\n                        </Dropdown>\n                    ) : null}\n                </span>\n            }\n            body={\n                <span style={{ fontWeight: 'bold' }}>\n                    {perk.name}\n                    {mode === 'shop' && ` ($${perk.price})`}\n                </span>\n            }\n        />\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Avatar from 'antd/es/avatar'\n\nconst ProgressButton = props => {\n    const { id } = props\n    const userName = id => props.progressData[id].goal.name\n    const userAvatar = id => (\n        <span\n            onClick={() => {\n                handleClick(id)\n            }}\n        >\n            <Avatar\n                src={\n                    props.progressData[id].goal.images.length > 0 &&\n                    props.progressData[id].goal.images[0]\n                }\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group ? {} : { margin: ' 0 5px' }}\n            />\n        </span>\n    )\n\n    const handleClick = id =>\n        props.history.push('/inspirations/' + (id || props.id))\n    return (\n        <span\n            style={{ cursor: 'pointer', fontWeight: 'bold', ...props.style }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {userAvatar(id)}\n            {userName(id)}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = [\n        account,\n        ...account.friends\n            .filter(friend => friend.status === 'friend')\n            .map(friend => props.friendData[friend.friend]),\n    ]\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={() => {\n                wsActions.deletePerk(account._id, perkId, mode)\n                props.setEditPerkOpen(false)\n            }}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account._id ? (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n            <MasonryGrid>\n                {account[props.listKey || props.mode] &&\n                    account[props.listKey || props.mode].map((perk, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={perk}\n                            perkId={\n                                props.mode === 'wishlist' ||\n                                props.mode === 'goals'\n                                    ? perk.itemId\n                                    : perk.perkId\n                            }\n                            owner={account}\n                            account={account}\n                            setEditedPerk={setEditedPerk}\n                            setEditPerkOpen={setEditPerkOpen}\n                            mode={props.mode}\n                            style={{ cursor: 'pointer' }}\n                        />\n                    ))}\n            </MasonryGrid>\n\n            {editPerk}\n        </>\n    ) : null\n}\n\nexport default WishlistAndPerks\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n\n    return (\n        <div>\n            {props.account._id ? (\n                <WishlistAndPerks mode=\"wishlist\" account={props.account} />\n            ) : (\n                <span />\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult({})\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>\n                To find a friend you need to enter your friend's name or\n                nickname.\n            </p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult._id && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendCard from '../../components/FriendCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst pendingFriends = props => {\n    const { realFriends, invitedFriends, invitingFriends } = props\n    return (\n        <>\n            {invitingFriends.length > 0 && (\n                <>\n                    <h2>People invited me to be friends</h2>\n                    <MasonryGrid friends={true}>\n                        {invitingFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <>\n                    <h2>I invited these people</h2>\n                    <MasonryGrid friends={true}>\n                        {invitedFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\nimport Tabs from 'antd/es/tabs'\nimport Empty from 'antd/es/empty'\nimport Badge from 'antd/es/badge'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const confirmedFriends =\n        realFriends.length > 0 ? (\n            <MasonryGrid friends={true}>\n                {realFriends.map(friend => (\n                    <FriendCard\n                        {...props}\n                        key={friend.friend}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n            </MasonryGrid>\n        ) : (\n            <Empty\n                image=\"https://websiter.s3.us-east-2.amazonaws.com/image+4.jpg\"\n                imageStyle={{ height: '250px', marginTop: '50px' }}\n                description={false}\n            />\n        )\n    return (\n        <div>\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n            {invitedFriends.length > 0 || invitingFriends.length > 0 ? (\n                <Tabs>\n                    <Tabs.TabPane key=\"confirmed\" tab=\"Confrmed\">\n                        {confirmedFriends}\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane\n                        tab={\n                            <Badge\n                                count={invitingFriends.length}\n                                offset={[10, 0]}\n                            >\n                                Pending\n                            </Badge>\n                        }\n                        key=\"pending\"\n                    >\n                        <PendingFriends\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n            ) : (\n                confirmedFriends\n            )}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\nimport Collapse from 'antd/es/collapse'\nimport Badge from 'antd/es/badge'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Descriptions from 'antd/es/descriptions'\nimport Typography from 'antd/es/typography'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, transactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => transactionData[item])\n        .map(item => transactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/inspirations/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Collapse\n            expandIconPosition=\"right\"\n            style={{ marginBottom: '50px' }}\n            destroyInactivePanel={true}\n            accordion\n        >\n            {sorted.map((transaction, index) => {\n                const types = []\n                if (\n                    transaction.from === account._id &&\n                    transaction.to === account.id\n                ) {\n                    types.push('internal')\n                }\n                if (transaction.to === account._id) {\n                    if (transaction.progress) {\n                        types.push('earn')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('buy')\n                            types.push('item')\n                        } else {\n                            types.push('recieve gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                } else if (transaction.from === account._id) {\n                    if (transaction.progress) {\n                        types.push('pay')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('sell')\n                            types.push('item')\n                        } else {\n                            types.push('send gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                }\n\n                const user =\n                    transaction.to !== account._id\n                        ? transaction.to\n                        : transaction.from\n\n                tableData.push({\n                    key: tableData.length,\n                    types,\n                    user,\n                    perk: transaction.item,\n                    amount: transaction.amount,\n                    date: transaction.date,\n                    progress: transaction.progress,\n                    status: transaction.status,\n                    transaction,\n                })\n                const { item: reward } = transaction\n                return (\n                    <Collapse.Panel\n                        style={{ padding: 0 }}\n                        header={\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Badge\n                                        color={\n                                            transaction.status ===\n                                            'Not confirmed'\n                                                ? 'blue'\n                                                : transaction.status ===\n                                                  'Cancelled'\n                                                ? 'red'\n                                                : 'green'\n                                        }\n                                    />\n                                    <Typography.Paragraph\n                                        ellipsis={{ rows: 1 }}\n                                        style={{ display: 'inline', margin: 0 }}\n                                    >\n                                        {reward.mode === 'simple'\n                                            ? reward.simple\n                                            : reward.mode === 'money'\n                                            ? reward.money + ' (money)'\n                                            : reward.mode === 'item'\n                                            ? reward.itemName\n                                            : ''}\n                                    </Typography.Paragraph>\n                                    <UserButton\n                                        noName={true}\n                                        id={\n                                            transaction.to !== account._id\n                                                ? transaction.to\n                                                : transaction.from\n                                        }\n                                    />\n                                </div>\n                                <div>\n                                    <TimeAgo datetime={transaction.date} live />\n                                </div>\n                            </>\n                        }\n                        key={index}\n\n                        // extra={}\n                    >\n                        <Descriptions\n                            layout=\"vertical\"\n                            size=\"small\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Descriptions.Item label=\"Type\">\n                                {types.map(tag => {\n                                    let color =\n                                        tag.length > 5 ? 'geekblue' : 'green'\n                                    if (tag === 'loser') {\n                                        color = 'volcano'\n                                    }\n                                    return (\n                                        <Tag color={color} key={tag}>\n                                            {tag.toUpperCase()}\n                                        </Tag>\n                                    )\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Transaction with\">\n                                <UserButton\n                                    id={\n                                        transaction.to !== account._id\n                                            ? transaction.to\n                                            : transaction.from\n                                    }\n                                />\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Item\">\n                                {\n                                    <Rewards\n                                        onlyButton={true}\n                                        rewardKey={1}\n                                        label=\"Rewards\"\n                                        rewards={[\n                                            {\n                                                rewards: [transaction.item],\n                                                key: 1,\n                                            },\n                                        ]}\n                                        readOnly={true}\n                                    />\n                                }\n                            </Descriptions.Item>\n\n                            {transaction.amount && (\n                                <Descriptions.Item label=\"Amount\">\n                                    {transaction.amount}\n                                </Descriptions.Item>\n                            )}\n                            <Descriptions.Item label=\"Date\">\n                                {date.format(\n                                    new Date(transaction.date),\n                                    'YYYY/MM/DD HH:mm:ss'\n                                )}\n                            </Descriptions.Item>\n\n                            {transaction.progress && transaction.progressId && (\n                                <Descriptions.Item label=\"Progress\">\n                                    <Button\n                                        type=\"text\"\n                                        onClick={() =>\n                                            props.history.push(\n                                                '/inspirations/' +\n                                                    transaction.progressId\n                                            )\n                                        }\n                                    >\n                                        {transaction.progress}\n                                    </Button>\n                                </Descriptions.Item>\n                            )}\n                            <Descriptions.Item label=\"Status\">\n                                {status === 'Not confirmed' ? (\n                                    <>\n                                        <Button\n                                            danger={true}\n                                            type=\"link\"\n                                            onClick={() =>\n                                                wsActions.cancelTransaction(\n                                                    account._id,\n                                                    record.transaction._id\n                                                )\n                                            }\n                                        >\n                                            Cancel\n                                        </Button>\n                                        {record.transaction.from ===\n                                            account._id && (\n                                            <Button\n                                                type=\"link\"\n                                                onClick={() =>\n                                                    wsActions.confirmTransaction(\n                                                        account._id,\n                                                        record.transaction._id\n                                                    )\n                                                }\n                                            >\n                                                Confirm\n                                            </Button>\n                                        )}\n                                    </>\n                                ) : (\n                                    status || 'Confirmed'\n                                )}\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Collapse.Panel>\n                )\n            })}\n        </Collapse>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        transactionData: state.transactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport MasonryCard from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\nimport Tag from 'antd/es/tag'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport * as classes from './Profile.module.css'\nimport Typography from 'antd/es/typography'\nimport Input from 'antd/es/input'\nimport message from 'antd/es/message'\nimport Wishlist from '../Wishlist/Wishlist'\nimport Friends from '../Friends/Friends'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\nimport Transactions from '../Shop/Transactions'\nimport Helmet from 'react-helmet'\n\nconst Profile = props => {\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState(false)\n    const [followingVisible, setFollowingVisible] = useState(false)\n    const { profile, friendData, account } = props.isAuthed ? props : data\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n                    const progressData = {}\n                    for (let progress of data.progressData)\n                        progressData[progress._id] = progress\n\n                    props.setData({\n                        // profile: data.profile,\n                        friendData,\n                        progressData,\n                        account: {},\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        account,\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n        asText: true,\n    })\n    const loading = false\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} - Addspire - Explore inspirations and ideas\n                    from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <div>\n                <Card>\n                    <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', () => {\n                                        props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <div>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            Upload\n                                        </div>\n                                    </div>\n                                )}\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n                        <Typography.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <EditOutlined\n                                                  style={{ fontSize: '16px' }}\n                                              />\n                                          ),\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </Typography.Title>\n                        {/* <h1 style={{ margin: 0 }}>{profile.name}</h1> */}\n                        <h3>({profile._id})</h3>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowersVisible(true)}\n                        >\n                            {profile.followingAccounts.length} Followers\n                        </Button>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowingVisible(true)}\n                        >\n                            {profile.followProgresses.length +\n                                profile.followAccounts.length}{' '}\n                            Following\n                        </Button>\n                        {isOwner && (\n                            <div>\n                                <Button\n                                    icon={<LogoutOutlined />}\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    danger\n                                    type=\"text\"\n                                >\n                                    Logout\n                                </Button>\n                            </div>\n                        )}\n                        <div>\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Tag color=\"green\">Friends</Tag>\n                                    ) : null}\n                                    {account.followAccounts.includes(\n                                        profile._id\n                                    ) ? (\n                                        <Tag\n                                            style={{ marginRight: '10px' }}\n                                            color=\"purple\"\n                                        >\n                                            Following\n                                        </Tag>\n                                    ) : (\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                        >\n                                            Follow\n                                        </Button>\n                                    )}\n                                </span>\n                            )}\n                            {friendActions}\n                        </div>\n                    </div>\n                    <Tabs type=\"card\">\n                        <Tabs.TabPane tab=\"Inspirations\" key={0}>\n                            <Progresses isOwner={isOwner} />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Friends\" key={1}>\n                            {isOwner ? (\n                                <Friends />\n                            ) : (\n                                <MasonryGrid friends={true}>\n                                    {profile.friends\n                                        .filter(\n                                            friend => friend.status === 'friend'\n                                        )\n                                        .map(friend => {\n                                            const oneFriendData = {\n                                                ...friendData[friend.friend],\n                                                _id: friend.friend,\n                                            }\n                                            return (\n                                                <FriendCard\n                                                    key={oneFriendData._id}\n                                                    {...props}\n                                                    account={account}\n                                                    friend={oneFriendData}\n                                                    realFriends={realFriends}\n                                                    invitingFriends={\n                                                        invitingFriends\n                                                    }\n                                                    invitedFriends={\n                                                        invitedFriends\n                                                    }\n                                                />\n                                            )\n                                        })}\n                                </MasonryGrid>\n                            )}\n                        </Tabs.TabPane>\n                        {/* {isOwner && (\n                            <Tabs.TabPane tab=\"Shop\" key={2}>\n                                <WishlistAndPerks\n                                    mode=\"shop\"\n                                    listKey=\"perks\"\n                                    account={props.account}\n                                />\n                            </Tabs.TabPane>\n                        )}\n                        {isOwner && (\n                            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                                <Wallet />\n                            </Tabs.TabPane>\n                        )} */}\n\n                        <Tabs.TabPane tab=\"Rewards\" key={4}>\n                            <Transactions />\n                        </Tabs.TabPane>\n\n                        {!isOwner && (\n                            <Tabs.TabPane tab=\"Shop\" key={5}>\n                                <MasonryGrid>\n                                    {profile.perks &&\n                                        profile.perks.map((perk, index) => (\n                                            <PerkCard\n                                                key={index}\n                                                perk={perk}\n                                                perkId={perk.perkId}\n                                                owner={profile}\n                                                account={account || {}}\n                                                onlyBuy={true}\n                                                mode=\"shop\"\n                                            />\n                                        ))}\n                                </MasonryGrid>\n                            </Tabs.TabPane>\n                        )}\n                        {!isOwner && (\n                            <Tabs.TabPane tab=\"Wallet\" key={6}>\n                                <Wallet\n                                    pulledProfile={profile}\n                                    account={profile}\n                                />\n                            </Tabs.TabPane>\n                        )}\n                        <Tabs.TabPane tab=\"Wishlist\" key={7}>\n                            {isOwner ? (\n                                <Wishlist />\n                            ) : (\n                                <MasonryGrid>\n                                    {profile.wishlist.map((item, index) => (\n                                        <PerkCard\n                                            key={index}\n                                            perk={item}\n                                            perkId={item.itemId}\n                                            owner={profile}\n                                            account={account || {}}\n                                            setEditedPerk={() => {}}\n                                            setEditPerkOpen={() => {}}\n                                            onlyBuy={true}\n                                            mode=\"wishlist\"\n                                        />\n                                    ))}\n                                </MasonryGrid>\n                            )}\n                        </Tabs.TabPane>\n                        {isOwner && (\n                            <Tabs.TabPane tab=\"Settings\" key={8}>\n                                <Button\n                                    danger={true}\n                                    onClick={() => setDeleteVisible(true)}\n                                >\n                                    Delete account\n                                </Button>\n                                <Modal\n                                    title=\"Delete account\"\n                                    visible={deleteVisible}\n                                    onOk={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    onCancel={() => {\n                                        setDeleteVisible(false)\n                                        setDeleteField('')\n                                    }}\n                                >\n                                    <p>\n                                        Please enter your nickname and press Ok\n                                        to delete your account.\n                                    </p>\n                                    <Input\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </Modal>\n                            </Tabs.TabPane>\n                        )}\n                    </Tabs>\n                </Card>\n            </div>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => setFollowersVisible(false)}\n            >\n                {profile.followingAccounts.map(item => (\n                    <MasonryCard\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n            <Modal\n                title=\"Following\"\n                visible={followingVisible}\n                footer={null}\n                onCancel={() => setFollowingVisible(false)}\n            >\n                <Tabs>\n                    <Tabs.TabPane tab=\"People\" key=\"1\">\n                        {profile.followAccounts.map(item => (\n                            <MasonryCard\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton account={account} id={item} />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Inspirations\" key={2}>\n                        {profile.followProgresses.map(item => (\n                            <MasonryCard\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        type=\"progress\"\n                                        account={account}\n                                        id={item}\n                                    />\n                                }\n                                body={\n                                    <ProgressButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                </Tabs>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport Helmet from 'react-helmet'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const { account } = props\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 3) {\n            const accountId = pathParts[2]\n            if (props.isAuthed && account._id === accountId) {\n                const perk = account.perks.find(\n                    item => item.perkId === pathParts[3]\n                )\n                setData({ profile: account, perk })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    props.setData({\n                        post: { [data.post._id]: data.post },\n                        friendData,\n                    })\n                })\n            }\n        }\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => <UserButton id={item} />)\n        } else return items\n    }\n\n    return perk ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    {perk.name} by {profile.id}\n                </title>\n                <meta name=\"description\" content={perk.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        Item from <UserButton id={profile._id} /> shop\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={perk.images} />\n\n                <h1>{perk.name}</h1>\n                <p style={{ whiteSpace: 'pre-wrap' }}>{perk.description}</p>\n\n                <Descriptions\n                    title=\"Goal description\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                    <Item label=\"Price\">{perk.price}</Item>\n                </Descriptions>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[perk.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const { account } = props\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 3) {\n            const accountId = pathParts[2]\n            if (props.isAuthed && account._id === accountId) {\n                const wishlistItem = account.wishlist.find(\n                    item => item.itemId === pathParts[3]\n                )\n                setData({ profile: account, wishlistItem })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    props.setData({\n                        post: { [data.post._id]: data.post },\n                        friendData,\n                    })\n                })\n            }\n        }\n    }, [props.isAuthed])\n    if (!data.wishlistItem) return null\n    const { wishlistItem, profile } = data\n    props.setData({ currentPosts: wishlistItem.post })\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>{`${wishlistItem.name} by ${profile.name}`}</title>\n                <meta name=\"description\" content={wishlistItem.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        <UserButton id={profile._id} /> wishlist\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={wishlistItem.images} />\n\n                <h1>{wishlistItem.name}</h1>\n                <p style={{ whiteSpace: 'pre-wrap' }}>\n                    {wishlistItem.description}\n                </p>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[wishlistItem.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Progress from './containers/Progress/Progress'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth(props)\n    }, [])\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n\n            <Route path=\"/inspirations\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/account\" exact component={Profile} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru\" component={Blog} />\n            <Route path=\"/blog\" component={Blog} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n                {isAuthed && <NotificationsTracker />}\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    pageTitle: {},\n    lastUrl: '',\n    friendSearchResult: {},\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'profile',\n                'currentProgress',\n                'progress',\n                'lastNotifications',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of ['user', 'account', 'profile', 'progress']) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SAVE_LAST_URL: (state: Object, action: Object) => {\n        if (action.url !== '/login' && action.url !== '/logout')\n            state.lastUrl = action.url\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}