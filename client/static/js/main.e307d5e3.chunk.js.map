{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Progress/Messages.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/Layout.tsx","utils/processRes.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","components/AddCard/AddCard.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","store/actions/auth.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.tsx","containers/Friends/methods.js","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","utils/processResErr.js","containers/Account/Account.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Messages","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","console","log","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","getAvatar","nickname","version","Content","connect","avatarV","account","image","pageTitle","isAuthed","menuVisible","setMenuVisible","toggleMenu","selectedKey","pathname","split","undefined","accountId","sessionStorage","getItem","buttonProps","size","checkHighligh","url","ghost","openLink","isActivating","es_layout","tooltip","title","placement","mouseEnterDelay","assign","MenuOutlined_default","LogoutOutlined_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","cursor","avatar","src","page_header","onBack","goBack","main","subTitle","sub","drawer","closable","onClose","visible","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","includes","processRes","res","data","logout","success","errorCode","message","error","successCode","status","pullData","options","callback","objectSpread","forceAuth","forceActivate","tryAuth","axios","then","setData","catch","err","uploadFile","file","filename","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","this","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","post","response","doUploadFile","put","signedRequest","headers","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","Component","WrapTabNode","DropTarget","drop","monitor","dragKey","hoverKey","moveTabNode","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","remove","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","_id","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","cover","backgroundImage","backgroundSize","actions","EditFilled_default","fontSize","ownerId","userId","RocketOutlined_default","Meta","AddCard","hoverable","alignItems","justifyContent","PlusCircleOutlined_default","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","setTitle","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","user","startProgress","background","boxShadow","marginTop","components_AddCard_AddCard","goals","Goals_GoalCard","indexG","users","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","padding","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","keepPageTitle","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","defaults","common","progressId","onmessage","news","parse","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","textAlign","marginBottom","getMessages","Progress_ProgressMessage","replies","ref","position","bottom","left","autoSize","minRows","maxRows","rows","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","activityOpen","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","Progress_Messages","Progress_Activity","forceLogin","dispatch","setItem","token","rememberMe","jwt","decode","delete","Accept","setIsAuthed","setPageTitle","confirmTransaction","transactionId","cancelTransaction","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transaction","from","tableData","sorted","Date","getTime","to","AddPerkForm","perkId","deletePerk","uploadImage","min","max","popconfirm","onConfirm","cancelText","setPerk","wishlistItem","Shop_AddPerkForm","setEditPerkOpen","buyPerk","currency","setEditedPerk","onlyBuy","DollarCircleOutlined_default","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","itemId","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","acceptFriend","addFriend","unfriend","additionalButton","asIcons","ResultButtun","SmileOutlined_default","FrownOutlined_default","friendActions","friendActionButton","EyeOutlined_default","FriendCard_Meta","addFriendOpen","setAddFriendOpen","searchResult","components_FriendCard","pendingFriendsOpen","setPendingFriendsOpen","setSearchResult","friendRef","fullFriend","Friends_AddFriends","warning","search","PendingFriends","processResErr","setAvatarV","v","increaseAvatarV","deleteVisible","setDeleteVisible","deleteField","setDeleteField","tailLayout","backIcon","whitespace","disabled","flex","maxWidth","overflow","_is","friendData","containers_Progresses_Progresses","perks","wishlist","nicknameNotUnique","pattern","Perk_Item","redirectTo","routes","react_router","exact","component","Goals","Goal","Progresses","Progress","Profile","Friends","Account","Shop","Perk","Wishlist","WishlistItem","Auth","ActivateAccount","process","reducer","createReducer","SET_DATA","SET_AVATAR_V","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","__webpack_require__","__webpack_exports__","store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","react_router_dom","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.e307d5e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1mGAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    console.log(cookieConsent)\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    const accountId = sessionStorage.getItem('accountId')\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    return props.isAuthed ? (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            {!isActivating && (\n                                <Tooltip\n                                    title=\"Menu\"\n                                    placement=\"bottomLeft\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        icon={<MenuOutlined />}\n                                        onClick={toggleMenu}\n                                    />\n                                </Tooltip>\n                            )}\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {/* <Tooltip\n                                title=\"Dashboard\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                            </Tooltip> */}\n                            {!isActivating ? (\n                                <>\n                                    <Tooltip\n                                        title=\"Progresses\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('progresses')}\n                                            icon={<RocketFilled />}\n                                            onClick={() =>\n                                                openLink('progresses')\n                                            }\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Shop\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('shop')}\n                                            icon={<ShopOutlined />}\n                                            onClick={() => openLink('shop')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Friends\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('friends')}\n                                            icon={<TeamOutlined />}\n                                            onClick={() => openLink('friends')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Account\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <span\n                                            onClick={() => openLink('account')}\n                                            style={{\n                                                margin: '0px 10px',\n                                                cursor: 'pointer',\n                                            }}\n                                        >\n                                            <Avatar\n                                                src={getAvatar(\n                                                    accountId,\n                                                    props.avatarV\n                                                )}\n                                            />\n                                        </span>\n                                    </Tooltip>\n                                </>\n                            ) : (\n                                <Tooltip\n                                    title=\"Logout\"\n                                    placement=\"bottomRight\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </Tooltip>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={\n                                isActivating\n                                    ? 'Activate your account'\n                                    : props.pageTitle && props.pageTitle.main\n                            }\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                {!isActivating && (\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            {/* <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                            Dashboard\n                        </Menu.Item> */}\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                )}\n            </Layout>\n        </>\n    ) : ['/login', 'logout'].includes(props.history.location.pathname) ? (\n        props.children\n    ) : (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner} />\n                        <div className={classes.QuickButtonContiner}>\n                            <Tooltip\n                                title=\"Sign in or Sign up\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => props.history.push('/login')}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={props.title && props.title.main}\n                            subTitle={(props.title && props.title.sub) || ''}\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        avatarV: (state.account && state.account.image) || 0,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            if (res.data.errorCode === 'no account')\n                message.error('Account is not found. Please login.')\n            if (res.data.errorCode === 'bad data')\n                message.error(\n                    'Error. Please try one more time with correct data.'\n                )\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, options, callback) => {\n    if (typeof props.isAuthed === 'undefined') return\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n\n    if (!props.isAuthed) {\n        props.tryAuth(props, options.forceAuth)\n    }\n\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                processRes(res, props)\n                if (options.forceActivate) {\n                    if (props.isAuthed && res.data.status === 'no account') {\n                        props.history.push('/activate-account')\n                    }\n                }\n                props.setData(res.data)\n            })\n            .catch(err => {})\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\n\nimport startProgress from '../../Actions/startProgress'\nimport Tooltip from 'antd/es/tooltip'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        cursor: 'pointer',\n                    }}\n                />\n            }\n            actions={[\n                owner._id === account._id && setEditedGoal && (\n                    <Tooltip title=\"Edit\">\n                        <span\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                        >\n                            <EditFilled style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                (available || owner._id === account._id) && (\n                    <Tooltip title=\"Start progress\">\n                        <span\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                        >\n                            <RocketOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                owner._id === account._id && setInviteGoal && (\n                    <Tooltip title=\"Invite friends\">\n                        <span\n                            type=\"link\"\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                        >\n                            <TeamOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n            ]}\n        >\n            <Card.Meta\n                title={\n                    <span\n                        onClick={() =>\n                            props.history.push(\n                                '/goals/' + owner._id + '/' + goal.goalId\n                            )\n                        }\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {goal.name}\n                    </span>\n                }\n            />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport Tooltip from 'antd/es/tooltip'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Meta from 'antd/es/card/Meta'\n\nconst AddCard = props => (\n    <span onClick={props.action}>\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    style={{\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    onClick={props.action}\n                >\n                    <PlusCircleOutlined\n                        style={{\n                            fontSize: '60px',\n                        }}\n                    />\n                </div>\n            }\n            actions={[\n                <Tooltip title=\"Add goal\">\n                    <span key=\"3\" onClick={props.action}>\n                        <PlusCircleOutlined style={{ fontSize: '18px' }} />\n                    </span>\n                </Tooltip>,\n            ]}\n        >\n            <Meta\n                title={\n                    <span onClick={props.action} style={{ cursor: 'pointer' }}>\n                        {props.title}\n                    </span>\n                }\n                description={typeof props.sub !== 'undefined' && props.sub}\n            />\n        </Card>\n    </span>\n)\n\nexport default AddCard\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleFilled from '@ant-design/icons/PlusCircleFilled'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\nimport Tooltip from 'antd/es/tooltip'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n        props.setTitle({ main: 'Goals', sub: '' })\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <AddCard\n                        onClick={() => {\n                            setEditedGoal('')\n                            setEditGoalOpen(true)\n                        }}\n                        title=\"Add goal\"\n                    />\n\n                    {account.goals &&\n                        account.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={account}\n                                account={account}\n                                setEditedGoal={setEditedGoal}\n                                setEditGoalOpen={setEditGoalOpen}\n                                setInviteGoal={setInviteGoal}\n                            />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    {account.friendsData &&\n                        [account, ...account.friendsData].map(\n                            (friend, indexG) =>\n                                friend.goals.map((goal, index) =>\n                                    goal.users.includes(account._id) ||\n                                    friend._id === account._id ? (\n                                        <GoalCard\n                                            key={indexG + '_' + index}\n                                            goal={goal}\n                                            owner={friend}\n                                            available={goal.users.includes(\n                                                account._id\n                                            )}\n                                            account={account}\n                                            setEditedGoal={setEditedGoal}\n                                            setEditGoalOpen={setEditGoalOpen}\n                                            setInviteGoal={setInviteGoal}\n                                        />\n                                    ) : null\n                                )\n                        )}\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    {account.friendsData &&\n                        account.friendsData.map((friend, indexG) =>\n                            friend.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={indexG + '_' + index}\n                                    goal={goal}\n                                    owner={friend}\n                                    available={goal.users.includes(account._id)}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))\n                        )}\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    return rewardsGroup ? (\n        <>\n            <ol style={{ padding: 0 }}>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: goal.owner })\n    }\n    return goal ? (\n        <Card>\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </Card>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n        if (!props.keepPageTitle && props.setTitle)\n            props.setTitle({ main: 'Progresses', sub: '' })\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <div\n                style={{\n                    display: 'inline-block',\n                    margin: '4px 8px',\n                }}\n                onClick={() =>\n                    props.history.push('/progresses/' + progress._id)\n                }\n            >\n                <Card\n                    type=\"inner\"\n                    style={{\n                        width: 200,\n                    }}\n                    hoverable\n                    cover={\n                        <div\n                            onClick={() =>\n                                props.history.push(\n                                    '/progresses/' + progress._id\n                                )\n                            }\n                            style={{\n                                backgroundImage:\n                                    goal &&\n                                    'url(' +\n                                        (goal.images.length > 0 &&\n                                            goal.images[0]) +\n                                        ')',\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                            }}\n                        />\n                    }\n                >\n                    {goal && (\n                        <>\n                            <Meta title={goal.name} />\n                            <Meta\n                                title={'Made by ' + progress.worker}\n                                description={'In goal by ' + progress.owner}\n                            />\n                        </>\n                    )}\n                </Card>\n            </div>\n        )\n    })\n\n    return account ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"All roles\" key=\"1\">\n                    {progressesData &&\n                        progressesData.map((progress, index) => (\n                            <ProgressCard key={index} progress={progress} />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.worker === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.owner === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.experts.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.experts.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.supporters.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.supporters.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\nimport Card from 'antd/es/card'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Card>\n            <Comment\n                actions={[\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {message.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeLikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'likeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.likes.length}\n                        </span>\n                    </span>,\n                    <span key=\"comment-basic-dislike\">\n                        <Tooltip title=\"Dislike\">\n                            {message.dislikes.includes(account._id) ? (\n                                <DislikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeDislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <DislikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'dislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.dislikes.length}\n                        </span>\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                replyToMessage: message.messageId,\n                                editedMessage: '',\n                            })\n                        }}\n                    >\n                        Reply to\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                messageValue: message.text,\n                                editedMessage: message.messageId,\n                                replyToMessage: '',\n                            })\n                        }}\n                    >\n                        Edit\n                    </span>,\n                ]}\n                author={\n                    <a>\n                        {account.friendsData.find(\n                            item => item._id === message.author\n                        ).name +\n                            ' (' +\n                            message.author +\n                            ')'}\n                    </a>\n                }\n                avatar={\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            message.author +\n                            '/avatar'\n                        }\n                    />\n                }\n                content={\n                    message.action === 'message' ? (\n                        <p>{message.text}</p>\n                    ) : message.action === 'image' ? (\n                        <div\n                            style={{\n                                backgroundImage: 'url(' + message.text + ')',\n                                width: '200px',\n                                height: '200px',\n                                backgroundSize: 'cover',\n                                cursor: 'pointer',\n                            }}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    previewImage: message.text,\n                                })\n                            }\n                        />\n                    ) : null\n                }\n                datetime={\n                    <span>\n                        <TimeAgo datetime={message.date} live />\n                    </span>\n                }\n            >\n                {props.children}\n            </Comment>\n        </Card>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as classes from './Messages.module.css'\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\nimport Divider from 'antd/es/divider'\nimport Drawer from 'antd/es/drawer'\nimport Activity from './Activity'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState, setData } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                }}\n                className={classes.Messages}\n            >\n                {getMessages(progress.messages)}\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: '0px',\n                        width: '100%',\n                        background: '#fff',\n                        left: '0px',\n                        padding: '0px 10px',\n                        boxShadow:\n                            '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                    }}\n                >\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </Button>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </Button>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                        rows={1}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        icon={<SendOutlined />}\n                                        size=\"large\"\n                                        type=\"link\"\n                                    />\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button\n                                            size=\"large\"\n                                            type=\"link\"\n                                            icon={\n                                                imageLoading ? (\n                                                    <LoadingOutlined />\n                                                ) : (\n                                                    <PictureOutlined />\n                                                )\n                                            }\n                                        />\n                                    </Upload>\n\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={() =>\n                                            setState({\n                                                ...state,\n                                                activityOpen: true,\n                                            })\n                                        }\n                                    >\n                                        Activity and settings\n                                    </Button>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                style={{ margin: '0px 20px 50px 0px' }}\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: progress.worker })\n    }\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n\n            <Messages\n                data={data}\n                setData={setData}\n                state={state}\n                setState={setState}\n            />\n\n            <Drawer\n                title=\"Progress activity and settings\"\n                placement=\"right\"\n                closable={true}\n                onClose={() => setState({ ...state, activityOpen: false })}\n                visible={state.activityOpen}\n                width={'100%'}\n            >\n                <Activity\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            </Drawer>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import axios from 'axios'\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        if (forceLogin) props.history.push('/login')\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data))\n            }\n        })\n        .catch(err => {})\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Wallet' })\n    return (\n        props.account.wallet &&\n        props.account.wallet.map((money, index) => (\n            <div\n                onClick={() => props.history.push('/profile/' + money.user)}\n                style={{ display: 'inline-block', margin: '4px 8px' }}\n            >\n                <Card\n                    key={index}\n                    type=\"inner\"\n                    style={{\n                        width: 200,\n                    }}\n                    cover={\n                        <span style={{ padding: '25px' }}>\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    money.user +\n                                    '/avatar'\n                                }\n                                size={150}\n                            />\n                        </span>\n                    }\n                    hoverable\n                    actions={[\n                        <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                            Go to the shop\n                        </Button>,\n                    ]}\n                >\n                    <Meta title={money.user} description={money.amount} />\n                </Card>\n            </div>\n        ))\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wallet)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account } = props\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendsData.find(item => item._id === user)\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <RewardsView\n                        goal={{\n                            rewardsGroups: [{ rewards: [perk], key: 1 }],\n                        }}\n                        groupKey={1}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    props.cancelTransaction(record.transaction._id, props)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        props.confirmTransaction(\n                                            record.transaction._id, props\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Card>\n            <Table columns={columns} dataSource={tableData} />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        cancelTransaction: (id, props) =>\n            dispatch(actions.cancelTransaction(id, props)),\n        confirmTransaction: (id, props) =>\n            dispatch(actions.confirmTransaction(id, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            min: 1,\n                            max: 100,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            max: 500,\n                            message: 'Please input the item description.',\n                        },\n                    ]}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item\n                        label=\"Price\"\n                        name=\"price\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the item price.',\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport processRes from '../../utils/processRes'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${mode || 'shop'}/${account._id}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        console.log(res.data)\n                        const perk =\n                            mode === 'wishlist'\n                                ? res.data.wishlistItem\n                                : res.data.perk\n                        setPerk(perk)\n                        setImages(\n                            perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: perkId,\n            })\n            .then(res => {\n                processRes(res, props)\n                props.setEditPerkOpen(false)\n                props.setData(res.data)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    processRes(res, props)\n                    props.setData(res.data)\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const connections = account.friendsData || []\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={deletePerk}\n            onFinish={onFinish}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AddPerk)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            `/${mode || 'shop'}/${owner._id}/${perkId}`\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                ...(owner._id === account._id && !props.onlyBuy\n                    ? [\n                          <Tooltip title=\"Edit\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() => {\n                                      setEditedPerk(perkId)\n                                      setEditPerkOpen(true)\n                                  }}\n                              >\n                                  <EditFilled style={{ fontSize: '18px' }} />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n\n                ...(props.mode === 'shop'\n                    ? [\n                          <Tooltip title=\"Buy\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() =>\n                                      props.buyPerk(account, perk, owner, props)\n                                  }\n                              >\n                                  <DollarCircleOutlined\n                                      style={{ fontSize: '18px' }}\n                                  />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        buyPerk: (account, perk, owner, props) =>\n            dispatch(actions.buyPerk(account, perk, owner, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(PerkCard)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        perkId={\n                            props.mode === 'wishlist'\n                                ? perk.itemId\n                                : perk.perkId\n                        }\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(WishlistAndPerks))\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Shop', sub: 'My items' })\n    }, [])\n\n    return props.account ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                <WishlistAndPerks mode=\"shop\" listKey=\"perks\" />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Shop)\n)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\nimport Tooltip from 'antd/es/tooltip'\nimport FrownOutlined from '@ant-design/icons/FrownOutlined'\nimport SmileOutlined from '@ant-design/icons/SmileOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        accountId,\n        acceptFriend,\n        addFriend,\n        unfriend,\n    } = props\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const { asIcons } = props\n    const ResultButtun = props =>\n        asIcons ? (\n            <Tooltip title={props.text}>\n                <span\n                    type=\"link\"\n                    key={props.key}\n                    onClick={props.onClick}\n                    style={{ fontSize: '18px' }}\n                >\n                    {props.icon}\n                </span>\n            </Tooltip>\n        ) : (\n            <Button {...props}>{props.text}</Button>\n        )\n\n    return [\n        props.additionalButton,\n        ...(invitingFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Accept\"\n                      key=\"0\"\n                      onClick={() => acceptFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n                  <ResultButtun\n                      text=\"Decline\"\n                      key=\"1\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : invitedFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Cancel invitation\"\n                      key=\"2\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : realFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      key=\"3\"\n                      onClick={() => unfriend(_id)}\n                      icon={<FrownOutlined />}\n                      text=\"Unfriend\"\n                      danger={true}\n                  />,\n              ]\n            : [\n                  <ResultButtun\n                      text=\"Become friends\"\n                      key=\"4\"\n                      onClick={() => addFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n              ]),\n    ]\n}\n\nexport default FriendActionButton\n","import axios from 'axios'\nimport processRes from '../../utils/processRes'\nimport pullData from '../../utils/pullData'\n\nexport const acceptFriend = (id, props) => {\n    axios\n        .post('/api/friends/accept', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const addFriend = (id, props) => {\n    axios\n        .post('/api/friends/add', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const unfriend = (id, props) => {\n    axios\n        .post('/api/friends/unfriend', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport Tooltip from 'antd/es/tooltip'\nimport EyeOutlined from '@ant-design/icons/EyeOutlined'\nimport friendActionButton from './FriendActionButton'\nimport getAvatar from '../utils/getAvatar'\nimport {\n    acceptFriend,\n    unfriend,\n    addFriend,\n} from '../containers/Friends/methods'\nconst { Meta } = Card\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        accountId: props.account ? props.account._id : '',\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n        acceptFriend: acceptFriend,\n        unfriend: unfriend,\n        addFriend: addFriend,\n        additionalButton: (\n            <Tooltip title=\"See profile\">\n                <span\n                    type=\"link\"\n                    key=\"100\"\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                    style={{ fontSize: '18px' }}\n                >\n                    <EyeOutlined />\n                </span>\n            </Tooltip>\n        ),\n    })\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: 200, display: 'inline-block', margin: '4px 8px' }}\n            cover={\n                <span\n                    style={{ padding: '25px', cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    <Avatar\n                        src={getAvatar(props.friend._id, props.friend.image)}\n                        size={150}\n                    />\n                </span>\n            }\n            actions={friendActions}\n        >\n            <Meta\n                title={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend.name}\n                    </span>\n                }\n                description={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend._id}\n                    </span>\n                }\n            />\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst AddFriends = props => {\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        onFinish,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\nexport default withRouter(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst pendingFriends = props => {\n    const {\n        pendingFriendsOpen,\n        setPendingFriendsOpen,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    return (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Divider from 'antd/es/divider'\nimport message from 'antd/es/message'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account } = props\n    if (!account) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    message.warning(\n                        'Accounts with nickname ' +\n                            value.search +\n                            ' do not exist.'\n                    )\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    return (\n        <>\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <>\n                    <Button\n                        style={{ margin: '30px 0px ' }}\n                        type=\"primary\"\n                        onClick={() => setPendingFriendsOpen(true)}\n                    >\n                        Show pending friends\n                    </Button>\n                    <Divider type=\"horizontal\" />\n                </>\n            )}\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n\n            {realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                />\n            ))}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                onFinish={onFinish}\n                searchResult={searchResult}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n            <PendingFriends\n                pendingFriendsOpen={pendingFriendsOpen}\n                setPendingFriendsOpen={setPendingFriendsOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import message from 'antd/es/message'\n\nexport default err => {\n    message.error('Something failed. Try again.')\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport processRes from '../../utils/processRes'\nimport processResErr from '../../utils/processResErr'\nimport Modal from 'antd/es/modal'\nimport message from 'antd/es/message'\n\nconst Account = props => {\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const { account } = props\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Account', sub: '' })\n    }, [])\n\n    const loading = false\n\n    const deleteAccount = () => {\n        if (deleteField !== account._id) {\n            message.warning('The nickmanme is not correct.')\n        } else {\n            axios\n                .post('/api/account/delete', {\n                    accountId: account._id,\n                })\n                .then(res => {\n                    props.history.push('/logout')\n                })\n                .catch(err => {\n                    processResErr(err)\n                })\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {\n                processRes(res, props)\n            })\n            .catch(err => {\n                processResErr(err)\n            })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 0 },\n    }\n    return account && account.name ? (\n        <Card>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, 'avatar', () => {\n                        props.increaseAvatarV()\n                    })\n                }}\n            >\n                {account.image ? (\n                    <Avatar\n                        src={getAvatar(account._id, account.image)}\n                        size={150}\n                        style={{ margin: '25px' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: account.name,\n                    nickname: account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item label=\"Nickname\" name=\"nickname\">\n                    <Input disabled={true} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button\n                        type=\"dashed\"\n                        onClick={() => setDeleteVisible(true)}\n                        danger={true}\n                        size=\"large\"\n                    >\n                        Delete account\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                title=\"Delete account\"\n                visible={deleteVisible}\n                onOk={deleteAccount}\n                onCancel={() => {\n                    setDeleteVisible(false)\n                    setDeleteField('')\n                }}\n            >\n                <p>\n                    Please enter your nickname and press Ok to delete your\n                    account.\n                </p>\n                <Input onChange={e => setDeleteField(e.target.value)} />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAvatarV: v => dispatch(actions.setAvatarV(v)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Account)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport { acceptFriend, unfriend, addFriend } from '../Friends/methods'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n\n    const { profile, account } = props\n    if (!profile._id) return null\n    props.setPageTitle({ main: profile.name, sub: profile._id })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        accountId: account ? account._id : '',\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        acceptFriend: acceptFriend,\n        unfriend: unfriend,\n        addFriend: addFriend,\n        additionalButton: null,\n    })\n    return (\n        <Card>\n            <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                <Avatar\n                    src={getAvatar(profile._is, profile.image)}\n                    size={200}\n                />\n                <h1>{profile.name}</h1>\n                <h3>({profile._id})</h3>\n                {friendActions}\n            </div>\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Progresses\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                            keepPageTitle={true}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                    mode=\"shop\"\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Wishlist\">\n                        {profile.wishlist.map((item, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={item}\n                                owner={profile}\n                                account={account}\n                                setEditedPerk={() => {}}\n                                setEditPerkOpen={() => {}}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.history.push('/account')\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                            min: 2,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivateAccount))\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport Button from 'antd/es/button'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { perk, profile } = props\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={getAvatar(item, friendObj.image)}\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    shop\n                </span>\n            }\n        >\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        perk: state.perk,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst WishlistItem = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { wishlistItem, profile } = props\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    wishlist\n                </span>\n            }\n        >\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{wishlistItem.name}</h1>\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        wishlistItem: state.wishlistItem,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n\n    return props.account ? <WishlistAndPerks mode=\"wishlist\" /> : <span />\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n// import Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/login\" />\n    }\n\n    const routes = (\n        <Switch>\n            <Route path=\"/goals\" exact component={Goals} />\n            <Route path=\"/goals\" component={Goal} />\n\n            <Route path=\"/progresses\" exact component={Progresses} />\n            <Route path=\"/progresses\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/friends\" exact component={Friends} />\n\n            <Route path=\"/account\" exact component={Account} />\n            {/* <Route\n                    path=\"/dashboard\"\n                    exact\n                    component={withProps(Dashboard, generalProps)}\n                /> */}\n\n            <Route path=\"/shop\" exact component={Shop} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" exact component={Wishlist} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n            <Route path=\"/logout\" exact component={Logout} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            {isAuthed ? (\n                <Redirect to=\"/progresses\" />\n            ) : (\n                <Redirect to=\"/login\" />\n            )}\n        </Switch>\n    )\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    account: {},\n    profile: {},\n    pageTitle: {},\n    isAuthed: false,\n    wishlistItem: null,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            if (action.data.account) state.account = action.data.account\n            if (action.data.profile) state.profile = action.data.profile\n            if (action.data.wishlistItem)\n                state.wishlistItem = action.data.wishlistItem\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}