{"version":3,"sources":["containers/Auth/Auth.module.css","components/Layout/Layout.module.css","containers/Account/Account.module.css","containers/Auth/Logout/Logout.tsx","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","components/Layout/Layout.tsx","utils/checkAuth.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.js","components/FriendCard.js","containers/Friends/Friends.tsx","containers/Account/Account.tsx","utils/checkImageExists.js","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Layout","siteLayoutSiteLayoutBackground","siteLayoutSiteLayoutMain","ItemWrapper","Icon","ItemText","Avatar","Logout","this","props","onLogout","react_default","a","createElement","Redirect","to","Component","Svg","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","Header","Content","Sider","selectedKey","pathname","split","undefined","console","log","isAuthenticated","es_layout","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","MenuOutlined_default","Item","RocketOutlined_default","AimOutlined_default","SettingOutlined_default","TeamOutlined_default","HeartOutlined_default","UserOutlined_default","LogoutOutlined_default","pullData","data","setData","options","objectSpread","forceAuth","forceActivate","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","_id","checkAuth","user","status","then","res","catch","err","uploadFile","file","size","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","visible","title","closable","onCancel","onOk","rewardToSave","readOnlyError","destroyOnClose","okText","es_select","placeholder","onSelect","style","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","WrapTabNode","DropTarget","drop","monitor","dragKey","getItem","hoverKey","moveTabNode","connect","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","assign","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","account","friendsData","connectionsSelect","avatar","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","message","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","nickname","success","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","hoverable","cover","backgroundImage","backgroundSize","actions","PlusCircleOutlined_default","ownerId","Meta","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","cursor","startProgress","defaultActiveKey","alignItems","justifyContent","fontSize","goals","Goals_GoalCard","indexG","users","includes","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","page_header","backIcon","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","logout","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","accountId","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","tooltip","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","flex","overflow","flexDirection","getMessages","Progress_ProgressMessage","replies","ref","autoSize","minRows","maxRows","rows","showUploadList","marginLeft","LoadingOutlined_default","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","activityOpen","Progress_Messages","drawer","placement","onClose","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transactionId","transaction","from","tableData","sorted","Date","getTime","AddPerk","setPerk","perkId","setEditPerkOpen","setEditedPerk","onlyBuy","currency","buyPerk","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","WishlistAndPerks_Meta","listKey","Shop_PerkCard","_fetchMyAPI","fetchMyAPI","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","unfriend","FriendCard","components_FriendActionButton","FriendCard_Meta","Friends","addFriendOpen","setAddFriendOpen","pendingFriendsOpen","setPendingFriendsOpen","searchResult","setSearchResult","friendRef","fullFriend","addFriendModal","min","components_FriendCard","pendingFriendsModal","margin","Friends_Meta","Math","floor","random","imageV","setImageV","imageExists","setImageExists","image_url","onerror","checkImageExists","icons_PlusOutlined","whitespace","pattern","disabled","friendData","containers_Progresses_Progresses","perks","nicknameNotUnique","Perk_Item","WishlistItem","wishlistItem","setIsAuthenticated","redirectTo","routes","Switch","Route","exact","component","Goals","Goal","Progresses","Progress","Profile","Account","Shop","Perk","Wishlist","Auth","ActivateAccount","process","baseURL","app","BrowserRouter","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.e4f57ad0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"siteLayoutSiteLayoutBackground\":\"Layout_siteLayoutSiteLayoutBackground__3hzn7\",\"siteLayoutSiteLayoutMain\":\"Layout_siteLayoutSiteLayoutMain__31K3l\",\"ItemWrapper\":\"Layout_ItemWrapper__1epI5\",\"Icon\":\"Layout_Icon__1H3fU\",\"ItemText\":\"Layout_ItemText__3u4uH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n// type Props = {\n//     onLogout: () => {},\n// }\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout()\n    }\n\n    render() {\n        return <Redirect to=\"/login\" />\n    }\n}\n\nexport default Logout\n","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Layout from 'antd/es/layout'\nimport Menu from 'antd/es/menu'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartOutlined from '@ant-design/icons/HeartOutlined'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport SettingOutlined from '@ant-design/icons/SettingOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\n\nconst { Header, Sider, Content } = Layout\n\nconst AccountLayout = props => {\n    const [state, setState] = useState()\n\n    const toggle = () => {\n        setState(!state)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    console.log(selectedKey)\n\n    return (\n        <>\n            {props.isAuthenticated ? (\n                <Layout className={classes.Layout}>\n                    <Header className={classes.siteLayoutSiteLayoutBackground}>\n                        <Menu\n                            theme=\"light\"\n                            mode=\"horizontal\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => props.history.push('/' + key)}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            <Menu.Item key=\"dashboard\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <RocketOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Dashboard\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"progresses\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <RocketOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Progresses\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <AimOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Goals\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <SettingOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>Shop</div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <TeamOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Friends\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <HeartOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Wishlist\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"account\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <UserOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Account\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\">\n                                <div className={classes.ItemWrapper}>\n                                    <div className={classes.Icon}>\n                                        <LogoutOutlined />\n                                    </div>\n                                    <div className={classes.ItemText}>\n                                        Logout\n                                    </div>\n                                </div>\n                            </Menu.Item>\n                        </Menu>\n                    </Header>\n                    <Content className={classes.siteLayoutSiteLayoutMain}>\n                        {props.children}\n                    </Content>\n                </Layout>\n            ) : (\n                props.children\n            )}\n        </>\n    )\n}\n\nexport default withRouter(AccountLayout)\n","import Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst cookies = new Cookies()\n\nexport default () => {\n    sessionStorage.setItem('systemRefresh', '0')\n\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n\n        return userId._id\n    } else {\n        return false\n    }\n}\n","import axios from 'axios'\nimport checkAuth from './checkAuth'\n\nexport default (props, data, setData, options) => {\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n    const isAuthenticated = checkAuth()\n    if (options.forceAuth) {\n        if (!isAuthenticated) {\n            props.history.push({\n                pathname: '/login',\n                state: props.history.location.pathname,\n            })\n        }\n    }\n    if (options.forceActivate) {\n        if (\n            props.isAuthenticated &&\n            data.user &&\n            !data.user.status === 'notactivated'\n        ) {\n            props.history.push('/activate-account')\n        }\n    }\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                if (res.data.status && res.data.status === 'no account')\n                    props.history.push('/activate-account')\n                setData({ ...res.data, isAuthenticated })\n                return res.data\n            })\n            .catch(err => {})\n    } else return\n}\n","import axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    console.log(props.rewards)\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    const rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nimport startProgress from '../../Actions/startProgress'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && setEditedGoal && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {(available || owner._id === account._id) && (\n                        <Button\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Start a progress\n                        </Button>\n                    )}\n                    {owner._id === account._id && setInviteGoal && (\n                        <Button\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Invite friends\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Card.Meta title={goal.name} description={goal.description} />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <Card title=\"Important goals for me and people I care\">\n                        <Card\n                            type=\"inner\"\n                            style={{ width: 200, display: 'inline-block' }}\n                            hoverable\n                            cover={\n                                <div\n                                    style={{\n                                        height: 200,\n                                        width: 200,\n                                        backgroundSize: 'cover',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    <PlusCircleOutlined\n                                        style={{\n                                            fontSize: '60px',\n                                        }}\n                                    />\n                                </div>\n                            }\n                            actions={[\n                                <Button\n                                    key=\"1\"\n                                    onClick={() => {\n                                        setEditedGoal('')\n                                        setEditGoalOpen(true)\n                                    }}\n                                    icon={<PlusCircleOutlined />}\n                                >\n                                    Add goal\n                                </Button>,\n                            ]}\n                        >\n                            <Meta title=\"Add a goal\" description=\"\" />\n                        </Card>\n\n                        {account.goals &&\n                            account.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={index}\n                                    goal={goal}\n                                    owner={account}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    <Card title=\"Important goals that I can work on\">\n                        {account.friendsData &&\n                            [account, ...account.friendsData].map(\n                                (friend, indexG) =>\n                                    friend.goals.map((goal, index) =>\n                                        goal.users.includes(account._id) ||\n                                        friend._id === account._id ? (\n                                            <GoalCard\n                                                key={indexG + '_' + index}\n                                                goal={goal}\n                                                owner={friend}\n                                                available={goal.users.includes(\n                                                    account._id\n                                                )}\n                                                account={account}\n                                                setEditedGoal={setEditedGoal}\n                                                setEditGoalOpen={\n                                                    setEditGoalOpen\n                                                }\n                                                setInviteGoal={setInviteGoal}\n                                            />\n                                        ) : null\n                                    )\n                            )}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    <Card title=\"Important goals created by my friends\">\n                        {account.friendsData &&\n                            account.friendsData.map((friend, indexG) =>\n                                friend.goals.map((goal, index) => (\n                                    <GoalCard\n                                        key={indexG + '_' + index}\n                                        goal={goal}\n                                        owner={friend}\n                                        available={goal.users.includes(\n                                            account._id\n                                        )}\n                                        account={account}\n                                        setEditedGoal={setEditedGoal}\n                                        setEditGoalOpen={setEditGoalOpen}\n                                        setInviteGoal={setInviteGoal}\n                                    />\n                                ))\n                            )}\n                    </Card>\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    console.log(rewardsGroup)\n    return rewardsGroup ? (\n        <>\n            <ol>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                    display: 'inline-block',\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        )\n    })\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"All roles\" key=\"1\">\n                    <Card title=\"All progresses where I have a role\">\n                        {progressesData &&\n                            progressesData.map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    <Card title=\"All progresses where I am achieving goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.worker === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    <Card title=\"All progresses where I motivate friends to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.owner === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    <Card title=\"All progresses where I check and approve progresses\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.experts.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.experts.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    <Card title=\"All progresses where I support friend to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.supporters.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.supporters.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                        console.log('HURRAY')\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        console.log('jjjjj')\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Comment\n            actions={[\n                <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Like\">\n                        {message.likes.includes(account._id) ? (\n                            <LikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeLikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <LikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'likeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.likes.length}\n                    </span>\n                </span>,\n                <span key=\"comment-basic-dislike\">\n                    <Tooltip title=\"Dislike\">\n                        {message.dislikes.includes(account._id) ? (\n                            <DislikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeDislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <DislikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'dislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.dislikes.length}\n                    </span>\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            replyToMessage: message.messageId,\n                            editedMessage: '',\n                        })\n                    }}\n                >\n                    Reply to\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            messageValue: message.text,\n                            editedMessage: message.messageId,\n                            replyToMessage: '',\n                        })\n                    }}\n                >\n                    Edit\n                </span>,\n            ]}\n            author={\n                <a>\n                    {account.friendsData.find(\n                        item => item._id === message.author\n                    ).name +\n                        ' (' +\n                        message.author +\n                        ')'}\n                </a>\n            }\n            avatar={\n                <Avatar\n                    src={\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                        message.author +\n                        '/avatar'\n                    }\n                />\n            }\n            content={\n                message.action === 'message' ? (\n                    <p>{message.text}</p>\n                ) : message.action === 'image' ? (\n                    <div\n                        style={{\n                            backgroundImage: 'url(' + message.text + ')',\n                            width: '200px',\n                            height: '200px',\n                            backgroundSize: 'cover',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() =>\n                            setState({ ...state, previewImage: message.text })\n                        }\n                    />\n                ) : null\n            }\n            datetime={\n                <span>\n                    <TimeAgo datetime={message.date} live />\n                </span>\n            }\n        >\n            {props.children}\n        </Comment>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        flex: 1,\n                        overflow: 'auto',\n                    }}\n                >\n                    {getMessages(progress.messages)}\n                </div>\n                <div>\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </span>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </span>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 4, maxRows: 8 }}\n                                        rows={4}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        type=\"primary\"\n                                    >\n                                        Send message\n                                    </Button>\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button style={{ marginLeft: '20px' }}>\n                                            {imageLoading ? (\n                                                <>\n                                                    <LoadingOutlined /> Loading\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <PlusOutlined /> Add a photo\n                                                </>\n                                            )}\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            console.log(milestone)\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n            <div\n                style={{\n                    height: '100%',\n                    flexDirection: 'column',\n                    overflow: 'hidden',\n                    display: 'flex',\n                }}\n            >\n                <PageHeader\n                    className=\"site-page-header\"\n                    title={goal.name}\n                    backIcon={false}\n                />\n                <div>\n                    <Button\n                        type=\"primary\"\n                        onClick={() =>\n                            setState({ ...state, activityOpen: true })\n                        }\n                    >\n                        Show activity and settings\n                    </Button>\n                </div>\n                <Messages\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n\n                <Drawer\n                    title=\"Activity\"\n                    placement=\"right\"\n                    closable={true}\n                    onClose={() => setState({ ...state, activityOpen: false })}\n                    visible={state.activityOpen}\n                    width={'90%'}\n                >\n                    <Activity\n                        data={data}\n                        setData={setData}\n                        state={state}\n                        setState={setState}\n                    />\n                </Drawer>\n                <Modal\n                    visible={state.previewImage}\n                    footer={null}\n                    onCancel={() => setState({ ...state, previewImage: '' })}\n                >\n                    <img\n                        alt=\"example\"\n                        style={{ width: '100%' }}\n                        src={state.previewImage}\n                    />\n                </Modal>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    return (\n        <Card title=\"Your wallet with all money that you have\">\n            {props.data.account.wallet &&\n                props.data.account.wallet.map((money, index) => (\n                    <Card\n                        key={index}\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        cover={\n                            <span\n                                onClick={() =>\n                                    props.history.push('/progile/' + money.user)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        money.user +\n                                        '/avatar'\n                                    }\n                                    size={100}\n                                />\n                            </span>\n                        }\n                        hoverable\n                        actions={[\n                            <Button\n                                key=\"1\"\n                                onClick={() => {\n                                    props.history.push('/progile/' + money.user)\n                                }}\n                                icon={<PlusCircleOutlined />}\n                            >\n                                Go to the shop\n                            </Button>,\n                        ]}\n                    >\n                        <Meta title={money.amount} description={money.user} />\n                    </Card>\n                ))}\n        </Card>\n    )\n}\n\nexport default withRouter(Wallet)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\n\nconst Transactions = props => {\n    const { account } = props.data\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const confirmTransaction = transactionId => {\n        axios\n            .post('/api/shop/confirm', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const cancelTransaction = transactionId => {\n        axios\n            .post('/api/shop/cancel', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk => {\n                console.log(perk)\n                if (perk.simple) return perk.simple\n                else\n                    return (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: [perk], key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )\n            },\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    cancelTransaction(record.transaction._id)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        confirmTransaction(\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    console.log(account)\n    return <Table columns={columns} dataSource={tableData} />\n}\n\nexport default withRouter(Transactions)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [previewImage, setPreviewImage] = useState('')\n    const [images, setImages] = useState([])\n\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${props.mode || 'shop'}/${props.nickname}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        setPerk(res.data.perk)\n                        setImages(\n                            res.data.perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${props.mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: props.perkId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditPerkOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${props.mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData || []\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    perk || {\n                        name: 'New item',\n                    }\n                }\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\">\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Button\n                            type=\"link\"\n                            onClick={deletePerk}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerk\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const { perk, owner, account, setEditedPerk, setEditPerkOpen } = props\n\n    const buyPerk = () => {\n        const currency = account.wallet.find(item => item.user === owner._id)\n        if (currency && currency.amount >= perk.price) {\n            axios\n                .post('/api/shop/buy', {\n                    perkId: perk.perkId,\n                    ownerId: owner._id,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        props.setData({ ...props.data, ...res.data })\n                    }\n                })\n                .catch(err => {})\n        } else {\n            alert(\n                'You cannot buy this item as you do not have enough money from this user.'\n            )\n        }\n    }\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/shop/' + owner._id + '/' + perk.perkId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && !props.onlyBuy && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedPerk(perk.perkId)\n                                setEditPerkOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {props.mode === 'shop' && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                buyPerk()\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Buy\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { data, setData } = props\n    const { account } = data\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                account={account}\n                setEditPerkOpen={setEditPerkOpen}\n                setData={setData}\n                data={data}\n                perkId={editedPerk}\n                nickname={account && account._id}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <Card title=\"Nice things that you can do or give people that you care\">\n            <Card\n                type=\"inner\"\n                style={{ width: 200, display: 'inline-block' }}\n                hoverable\n                cover={\n                    <div\n                        style={{\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <PlusCircleOutlined\n                            style={{\n                                fontSize: '60px',\n                            }}\n                        />\n                    </div>\n                }\n                actions={[\n                    <Button\n                        key=\"1\"\n                        onClick={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        icon={<PlusCircleOutlined />}\n                    >\n                        Add item\n                    </Button>,\n                ]}\n            >\n                <Meta title=\"Add an item\" description=\"\" />\n            </Card>\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </Card>\n    )\n}\n\nexport default withRouter(WishlistAndPerks)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Perks from './Perks'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <Tabs>\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                {/* <Perks data={data} setData={setData} /> */}\n                <WishlistAndPerks\n                    data={data}\n                    setData={setData}\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet data={data} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions data={data} setData={setData} />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport axios from 'axios'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        callback,\n        accountId,\n    } = props\n\n    const acceptFriend = id => {\n        axios\n            .post('/api/friends/accept', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const addFriend = id => {\n        axios\n            .post('/api/friends/add', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const unfriend = id => {\n        axios\n            .post('/api/friends/unfriend', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    if (accountId.toString() === _id.toString()) return null\n\n    return invitingFriends.find(\n        item => item.friend.toString() === _id.toString()\n    )\n        ? [\n              <Button\n                  key=\"0\"\n                  onClick={() => acceptFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Accept\n              </Button>,\n              <Button\n                  key=\"1\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Decline\n              </Button>,\n          ]\n        : invitedFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"2\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Cancel invitation\n              </Button>,\n          ]\n        : realFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"3\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Unfriend\n              </Button>,\n          ]\n        : [\n              <Button\n                  key=\"4\"\n                  onClick={() => addFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Become friends\n              </Button>,\n          ]\n}\n\nexport default FriendActionButton\n","import React from 'react'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport pullData from '../utils/pullData'\nimport FriendActionButton from './FriendActionButton'\nconst { Meta } = Card\n\nconst FriendCard = props => (\n    <Card\n        type=\"inner\"\n        style={{ width: 200, display: 'inline-block' }}\n        cover={\n            <span\n                onClick={() =>\n                    props.history.push('/profile/' + props.friend._id)\n                }\n            >\n                <Avatar\n                    src={\n                        props.friend.image &&\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            props.friend._id +\n                            '/avatar'\n                    }\n                    size={100}\n                />\n            </span>\n        }\n        actions={[\n            <FriendActionButton\n                accountId={props.account ? props.account._id : ''}\n                realFriends={props.realFriends}\n                invitedFriends={props.invitedFriends}\n                invitingFriends={props.invitingFriends}\n                _id={props.friend._id}\n                callback={() =>\n                    pullData(props, props.data, props.setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />,\n        ]}\n    >\n        <Meta title={props.friend.name} description={props.friend._id} />\n    </Card>\n)\n\nexport default FriendCard\n","import React, { useState, useEffect } from 'react'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nconst { Meta } = Card\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!data) return null\n    const { account } = data\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    alert('Accounts with this nickname do not exist.')\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const addFriendModal = (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n\n    const pendingFriendsModal = (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My friends\"\n                backIcon={false}\n            />\n\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <Button\n                    style={{ margin: '30px 0px ' }}\n                    type=\"primary\"\n                    onClick={() => setPendingFriendsOpen(true)}\n                >\n                    Show pending friends\n                </Button>\n            )}\n            <Card>\n                <Card\n                    onClick={() => setAddFriendOpen(true)}\n                    type=\"inner\"\n                    style={{ width: 200, display: 'inline-block' }}\n                    cover={\n                        <div\n                            style={{\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <PlusCircleOutlined\n                                style={{\n                                    fontSize: '60px',\n                                }}\n                            />\n                        </div>\n                    }\n                >\n                    <Meta title=\"Add a friend\" />\n                </Card>\n\n                {realFriends.map(friend => (\n                    <FriendCard\n                        key={friend._id}\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                ))}\n            </Card>\n            {addFriendModal}\n            {pendingFriendsModal}\n        </>\n    )\n}\n\nexport default Friends\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Account = props => {\n    const [data, setData] = useState()\n    const [imageV, setImageV] = useState(Math.floor(Math.random() * 10000))\n    const [imageExists, setImageExists] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!imageExists && data)\n        checkImageExists(\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                data.account._id +\n                '/avatar',\n            setImageExists\n        )\n\n    const imageUrl =\n        imageExists &&\n        data &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' +\n            data.account._id +\n            '/avatar'\n    const loading = false\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {})\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    console.log(file)\n                    uploadFile(file, 800, 'avatar', () => {\n                        setImageV(Math.floor(Math.random() * 10000))\n                    })\n                }}\n            >\n                {imageUrl ? (\n                    <img\n                        src={imageUrl + '?version=' + imageV}\n                        alt=\"avatar\"\n                        style={{ width: '100%' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: data.account.name,\n                    nickname: data.account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input\n                        disabled={true}\n                        placeholder=\"Must be more than 1 character long\"\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    ) : null\n}\n\nexport default withRouter(Account)\n","export default (image_url, callback) => {\n    var img = new Image()\n    img.src = image_url\n    img.onload = () => callback(true)\n    img.onerror = () => callback(false)\n}\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport { withRouter } from 'react-router-dom'\nimport FriendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (!data || !data.profile) return null\n\n    const { profile, account } = data\n    const imageUrl =\n        profile &&\n        profile.image &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' + profile._id + '/avatar'\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={profile.name}\n                backIcon={false}\n            />\n            <div>Nickname - {profile._id}</div>\n            <Avatar src={imageUrl} size={200} />\n            <FriendActionButton\n                accountId={account ? account._id : ''}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                _id={profile._id}\n                callback={() =>\n                    pullData(props, data, setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Friends\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.nicknameNotUnique) {\n                    alert('THis nickname is taken. Try another one.')\n                }\n                props.history.push('/set-goals')\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default withRouter(ActivateAccount)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { perk, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={perk.name}\n                backIcon={false}\n            />\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Perk)\n","import React, { useEffect, useState } from 'react'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Modal from 'antd/es/modal'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { wishlistItem } = data\n\n    return wishlistItem ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={wishlistItem.name}\n                backIcon={false}\n            />\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default WishlistItem\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <WishlistAndPerks data={data} setData={setData} mode=\"wishlist\" />\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Logout from './containers/Auth/Logout/Logout'\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport Spinner from './components/UI/Spinner/Spinner'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\n\nconst cookies = new Cookies()\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState()\n    useEffect(() => {\n        async function fetchMyAPI() {\n            sessionStorage.setItem('systemRefresh', '0')\n            const token = cookies.get('auth_token')\n            const rememberMe = cookies.get('rememberme')\n            if (rememberMe) {\n                cookies.remove('rememberme', {\n                    path: '/',\n                })\n                if (rememberMe === 'false') {\n                    cookies.remove('auth_token', {\n                        path: '/',\n                    })\n                }\n            }\n            const userId = jwt.decode(token)\n            axios.defaults.headers.post['Content-Type'] = 'application/json'\n            axios.defaults.headers.put['Content-Type'] = 'application/json'\n            axios.defaults.headers.delete['Content-Type'] = 'application/json'\n            axios.defaults.headers.common.Accept = 'application/json'\n            if (token && userId) {\n                axios.defaults.headers.common['x-auth-token'] = token\n                axios.defaults.headers.post['x-auth-token'] = token\n                axios.defaults.headers.get['x-auth-token'] = token\n                axios.defaults.headers.delete['x-auth-token'] = token\n                axios.defaults.headers.put['x-auth-token'] = token\n                setIsAuthenticated(userId._id)\n            } else {\n                setIsAuthenticated(false)\n            }\n        }\n        fetchMyAPI()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const routes = (\n        <AccountLayout isAuthenticated={isAuthenticated}>\n            <Switch>\n                <Route path=\"/goals\" exact component={Goals} />\n                <Route path=\"/goals\" component={Goal} />\n\n                <Route path=\"/progresses\" exact component={Progresses} />\n                <Route path=\"/progresses\" component={Progress} />\n\n                <Route path=\"/profile\" component={Profile} />\n\n                <Route path=\"/friends\" exact component={Friends} />\n\n                <Route path=\"/account\" exact component={Account} />\n\n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/shop\" component={Perk} />\n                <Route path=\"/wishlist\" exact component={Wishlist} />\n                <Route path=\"/wishlist\" component={WishlistItem} />\n                {!isAuthenticated && (\n                    <Route path=\"/login\" exact component={Auth} />\n                )}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthenticated && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n\n                <Redirect to=\"/dashboard\" />\n            </Switch>\n        </AccountLayout>\n    )\n\n    return typeof isAuthenticated === 'undefined' ? null : redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>{routes}</div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}