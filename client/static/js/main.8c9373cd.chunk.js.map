{"version":3,"sources":["components/Layout/Layout.module.css","containers/Auth/Auth.module.css","containers/Account/Account.module.css","containers/Auth/Logout/Logout.tsx","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","components/Layout/Layout.tsx","utils/checkAuth.js","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","Actions/startProgress.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.js","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.js","components/FriendCard.js","containers/Friends/Friends.tsx","containers/Account/Account.tsx","utils/checkImageExists.js","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","index.tsx"],"names":["module","exports","Layout","Header","Main","MenuButtonContiner","QuickButtonContiner","Container","socialButtons","Avatar","Logout","this","props","onLogout","react_default","a","createElement","Redirect","to","Component","Svg","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","Content","menuVisible","setMenuVisible","toggleMenu","selectedKey","pathname","split","undefined","console","log","accountId","sessionStorage","getItem","buttonProps","ghost","size","shape","checkHighligh","url","openLink","isAuthenticated","es_layout","assign","MenuOutlined_default","HomeFilled_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","avatar","src","drawer","title","closable","onClose","visible","placement","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","LogoutOutlined_default","pullData","data","setData","options","objectSpread","forceAuth","forceActivate","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","_id","checkAuth","user","status","then","res","account","catch","err","uploadFile","file","filename","callback","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","readOnlyError","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","WrapTabNode","DropTarget","drop","monitor","dragKey","hoverKey","moveTabNode","connect","dropTarget","DragSource","beginDrag","id","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","name","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","message","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","AddGoal","setGoal","nickname","success","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","hoverable","cover","backgroundImage","backgroundSize","actions","PlusCircleOutlined_default","ownerId","Meta","description","Card","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","cursor","startProgress","defaultActiveKey","alignItems","justifyContent","fontSize","goals","Goals_GoalCard","indexG","users","includes","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","profile","page_header","backIcon","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","progressesData","ProgressCard","progress","Progresses_Meta","worker","Progresses_TabPane","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","logout","messageValue","newProgress","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","tooltip","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","flex","overflow","flexDirection","getMessages","Progress_ProgressMessage","replies","ref","autoSize","minRows","maxRows","rows","showUploadList","marginLeft","LoadingOutlined_default","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","activityOpen","Progress_Messages","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transactionId","transaction","from","tableData","sorted","Date","getTime","AddPerk","setPerk","perkId","setEditPerkOpen","setEditedPerk","onlyBuy","currency","buyPerk","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","WishlistAndPerks_Meta","listKey","Shop_PerkCard","_fetchMyAPI","fetchMyAPI","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","unfriend","FriendCard","components_FriendActionButton","FriendCard_Meta","Friends","addFriendOpen","setAddFriendOpen","pendingFriendsOpen","setPendingFriendsOpen","searchResult","setSearchResult","friendRef","fullFriend","addFriendModal","min","components_FriendCard","pendingFriendsModal","Friends_Meta","Math","floor","random","imageV","setImageV","imageExists","setImageExists","image_url","onerror","checkImageExists","icons_PlusOutlined","whitespace","pattern","disabled","friendData","containers_Progresses_Progresses","perks","nicknameNotUnique","Perk_Item","WishlistItem","wishlistItem","setIsAuthenticated","redirectTo","routes","Switch","Route","exact","component","Goals","Goal","Progresses","Progress","Profile","Account","Shop","Perk","Wishlist","Auth","ActivateAccount","process","baseURL","app","BrowserRouter","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.8c9373cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Main\":\"Layout_Main__3usmk\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n// type Props = {\n//     onLogout: () => {},\n// }\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout()\n    }\n\n    render() {\n        return <Redirect to=\"/login\" />\n    }\n}\n\nexport default Logout\n","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Layout from 'antd/es/layout'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n    console.log(selectedKey)\n    const accountId = sessionStorage.getItem('accountId')\n    const buttonProps = {\n        type: 'link',\n        ghost: true,\n        size: 'large',\n        shape: 'circle',\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n    return (\n        <>\n            {props.isAuthenticated ? (\n                <Layout className={classes.Layout}>\n                    <Header className={classes.Header}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Button\n                                {...buttonProps}\n                                icon={<MenuOutlined />}\n                                onClick={toggleMenu}\n                            />\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            <Button\n                                {...buttonProps}\n                                {...checkHighligh('dashboard')}\n                                icon={<HomeFilled />}\n                                onClick={() => openLink('dashboard')}\n                            />\n                            <Button\n                                {...buttonProps}\n                                {...checkHighligh('progresses')}\n                                icon={<RocketFilled />}\n                                onClick={() => openLink('progresses')}\n                            />\n                            <Button\n                                {...buttonProps}\n                                {...checkHighligh('shop')}\n                                icon={<ShopOutlined />}\n                                onClick={() => openLink('shop')}\n                            />\n                            <Button\n                                {...buttonProps}\n                                {...checkHighligh('friends')}\n                                icon={<TeamOutlined />}\n                                onClick={() => openLink('friends')}\n                            />\n                            <span\n                                onClick={() => openLink('account')}\n                                style={{ margin: '0px 10px' }}\n                            >\n                                <Avatar\n                                    src={\n                                        accountId &&\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                            accountId +\n                                            '/avatar'\n                                    }\n                                />\n                            </span>\n                        </div>\n                    </Header>\n                    <Content className={classes.Main}>{props.children}</Content>\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                                Dashboard\n                            </Menu.Item>\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                </Layout>\n            ) : (\n                props.children\n            )}\n        </>\n    )\n}\n\nexport default withRouter(AccountLayout)\n","import Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst cookies = new Cookies()\n\nexport default () => {\n    sessionStorage.setItem('systemRefresh', '0')\n\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n\n        return userId._id\n    } else {\n        return false\n    }\n}\n","import axios from 'axios'\nimport checkAuth from './checkAuth'\n\nexport default (props, data, setData, options) => {\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n    const isAuthenticated = checkAuth()\n    if (options.forceAuth) {\n        if (!isAuthenticated) {\n            props.history.push({\n                pathname: '/login',\n                state: props.history.location.pathname,\n            })\n        }\n    }\n    if (options.forceActivate) {\n        if (\n            props.isAuthenticated &&\n            data.user &&\n            !data.user.status === 'notactivated'\n        ) {\n            props.history.push('/activate-account')\n        }\n    }\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                if (res.data.status && res.data.status === 'no account')\n                    props.history.push('/activate-account')\n                if (res.data.account) {\n                    sessionStorage.setItem('accountId', res.data.account._id)\n                }\n                setData({ ...res.data, isAuthenticated })\n                return res.data\n            })\n            .catch(err => {})\n    } else return\n}\n","import axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    console.log(props.rewards)\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    const rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Button\n                            type=\"link\"\n                            onClick={deleteGoal}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId } = props\n    useEffect(() => {\n        if (props.goalId)\n            axios\n                .get(`/api/goals/${props.nickname}/${props.goalId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: props.goalId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditGoalOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={props.account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\n\nexport default AddGoal\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nimport startProgress from '../../Actions/startProgress'\n\nconst GoalCard = withRouter(props => {\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && setEditedGoal && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {(available || owner._id === account._id) && (\n                        <Button\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Start a progress\n                        </Button>\n                    )}\n                    {owner._id === account._id && setInviteGoal && (\n                        <Button\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Invite friends\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Card.Meta title={goal.name} description={goal.description} />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import axios from 'axios'\n\nexport default (goalId, ownerId, userId) => {\n    axios\n        .post('/api/progresses/add', { goalId, ownerId, userId })\n        .then(res => {})\n        .catch(err => {})\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport GoalCard from './GoalCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [data, setData] = useState({})\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { account } = data\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal\n                account={account}\n                setEditGoalOpen={setEditGoalOpen}\n                setData={setData}\n                data={data}\n                goalId={editedGoal}\n                nickname={account && account._id}\n            />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData\n                .filter(\n                    friend =>\n                        !(\n                            inviteGoal.progresses &&\n                            inviteGoal.progresses.find(\n                                item => item.user === friend._id\n                            )\n                        )\n                )\n                .map((friend, index) => (\n                    <div key={index}>\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + friend._id)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    friend._id +\n                                    '/avatar'\n                                }\n                                size={20}\n                            />\n                            {friend.name} - ({friend._id})\n                        </span>\n                        <Button\n                            onClick={() =>\n                                startProgress(\n                                    inviteGoal.goalId,\n                                    account._id,\n                                    friend._id\n                                )\n                            }\n                        >\n                            Invite\n                        </Button>\n                    </div>\n                ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <Card title=\"Important goals for me and people I care\">\n                        <Card\n                            type=\"inner\"\n                            style={{ width: 200, display: 'inline-block' }}\n                            hoverable\n                            cover={\n                                <div\n                                    style={{\n                                        height: 200,\n                                        width: 200,\n                                        backgroundSize: 'cover',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    <PlusCircleOutlined\n                                        style={{\n                                            fontSize: '60px',\n                                        }}\n                                    />\n                                </div>\n                            }\n                            actions={[\n                                <Button\n                                    key=\"1\"\n                                    onClick={() => {\n                                        setEditedGoal('')\n                                        setEditGoalOpen(true)\n                                    }}\n                                    icon={<PlusCircleOutlined />}\n                                >\n                                    Add goal\n                                </Button>,\n                            ]}\n                        >\n                            <Meta title=\"Add a goal\" description=\"\" />\n                        </Card>\n\n                        {account.goals &&\n                            account.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={index}\n                                    goal={goal}\n                                    owner={account}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    <Card title=\"Important goals that I can work on\">\n                        {account.friendsData &&\n                            [account, ...account.friendsData].map(\n                                (friend, indexG) =>\n                                    friend.goals.map((goal, index) =>\n                                        goal.users.includes(account._id) ||\n                                        friend._id === account._id ? (\n                                            <GoalCard\n                                                key={indexG + '_' + index}\n                                                goal={goal}\n                                                owner={friend}\n                                                available={goal.users.includes(\n                                                    account._id\n                                                )}\n                                                account={account}\n                                                setEditedGoal={setEditedGoal}\n                                                setEditGoalOpen={\n                                                    setEditGoalOpen\n                                                }\n                                                setInviteGoal={setInviteGoal}\n                                            />\n                                        ) : null\n                                    )\n                            )}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    <Card title=\"Important goals created by my friends\">\n                        {account.friendsData &&\n                            account.friendsData.map((friend, indexG) =>\n                                friend.goals.map((goal, index) => (\n                                    <GoalCard\n                                        key={indexG + '_' + index}\n                                        goal={goal}\n                                        owner={friend}\n                                        available={goal.users.includes(\n                                            account._id\n                                        )}\n                                        account={account}\n                                        setEditedGoal={setEditedGoal}\n                                        setEditGoalOpen={setEditGoalOpen}\n                                        setInviteGoal={setInviteGoal}\n                                    />\n                                ))\n                            )}\n                    </Card>\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goals)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    console.log(rewardsGroup)\n    return rewardsGroup ? (\n        <>\n            <ol>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { goal, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                    <Modal\n                        visible={previewImage}\n                        footer={null}\n                        onCancel={() => setPreviewImage('')}\n                    >\n                        <img\n                            alt=\"example\"\n                            style={{ width: '100%' }}\n                            src={previewImage}\n                        />\n                    </Modal>\n                </>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Goal)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    const [data, setData] = useState(\n        props.progressesData && props.account ? { ...props } : {}\n    )\n\n    useEffect(() => {\n        if (!props.progressesData || !props.account)\n            pullData(props, data, setData, {})\n    }, [])\n\n    const { account, progressesData } = data\n\n    const ProgressCard = withRouter(props => {\n        const { progress } = props\n        const { goal } = progress\n        return (\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                    display: 'inline-block',\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        )\n    })\n    return account ? (\n        <>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"All roles\" key=\"1\">\n                    <Card title=\"All progresses where I have a role\">\n                        {progressesData &&\n                            progressesData.map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    <Card title=\"All progresses where I am achieving goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.worker === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    <Card title=\"All progresses where I motivate friends to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress => progress.owner === account._id\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    <Card title=\"All progresses where I check and approve progresses\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.experts.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.experts.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    <Card title=\"All progresses where I support friend to achieve goals\">\n                        {progressesData &&\n                            progressesData\n                                .filter(\n                                    progress =>\n                                        progress.goal &&\n                                        (progress.goal.supporters.includes(\n                                            account._id\n                                        ) ||\n                                            progress.goal.milestonesValues.find(\n                                                milestone =>\n                                                    milestone.supporters.includes(\n                                                        account._id\n                                                    )\n                                            ))\n                                )\n                                .map((progress, index) => (\n                                    <ProgressCard\n                                        key={index}\n                                        progress={progress}\n                                    />\n                                ))}\n                    </Card>\n                </TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progresses)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\n\nimport { Component } from 'react'\nimport * as wsActions from '../../websocketActions'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nlet currentCallbackId = 0\nconst callbacks = {}\n\nexport const addWSCallback = callback => {\n    currentCallbackId++\n    const callbackId = 'cb_' + currentCallbackId\n    callbacks[callbackId] = callback\n    return callbackId\n}\n\n// const fireCallback = id => {\n//     if (callbacks[id]) {\n//         callbacks[id]()\n//         delete callbacks[id]\n//     }\n// }\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.data.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'friendsData':\n                    this.props.setData({\n                        ...this.props.data,\n                        account: {\n                            ...this.props.data.account,\n                            friendsData: news.friendsData,\n                        },\n                    })\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    if (\n                        this.props.data.progress.__v ===\n                        news.progress.__v - 1\n                    ) {\n                        newProgress = diffpatcher.patch(\n                            this.props.data.progress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            ...this.props.data,\n                            progress: newProgress,\n                        })\n                        console.log('HURRAY')\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.data.progress,\n                        this.props.data.account.friends\n                    )\n                    break\n                case 'error':\n                    alert(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\n\nexport default withRouter(ReserveWebsite)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\n\nconst ProgressMessage = props => {\n    const { data, state, setState, message } = props\n    const { account } = data\n\n    const changeLikes = (type, messageId) => {\n        console.log('jjjjj')\n        wsActions.changeLikesMessage(data, type, messageId)\n    }\n    return (\n        <Comment\n            actions={[\n                <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Like\">\n                        {message.likes.includes(account._id) ? (\n                            <LikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeLikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <LikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'likeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.likes.length}\n                    </span>\n                </span>,\n                <span key=\"comment-basic-dislike\">\n                    <Tooltip title=\"Dislike\">\n                        {message.dislikes.includes(account._id) ? (\n                            <DislikeFilled\n                                onClick={() =>\n                                    changeLikes(\n                                        'removeDislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        ) : (\n                            <DislikeOutlined\n                                onClick={() =>\n                                    changeLikes(\n                                        'dislikeMessage',\n                                        message.messageId\n                                    )\n                                }\n                            />\n                        )}\n                    </Tooltip>\n                    <span style={{ paddingLeft: '8px' }}>\n                        {message.dislikes.length}\n                    </span>\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            replyToMessage: message.messageId,\n                            editedMessage: '',\n                        })\n                    }}\n                >\n                    Reply to\n                </span>,\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        setState({\n                            ...state,\n                            messageValue: message.text,\n                            editedMessage: message.messageId,\n                            replyToMessage: '',\n                        })\n                    }}\n                >\n                    Edit\n                </span>,\n            ]}\n            author={\n                <a>\n                    {account.friendsData.find(\n                        item => item._id === message.author\n                    ).name +\n                        ' (' +\n                        message.author +\n                        ')'}\n                </a>\n            }\n            avatar={\n                <Avatar\n                    src={\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                        message.author +\n                        '/avatar'\n                    }\n                />\n            }\n            content={\n                message.action === 'message' ? (\n                    <p>{message.text}</p>\n                ) : message.action === 'image' ? (\n                    <div\n                        style={{\n                            backgroundImage: 'url(' + message.text + ')',\n                            width: '200px',\n                            height: '200px',\n                            backgroundSize: 'cover',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() =>\n                            setState({ ...state, previewImage: message.text })\n                        }\n                    />\n                ) : null\n            }\n            datetime={\n                <span>\n                    <TimeAgo datetime={message.date} live />\n                </span>\n            }\n        >\n            {props.children}\n        </Comment>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [props.data.progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          data={data}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        flex: 1,\n                        overflow: 'auto',\n                    }}\n                >\n                    {getMessages(progress.messages)}\n                </div>\n                <div>\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    account._id +\n                                    '/avatar'\n                                }\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </span>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <span\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </span>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 4, maxRows: 8 }}\n                                        rows={4}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, data)\n                                        }\n                                        type=\"primary\"\n                                    >\n                                        Send message\n                                    </Button>\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        data,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button style={{ marginLeft: '20px' }}>\n                                            {imageLoading ? (\n                                                <>\n                                                    <LoadingOutlined /> Loading\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <PlusOutlined /> Add a photo\n                                                </>\n                                            )}\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(data, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            console.log(milestone)\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { data, state, setState } = props\n    const { progress } = data\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(data, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={data.account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { data, state, setState } = props\n    const { progress, account } = data\n    const { goal } = progress\n    return goal ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={goal.name}\n                backIcon={false}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable data={data} state={state} setState={setState} />\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(data)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n            >\n                <EditProgress data={data} state={state} setState={setState} />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Avatar from 'antd/es/avatar'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst { Meta } = Card\nconst { Item } = Descriptions\n\nconst Progress = props => {\n    const [data, setData] = useState({})\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { progress, account, profile } = data\n\n    if (!progress) return null\n\n    const { goal } = progress\n\n    return goal ? (\n        <>\n            {account && (\n                <ProgressWebsocket\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n            )}\n            <div\n                style={{\n                    height: '100%',\n                    flexDirection: 'column',\n                    overflow: 'hidden',\n                    display: 'flex',\n                }}\n            >\n                <PageHeader\n                    className=\"site-page-header\"\n                    title={goal.name}\n                    backIcon={false}\n                />\n                <div>\n                    <Button\n                        type=\"primary\"\n                        onClick={() =>\n                            setState({ ...state, activityOpen: true })\n                        }\n                    >\n                        Show activity and settings\n                    </Button>\n                </div>\n                <Messages\n                    data={data}\n                    setData={setData}\n                    state={state}\n                    setState={setState}\n                />\n\n                <Drawer\n                    title=\"Activity\"\n                    placement=\"right\"\n                    closable={true}\n                    onClose={() => setState({ ...state, activityOpen: false })}\n                    visible={state.activityOpen}\n                    width={'90%'}\n                >\n                    <Activity\n                        data={data}\n                        setData={setData}\n                        state={state}\n                        setState={setState}\n                    />\n                </Drawer>\n                <Modal\n                    visible={state.previewImage}\n                    footer={null}\n                    onCancel={() => setState({ ...state, previewImage: '' })}\n                >\n                    <img\n                        alt=\"example\"\n                        style={{ width: '100%' }}\n                        src={state.previewImage}\n                    />\n                </Modal>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Progress)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    return (\n        <Card title=\"Your wallet with all money that you have\">\n            {props.data.account.wallet &&\n                props.data.account.wallet.map((money, index) => (\n                    <Card\n                        key={index}\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        cover={\n                            <span\n                                onClick={() =>\n                                    props.history.push('/progile/' + money.user)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        money.user +\n                                        '/avatar'\n                                    }\n                                    size={100}\n                                />\n                            </span>\n                        }\n                        hoverable\n                        actions={[\n                            <Button\n                                key=\"1\"\n                                onClick={() => {\n                                    props.history.push('/progile/' + money.user)\n                                }}\n                                icon={<PlusCircleOutlined />}\n                            >\n                                Go to the shop\n                            </Button>,\n                        ]}\n                    >\n                        <Meta title={money.amount} description={money.user} />\n                    </Card>\n                ))}\n        </Card>\n    )\n}\n\nexport default withRouter(Wallet)\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\n\nconst Transactions = props => {\n    const { account } = props.data\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const confirmTransaction = transactionId => {\n        axios\n            .post('/api/shop/confirm', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const cancelTransaction = transactionId => {\n        axios\n            .post('/api/shop/cancel', {\n                transactionId,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    props.setData({ ...props.data, ...res.data })\n                }\n            })\n            .catch(err => {})\n    }\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk => {\n                console.log(perk)\n                if (perk.simple) return perk.simple\n                else\n                    return (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: [perk], key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )\n            },\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    cancelTransaction(record.transaction._id)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        confirmTransaction(\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    console.log(account)\n    return <Table columns={columns} dataSource={tableData} />\n}\n\nexport default withRouter(Transactions)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [previewImage, setPreviewImage] = useState('')\n    const [images, setImages] = useState([])\n\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${props.mode || 'shop'}/${props.nickname}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        setPerk(res.data.perk)\n                        setImages(\n                            res.data.perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${props.mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: props.perkId,\n            })\n            .then(res => {\n                props.setData({ ...props.data, ...res.data })\n                props.setEditPerkOpen(false)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${props.mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    props.setData({ ...props.data, ...res.data })\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData || []\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    perk || {\n                        name: 'New item',\n                    }\n                }\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\">\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Button\n                            type=\"link\"\n                            onClick={deletePerk}\n                            danger\n                            size=\"large\"\n                        >\n                            Delete\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerk\n","import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\n\nimport Button from 'antd/es/button'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const { perk, owner, account, setEditedPerk, setEditPerkOpen } = props\n\n    const buyPerk = () => {\n        const currency = account.wallet.find(item => item.user === owner._id)\n        if (currency && currency.amount >= perk.price) {\n            axios\n                .post('/api/shop/buy', {\n                    perkId: perk.perkId,\n                    ownerId: owner._id,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        props.setData({ ...props.data, ...res.data })\n                    }\n                })\n                .catch(err => {})\n        } else {\n            alert(\n                'You cannot buy this item as you do not have enough money from this user.'\n            )\n        }\n    }\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/shop/' + owner._id + '/' + perk.perkId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                <>\n                    {owner._id === account._id && !props.onlyBuy && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedPerk(perk.perkId)\n                                setEditPerkOpen(true)\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Edit\n                        </Button>\n                    )}\n                    {props.mode === 'shop' && (\n                        <Button\n                            key=\"1\"\n                            onClick={() => {\n                                buyPerk()\n                            }}\n                            icon={<PlusCircleOutlined />}\n                        >\n                            Buy\n                        </Button>\n                    )}\n                </>,\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Tabs from 'antd/es/tabs'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport axios from 'axios'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\n\nconst { Meta } = Card\nconst { TabPane } = Tabs\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { data, setData } = props\n    const { account } = data\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                account={account}\n                setEditPerkOpen={setEditPerkOpen}\n                setData={setData}\n                data={data}\n                perkId={editedPerk}\n                nickname={account && account._id}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <Card title=\"Nice things that you can do or give people that you care\">\n            <Card\n                type=\"inner\"\n                style={{ width: 200, display: 'inline-block' }}\n                hoverable\n                cover={\n                    <div\n                        style={{\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <PlusCircleOutlined\n                            style={{\n                                fontSize: '60px',\n                            }}\n                        />\n                    </div>\n                }\n                actions={[\n                    <Button\n                        key=\"1\"\n                        onClick={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        icon={<PlusCircleOutlined />}\n                    >\n                        Add item\n                    </Button>,\n                ]}\n            >\n                <Meta title=\"Add an item\" description=\"\" />\n            </Card>\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </Card>\n    )\n}\n\nexport default withRouter(WishlistAndPerks)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Perks from './Perks'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <Tabs>\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                {/* <Perks data={data} setData={setData} /> */}\n                <WishlistAndPerks\n                    data={data}\n                    setData={setData}\n                    mode=\"shop\"\n                    listKey=\"perks\"\n                />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet data={data} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions data={data} setData={setData} />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport axios from 'axios'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        callback,\n        accountId,\n    } = props\n\n    const acceptFriend = id => {\n        axios\n            .post('/api/friends/accept', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const addFriend = id => {\n        axios\n            .post('/api/friends/add', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    const unfriend = id => {\n        axios\n            .post('/api/friends/unfriend', {\n                id,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    callback()\n                }\n            })\n            .catch(err => {})\n    }\n\n    if (accountId.toString() === _id.toString()) return null\n\n    return invitingFriends.find(\n        item => item.friend.toString() === _id.toString()\n    )\n        ? [\n              <Button\n                  key=\"0\"\n                  onClick={() => acceptFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Accept\n              </Button>,\n              <Button\n                  key=\"1\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Decline\n              </Button>,\n          ]\n        : invitedFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"2\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Cancel invitation\n              </Button>,\n          ]\n        : realFriends.find(item => item.friend.toString() === _id.toString())\n        ? [\n              <Button\n                  key=\"3\"\n                  onClick={() => unfriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Unfriend\n              </Button>,\n          ]\n        : [\n              <Button\n                  key=\"4\"\n                  onClick={() => addFriend(_id)}\n                  icon={<PlusCircleOutlined />}\n              >\n                  Become friends\n              </Button>,\n          ]\n}\n\nexport default FriendActionButton\n","import React from 'react'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport pullData from '../utils/pullData'\nimport FriendActionButton from './FriendActionButton'\nconst { Meta } = Card\n\nconst FriendCard = props => (\n    <Card\n        type=\"inner\"\n        style={{ width: 200, display: 'inline-block' }}\n        cover={\n            <span\n                onClick={() =>\n                    props.history.push('/profile/' + props.friend._id)\n                }\n            >\n                <Avatar\n                    src={\n                        props.friend.image &&\n                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            props.friend._id +\n                            '/avatar'\n                    }\n                    size={100}\n                />\n            </span>\n        }\n        actions={[\n            <FriendActionButton\n                accountId={props.account ? props.account._id : ''}\n                realFriends={props.realFriends}\n                invitedFriends={props.invitedFriends}\n                invitingFriends={props.invitingFriends}\n                _id={props.friend._id}\n                callback={() =>\n                    pullData(props, props.data, props.setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />,\n        ]}\n    >\n        <Meta title={props.friend.name} description={props.friend._id} />\n    </Card>\n)\n\nexport default FriendCard\n","import React, { useState, useEffect } from 'react'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport PageHeader from 'antd/es/page-header'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nconst { Meta } = Card\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!data) return null\n    const { account } = data\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    alert('Accounts with this nickname do not exist.')\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const addFriendModal = (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n\n    const pendingFriendsModal = (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                            data={data}\n                            setData={setData}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My friends\"\n                backIcon={false}\n            />\n\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <Button\n                    style={{ margin: '30px 0px ' }}\n                    type=\"primary\"\n                    onClick={() => setPendingFriendsOpen(true)}\n                >\n                    Show pending friends\n                </Button>\n            )}\n            <Card>\n                <Card\n                    onClick={() => setAddFriendOpen(true)}\n                    type=\"inner\"\n                    style={{ width: 200, display: 'inline-block' }}\n                    cover={\n                        <div\n                            style={{\n                                height: 200,\n                                width: 200,\n                                backgroundSize: 'cover',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <PlusCircleOutlined\n                                style={{\n                                    fontSize: '60px',\n                                }}\n                            />\n                        </div>\n                    }\n                >\n                    <Meta title=\"Add a friend\" />\n                </Card>\n\n                {realFriends.map(friend => (\n                    <FriendCard\n                        key={friend._id}\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                        data={data}\n                        setData={setData}\n                    />\n                ))}\n            </Card>\n            {addFriendModal}\n            {pendingFriendsModal}\n        </>\n    )\n}\n\nexport default Friends\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nconst { Meta } = Card\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { uploadFile } from '../../utils/uploadFile'\nimport checkImageExists from '../../utils/checkImageExists'\n\nconst Account = props => {\n    const [data, setData] = useState()\n    const [imageV, setImageV] = useState(Math.floor(Math.random() * 10000))\n    const [imageExists, setImageExists] = useState(false)\n\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n    if (!imageExists && data)\n        checkImageExists(\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                data.account._id +\n                '/avatar',\n            setImageExists\n        )\n\n    const imageUrl =\n        imageExists &&\n        data &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' +\n            data.account._id +\n            '/avatar'\n    const loading = false\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {})\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    console.log(file)\n                    uploadFile(file, 800, 'avatar', () => {\n                        setImageV(Math.floor(Math.random() * 10000))\n                    })\n                }}\n            >\n                {imageUrl ? (\n                    <img\n                        src={imageUrl + '?version=' + imageV}\n                        alt=\"avatar\"\n                        style={{ width: '100%' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: data.account.name,\n                    nickname: data.account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input\n                        disabled={true}\n                        placeholder=\"Must be more than 1 character long\"\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    ) : null\n}\n\nexport default withRouter(Account)\n","export default (image_url, callback) => {\n    var img = new Image()\n    img.src = image_url\n    img.onload = () => callback(true)\n    img.onerror = () => callback(false)\n}\n","import React, { useEffect, useState } from 'react'\nimport PageHeader from 'antd/es/page-header'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport { withRouter } from 'react-router-dom'\nimport FriendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, data, setData, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n    if (!data || !data.profile) return null\n\n    const { profile, account } = data\n    const imageUrl =\n        profile &&\n        profile.image &&\n        'https://websiter.s3.us-east-2.amazonaws.com/' + profile._id + '/avatar'\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    return data ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={profile.name}\n                backIcon={false}\n            />\n            <div>Nickname - {profile._id}</div>\n            <Avatar src={imageUrl} size={200} />\n            <FriendActionButton\n                accountId={account ? account._id : ''}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                _id={profile._id}\n                callback={() =>\n                    pullData(props, data, setData, {\n                        forceAuth: false,\n                        forceActivate: false,\n                    })\n                }\n            />\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Friends\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </>\n    ) : null\n}\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.nicknameNotUnique) {\n                    alert('THis nickname is taken. Try another one.')\n                }\n                props.history.push('/set-goals')\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default withRouter(ActivateAccount)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { perk, profile } = data\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={perk.name}\n                backIcon={false}\n            />\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Perk)\n","import React, { useEffect, useState } from 'react'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport PageHeader from 'antd/es/page-header'\nimport Modal from 'antd/es/modal'\n\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, data, setData, {})\n    }, [])\n\n    const { wishlistItem } = data\n\n    return wishlistItem ? (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title={wishlistItem.name}\n                backIcon={false}\n            />\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default WishlistItem\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Shop = props => {\n    const [data, setData] = useState({})\n    useEffect(() => {\n        async function fetchMyAPI() {\n            await pullData(props, data, setData, {})\n        }\n        fetchMyAPI()\n    }, [])\n\n    return data.account ? (\n        <WishlistAndPerks data={data} setData={setData} mode=\"wishlist\" />\n    ) : (\n        <span />\n    )\n}\n\nexport default withRouter(Shop)\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Logout from './containers/Auth/Logout/Logout'\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport Spinner from './components/UI/Spinner/Spinner'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\n\nconst cookies = new Cookies()\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState()\n    const [account, setAccount] = useState()\n    useEffect(() => {\n        async function fetchMyAPI() {\n            sessionStorage.setItem('systemRefresh', '0')\n            const token = cookies.get('auth_token')\n            const rememberMe = cookies.get('rememberme')\n            if (rememberMe) {\n                cookies.remove('rememberme', {\n                    path: '/',\n                })\n                if (rememberMe === 'false') {\n                    cookies.remove('auth_token', {\n                        path: '/',\n                    })\n                }\n            }\n            const userId = jwt.decode(token)\n            axios.defaults.headers.post['Content-Type'] = 'application/json'\n            axios.defaults.headers.put['Content-Type'] = 'application/json'\n            axios.defaults.headers.delete['Content-Type'] = 'application/json'\n            axios.defaults.headers.common.Accept = 'application/json'\n            if (token && userId) {\n                axios.defaults.headers.common['x-auth-token'] = token\n                axios.defaults.headers.post['x-auth-token'] = token\n                axios.defaults.headers.get['x-auth-token'] = token\n                axios.defaults.headers.delete['x-auth-token'] = token\n                axios.defaults.headers.put['x-auth-token'] = token\n                setIsAuthenticated(userId._id)\n            } else {\n                setIsAuthenticated(false)\n            }\n        }\n        fetchMyAPI()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const routes = (\n        <AccountLayout isAuthenticated={isAuthenticated} account={account}>\n            <Switch>\n                <Route path=\"/goals\" exact component={Goals} />\n                <Route path=\"/goals\" component={Goal} />\n\n                <Route path=\"/progresses\" exact component={Progresses} />\n                <Route path=\"/progresses\" component={Progress} />\n\n                <Route path=\"/profile\" component={Profile} />\n\n                <Route path=\"/friends\" exact component={Friends} />\n\n                <Route path=\"/account\" exact component={Account} />\n\n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/shop\" component={Perk} />\n                <Route path=\"/wishlist\" exact component={Wishlist} />\n                <Route path=\"/wishlist\" component={WishlistItem} />\n                {!isAuthenticated && (\n                    <Route path=\"/login\" exact component={Auth} />\n                )}\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthenticated && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n\n                <Redirect to=\"/dashboard\" />\n            </Switch>\n        </AccountLayout>\n    )\n\n    return typeof isAuthenticated === 'undefined' ? null : redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>{routes}</div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}