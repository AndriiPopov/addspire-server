{"version":3,"sources":["components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/LoginModal.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","components/UserButton/UserButton.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/UI/MoreIcon.js","components/UI/ImageCarousel/ImageCarousel.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","components/Layout/Layout.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","components/MasonryCard.tsx","components/FollowButton.tsx","containers/Progress/Activity.tsx","components/Post/AddMessage.tsx","components/Post/Message.tsx","components/Post/Post.tsx","components/Post/AddPost.tsx","utils/pullData.js","containers/Progress/Progress.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Dashboard/DashboardEvents.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/Explore.tsx","components/AddCard/AddCard.tsx","components/UI/CustomEmpty.tsx","containers/Progresses/Progresses.tsx","containers/Dashboard/Dashboard.tsx","websocketActions/dashboard.tsx","containers/Blog/Blog.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","components/ProgressButton.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","websocketActions/wishlistAndPerks.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Dashboard/NotificationsTracker.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx","components/Layout/Layout.module.css"],"names":["module","exports","Container","socialButtons","Background","Dots","Avatar","Cookies","getAvatar","nickname","version","cookies","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","get","basicURL","react_default","a","createElement","modal","visible","loginVisible","onOk","document","body","removeAttribute","onCancel","setLoginVisible","destroyOnClose","maskClosable","footer","width","style","maxWidth","className","classes","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","concat","s","es_checkbox","checked","onChange","typography","Link","title","set","path","maxAge","open","processRes","res","data","logout","history","push","success","errorCode","message","warning","error","successCode","status","tryAuth","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","id","type","setData","setPageTitle","setFriendSearchResult","requestResource","ids","notRequestedIds","filter","includes","webSocket","readyState","send","JSON","stringify","messageCode","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","length","shift","attr","split","applyUpdateToPart","updatedFields","_step","applyDeleteToPart","splice","_iterator","updateResource_createForOfIteratorHelper","removedFields","n","done","field","value","indexOf","err","e","f","getListOfNeededResources","store","requestedResources","user","account","progress","progressData","friendData","postData","transactionData","neededResources","isAuthed","currentAccount","_i","_arr","toConsumableArray","progresses","followProgresses","getListOfNeededResources_createForOfIteratorHelper","followPosts","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","followingAccounts","followAccounts","item","currentProfile","profile","_i3","_arr3","_step5","_iterator5","_i4","_arr4","currentProgress","participants","owner","worker","_i5","_participants","_step6","_iterator6","posts","currentPosts","_step7","_iterator7","postEl","_step8","_iterator8","users","parent","parentType","parentId","reduce","obj","Array","from","Set","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","checkData","__v","check","getResourcesToMonitor","resources","addData","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","Component","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followProgress","progressId","unfollowProgress","followAccount","accountFollow","unfollowAccount","unfriend","friendId","uploadFile","file","size","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","height","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","console","log","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","friendSearchResult","friendDataExp","getUserData","userName","name","userAvatar","avatar","image","noClick","margin","onlyName","stopPropagation","Group","map","Fragment","noAva","noName","span","react_router_dom","objectSpread","cursor","display","to","inline","es_button","padding","EditGoalAndProgressForm_connectionsSelect","onSelect","es_select","placeholder","getPopupContainer","trigger","parentNode","Option","components_UserButton_UserButton","MoreIcon","viewBox","transform","d","ImageCarousel","previewImage","setPreviewImage","images","carousel","dots","index","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Modal","alt","_React$createElement","previewReward","setPreviewReward","_useState5","_useState6","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","RewardButton","simple","money","itemName","layout","labelCol","wrapperCol","rewards","onlyButton","es_form","Item","label","rewardKey","paddingLeft","for","marginLeft","dropdown","overlay","es_menu","rewardId","confirm","setRewards","indexIn","color","PlusOutlined_default","closable","reward","rewardToSave","undefined","newRewards","connectionsSelect","divider","rules","input","TextArea","input_number","upload","listType","fileList","itemImages","uid","onPreview","_ref2","customRequest","_ref3","_ref4","itemDescription","_ref5","UI_ImageCarousel_ImageCarousel","whiteSpace","Select","EditGoalAndProgressForm","goal","setImages","_Form$useForm","Form","useForm","form","connections","goalId","assign","onFinish","autoComplete","initialValues","repeat","days","onValuesChange","changedFields","allValues","setFieldsValue","sort","valuePropName","getValueFromEvent","isArray","autoSize","minRows","maxRows","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","components_Rewards_Rewards","textAlign","marginTop","cancel","htmlType","borderRadius","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","wsActions","setStartProgressVisible","pageTitle","lastNotifications","isConnectingWS","lastScrollY","setLastScrollY","headerVisible","setHeaderVisible","_useState9","_useState10","startProgressVisible","_useState11","pathname","_useState12","pageAddress","setPageAddress","handleScroll","currentScrollY","scrollY","removeEventListener","addEventListener","scrollTo","top","left","behavior","showSignIn","selectedKey","buttonProps","checkHighligh","ghost","openLink","isActivating","numberOfUnseenNots","Layout_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","logedIn","editGoal","Progresses_AddProgress","join","icon","shape","LogoutOutlined_default","border","marginRight","spin","indicator","LoadingOutlined_default","children","badge","count","HomeFilled_default","TeamOutlined_default","Layout_LoginModal","back_top","backgroundColor","UpOutlined_default","moment","format","ActivityTable","isOwner","lastStages","stages","slice","Math","b","aS","aF","bS","bF","old","day","year","dayOfYear","startOf","endOf","week","month","now","abs","diff","nowStageId","stageId","tabs","defaultActiveKey","findIndex","toString","stage","stageDate","getStatus","dismissed","failBy","approvedBy","getTag","es_tag","descriptions","tabTitle","myStatus","stageStatus","TabPane","tab","textTransform","es_radio","bordered","column","xxl","xl","lg","md","sm","xs","paid","EditProgress","editProgressOpen","placeholderImages","Card","matches","imagePH","round","x","makeRand","getPH","wordBreak","float","noLink","onClickLink","FollowButton","danger","Descriptions","followersVisible","setFollowersVisible","Helmet","content","description","PushpinFilled_default","add","likes","LikeFilled_default","LikeOutlined_default","borderTop","Paragraph","ellipsis","rows","expandable","symbol","getDay","Progress_ActivityTable","Progress_EditProgress","MasonryCard","components_FollowButton","imageLoading","setImageLoading","replyToUser","setMessageText","background","replyTo","bottom","comment","uploadImage","messageValue","replyToMessage","editedMessage","editingMessage","onSend","SendOutlined_default","showUploadList","PictureFilled_default","CloseCircleFilled_default","Message","replies","isStart","replyVisible","setReplyVisible","setReplyToUser","setEditingMessage","showReplies","setShowReplies","commentProps","timeago_react","datetime","date","live","tooltip","author","messageType","details","itemId","startMessage","Post_AddMessage","isTop","reply","postOpen","setPostOpen","noStartMessage","Post_Message","position","justifyContent","CommentOutlined_default","messages","Post_createForOfIteratorHelper","getNumberOfMessages","zIndex","pullData","options","pathParts","Progress_createForOfIteratorHelper","main","sub","Progress_Activity","Post_AddPost","paddingTop","components_Post_Post","statePosts","setPosts","Date","getTime","startTime","sortPosts","aN","notifications","bN","newPosts","newUnseenPosts","newOldPosts","oldPosts","DashboardPosts_createForOfIteratorHelper","_loop2","oldPostIndex","_newOldPosts","resultPosts","neededPosts","isEqual","nots","getRewardText","stageName","price","buyer","as","getStageName","progressName","addedAccounts","ac","droppedAccounts","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","isSearching","setIsSearching","foundProgresses","setFoundProgresses","setProgresses","noMore","setNoMore","noMorePopular","setNoMorePopular","searchValue","setSearchValue","onSearch","noNoMore","skip","newFriendData","Explore_createForOfIteratorHelper","Search","enterButton","allowClear","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","AddCard","action","CustomEmpty","forceAuth","loadedProgresses","components_AddCard_AddCard","Dashboard_createForOfIteratorHelper","tabBarStyle","activeTab","last","containers_Explore_Explore","containers_Progresses_Progresses","Dashboard_DashboardPosts","offset","Dashboard_DashboardEvents","setTitle","replace","dangerouslySetInnerHTML","__html","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","menu","domEvent","additionalButtons","button","noFollow","Button","preventDefault","asText","DownOutlined_default","friendActions","friendActionButton","asIcons","handleClick","searchResult","addFriendOpen","setAddFriendOpen","search","card","components_FriendCard","Friends_createForOfIteratorHelper","fullFriend","confirmedFriends","empty","imageStyle","PendingFriends","Friends_AddFriends","AddPerkForm","perk","perkId","setEditPerkOpen","setPerk","wishlist","goals","perks","Shop_AddPerkForm","processedValue","WishlistAndPerks","editedPerk","setEditedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","onlyBuy","tableData","sorted","Transactions_createForOfIteratorHelper","types","amount","collapse","expandIconPosition","destroyInactivePanel","accordion","Panel","header","alignItems","tag","toUpperCase","increaseAvatarV","followingVisible","setFollowingVisible","deleteVisible","setDeleteVisible","deleteField","setDeleteField","profileId","Profile_createForOfIteratorHelper","Title","level","editable","EditOutlined_default","containers_Friends_Friends","oneFriendData","Shop_Transactions","Shop_WishlistAndPerks","components_ProgressButton","maxHeight","accountNotActive","setAccountActivated","page_header","backIcon","nicknameNotUnique","Perk_createForOfIteratorHelper","items","Perk_Item","wishlistItem","WishlistItem_createForOfIteratorHelper","popconfirm","onConfirm","okText","cancelText","sortNotifiacations","NotificationsTracker_createForOfIteratorHelper","filterSameNot","arr","myNotifications","mountedRef","useRef","timer","setTimer","explanationVisible","setExplanationVisible","setShowSignIn","auth","useCallback","current","abrupt","t0","Logout","react_router","routes","exact","component","Dashboard","Progress","Profile","Perk","WishlistItem","Blog","ActivateAccount","process","handleExplanationClose","Layout","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","reducer","createReducer","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","__webpack_require__","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","src_App","root","getElementById","ReactDOM","render","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle"],"mappings":"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","file":"static/js/main.87d7abdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__f69s0\",\"socialButtons\":\"LoginModal_socialButtons__ex7dM\",\"Background\":\"LoginModal_Background__11ZaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__2JZGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__11bEV\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\nimport Typography from 'antd/es/typography'\n\nconst cookies = new Cookies()\n\nconst LoginModal = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <Modal\n            visible={props.loginVisible}\n            onOk={() => document.body.removeAttribute('style')}\n            onCancel={() => {\n                props.setLoginVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            destroyOnClose={true}\n            maskClosable={false}\n            footer={[]}\n            width=\"100%\"\n            style={{ maxWidth: '600px' }}\n        >\n            {!cookieConsent ? (\n                <Modal\n                    title=\"Cookies consent\"\n                    visible={!cookieConsent}\n                    onOk={agreeWithCookies}\n                    onCancel={() => {\n                        window.open('https://addspire.com', '_self')\n                    }}\n                    destroyOnClose={true}\n                    maskClosable={false}\n                    width=\"100%\"\n                    style={{ maxWidth: '600px' }}\n                >\n                    <p style={{ marginBottom: '0.3em' }}>\n                        We use cookies only for login purposes.{' '}\n                    </p>\n                    <p>\n                        In order to proceed you need to agree with the use of\n                        cookies.\n                    </p>\n                </Modal>\n            ) : (\n                <div className=\"contentDiv\">\n                    <div className={classes.Container}>\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            Welcome to Addspire!\n                        </h1>\n                        <h3>This is where great inspiration lives.</h3>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                s\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <Checkbox\n                            checked={state}\n                            onChange={() => setState(!state)}\n                        >\n                            <Typography.Link style={{ fontSize: '17px' }}>\n                                Remember me\n                            </Typography.Link>\n                        </Checkbox>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(LoginModal)\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = () => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/inspirations')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.props.setConnectingToWS(true)\n    }\n    componentWillReceiveProps(nextProps) {\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\nexport const unfollowProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL('image/jpeg', 0.6)\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => (getUserData(id) ? getUserData(id).name : id)\n    const userAvatar = id =>\n        getUserData(id) ? (\n            <span key={id}>\n                <Avatar\n                    src={getAvatar(id, getUserData(id).image)}\n                    size={props.size || (props.noClick ? 20 : 40)}\n                    style={props.group ? {} : { margin: ' 0 5px' }}\n                />\n            </span>\n        ) : null\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <div>{!props.noAva && userAvatar(id)}</div>\n            <div>{!props.noName && userName(id)}</div>\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onChange={onSelect}\n        getPopupContainer={trigger => trigger.parentNode}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(\n            item =>\n                item &&\n                item._id && (\n                    <Select.Option key={item._id}>\n                        <UserButton id={item._id} noClick={true} />\n                    </Select.Option>\n                )\n        )}\n    </Select>\n)\n","import React from 'react'\n\nexport default props => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        width=\"18\"\n        height=\"18\"\n        style={{ transform: 'rotate(90deg)', display: 'block' }}\n    >\n        <path d=\"M2 10h4v4H2v-4zm8 4h4v-4h-4v4zm8-4v4h4v-4h-4z\" />\n    </svg>\n)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto' }}\n                dots={{ className: classes.Dots }}\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        backgroundRepeat: 'no-repeat',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport UserButton from '../UserButton/UserButton'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Card from 'antd/es/card'\nimport MoreIcon from '../UI/MoreIcon'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n\n    const RewardButton = props => (\n        <span\n            style={{ fontWeight: 'bold', cursor: 'pointer' }}\n            onClick={() => setPreviewReward(props.item)}\n        >\n            {props.item.mode === 'simple'\n                ? props.item.simple\n                : props.item.mode === 'money'\n                ? props.item.money + ' (money)'\n                : props.item.mode === 'item'\n                ? props.item.itemName\n                : ''}\n        </span>\n    )\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    return props.rewards ? (\n        <div>\n            {props.onlyButton ? (\n                props.rewards.map((item, index) => (\n                    <RewardButton item={item} key={index} />\n                ))\n            ) : (\n                <Form {...layout}>\n                    <Form.Item label={props.label} key={props.rewardKey}>\n                        {props.rewards.length > 0 && (\n                            <ol style={{ paddingLeft: '5px' }}>\n                                {props.rewards.map((item, index) => {\n                                    return (\n                                        <li key={index}>\n                                            <div style={{ display: 'flex' }}>\n                                                <div>\n                                                    <RewardButton item={item} />\n                                                    {' from '}\n                                                    <UserButton\n                                                        id={item.owner}\n                                                        noAva={true}\n                                                        inline={true}\n                                                    />\n                                                    {' for '}\n                                                    {item.for &&\n                                                    item.for.length > 0 ? (\n                                                        <UserButton\n                                                            id={item.for}\n                                                            noAva={true}\n                                                            inline={true}\n                                                        />\n                                                    ) : (\n                                                        <span\n                                                            style={{\n                                                                fontWeight:\n                                                                    'bold',\n                                                                marginLeft:\n                                                                    '5px',\n                                                            }}\n                                                        >\n                                                            All\n                                                        </span>\n                                                    )}\n                                                </div>\n                                                {item.owner === account._id &&\n                                                    !readOnly && (\n                                                        <>\n                                                            <Dropdown\n                                                                overlay={\n                                                                    <Menu>\n                                                                        <Menu.Item\n                                                                            onClick={() => {\n                                                                                setEditedRewardIndex(\n                                                                                    index\n                                                                                )\n                                                                                setEditedReward(\n                                                                                    item\n                                                                                )\n                                                                            }}\n                                                                        >\n                                                                            Edit\n                                                                        </Menu.Item>\n\n                                                                        <Menu.Item\n                                                                            onClick={() => {\n                                                                                if (\n                                                                                    !window.confirm(\n                                                                                        'Are you sure you want to delete this item?'\n                                                                                    )\n                                                                                )\n                                                                                    return\n                                                                                if (\n                                                                                    props.setRewards\n                                                                                ) {\n                                                                                    props.setRewards(\n                                                                                        props.rewards.filter(\n                                                                                            (\n                                                                                                item,\n                                                                                                indexIn\n                                                                                            ) =>\n                                                                                                indexIn !==\n                                                                                                index\n                                                                                        )\n                                                                                    )\n                                                                                } else {\n                                                                                    wsActions.deleteReward(\n                                                                                        account._id,\n                                                                                        progress._id,\n                                                                                        item.rewardId\n                                                                                    )\n                                                                                }\n                                                                            }}\n                                                                        >\n                                                                            Delete\n                                                                        </Menu.Item>\n                                                                    </Menu>\n                                                                }\n                                                            >\n                                                                <Button type=\"link\">\n                                                                    <MoreIcon />\n                                                                </Button>\n                                                            </Dropdown>\n                                                        </>\n                                                    )}\n                                            </div>\n                                        </li>\n                                    )\n                                })}\n                            </ol>\n                        )}\n\n                        {!readOnly && (\n                            <Button\n                                type=\"link\"\n                                style={{ paddingLeft: 0, color: '#1890ff' }}\n                                onClick={() => {\n                                    setEditedRewardIndex('new')\n                                    setEditedReward({ mode: 'simple' })\n                                }}\n                            >\n                                <PlusOutlined />\n                                Add rewards\n                            </Button>\n                        )}\n                    </Form.Item>\n                </Form>\n            )}\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setEditedReward()\n                    document.body.removeAttribute('style')\n                }}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        let newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards = [...newRewards, rewardToSave]\n                        else\n                            newRewards = newRewards.map((item, index) => {\n                                if (index === editedRewardIndex)\n                                    return rewardToSave\n                                else return item\n                            })\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    }\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form {...layout}>\n                            <Form.Item label=\"Reward type\">\n                                <Select\n                                    placeholder=\"Type\"\n                                    value={editedReward.mode}\n                                    onSelect={value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            mode: value,\n                                        })\n                                    }}\n                                    style={{ width: '100%' }}\n                                    getPopupContainer={trigger =>\n                                        trigger.parentNode\n                                    }\n                                >\n                                    <Select.Option key=\"simple\" value=\"simple\">\n                                        Simple reward\n                                    </Select.Option>\n                                    <Select.Option key=\"item\" value=\"item\">\n                                        Item reward\n                                    </Select.Option>\n                                    {/* <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option> */}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Reward for\">\n                                {connectionsSelect(\n                                    account,\n                                    friendData,\n                                    editedReward.for,\n                                    value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            for: value,\n                                        })\n                                    }\n                                )}\n                                <p>(leave blank for all)</p>\n                            </Form.Item>\n                            <Divider type=\"horizontal\" />\n                            {editedReward.mode === 'simple' ? (\n                                <Form.Item\n                                    label=\"Description\"\n                                    rules={[\n                                        ...descriptionRules,\n                                        {\n                                            required: true,\n                                            min: 1,\n                                            whitespace: true,\n                                            message:\n                                                'Desription is too short. Minimal length is 1.',\n                                        },\n                                    ]}\n                                >\n                                    <Input.TextArea\n                                        value={editedReward.simple}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                simple: value,\n                                            })\n                                        }\n                                        placeholder=\"Explain how you will reward\"\n                                    />\n                                </Form.Item>\n                            ) : editedReward.mode === 'money' ? (\n                                <Form.Item label=\"Amount\" rules={priceRules}>\n                                    <InputNumber\n                                        value={editedReward.money}\n                                        onChange={value => {\n                                            setEditedReward({\n                                                ...editedReward,\n                                                money: value,\n                                            })\n                                        }}\n                                    />\n                                </Form.Item>\n                            ) : (\n                                <>\n                                    <Form.Item label=\"Images\">\n                                        <Upload\n                                            listType=\"picture-card\"\n                                            fileList={(\n                                                editedReward.itemImages || []\n                                            ).map((url, index) => ({\n                                                url,\n                                                uid: index,\n                                            }))}\n                                            onPreview={file => {\n                                                setPreviewImage(file.url)\n                                            }}\n                                            onChange={({ fileList }) => {\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemImages: fileList.map(\n                                                        image => image.url\n                                                    ),\n                                                })\n                                            }}\n                                            customRequest={({ file }) => {\n                                                uploadFile(\n                                                    file,\n                                                    800,\n                                                    undefined,\n                                                    url => {\n                                                        setEditedReward({\n                                                            ...editedReward,\n                                                            itemImages: [\n                                                                ...(editedReward.itemImages ||\n                                                                    []),\n                                                                url,\n                                                            ],\n                                                        })\n                                                    }\n                                                )\n                                            }}\n                                        >\n                                            {(editedReward.itemImages || [])\n                                                .length >= 8 ? null : (\n                                                <div>\n                                                    <PlusOutlined />\n                                                    <div className=\"ant-upload-text\">\n                                                        Upload\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item label=\"Name\" rules={nameRules}>\n                                        <Input\n                                            value={editedReward.itemName}\n                                            onChange={({ target: { value } }) =>\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemName: value,\n                                                })\n                                            }\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        rules={descriptionRules}\n                                    >\n                                        <Input.TextArea\n                                            value={editedReward.itemDescription}\n                                            onChange={({ target: { value } }) =>\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemDescription: value,\n                                                })\n                                            }\n                                        />\n                                    </Form.Item>\n                                </>\n                            )}\n                        </Form>\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => {\n                    setPreviewReward()\n                    document.body.removeAttribute('style')\n                }}\n                title=\"Reward details\"\n                destroyOnClose={true}\n            >\n                {previewReward ? (\n                    <>\n                        <ImageCarousel images={previewReward.itemImages} />\n\n                        {previewReward.mode === 'item' && (\n                            <h2>{previewReward.itemName}</h2>\n                        )}\n                        {previewReward.mode === 'item' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.itemDescription}\n                            </p>\n                        )}\n                        {previewReward.mode === 'simple' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.simple}\n                            </p>\n                        )}\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (value, accountId, progressId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                progressId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n\nexport const changeLikesProgress = (accountId, progressId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesProgress',\n                accountId,\n                progressId,\n                add,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\nimport Select from 'antd/es/select'\n\nconst { Option } = Select\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n\n    const [previewImage, setPreviewImage] = useState('')\n\n    const [rewards, setRewards] = useState((goal && goal.rewards) || [])\n\n    const onFinish = value => {\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            rewards,\n        })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    const connections = connectionsSelect(account, friendData)\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New achievement',\n                        repeat: 'no',\n                        days: ['0'],\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) =>\n                    allValues.days &&\n                    form.setFieldsValue({ days: allValues.days.sort() })\n                }\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connections}\n                </Form.Item>\n\n                <Form.Item label=\"Repeat\" name=\"repeat\">\n                    <Select>\n                        <Option value=\"no\">No repeat</Option>\n                        <Option value=\"day\">Every day</Option>\n                        <Option value=\"weekday\">Every day of week</Option>\n                        <Option value=\"week\">Every week</Option>\n                        <Option value=\"month\">Every month</Option>\n                        <Option value=\"year\">Every year</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    noStyle\n                    shouldUpdate={(prevValues, currentValues) =>\n                        prevValues.repeat !== currentValues.repeat\n                    }\n                >\n                    {({ getFieldValue }) => {\n                        return getFieldValue('repeat') === 'weekday' ? (\n                            <Form.Item label=\"Days of week\" name=\"days\">\n                                <Select mode=\"tags\">\n                                    <Option value=\"0\">Sunday</Option>\n                                    <Option value=\"1\">Monday</Option>\n                                    <Option value=\"2\">Tuesday</Option>\n                                    <Option value=\"3\">Wednesday</Option>\n                                    <Option value=\"4\">Thursday</Option>\n                                    <Option value=\"5\">Friday</Option>\n                                    <Option value=\"6\">Saturday</Option>\n                                </Select>\n                            </Form.Item>\n                        ) : null\n                    }}\n                </Form.Item>\n                <Rewards\n                    label=\"Rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button\n                        type=\"text\"\n                        size=\"large\"\n                        onClick={() => props.cancel(false)}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{\n                            borderRadius: '6px',\n                            padding: '0px 25px',\n                            marginLeft: '10px',\n                        }}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value)\n                props.setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            account={props.account}\n            friendData={props.friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n\nexport default AddProgress\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport Badge from 'antd/es/badge'\nimport * as classes from './Layout.module.css'\nimport CoffeeOutlined from '@ant-design/icons/CoffeeOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport ShopFilled from '@ant-design/icons/ShopFilled'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport SettingFilled from '@ant-design/icons/SettingFilled'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport Spin from 'antd/es/spin'\nimport BackTop from 'antd/es/back-top'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport UpOutlined from '@ant-design/icons/UpOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from '../../containers/Progresses/AddProgress'\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const [headerVisible, setHeaderVisible] = useState(true)\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [pageAddress, setPageAddress] = useState(\n        props.history.location.pathname\n    )\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY\n            if (window.scrollY < 100) setHeaderVisible(true)\n            else {\n                if (currentScrollY > lastScrollY) {\n                    setHeaderVisible(false)\n                } else {\n                    setHeaderVisible(true)\n                }\n            }\n            setLastScrollY(currentScrollY)\n        }\n        window.removeEventListener('scroll', handleScroll)\n        window.addEventListener('scroll', handleScroll)\n        if (pageAddress !== props.history.location.pathname) {\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            })\n            setPageAddress(props.history.location.pathname)\n        }\n        if (props.showSignIn) setLoginVisible(true)\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [lastScrollY, props.history.location.pathname, props.showSignIn])\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url\n            ? {\n                  type: 'link',\n                  ghost: true,\n                  style: { color: '#1890ff' },\n              }\n            : { type: 'text' }\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n    const editGoal = (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <div className={classes.Layout}>\n                <header\n                    className={\n                        headerVisible\n                            ? classes.Header\n                            : [classes.Header, classes.HideHeader].join(' ')\n                    }\n                >\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Link to=\"/\">\n                                <img\n                                    style={{ height: '30px' }}\n                                    src=\"/logo.jpg\"\n                                />\n                            </Link>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {(logedIn || !props.isConnectingWS) && (\n                                <div className={classes.PageTitle}>\n                                    {isActivating ? (\n                                        'Activate your account'\n                                    ) : (\n                                        <>\n                                            <Button\n                                                type=\"primary\"\n                                                icon={<PlusOutlined />}\n                                                shape=\"round\"\n                                                onClick={() => {\n                                                    account._id\n                                                        ? setStartProgressVisible(\n                                                              true\n                                                          )\n                                                        : setLoginVisible(true)\n                                                }}\n                                            >\n                                                Add inspiration\n                                            </Button>\n                                            {editGoal}\n                                        </>\n                                    )}\n                                </div>\n                            )}\n                            {logedIn ? (\n                                !isActivating ? (\n                                    <span\n                                        onClick={() => openLink('account')}\n                                        style={{\n                                            margin: '0px 10px',\n                                            cursor: 'pointer',\n                                        }}\n                                    >\n                                        <Avatar\n                                            style={{\n                                                border: '1px solid white',\n                                            }}\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                        />\n                                    </span>\n                                ) : (\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                )\n                            ) : props.isConnectingWS ? (\n                                <>\n                                    <span style={{ marginRight: '30px' }}>\n                                        <Spin\n                                            indicator={\n                                                <LoadingOutlined\n                                                    style={{\n                                                        color: 'white',\n                                                        marginRight: '10px',\n                                                    }}\n                                                />\n                                            }\n                                        />{' '}\n                                        Trying to login\n                                    </span>\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </>\n                            ) : (\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => setLoginVisible(true)}\n                                    style={{ fontSize: '13px' }}\n                                >\n                                    Sign in\n                                </Button>\n                            )}\n                        </div>\n                    </div>\n                </header>\n                <main className={classes.Main}>{props.children}</main>\n                {!isActivating && logedIn && (\n                    <footer className={classes.Footer}>\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh()}\n                            onClick={() => openLink('')}\n                        >\n                            <Badge count={numberOfUnseenNots}>\n                                <HomeFilled />{' '}\n                                <div className={classes.FooterButton}>\n                                    Highlights\n                                </div>\n                            </Badge>\n                        </Button>\n\n                        <Button\n                            {...buttonProps}\n                            {...checkHighligh('account')}\n                            onClick={() => openLink('account')}\n                        >\n                            <Badge\n                                count={\n                                    account.friends.filter(\n                                        item => item.status === 'inviting'\n                                    ).length\n                                }\n                            >\n                                <TeamOutlined />\n                                <div className={classes.FooterButton}>\n                                    Account\n                                </div>\n                            </Badge>\n                        </Button>\n                    </footer>\n                )}\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            <BackTop>\n                <div\n                    style={{\n                        height: 40,\n                        width: 40,\n                        lineHeight: '40px',\n                        borderRadius: '100%',\n                        backgroundColor: '#1088e9',\n                        color: '#fff',\n                        textAlign: 'center',\n                        fontSize: 14,\n                    }}\n                >\n                    <UpOutlined />\n                </div>\n            </BackTop>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import React from 'react'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\nimport Tabs from 'antd/es/tabs'\nimport Tag from 'antd/es/tag'\nimport Radio from 'antd/es/radio'\nimport Badge from 'antd/es/badge'\nimport moment from 'moment'\n\nmoment().format()\n\nconst ActivityTable = props => {\n    const { progress, account } = props\n    const { goal } = progress\n\n    const isOwner = account && account._id === progress.owner\n\n    let lastStages = progress.stages\n        .slice(Math.max(progress.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = moment()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = moment()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = moment()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = moment()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = moment()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    const nowStageId = lastStages.length > 0 ? lastStages[0].stageId : 0\n\n    lastStages = progress.stages\n\n    return lastStages.length === 0 ? null : (\n        <div\n            style={{\n                border: '1px solid #eee',\n                padding: '10px 5px',\n            }}\n        >\n            <Tabs\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? lastStages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // className={classes.fff}\n            >\n                {lastStages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getTag = id => {\n                        const status = getStatus(id)\n                        let text = 'In process',\n                            color = '#108ee9'\n                        switch (status) {\n                            case 'fail':\n                                text = 'Failed'\n                                color = '#f50'\n                                break\n                            case 'complete':\n                                text = 'Complete'\n                                color = '#87d068'\n                                break\n                            case 'dismissed':\n                                text = 'Dismissed'\n                                color = '#ffa500'\n                                break\n                            default:\n                                break\n                        }\n\n                        return <Tag color={color}>{text}</Tag>\n                    }\n\n                    const users = goal.users.map(user => (\n                        <Descriptions.Item\n                            key={user}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={user}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (achiever)'}\n                                </>\n                            }\n                        >\n                            {getTag(user)}\n                        </Descriptions.Item>\n                    ))\n\n                    const owner = [\n                        <Descriptions.Item\n                            key={progress.owner}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={progress.owner}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (owner)'}\n                                </>\n                            }\n                        >\n                            {getTag(progress.owner)}\n                        </Descriptions.Item>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('dddd')}</div>\n                                <div>{stageDate.format('D MMM YY')}</div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('wo')} week</div>\n                                <div>\n                                    {stageDate\n                                        .startOf('week')\n                                        .format('D MMM YY')}\n                                </div>\n                                <div>\n                                    {stageDate.endOf('week').format('D MMM YY')}\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('MMMM')}</div>\n                                <div>{stageDate.format('YYYY')}</div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = moment().year(stage.year)\n\n                        tabTitle = <div>{stageDate.format('YYYY')}</div>\n                    }\n\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(progress.owner)\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'rgba(0,0,0,0)'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            {account && account._id && (\n                                <>\n                                    Set status:\n                                    <Radio.Group\n                                        value={myStatus}\n                                        style={{ padding: '20px 0px ' }}\n                                        onChange={value =>\n                                            wsActions.changeStage(\n                                                value.target.value,\n                                                account._id,\n                                                progress._id,\n                                                stage.stageId\n                                            )\n                                        }\n                                    >\n                                        <Radio\n                                            value=\"complete\"\n                                            style={{ display: 'block' }}\n                                        >\n                                            <Tag\n                                                color={\n                                                    myStatus !== 'complete'\n                                                        ? 'green'\n                                                        : '#87d068'\n                                                }\n                                                style={{\n                                                    padding: '5px 0px',\n                                                    width: '100%',\n                                                    fontSize: '18px',\n                                                    maxWidth: '200px',\n                                                    textAlign: 'center',\n                                                    margin: '10px 0px',\n                                                }}\n                                            >\n                                                Complete\n                                            </Tag>\n                                        </Radio>\n                                        <Radio value=\"process\">\n                                            <Tag\n                                                color={\n                                                    myStatus !== 'process'\n                                                        ? 'processing'\n                                                        : '#108ee9'\n                                                }\n                                                style={{\n                                                    margin: '10px 0px',\n                                                }}\n                                            >\n                                                In process\n                                            </Tag>\n                                        </Radio>\n                                        <Radio value=\"fail\">\n                                            <Tag\n                                                color={\n                                                    myStatus !== 'fail'\n                                                        ? 'volcano'\n                                                        : '#f50'\n                                                }\n                                                style={{\n                                                    margin: '10px 0px',\n                                                }}\n                                            >\n                                                Fail\n                                            </Tag>\n                                        </Radio>\n                                        {isOwner && (\n                                            <Radio value=\"dismissed\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'dismissed'\n                                                            ? 'orange'\n                                                            : '#ffa500'\n                                                    }\n                                                    style={{\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    Dismiss\n                                                </Tag>\n                                            </Radio>\n                                        )}\n                                    </Radio.Group>\n                                </>\n                            )}\n\n                            <Descriptions\n                                size=\"small\"\n                                bordered\n                                column={{\n                                    xxl: 4,\n                                    xl: 3,\n                                    lg: 3,\n                                    md: 3,\n                                    sm: 2,\n                                    xs: 1,\n                                }}\n                            >\n                                {owner}\n                                {users}\n                            </Descriptions>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    <Divider style={{ fontSize: '15px' }}>\n                                        Paid rewards\n                                    </Divider>\n\n                                    <Rewards\n                                        rewardKey={1}\n                                        rewards={stage.paid}\n                                        readOnly={true}\n                                    />\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </div>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState, friendData } = props\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n        document.body.removeAttribute('style')\n    }\n\n    return progress.goal ? (\n        <EditGoalAndProgressForm\n            goal={progress.goal}\n            onFinish={onFinish}\n            account={account}\n            friendData={friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport default withRouter(props => {\n    const placeholderImages = [\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n    ]\n    const images = props.images || []\n\n    const getPH = () => {\n        if (!props.id) return 0\n        const makeRand = x => {\n            x = Math.abs(x)\n            while (x > 1) x = x / 10\n            return x\n        }\n        const matches = props.id.match(/\\d+$/)\n        const imagePH = matches.length > 0 ? parseInt(matches[0]) : 0\n        return Math.abs(\n            Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n        )\n    }\n\n    const Card = (\n        <>\n            {!props.friends && (\n                <img\n                    style={{\n                        maxWidth: '100%',\n                        margin: 'auto',\n                        display: 'block',\n                        borderRadius: '15px',\n                        ...props.style,\n                    }}\n                    src={\n                        images.length > 0\n                            ? images[0]\n                            : placeholderImages[getPH()]\n                    }\n                />\n            )}\n\n            <div style={{ padding: '5px 0px', wordBreak: 'break-word' }}>\n                {props.actions && (\n                    <div style={{ float: 'right' }}>{props.actions}</div>\n                )}\n                <span style={{ float: 'none' }}>{props.body}</span>\n            </div>\n        </>\n    )\n    return props.noLink ? (\n        Card\n    ) : (\n        <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n            {Card}\n        </Link>\n    )\n})\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport * as wsActions from '../websocketActions'\n\nconst FollowButton = props => {\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type === 'progress') {\n            return account.followProgresses.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowProgress(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followProgress(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowAccount(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followAccount(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\n\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\n\nimport Typography from 'antd/es/typography'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nimport Tag from 'antd/es/tag'\nimport Rewards from '../../components/Rewards/Rewards'\nimport MasonryCard from '../../components/MasonryCard'\nimport FollowButton from '../../components/FollowButton'\nimport Helmet from 'react-helmet'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport PushpinFilled from '@ant-design/icons/PushpinFilled'\n\nconst Activity = props => {\n    const { account, progress, state, setState, friendData } = props\n    const { goal } = progress\n    const [followersVisible, setFollowersVisible] = useState(false)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return 'Sunday'\n            case '1':\n                return 'Monday'\n            case '2':\n                return 'Tuesday'\n            case '3':\n                return 'Wednesday'\n            case '4':\n                return 'Thursday'\n            case '5':\n                return 'Friday'\n            case '6':\n                return 'Saturday'\n\n            default:\n                return ''\n        }\n    }\n    return goal ? (\n        <>\n            <Helmet>\n                <title>\n                    {goal.name} by {progress.owner} at Addspire\n                </title>\n                <meta name=\"description\" content={goal.description} />\n            </Helmet>\n            {goal.images.length > 0 && <ImageCarousel images={goal.images} />}\n            <div style={{ textAlign: 'center' }}>\n                <h1>{goal.name}</h1>\n                <Button type=\"text\" onClick={() => setFollowersVisible(true)}>\n                    <PushpinFilled style={{ fontSize: '20px' }} />\n                    {progress.followingAccounts.length} Followers\n                </Button>\n                <Button\n                    type=\"text\"\n                    onClick={() =>\n                        wsActions.changeLikesProgress(\n                            account._id,\n                            progress._id,\n                            !progress.likes.includes(account._id)\n                        )\n                    }\n                >\n                    {progress.likes.includes(account._id) ? (\n                        <LikeFilled style={{ fontSize: '20px' }} />\n                    ) : (\n                        <LikeOutlined style={{ fontSize: '20px' }} />\n                    )}\n                    Likes\n                    <span style={{ paddingLeft: '8px' }}>\n                        {progress.likes.length}\n                    </span>\n                </Button>\n\n                <div style={{ marginTop: '10px', borderTop: '1px #ccc solid' }}>\n                    {account &&\n                    account._id &&\n                    account.followProgresses.includes(progress._id) ? (\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                wsActions.unfollowProgress(\n                                    account._id,\n                                    progress._id\n                                )\n                            }\n                        >\n                            Following\n                        </Button>\n                    ) : (\n                        account._id && (\n                            <Button\n                                type=\"primary\"\n                                onClick={() =>\n                                    wsActions.followProgress(\n                                        account._id,\n                                        progress._id\n                                    )\n                                }\n                            >\n                                Follow\n                            </Button>\n                        )\n                    )}\n                </div>\n                {account._id === progress.owner && (\n                    <Button\n                        style={{ marginTop: '10px' }}\n                        type=\"primary\"\n                        onClick={() => {\n                            setState({ ...state, editProgressOpen: true })\n                        }}\n                    >\n                        Edit progress\n                    </Button>\n                )}\n            </div>\n            <Typography.Paragraph\n                ellipsis={{\n                    rows: 3,\n                    expandable: true,\n                    symbol: 'more',\n                }}\n                style={{ whiteSpace: 'pre-wrap', marginTop: '30px' }}\n            >\n                {goal.description}\n            </Typography.Paragraph>\n\n            <Descriptions\n                size=\"small\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Repeat\">{goal.repeat || ''}</Item>\n                {goal.repeat === 'weekday' && (\n                    <Item label=\"Days\">\n                        {goal.days.map((day, index) => (\n                            <Tag key={index}>{getDay(day)}</Tag>\n                        ))}\n                    </Item>\n                )}\n                <Item label=\"Rewards\">\n                    <Rewards rewards={goal.rewards} />\n                </Item>\n            </Descriptions>\n            <div style={{ margin: '50px 0px' }}>\n                <ActivityTable\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </div>\n\n            {account.progresses &&\n                account.progresses.includes(progress._id.toString()) && (\n                    <Button\n                        danger={true}\n                        onClick={() => {\n                            wsActions.leaveProgress(props)\n                        }}\n                        style={{ marginBottom: '50px' }}\n                    >\n                        Leave the progress\n                    </Button>\n                )}\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, editProgressOpen: false })\n                    document.body.removeAttribute('style')\n                }}\n                closable={true}\n                destroyOnClose={true}\n                width=\"100%\"\n                style={{ maxWidth: '1000px' }}\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                    friendData={friendData}\n                    cancel={() =>\n                        setState({ ...state, editProgressOpen: false })\n                    }\n                />\n            </Modal>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {progress.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport message from 'antd/es/message'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddMessage = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          //   position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules} style={{ margin: 0 }}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                                placeholder=\"Write a comment\"\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item style={{ margin: 0 }}>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        images,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {props.cancel && (\n                                <Button\n                                    onClick={props.cancel}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport AddMessage from './AddMessage'\nimport Button from 'antd/es/button'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\n\nconst Message = props => {\n    const {\n        account,\n        message,\n        friendData,\n        progressData,\n        post,\n        replies,\n        isStart,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const commentProps = {\n        actions: !props.isStart && [\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>,\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            message.author !== account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        if (props.setReplyVisible) {\n                            props.setReplyVisible(true)\n                            props.setReplyToUser(props.message.author)\n                        } else {\n                            setReplyVisible(true)\n                            setReplyToUser('')\n                        }\n                        setShowReplies(true)\n                    }}\n                >\n                    Reply\n                </span>\n            ),\n            message.author === account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => setEditingMessage(message.messageId)}\n                >\n                    Edit\n                </span>\n            ),\n        ],\n        avatar: <UserButton noName={true} id={message.author} span={true} />,\n        content: isStart ? (\n            <>\n                {message.messageType === 'wishlist' && (\n                    <>\n                        {' '}\n                        <span\n                            style={{\n                                fontWeight: 'bold',\n                                cursor: 'pointer',\n                                margin: '10px 0px 0px ',\n                            }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${message.details.owner}/${\n                                        message.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {message.details.name}\n                        </span>\n                    </>\n                )}\n                {message.text && <p>{message.text}</p>}\n            </>\n        ) : (\n            <>\n                <div\n                    style={{\n                        background: '#eee',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        display:\n                            message.image && message.image.length > 0\n                                ? 'block'\n                                : 'inline-block',\n                    }}\n                >\n                    <UserButton\n                        id={message.author}\n                        span={true}\n                        noAva={true}\n                        style={{ fontWeight: 'bold' }}\n                    />\n\n                    {message.image && message.image.length > 0 && (\n                        <ImageCarousel\n                            images={message.image}\n                            height=\"60vmin\"\n                            type=\"contain\"\n                        />\n                    )}\n\n                    {message.text && <p>{message.text}</p>}\n                </div>\n                <div />\n            </>\n        ),\n        author: isStart && (\n            <span\n                style={{ color: '#333', fontWeight: 'bold', fontSize: '14px' }}\n            >\n                <UserButton id={message.author} span={true} noAva={true} />{' '}\n                <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/inspirations/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )}\n                {post.startMessage &&\n                    ['wishlist', 'perk', 'goal'].includes(\n                        post.startMessage.messageType\n                    ) && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + message.author)\n                            }\n                        >\n                            {post.startMessage.messageType === 'wishlist'\n                                ? 'Wishlist'\n                                : post.startMessage.messageType === 'goals'\n                                ? 'Goals'\n                                : 'Shop'}\n                        </span>\n                    )}\n            </span>\n        ),\n        datetime: isStart && (\n            <span style={{ color: '#333' }}>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Comment {...commentProps}>\n                {props.isTop && replies && replies.length > 0 ? (\n                    showReplies ? (\n                        replies.map((reply, index) => (\n                            <Message\n                                key={index}\n                                message={reply}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                setReplyVisible={setReplyVisible}\n                                setReplyToUser={setReplyToUser}\n                            />\n                        ))\n                    ) : (\n                        <Button\n                            type=\"text\"\n                            onClick={() => setShowReplies(true)}\n                        >\n                            Show {replies.length} replies\n                        </Button>\n                    )\n                ) : null}\n\n                {props.isTop && replyVisible ? (\n                    <AddMessage\n                        post={post}\n                        account={account}\n                        replyTo={message.messageId}\n                        replyToUser={replyToUser}\n                        cancel={() => setReplyVisible(false)}\n                    />\n                ) : null}\n            </Comment>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                images={message.image}\n                onSend={() => setEditingMessage('')}\n                cancel={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport CommentOutlined from '@ant-design/icons/CommentOutlined'\nimport AddMessage from './AddMessage'\nimport Divider from 'antd/es/divider'\nimport Button from 'antd/es/button'\n\nconst Post = props => {\n    const { post, account, friendData, progressData } = props\n    const [postOpen, setPostOpen] = useState(props.showReplies)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <>\n                    <Message\n                        message={post.startMessage}\n                        post={post}\n                        account={account}\n                        friendData={friendData}\n                        progressData={progressData}\n                        replies={[]}\n                        isStart={true}\n                    />\n                    {post.startMessage.image &&\n                        post.startMessage.image.length > 0 && (\n                            <img\n                                style={{\n                                    maxWidth: '100%',\n                                    margin: 'auto',\n                                    display: 'block',\n                                }}\n                                src={post.startMessage.image[0]}\n                            />\n                        )}\n                </>\n            )}\n            <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    // marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div\n                    style={{ display: 'flex', justifyContent: 'space-around' }}\n                >\n                    <span key=\"comment-basic-like\">\n                        <Button\n                            type=\"text\"\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    post.startMessage.likes.includes(\n                                        account._id\n                                    )\n                                        ? 'dislikeMessage'\n                                        : 'likeMessage',\n                                    post.startMessage.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        >\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled style={{ fontSize: '20px' }} />\n                            ) : (\n                                <LikeOutlined style={{ fontSize: '20px' }} />\n                            )}\n                            Likes\n                            <span style={{ paddingLeft: '8px' }}>\n                                {post.startMessage.likes.length}\n                            </span>\n                        </Button>\n                    </span>\n                    <span>\n                        <Button onClick={() => setPostOpen(true)} type=\"text\">\n                            <CommentOutlined style={{ fontSize: '20px' }} />\n                            Comment\n                            <span style={{ paddingLeft: '8px' }}>\n                                {getNumberOfMessages(post.messages)}\n                            </span>\n                        </Button>\n                    </span>\n                </div>\n                <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n                {postOpen && (\n                    <>\n                        <AddMessage post={post} account={account} />\n                        {post.messages && post.messages.length\n                            ? post.messages.map((message, index) => (\n                                  <Message\n                                      key={index}\n                                      message={message}\n                                      post={post}\n                                      account={account}\n                                      friendData={friendData}\n                                      replies={message.replies}\n                                      isTop={true}\n                                  />\n                              ))\n                            : null}\n                    </>\n                )}\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddPost = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState([])\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <h2>Posts and comments:</h2>\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText,\n                                        images\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {messageText || images.length ? (\n                                <Button\n                                    onClick={() => {\n                                        setMessageText('')\n                                        setImages([])\n                                    }}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            ) : null}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Activity from './Activity'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport pullData from '../../utils/pullData'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const progressId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!progressId) return null\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({ currentProgress: progressId })\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const post = {}\n                for (let item of data.post) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    posts: post,\n                    account: {},\n                    progress: data.progress,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { progress, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, account: {} }\n\n    if (!progress || !progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <div className=\"contentDiv\">\n            <Activity\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n                friendData={friendData}\n            />\n\n            {account._id && (\n                <AddPost\n                    parent={progressId}\n                    account={account}\n                    parentType=\"progress\"\n                    // onSend={() => setEditingMessage('')}\n                />\n            )}\n            {posts &&\n                progress.posts.map(postId => {\n                    if (posts[postId]) {\n                        const post = posts[postId]\n                        return (\n                            <div key={postId}>\n                                <div\n                                    style={{\n                                        height: '5px',\n                                        background: '#ddd',\n                                        width: 'calc(100% + 8px)',\n                                        position: 'absolute',\n                                        left: '-8px',\n                                    }}\n                                />\n                                <div style={{ paddingTop: '10px' }}>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    } else return null\n                })}\n\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, previewImage: '' })\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\n\nconst DashboardPosts = props => {\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return posts.map((item, index) => {\n        let text = null\n        const nots = item.notifications.filter(not => not.user !== account._id)\n        const not = nots.length > 0 ? nots[0] : null\n        if (not) {\n            switch (not.code) {\n                case 'edit wishlist item':\n                    text = 'edited item in wishlist.'\n\n                    break\n                case 'edit goal':\n                    text = 'edited goal.'\n\n                    break\n                case 'edit perk':\n                    text = 'edited item in shop.'\n\n                    break\n\n                case 'comment':\n                    text = 'added a comment.'\n\n                    break\n                case 'edit comment':\n                    text = 'edited a comment.'\n\n                    break\n                case 'like':\n                    text = 'added a like.'\n\n                    break\n                case 'dislike':\n                    text = 'removed a like.'\n\n                    break\n                default:\n                    text = null\n                    break\n            }\n        }\n        return (\n            <div key={index}>\n                <div\n                    style={{\n                        height: '5px',\n                        background: '#ddd',\n                        width: 'calc(100% + 8px)',\n                        position: 'absolute',\n                        left: '-8px',\n                    }}\n                />\n                <div style={{ paddingTop: '10px' }}>\n                    {text && (\n                        <>\n                            <span>\n                                <UserButton\n                                    id={not.user}\n                                    noAva={true}\n                                    span={true}\n                                    style={{ fontWeight: 'bold' }}\n                                />{' '}\n                                {text}\n                            </span>\n                            <Divider\n                                type=\"horizontal\"\n                                style={{ margin: '5px 0' }}\n                            />\n                        </>\n                    )}\n                    <Post\n                        friendData={friendData}\n                        account={account}\n                        post={item}\n                        progressData={progressData}\n                    />\n                </div>\n            </div>\n        )\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport moment from 'moment'\n\nmoment().format()\n\nconst DashboardEvents = props => {\n    const { lastNotifications } = props\n    const getRewardText = item => (\n        <span style={{ fontWeight: 'bold' }}>\n            {item.details.reward.money\n                ? '$' + item.details.reward.money\n                : item.details.reward.simple || item.details.reward.itemName}\n        </span>\n    )\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = moment()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = moment()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate.startOf('week').format('wo [week] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = moment()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = moment().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n    return lastNotifications.map((item, index) => {\n        let text = null,\n            stageName\n\n        switch (item.code) {\n            case 'change name':\n                text = (\n                    <span>\n                        {' '}\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' changed name.'}\n                    </span>\n                )\n                break\n            case 'delete account':\n                text = (\n                    <span>\n                        {item.user}\n                        deleted account.\n                    </span>\n                )\n                break\n            case 'friend request':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' wants to become friends with you.'}\n                    </span>\n                )\n                break\n            case 'friend add':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' became friends.'}\n                    </span>\n                )\n                break\n            case 'unfriend':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' stopped being friends.'}\n                    </span>\n                )\n                break\n            case 'add wishlist item':\n            case 'edit wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add wishlist item'\n                            ? 'added to wishlist a new item'\n                            : 'edited in wishlist'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${item.user}/${\n                                        item.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from wishlist.\n                    </span>\n                )\n                break\n            case 'add goal':\n            case 'edit goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add goal'\n                            ? 'added a new goal'\n                            : 'edited goal'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/goals/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from goals.\n                    </span>\n                )\n                break\n            case 'add perk':\n            case 'edit perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add perk'\n                            ? 'added to shop a new item'\n                            : 'edited in shop'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from shop.\n                    </span>\n                )\n                break\n            case 'buy perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' bought '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.owner}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'cancel transaction':\n            case 'confirm transaction':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'cancel transaction'\n                            ? 'cancelled'\n                            : 'confirmed'}\n                        {' purchase of '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' by '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.buyer}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'start progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' started participating in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' as '}\n                        {item.details.as}.\n                    </span>\n                )\n                break\n            case 'stage approve':\n            case 'stage progress':\n            case 'stage fail':\n            case 'stage dismiss':\n                stageName = getStageName(item.details)\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {item.code === 'stage approve'\n                            ? ' approved  '\n                            : item.code === 'stage progress'\n                            ? ' put into process '\n                            : item.code === 'stage fail'\n                            ? ' marked as failed '\n                            : ' dismissed '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n                        .\n                    </span>\n                )\n                break\n\n            case 'stage complete':\n                text = (\n                    <span>\n                        {'Progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'milestone finish':\n                text = (\n                    <span>\n                        Milestone {item.details.itemName}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'get reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' recieved '}\n                        {getRewardText(item)}\n                        {' as a reward from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.from}\n                        />\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'leave progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' left progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'edit progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' edited progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {item.details.addedAccounts.length > 0 ? (\n                            <>\n                                {' and added '}\n                                {item.details.addedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        {item.details.droppedAccounts.length > 0 ? (\n                            <>\n                                {' and removed '}\n                                {item.details.droppedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}\n                                {' .'}\n                            </>\n                        ) : (\n                            '.'\n                        )}\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' from progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add to progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' to progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        {getRewardText(item)} as a reward for\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          noAva={true}\n                                          span={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'delete reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        {getRewardText(item)}\n                        {' as a reward for '}\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          span={true}\n                                          noAva={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            default:\n                text = 'New event'\n                break\n        }\n        return (\n            <div key={index}>\n                <Divider style={{ margin: '5px 0px' }} />\n                <Comment\n                    avatar={\n                        <UserButton noName={true} id={item.user} span={true} />\n                    }\n                    content={text}\n                />\n            </div>\n        )\n\n        // <Card>{text}</Card>\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ marginTop: '40px', ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport axios from 'axios'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nconst Explore = props => {\n    const [isSearching, setIsSearching] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n    const [progresses, setProgresses] = useState([])\n    const [noMore, setNoMore] = useState(false)\n    const [noMorePopular, setNoMorePopular] = useState(false)\n    const [searchValue, setSearchValue] = useState('')\n    const onSearch = (value, noNoMore) => {\n        if (!noMore || noNoMore) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || searchValue,\n                    skip: noNoMore ? 0 : foundProgresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses(res.data.progresses)\n                        if (res.data.progresses.length === 0)\n                            message.warning('There are no progresses found.')\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n    const onGetPopular = () => {\n        if (!noMorePopular) {\n            setNoMorePopular(true)\n            axios\n                .post('/api/explore/popular', {\n                    skip: progresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMorePopular(res.data.noMore)\n                        setProgresses([...progresses, ...res.data.progresses])\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Input.Search\n                placeholder=\"Find great inspirations!\"\n                onSearch={value => {\n                    if (value) {\n                        setIsSearching(true)\n                        if (value !== searchValue) {\n                            setNoMore(false)\n                            setFoundProgresses([])\n                            setSearchValue(value)\n                            onSearch(value, true)\n                        }\n                    } else {\n                        setNoMore(false)\n                        setSearchValue(value)\n                        setIsSearching(false)\n                    }\n                }}\n                onChange={e => {\n                    if (!e.target.value) {\n                        setNoMore(false)\n                        setFoundProgresses([])\n                        setIsSearching(false)\n                        setSearchValue('')\n                    }\n                }}\n                enterButton\n                allowClear\n                style={{\n                    maxWidth: '500px',\n                    borderRadius: '10px',\n                }}\n            />\n            {isSearching ? (\n                foundProgresses.length > 0 ? (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={onSearch(searchValue)}\n                        hasMore={!noMore}\n                        loader={\n                            <div className=\"loader\" key={0}>\n                                Loading ...\n                            </div>\n                        }\n                    >\n                        <MasonryGrid>\n                            {foundProgresses.map((item, index) => (\n                                <MasonryCard\n                                    id={item._id}\n                                    key={index}\n                                    onClickLink={'/inspirations/' + item._id}\n                                    images={item.goal.images}\n                                    body={\n                                        <>\n                                            {/* <UserButton\n                                                noName={true}\n                                                id={item.owner}\n                                                friendDataExp={friendData}\n                                            /> */}\n                                            <span\n                                                style={{ fontWeight: 'bold' }}\n                                            >\n                                                {item.name}\n                                            </span>\n                                        </>\n                                    }\n                                />\n                            ))}\n                        </MasonryGrid>\n                    </InfiniteScroll>\n                ) : null\n            ) : (\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={onGetPopular}\n                    hasMore={!noMorePopular}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            Loading ...\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {progresses.map((item, index) => (\n                            <MasonryCard\n                                id={item._id}\n                                key={index}\n                                onClickLink={'/inspirations/' + item._id}\n                                images={item.goal.images}\n                                body={\n                                    <>\n                                        {/* <UserButton\n                                            noName={true}\n                                            id={item.owner}\n                                            friendDataExp={friendData}\n                                        /> */}\n                                        <span style={{ fontWeight: 'bold' }}>\n                                            {item.name}\n                                        </span>\n                                    </>\n                                }\n                            />\n                        ))}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            )}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Explore)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nconst AddCard = props => (\n    <Button\n        onClick={props.action}\n        type=\"primary\"\n        shape=\"round\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n    >\n        {props.title}\n    </Button>\n)\n\nexport default AddCard\n","import React from 'react'\n\nexport default props => (\n    <div\n        style={{\n            margin: 'auto',\n            textAlign: 'center',\n            width: '90%',\n            maxWidth: '400px',\n            padding: '30px 0px',\n        }}\n    >\n        <img\n            src={props.url}\n            style={{\n                width: '100%',\n                height: 'auto',\n                marginBottom: '20px',\n            }}\n        />\n        <span>{props.text}</span>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Progresses = props => {\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    const { isOwner, progressData, account, profile } = props\n\n    const { progresses } = !isOwner ? profile : account\n\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    const editGoal = !isOwner ? null : loadedProgresses ? (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    ) : null\n\n    return !loadedProgresses || loadedProgresses.length === 0 ? (\n        <CustomEmpty\n            url=\"/inspiration.png\"\n            text=\"You will see your inspirations here. You can add a new inspiration for yourself or for people you care.\"\n        />\n    ) : (\n        <div>\n            {isOwner && (\n                <>\n                    <AddCard\n                        title=\"Add inspiration\"\n                        sub=\"Rich your goals or help others!\"\n                        action={() => {\n                            setStartProgressVisible(true)\n                        }}\n                    />\n                    {editGoal}\n                </>\n            )}\n            <MasonryGrid style={{ marginTop: '40px' }}>\n                {loadedProgresses.map((item, index) => (\n                    <MasonryCard\n                        id={item._id}\n                        key={index}\n                        onClickLink={'/inspirations/' + item._id}\n                        images={item.goal.images}\n                        body={\n                            <>\n                                <UserButton\n                                    ids={item.goal.users}\n                                    group={true}\n                                />\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {item.name}\n                                </span>\n                            </>\n                        }\n                    />\n                ))}\n            </MasonryGrid>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport Tabs from 'antd/es/tabs'\nimport DashboardPosts from './DashboardPosts'\nimport DashboardEvents from './DashboardEvents'\nimport Badge from 'antd/es/badge'\nimport Helmet from 'react-helmet'\nimport Explore from '../Explore/Explore'\nimport Progresses from '../Progresses/Progresses'\n\nconst Progress = props => {\n    const { account, lastNotifications } = props\n\n    let numberOfUnseenNots = 0\n\n    for (let not of lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    return (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Tabs\n                tabBarStyle={!account._id ? { display: 'none' } : {}}\n                type=\"card\"\n                onChange={activeTab => {\n                    if (activeTab === 'events') {\n                        const last = parseInt(\n                            lastNotifications.reduce((res, not) => {\n                                return parseInt(not.notId) > parseInt(res)\n                                    ? not.notId\n                                    : res\n                            }, 0)\n                        )\n                        if (\n                            lastNotifications.length > 0 &&\n                            parseInt(account.lastSeenNot) !== last\n                        ) {\n                            wsActions.setLastSeenNot(account._id, last)\n                        }\n                    }\n                }}\n            >\n                <Tabs.TabPane tab=\"Explore\" key=\"explore\">\n                    <Explore />\n                </Tabs.TabPane>\n                {account._id && (\n                    <Tabs.TabPane tab=\"My inspirations\" key=\"inspirations\">\n                        <Progresses isOwner={true} />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                        <DashboardPosts />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane\n                        tab={\n                            <Badge count={numberOfUnseenNots} offset={[10, 0]}>\n                                Events\n                            </Badge>\n                        }\n                        key=\"events\"\n                    >\n                        <DashboardEvents />\n                    </Tabs.TabPane>\n                )}\n            </Tabs>\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Progress)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\n\nconst styles = `<style> article,  aside,  details,  figcaption,  figure,  footer,  header,  hgroup,  menu,  nav,  section {      display: block;  }   html {      height: 100%;      padding: 0;      margin: 0;  }   body {      margin: auto;      font-weight: 300;      font-family: 'Open Sans', sans-serif !important;      color: #444;      font-size: 17px;      line-height: 1.231;      height: 100%;  }   .clearafter:after {      clear: both;      content: '.';      display: block;      height: 0;      visibility: hidden;  }   h1 {      margin: 0px;  }   .twofold a {      color: #888;      text-decoration: none;  }   .twofold a:hover {      color: #3665c1;  }   .twofold {      display: inline-block;      margin: 5px 0px;      width: 143px;      padding-left: 35px;      font-family: 'Open Sans', sans-serif !important;      color: #999;      font-size: 12px;  }   .twofold_mail {      display: inline-block;      margin: 5px 0px;      cursor: pointer;      color: #999;      padding-left: 35px;      width: 120px;      font-family: 'Open Sans', sans-serif !important;      font-size: 12px;  }   .twofold_mail:hover {      color: #4683ea;  }   .wrapp {      min-height: 100%;      position: relative;      margin: auto;  }   .cont {      width: 94%;      margin: auto;      padding-bottom: 320px;      text-align: center;  }   .logo_back {      padding: 9px 4%;  }   a.logo {      border: none;      text-decoration: none;  }   a img {      border: none;  }   .maintext0 {      font-weight: 300;      font-size: 45px;      color: #222;      margin: 50px auto 10px;      text-align: center;  }   .maintext1 {      font-size: 20px;      font-weight: 300;      letter-spacing: -1px;      margin: 0px auto 20px;      text-align: center;  }   .leftTitle {      font-size: 22px;      font-weight: 600;      margin: 20px auto 20px;      text-align: left;  }   .maintext2 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 100px 0px 0px;      color: #222;  }   .maintext3 {      font-size: 22px;      font-weight: 300;      text-align: center;      margin: 50px 0px 20px;      color: #222;  }   .maintext4 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 25px 0px 35px;      color: #222;  }   .contactusleft:hover {      background: #FF5935;  }   .facebookleft:hover {      background: #2350A2;  }   .googleleft:hover {      background: #d34836;  }   .linkedinleft:hover {      background: #006699;  }   .twitterleft:hover {      background: #00ACEF;  }   .twitterleft,  .linkedinleft,  .googleleft,  .facebookleft,  .contactusleft {      background: none;      border: none;      cursor: pointer;      width: 28px;      height: 34px;      outline: none;  }   .noselect {      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .totop {      position: absolute;      color: #2B7BC7;      bottom: 0px;      right: 0px;      text-decoration: none;      font-size: 15px;  }   .totop:hover {      text-decoration: underline;  }   .totopmap {      margin-left: 965px;      color: #2B7BC7;      text-decoration: none;      font-size: 15px;  }   .totopmap:hover {      text-decoration: underline;  }   .arrow {      padding-right: 15px;  }   .regulartitlemap {      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 100px 0px 20px 20px;      font-weight: 600;  }   .regulartitleprice {      top: 0px;      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 80px 0px 0px 20px;      font-weight: 600;  }   .even {      padding: 3px;      border-bottom: 1px solid #EEE;      height: 34px;  }   .even:hover {      background-color: #EAFBFB;  }   .pricing {      width: 700px;      margin: auto;      border: 0px solid black;      border-bottom: none;      border-bottom: 1px solid black;      border-collapse: collapse;      font-size: 17px;      text-align: center;      margin-top: 70px;  }   .countries {      list-style-type: none;      top: 0px;      margin: 100px 0px 100px;      text-align: left;  }   .countries li {      width: 188px;      margin: 5px 0 24px 0px;      display: inline-block;  }   .countries li.clear {      clear: left;  }   .countries li svg {      float: left;      margin: 0 10px 0 0;      border: 1px solid #e6e6e6;  }   .countries li a {      display: table;      width: 160px;      color: #666;      *display: block;      *position: relative;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .countries li a:hover {      color: #08c;  }   .countries li span {      display: table-cell;      width: 160px;      vertical-align: middle;      *display: block;      *position: absolute;      *top: 50%;  }   .countries li span span {      width: 100%;      *display: block;      *position: relative;      *top: -50%;  }   /* .menu { position:absolute; left:196px; top:27px; *font-family: arial, sans-serif; } .menu ul{ \tmargin:0px; \tlist-style-type: none; } .menu ul li{ \tfloat:left; \tpadding:0px; \tmargin:0px 35px 0px 5px; } .menu ul li a { \tdisplay:table; \tcolor:#999;     height:24px; \tcursor:pointer; \ttext-decoration:none; \tvertical-align:middle; } .menu ul li a:hover {  color:#333; } .menu ul li span { \tdisplay:table-cell;  padding: 0px;  font-size:14px; \tfont-weight:600; \tvertical-align:middle; \ttext-align:center; } .login {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .login:hover {  color:#333; } .signup {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .signup:hover {  color:#333; } */  .menu {      position: absolute;      right: 240px;      top: 27px;      *font-family: arial, sans-serif;  }   .menu ul {      margin: 0px;      list-style-type: none;  }   .menu ul li {      float: left;      padding: 0px;      margin: 0px 45px 0px 5px;  }   .menu ul li a {      display: table;      color: #888;      height: 24px;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .menu ul li a:hover {      color: #333;  }   .menu ul li span {      display: table-cell;      padding: 0px;      font-size: 14px;      font-weight: 600;      vertical-align: middle;      text-align: center;  }   .login {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .login:hover {      color: #333;  }   .signup {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .signup:hover {      color: #333;  }   .language {      cursor: pointer;  }   .language:hover {}   .language svg {      border: 1px solid #e6e6e6;  }   .download {      height: 24px;      background: #1EAB4B;      padding: 0px 25px 0px;      float: right;      border: none;      border-radius: 3px;      color: white;      font-family: 'Open Sans';      font-weight: 900;  }   button {      cursor: pointer;  }   .download:hover {      background: #27ae60;  }   .social_footer {      padding-left: 35px;      height: 12px;      display: inline-block;      margin: 5px 0px;      width: 120px;  }   .social_footer p {      float: left;      display: inline;      margin: 0px 13px;      color: #999;  }   .social_footer svg {      float: left;      display: inline;  }   .tmsdownloads {      background: #1EAB4B;      border: none;      line-height: 13px;      cursor: pointer;      min-height: 37px;      padding: 7px 0px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .tmsdownloads:hover {      background: #27ae60;  }   .blueBut {      background: #4683ea;      border: none;      cursor: pointer;      height: 37px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .blueBut:hover {      background: #4d92f7;  }   .orderBut {      background: #F6F9FF;      outline: none;  }   .orderBut:hover {      background: #dce9ff;  }   .hpLoginBlocks {      vertical-align: top;      max-width: 400px;      min-width: 310px;      width: 100%;      display: inline-block;      margin-bottom: 30px;  }   .market:hover {      box-shadow: 1px 2px #ddd;  }   #readMore {      margin: 30px auto 0px;      color: #0087e2;      fill: #0087e2;      cursor: pointer;  }   #readMore:hover,  #readMore:hover path {      color: #4d92f7;      fill: #4d92f7;  }   .simplelink {      text-decoration: none;      color: #333;  }   .simplelink:hover {      text-decoration: none;      color: #3665c1;  }   .right_submenu {      position: absolute;      height: 39px;      right: 45px;      top: 18px;      display: block;      border: 1px solid #E6E6E6;  }   footer {      font-size: 12px;      background: #f3f3f3;      background: -moz-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #f3f3f3), color-stop(100%, #fff));      background: -webkit-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -o-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -ms-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: linear-gradient(top, #f3f3f3 0, #fff 100%);      font-size: 12px;      padding: 30px 0 0px;      margin-top: 100px;      width: 100%;      height: 158px;      color: #888;      position: absolute;      bottom: 0px;  }   .footer_header {      font-weight: 300;      color: #555;      font-size: 13px;      text-align: left;      padding-left: 35px;  }   .flag svg {      border: 1px solid #e6e6e6;  }   .price {      width: 80%;      margin: auto;      border-collapse: collapse;  }   .price tr {      height: 36px;      border-bottom: 1px solid #ddd;  }   table .yel:hover td {      background: #e7f4fd;  }   .gre {      padding-left: 10px;      background: #fff;  }   .price button {      cursor: pointer;      font-size: 23px;      color: #fff;      border: none;      border-radius: 3px;      min-height: 40px;      box-shadow: 0px 2px 1px 1px #adadad;      padding: 0px 35px;  }   .doodle {      height: 0px;      position: relative;      bottom: 26px;  }   .signup_free {      background: #1EAB4B;  }   .signup_free:hover {      background: #27ae60;  }   .signup_pro {      background: #1548B8;  }   .signup_pro:hover {      background: #1851CE;  }   .free {      color: #1EAB4B;      font-size: 13px;      background: #f5f5f5;  }   .pro {      color: #1548B8;      font-size: 13px;      background: #f5f5f5;  }   .pricing_image {      margin: 85px auto 0px;      text-align: center;  }   .tworow {      width: 49.999%;      float: left;      display: inline;      text-align: center;      margin-top: 80px;  }   .tworow>div {      width: 30%;      max-width: 80px;      text-align: center;      margin: auto;  }   .half {      margin: 10px 10%;      text-align: center;      line-height: 1.6;  }   .oneimage {      text-align: center;      margin: auto;      margin-top: 85px;      max-width: 750px;      width: 100%;  }   #placeholder #lozenge {      fill: #666;  }   #placeholder:hover #lozenge {      fill: url(#SVGID_1_);  }   .passbut:hover {      text-decoration: underline;  }   #regbut:hover {      background: #21b951;  }   #loginbut:hover {      background: #70bcf0;  }   .passbut {      text-decoration: none;      color: #4683ea;  }   #regbut {      background: #1eab4b;  }   #loginbut {      background: #51aded;  }   input {      width: 300px;      height: 35px;      border: 1px solid #cccccc;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;      color: #555555;      font-size: 15px;  }   input[type='checkbox'] {      height: 16px;      width: 16px;  }   .linksimple {      color: #4683ea;      text-decoration: none;  }   .linksimple:hover {      color: #4683ea;      text-decoration: underline;  }   .linksimple:visited {      color: #4683ea;      text-decoration: none;  }   .LoginButton {      cursor: pointer;      border: none;      height: 62px;      color: white;      font-size: 16px;      font-weight: bold;      box-shadow: 0px 2px 1px 1px #adadad;      width: 330px;      margin: 15px auto 15px;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   #reghome {      background: #1eab4b;  }   #reghome:hover {      background: #21b951;  }   .regtable {      width: 55%;      margin: auto;      border-collapse: collapse;      text-align: center;  }   .regtable tr {      height: 48px;  }   .regtable td {      width: 50%;  }   .regtable input {      padding-left: 5px;      height: 30px;      color: #111;      background: #fff;  }   ::-webkit-input-placeholder {      color: #999;  }   :-moz-placeholder {      color: #999;      opacity: 1;  }   ::-moz-placeholder {      color: #999;      opacity: 1;  }   :-ms-input-placeholder {      color: #999;  }   .logo_svg:hover polygon {      fill: #00CACD;  }   .logo_svg:hover path {      fill: #00CACD;  }   /* FLOAT DIV STYLES */  .floatDiv {      position: absolute;      background: grey;      width: 300px;      height: 200px;      resize: both;      overflow: hidden;      border: 1px solid #bbb;      top: 100px;      left: 300px;  }   .floatDivTH {      width: 100%;      height: 25px;      background: #eee;      border: 1px solid #bbb;      cursor: pointer;      line-height: 0px;  }   .floatDivTH td {      width: 25px;  }   .floatDivTH td:first-child {      width: auto;      white-space: nowrap;  }   .rollDiv {      left: 0px;      top: 0px;      width: 200px;      resize: none;  }   .expandDiv {      left: 0px;      top: 0px;      height: 100%;      width: 100%;      resize: none;      border: none;  }   .topPan {      width: 100%;      height: 25px;      background: #eee;  }   .topClose {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 2px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topExpand {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 27px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topRoll {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 53px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .dock {      left: 0px;      bottom: 0px;      height: 33px;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;  }   .undock {      left: 0px;      bottom: 0px;      height: auto;      max-height: 100%;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;      overflow-y: auto;  }   .expandDock {      position: absolute;      left: 199px;      bottom: 0px;      width: 33px;      height: 33px;      cursor: pointer;      background: #eee;  }   .expandDock table,  .expandDock table tr td {      border: 1px solid #bbb;      text-align: center;      width: 100%;      height: 100%;      line-height: 0;  }   .rollDiv .topPan {      cursor: pointer;  }   .floatDiv .topPan {      cursor: default;  }   .st0,  .floatDivTH path {      fill: #444 !important;  }   #ratioWrap {      width: 95%;      max-width: 640px;      display: inline-block;      position: relative;      margin: 40px auto 20px;      /* z-index:25; */  }   #ratioWrap:after {      padding-top: 56.25%;      display: block;      content: '';  }   #div1 {      margin: auto;      position: absolute;      top: 0;      bottom: 0;      right: 0;      left: 0;      cursor: pointer;      text-align: center;      background: #fff;      \" } #placeholder{   margin:auto;   position: absolute;   top: 0;   bottom: 0;   right: 0;   left: 0;   cursor:pointer;   text-align:center;   background:#fff;\"  }   #contLogin {      margin-top: 0px;      padding-top: 30px;      padding-bottom: 130px;  }   #header {      position: fixed;      height: 79px;      width: 100%;      display: block;      background: white;      z-index: 21;      top: 0px;  }   .prodList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .prodList a {      color: inherit;      display: inline-block;      margin: 0px 46px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;      text-decoration: none;      vertical-align: top;  }   .prodList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;  }   .prodList table {      width: 100%;      border-collapse: collapse;      border: none;      text-align: center;  }   .prodList tr:first-child td {      padding-top: 33px;  }   .prodList tr:nth-child(2) td {      padding: 9px 20px 20px;  }   .prodList tr:last-child td {      padding: 0px 20px 33px;      font-size: 14px;  }   .appList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .appList a {      color: inherit;  }   .appList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      cursor: pointer;  }   .sharePan {      width: 100%;      list-style-type: none;      padding: 0;  }   .sharePan li {      width: 25%;      float: left;      box-sizing: border-box;      height: 30px;  }   .sharePan a {      color: white;      text-decoration: none;      display: block;      width: 100%;      height: 100%;      position: relative;  }   .sharePan a div {      position: absolute;      top: 5px;      left: 40px;      font-weight: 700;  }   .sharePan a svg {      margin: 8px 15px;  }   .sharePan li:nth-child(1) {      background: #3b5998;  }   .sharePan li:nth-child(2) {      background: #1da1f2;  }   .sharePan li:nth-child(3) {      background: #006fa6;  }   .sharePan li:nth-child(4) {      background: #db4437;  }   .tag {      display: inline-block;      border-radius: 3px;      padding: 4px 20px;      margin: 5px 10px 5px 0px;      border: 1px solid transparent;      cursor: pointer;      font-size: 15px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .processes .tag {      background: rgba(70, 131, 234, 0.2);  }   .processes .tag:hover {      border: 1px solid background:rgba(70, 131, 234, 0.5);      background: rgba(70, 131, 234, 0.4);  }   .processes .activeTag {      background: rgba(70, 131, 234, 1);      color: white;  }   .processes .activeTag:hover {      background: #4d92f7;      border: 1px solid #4d92f7;  }   .services .tag {      background: rgba(30, 171, 75, 0.2);  }   .services .tag:hover {      border: 1px solid background:rgba(30, 171, 75, 0.5);      background: rgba(30, 171, 75, 0.4);  }   .services .activeTag {      background: rgba(30, 171, 75, 1);      color: white;  }   .services .activeTag:hover {      background: #1EAB4B;      border: 1px solid #1EAB4B;  }   .articles {      text-align: center;  }   .articles>a {      text-align: left;      display: inline-block;      margin: 20px 10px 0px 10px;      border-radius: 3px;      border: 1px solid transparent;      cursor: pointer;      text-decoration: none;      color: #777;      max-width: 284px;      width: 100%;      vertical-align: top;  }   .articles>a:hover {      opacity: .8;  }   .toKnowledge {      margin: 50px auto 30px;      text-align: right;  }   .toKnowledge a {      padding: 10px 20px;      background: #0087e2;      border: 1px solid #bbb;      color: white;      border-radius: 3px;  }   .toKnowledge a:hover {      background: #4d92f7;      border: 1px solid #ccc;      text-decoration: none;  }   .blueLink {      text-decoration: none;      color: #0087e2;  }   .blueLink:hover {      text-decoration: underline;  }   .articleTags {      width: 100%;  }   .articleTags div {      display: inline-block;      border-radius: 3px;      padding: 2px 4px;      margin: 5px 5px 5px 0px;      cursor: pointer;      font-size: 14px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .artProcTag {      background: rgba(70, 131, 234, 0.2);      color: #777;  }   .artProcTag.active {      background: rgba(70, 131, 234, 1);      color: white;  }   .artServTag {      background: rgba(30, 171, 75, 0.2);      color: #777;  }   .artServTag,  .active {      background: rgba(30, 171, 75, 1);      color: white;  }   .article h3 {      font-weight: 600;      font-size: 20px;      margin: 7px 0px 10px;  }   .article p {      font-style: italic;      margin: 0px 0px 8px;      font-size: 15px;  }   /* ------------------ARTICLES--------------------- */  .artB {      color: #444;      font-size: 18px;      line-height: 26px;  }   .artB h1 {      font-size: 44px;      font-weight: 700;      color: #191919;      text-align: center;      line-height: 60px;  }   .artB h2 {      font-size: 30px;      font-weight: 400;      color: #191919;      text-align: center;      line-height: 35px;  }   .artB table {      width: 100%;      vertical-align: top;      border-collapse: collapse;  }   .artB table.twotd td {      width: 50%;      vertical-align: top;  }   .artB table.threetd td {      width: 33%;      vertical-align: top;  }   .artB td {      border: 1px solid #999;      padding-left: 10px;  }   .artB td ol {      margin: 0px;  }   .artB ol {      margin: 0px;      margin: 35px 0px -13px 0px;      font-style: italic;      font-weight: 600;  }   .artB ol p {      color: #444;      /*font-size: 17px;*/      line-height: 26px;      font-style: initial;      font-weight: 300;      margin-left: -40px;  }   .artB ol i p {      font-style: italic;      color: #008b8b;  }   .artB p.total {      color: #134f5c;      font-weight: bold;      margin-top: 0px;  }   .artB iframe {      margin: auto;      display: block;  }   @media screen and (min-width: 1200px) {       #mob-menu-but,      #mob-menu {          display: none !important;      }       #cont {          display: block !important;      }  }   @media screen and (max-width: 1100px) {      .footSep {          visibility: hidden;      }  }   @media screen and (max-width: 1200px) {       #menu,      #submenu {          display: none;      }       #mob-menu-but {          width: 30px;          height: 30px;          position: absolute;          right: 4%;          top: 21px;          display: block;      }       #mob-menu {          display: none;          width: 100%;          background: white;          z-index: 9999;          margin: 0px;          padding: 0px;          margin-top: 89px;      }       #mob-menu li {          text-align: center;          list-style: none;          margin: 20px;      }       #mob-menu a {          text-decoration: none;          font-size: 16px;          font-weight: 500;          color: #0F3F9F !important;          cursor: pointer;      }  }   @media screen and (max-width: 750px) {      .maintext0 {          font-size: 30px;      }       .maintext1 {          font-size: 18px;      }       .maintext2,      .maintext4 {          font-size: 26px;      }       .maintext4 {          margin: 15px 0px 30px;      }       .pricing_image {          margin: 70px auto 20px;      }       .half {          14px;      }       #cont {          margin-top: 50px;      }  }   @media screen and (max-width: 650px) {      .sharePan div {          display: none;      }       .articles>a {          margin: 50px 0px 0px 0px;      }  }   @media screen and (max-width: 450px) {      .artB h1 {          font-size: 26px;          font-weight: 400;          color: #191919;          text-align: center;          line-height: 40px;      }       .artB h2 {          font-size: 22px;          font-weight: 400;          font-style: italic;          color: #191919;          text-align: center;          line-height: 30px;      }       .maintext0 {          font-size: 26px;      }       .maintext1 {          font-size: 18px;      }       .maintext2 {          font-size: 25px;          margin: 50px 0px 0px;      }       .maintext4 {          font-size: 25px;          margin: 10px 0px 20px;      }       .pricing_image {          margin: 40px auto 20px;      }       .half {          14px;      }       .tworow {          width: 100%;      }       .hpLoginBlocks {          min-width: initial;      }       #cont {          margin-top: 30px;      }  }   /* ------------------------LOGOS---------------------------- */  .logo_svg_maintain:hover svg {      fill: #0044ff;  }   .logo_svg_order:hover svg {      fill: #ff4400;  }   /* ------------------------LOGOS END------------------------ */  /* ------------------------PRODUCTS MENU-------------------- */  #products_menu {      position: absolute;      right: -100px;      top: 35px;      width: 346px;      background: white;      border-radius: 3px;      border: 1px solid #ccc;      display: none;      box-shadow: 0 2px 10px rgba(0, 0, 0, .2);      box-sizing: border-box;      font-size: 15px;      color: #222;  }   #products_menu>div {      padding: 30px 30px 30px 30px;      box-sizing: border-box;  }   #products_menu>div>a {      display: inline-block;      width: 90px;      height: 90px;      border: 1px solid transparent;      vertical-align: top;      text-align: center;      cursor: pointer;      border-radius: 3px;      box-sizing: border-box;      text-decoration: none;      color: #222;  }   #products_menu>div>a:hover {      border: 1px solid #e6e6e6;  }   #products_menu>a>button {      width: 100%;      background: #eee;      height: 40px;      border: none;  }   #products_menu>a>button:hover {      width: 100%;      background: #e7e7e7;      height: 40px;      border: none;  }   /* ------------------------PRODUCTS MENU END----------------- */  /* ------------------------SUPPORT MENU---------------------- */  .collapseDiv {      width: 100%;      display: none;      padding: 15px 0px;      box-sizing: border-box;      background: #333;  }   .collapseDiv>a {      display: block;      text-decoration: none;      width: 100%;      background: #333;      padding: 5px 30px 5px 40px;      box-sizing: border-box;      cursor: pointer;      color: #fff;  }   .collapseDiv>a:hover {      background: #222;  }   .plusM {      float: right;      margin-right: 10px;  }   .supMen {      width: 100%;      background: #eee;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMen:hover {      background: #ddd;  }   .supMenAct {      width: 100%;      background: #c5c5c5;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMenAct:hover {      background: #bbb;  }   @media screen and (max-width: 400px) {      .plusM {          visibility: hidden;      }  }   .artImg {      width: 100%;  }   .supArtMenIt {      width: 100%;      padding: 10px 0px;  }   .supArtMenIt>a {      display: block;      text-decoration: none;      width: 100%;      cursor: pointer;      padding: 10px 10px;      font-size: 14px;      box-sizing: border-box;      color: #444;      text-align: left;  }   .supArtMenIt>a:hover {      background: #eee;  }   .supArtMenItAct {      color: blue;      border-left: 3px solid blue;      font-weight: 600;  }   .supMenArt {      vertical-align: top;      display: inline-block;      max-width: 280px;      min-width: 250px;      margin: 80px auto;      box-shadow: -10px 5px 20px -5px #ccc;      border-left: 1px solid #ccc;      box-sizing: border-box;      float: right;      color: #222;  }   @media screen and (max-width: 1070px) {      .supMenArt {          display: block;          float: none;          max-width: 600px;          min-width: 0px;          box-shadow: -4px 7px 50px -5px #ccc;      }  }   /* ------------------------SUPPORT MENU END------------------ */  /* ------------------------SUPPORT ARTICLE------------------- */  .artS {      max-width: 700px;      text-align: left;      margin-top: 68px;      color: #222;      font-size: 15px;      line-height: 31px;      display: inline-block;  }   .artS h1,  .artS h2 {      text-align: left;      font-weight: 400;  }   .artS h1 {      font-size: 40px;      line-height: 60px;  }   .artS img {      width: 100%;      height: auto;  }   .artS .emb {      width: 100%;      text-align: center;  }   .artS .emb div {      font-size: 27px;      margin: 43px auto;      color: #999;  }   .artS .emb img {      width: 90%;      margin: auto;  }   .artS .emb p {      text-align: left;  }   .artS .emb textarea {      width: 90%;      font-size: 15px;      height: 100px;  }   .artS .artImg {      width: 100%;      max-width: 120px;      float: right;      margin: 18px 10px 10px 40px;  }   .artS .clearD {      width: 100%;      height: 40px;      visibility: hidden;      clear: both;  }   .artS ol {      margin: 0px;      font-style: normal;      font-weight: inherit;  }   .artS a {      color: #4184f1;      text-decoration: none;  }   .artS a:hover {      text-decoration: underline;  }   .artS .aNewT:after {      content: '';      background: no-repeat url(http://www.logision.com/img/newBlank.png);      display: inline-block;      height: 10px;      margin: 0 3px 0 5px;      width: 10px;  }   /* ------------------------SUPPORT ARTICLE END--------------- */</style>`\n\nconst Blog = props => {\n    console.log(props.history.location.pathname)\n    const [state, setState] = useState('')\n    const [title, setTitle] = useState('')\n    useEffect(() => {\n        const url = 'https://websiter.dev' + props.history.location.pathname\n        console.log(url)\n        axios\n            .post('/api/blog', { url })\n            .then(res => {\n                setState(\n                    styles +\n                        res.data.body\n                            .replace(\n                                /\\/images\\/blog/gi,\n                                'https://websiter.dev/images/blog'\n                            )\n                            .replace(\n                                /href=\"https:\\/\\/websiter.dev/gi,\n                                'href=\"https://addspire.com'\n                            )\n                )\n                setTitle(res.data.title)\n            })\n            .catch(err => {})\n    }, [props.history.location.pathname])\n\n    return (\n        <div>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <div dangerouslySetInnerHTML={{ __html: state }} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React from 'react'\n\nimport * as wsActions from '../websocketActions'\nimport Menu from 'antd/es/menu'\nimport Dropdown from 'antd/es/dropdown'\nimport DownOutlined from '@ant-design/icons/DownOutlined'\nimport Button from 'antd/es/button'\nimport MoreIcon from './UI/MoreIcon'\n\nconst FriendActionButton = props => {\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const menu = (\n        <Menu onClick={({ domEvent }) => domEvent.stopPropagation()}>\n            {props.additionalButtons &&\n                props.additionalButtons.map((button, index) => (\n                    <Menu.Item key={index + 100} onClick={button.onClick}>\n                        {button.title}\n                    </Menu.Item>\n                ))}\n            {invitingFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"2\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Decline\n                </Menu.Item>\n            ) : invitedFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"3\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Cancel invitation\n                </Menu.Item>\n            ) : realFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"4\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Unfriend\n                </Menu.Item>\n            ) : null}\n            {props.noFollow ? null : account.followAccounts.includes(_id) ? (\n                <Menu.Item\n                    key=\"5\"\n                    onClick={() => wsActions.unfollowAccount(accountId, _id)}\n                    danger={true}\n                >\n                    Unfollow\n                </Menu.Item>\n            ) : (\n                <Menu.Item\n                    key=\"6\"\n                    onClick={() => wsActions.followAccount(accountId, _id)}\n                >\n                    Follow\n                </Menu.Item>\n            )}\n        </Menu>\n    )\n    return invitingFriends.find(item => item.friend === _id) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.acceptFriend(accountId, _id)\n            }}\n        >\n            Accept friendship\n        </Dropdown.Button>\n    ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n          item => item.friend === _id\n      ) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.addFriend(accountId, _id)\n            }}\n        >\n            Become friends\n        </Dropdown.Button>\n    ) : (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a\n                // className=\"ant-dropdown-link\"\n                onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                }}\n            >\n                <Button type={props.asText ? 'primary' : 'link'}>\n                    {props.asText ? (\n                        <>\n                            Actions <DownOutlined />\n                        </>\n                    ) : (\n                        <MoreIcon />\n                    )}\n                </Button>\n            </a>\n        </Dropdown>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport friendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        account: props.account,\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButtons: [\n            {\n                title: 'See profile',\n                onClick: () =>\n                    props.history.push('/profile/' + props.friend._id),\n            },\n        ],\n    })\n\n    return (\n        <MasonryCard\n            actions={friendActions}\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n            noLink={true}\n            friends={true}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Avatar from 'antd/es/avatar'\n\nconst ProgressButton = props => {\n    const { id } = props\n    const userName = id => props.progressData[id].goal.name\n    const userAvatar = id => (\n        <span\n            onClick={() => {\n                handleClick(id)\n            }}\n        >\n            <Avatar\n                src={\n                    props.progressData[id].goal.images.length > 0 &&\n                    props.progressData[id].goal.images[0]\n                }\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group ? {} : { margin: ' 0 5px' }}\n            />\n        </span>\n    )\n\n    const handleClick = id =>\n        props.history.push('/inspirations/' + (id || props.id))\n    return (\n        <span\n            style={{ cursor: 'pointer', fontWeight: 'bold', ...props.style }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {userAvatar(id)}\n            {userName(id)}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult({})\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setAddFriendOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => {\n                        setAddFriendOpen(false)\n                        document.body.removeAttribute('style')\n                    }}\n                >\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>\n                To find a friend you need to enter your friend's name or\n                nickname.\n            </p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult._id && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendCard from '../../components/FriendCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst pendingFriends = props => {\n    const { realFriends, invitedFriends, invitingFriends } = props\n    return (\n        <>\n            {invitingFriends.length > 0 && (\n                <>\n                    <h2>People invited me to be friends</h2>\n                    <MasonryGrid friends={true}>\n                        {invitingFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <>\n                    <h2>I invited these people</h2>\n                    <MasonryGrid friends={true}>\n                        {invitedFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\nimport Tabs from 'antd/es/tabs'\nimport Empty from 'antd/es/empty'\nimport Badge from 'antd/es/badge'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const confirmedFriends =\n        realFriends.length > 0 ? (\n            <MasonryGrid friends={true}>\n                {realFriends.map(friend => (\n                    <FriendCard\n                        {...props}\n                        key={friend.friend}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n            </MasonryGrid>\n        ) : (\n            <Empty\n                image=\"https://websiter.s3.us-east-2.amazonaws.com/image+4.jpg\"\n                imageStyle={{ height: '250px', marginTop: '50px' }}\n                description={false}\n            />\n        )\n    return (\n        <div>\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n            {invitedFriends.length > 0 || invitingFriends.length > 0 ? (\n                <Tabs>\n                    <Tabs.TabPane key=\"confirmed\" tab=\"Confrmed\">\n                        {confirmedFriends}\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane\n                        tab={\n                            <Badge\n                                count={invitingFriends.length}\n                                offset={[10, 0]}\n                            >\n                                Pending\n                            </Badge>\n                        }\n                        key=\"pending\"\n                    >\n                        <PendingFriends\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n            ) : (\n                confirmedFriends\n            )}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                    >\n                        Save\n                    </Button>\n\n                    <Button\n                        type=\"link\"\n                        danger\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                        onClick={() => {\n                            props.setEditPerkOpen(false)\n                            document.body.removeAttribute('style')\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = [\n        account,\n        ...account.friends\n            .filter(friend => friend.status === 'friend')\n            .map(friend => props.friendData[friend.friend]),\n    ]\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perk={perk}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n            setEditPerkOpen={props.setEditPerkOpen}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport MasonryCard from '../../components/MasonryCard'\n\nconst PerkCard = props => {\n    const { perk, perkId, owner, mode } = props\n\n    return (\n        <MasonryCard\n            id={perkId}\n            onClickLink={`/${mode || 'shop'}/${owner._id}/${perkId}`}\n            images={perk.images}\n            body={\n                <span style={{ fontWeight: 'bold' }}>\n                    {perk.name}\n                    {mode === 'shop' && ` ($${perk.price})`}\n                </span>\n            }\n        />\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account, profile, isOwner } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"90%\"\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account._id && isOwner ? (\n        <>\n            {isOwner && (\n                <>\n                    <AddCard\n                        action={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        title=\"Add item\"\n                        sub={props.mode === 'shop' && 'Set price'}\n                    />\n                    {editPerk}\n                </>\n            )}\n            <MasonryGrid>\n                {account[props.listKey || props.mode] &&\n                    account[props.listKey || props.mode].map((perk, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={perk}\n                            perkId={\n                                props.mode === 'wishlist' ||\n                                props.mode === 'goals'\n                                    ? perk.itemId\n                                    : perk.perkId\n                            }\n                            owner={profile}\n                            account={account}\n                            setEditedPerk={setEditedPerk}\n                            setEditPerkOpen={setEditPerkOpen}\n                            mode={props.mode}\n                            style={{ cursor: 'pointer' }}\n                        />\n                    ))}\n            </MasonryGrid>\n        </>\n    ) : (\n        <MasonryGrid>\n            {profile.wishlist.map((item, index) => (\n                <PerkCard\n                    key={index}\n                    perk={item}\n                    perkId={item.itemId}\n                    owner={profile}\n                    account={account || {}}\n                    setEditedPerk={() => {}}\n                    setEditPerkOpen={() => {}}\n                    onlyBuy={true}\n                    mode=\"wishlist\"\n                />\n            ))}\n        </MasonryGrid>\n    )\n}\n\nexport default WishlistAndPerks\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\nimport Collapse from 'antd/es/collapse'\nimport Badge from 'antd/es/badge'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Descriptions from 'antd/es/descriptions'\nimport Typography from 'antd/es/typography'\nimport Empty from 'antd/es/empty'\nimport moment from 'moment'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nmoment().format()\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, transactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => transactionData[item])\n        .map(item => transactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/inspirations/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return sorted.length > 0 ? (\n        <Collapse\n            expandIconPosition=\"right\"\n            style={{ marginBottom: '50px' }}\n            destroyInactivePanel={true}\n            accordion\n        >\n            {sorted.map((transaction, index) => {\n                const types = []\n                if (\n                    transaction.from === account._id &&\n                    transaction.to === account.id\n                ) {\n                    types.push('internal')\n                }\n                if (transaction.to === account._id) {\n                    if (transaction.progress) {\n                        types.push('earn')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('buy')\n                            types.push('item')\n                        } else {\n                            types.push('recieve gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                } else if (transaction.from === account._id) {\n                    if (transaction.progress) {\n                        types.push('pay')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('sell')\n                            types.push('item')\n                        } else {\n                            types.push('send gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                }\n\n                const user =\n                    transaction.to !== account._id\n                        ? transaction.to\n                        : transaction.from\n\n                tableData.push({\n                    key: tableData.length,\n                    types,\n                    user,\n                    perk: transaction.item,\n                    amount: transaction.amount,\n                    date: transaction.date,\n                    progress: transaction.progress,\n                    status: transaction.status,\n                    transaction,\n                })\n                const { item: reward } = transaction\n                console.log(moment(transaction.date))\n                return (\n                    <Collapse.Panel\n                        style={{ padding: 0 }}\n                        header={\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Badge\n                                        color={\n                                            transaction.status ===\n                                            'Not confirmed'\n                                                ? 'blue'\n                                                : transaction.status ===\n                                                  'Cancelled'\n                                                ? 'red'\n                                                : 'green'\n                                        }\n                                    />\n                                    <Typography.Paragraph\n                                        ellipsis={{ rows: 1 }}\n                                        style={{ display: 'inline', margin: 0 }}\n                                    >\n                                        {reward.mode === 'simple'\n                                            ? reward.simple\n                                            : reward.mode === 'money'\n                                            ? reward.money + ' (money)'\n                                            : reward.mode === 'item'\n                                            ? reward.itemName\n                                            : ''}\n                                    </Typography.Paragraph>\n                                    <UserButton\n                                        noName={true}\n                                        id={\n                                            transaction.to !== account._id\n                                                ? transaction.to\n                                                : transaction.from\n                                        }\n                                    />\n                                </div>\n                                <div>\n                                    <TimeAgo datetime={transaction.date} live />\n                                </div>\n                            </>\n                        }\n                        key={index}\n\n                        // extra={}\n                    >\n                        <Descriptions\n                            layout=\"vertical\"\n                            size=\"small\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Descriptions.Item label=\"Type\">\n                                {types.map(tag => {\n                                    let color =\n                                        tag.length > 5 ? 'geekblue' : 'green'\n                                    if (tag === 'loser') {\n                                        color = 'volcano'\n                                    }\n                                    return (\n                                        <Tag color={color} key={tag}>\n                                            {tag.toUpperCase()}\n                                        </Tag>\n                                    )\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Transaction with\">\n                                <UserButton\n                                    id={\n                                        transaction.to !== account._id\n                                            ? transaction.to\n                                            : transaction.from\n                                    }\n                                />\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Item\">\n                                {\n                                    <Rewards\n                                        onlyButton={true}\n                                        rewardKey={1}\n                                        label=\"Rewards\"\n                                        rewards={[transaction.item]}\n                                        readOnly={true}\n                                    />\n                                }\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Date\">\n                                {moment(transaction.date).format(\n                                    'dddd[,] MMM Do YYYY'\n                                )}\n                            </Descriptions.Item>\n\n                            {transaction.progress && transaction.progressId && (\n                                <Descriptions.Item label=\"Progress\">\n                                    <Button\n                                        type=\"text\"\n                                        onClick={() =>\n                                            props.history.push(\n                                                '/inspirations/' +\n                                                    transaction.progressId\n                                            )\n                                        }\n                                    >\n                                        {transaction.progress}\n                                    </Button>\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </Collapse.Panel>\n                )\n            })}\n        </Collapse>\n    ) : (\n        <CustomEmpty\n            url=\"/reward.png\"\n            text=\"Here you will see all rewards that you got or gave. You can add a reward for anybody in inspirations.\"\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        transactionData: state.transactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport MasonryCard from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\nimport Tag from 'antd/es/tag'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport * as classes from './Profile.module.css'\nimport Typography from 'antd/es/typography'\nimport Input from 'antd/es/input'\nimport message from 'antd/es/message'\nimport Friends from '../Friends/Friends'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\nimport Transactions from '../Shop/Transactions'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Profile = props => {\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState(false)\n    const [followingVisible, setFollowingVisible] = useState(false)\n    const { profile, friendData, account } = props.isAuthed ? props : data\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n                    const progressData = {}\n                    for (let progress of data.progressData)\n                        progressData[progress._id] = progress\n\n                    props.setData({\n                        // profile: data.profile,\n                        friendData,\n                        progressData,\n                        account: {},\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        account,\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n        asText: true,\n    })\n    const loading = false\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} - Addspire - Explore inspirations and ideas\n                    from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <div>\n                <Card>\n                    <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', () => {\n                                        props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <div>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            Upload\n                                        </div>\n                                    </div>\n                                )}\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n                        <Typography.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <EditOutlined\n                                                  style={{ fontSize: '16px' }}\n                                              />\n                                          ),\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </Typography.Title>\n                        {/* <h1 style={{ margin: 0 }}>{profile.name}</h1> */}\n                        <h3>({profile._id})</h3>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowersVisible(true)}\n                        >\n                            {profile.followingAccounts.length} Followers\n                        </Button>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowingVisible(true)}\n                        >\n                            {profile.followProgresses.length +\n                                profile.followAccounts.length}{' '}\n                            Following\n                        </Button>\n                        {isOwner && (\n                            <div style={{ borderTop: '1px #ccc solid' }}>\n                                <Button\n                                    icon={<LogoutOutlined />}\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    danger\n                                    type=\"text\"\n                                >\n                                    Logout\n                                </Button>\n                            </div>\n                        )}\n                        <div>\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Tag color=\"green\">Friends</Tag>\n                                    ) : null}\n                                    {account.followAccounts.includes(\n                                        profile._id\n                                    ) ? (\n                                        <Tag\n                                            style={{ marginRight: '10px' }}\n                                            color=\"purple\"\n                                        >\n                                            Following\n                                        </Tag>\n                                    ) : (\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                        >\n                                            Follow\n                                        </Button>\n                                    )}\n                                </span>\n                            )}\n                            {friendActions}\n                        </div>\n                    </div>\n                    <Tabs type=\"card\">\n                        <Tabs.TabPane tab=\"Inspirations\" key={0}>\n                            <Progresses isOwner={isOwner} />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Friends\" key={1}>\n                            {isOwner ? (\n                                <Friends />\n                            ) : (\n                                <MasonryGrid friends={true}>\n                                    {profile.friends.filter(\n                                        friend => friend.status === 'friend'\n                                    ).length === 0 ? (\n                                        <CustomEmpty\n                                            url=\"/friend.png\"\n                                            text=\"Here you will all confirmed friends of this account. You can create inspirations with your friends.\"\n                                        />\n                                    ) : (\n                                        profile.friends\n                                            .filter(\n                                                friend =>\n                                                    friend.status === 'friend'\n                                            )\n                                            .map(friend => {\n                                                const oneFriendData = {\n                                                    ...friendData[\n                                                        friend.friend\n                                                    ],\n                                                    _id: friend.friend,\n                                                }\n                                                return (\n                                                    <FriendCard\n                                                        key={oneFriendData._id}\n                                                        {...props}\n                                                        account={account}\n                                                        friend={oneFriendData}\n                                                        realFriends={\n                                                            realFriends\n                                                        }\n                                                        invitingFriends={\n                                                            invitingFriends\n                                                        }\n                                                        invitedFriends={\n                                                            invitedFriends\n                                                        }\n                                                    />\n                                                )\n                                            })\n                                    )}\n                                </MasonryGrid>\n                            )}\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Rewards\" key={4}>\n                            <Transactions />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Wishlist\" key={7}>\n                            <WishlistAndPerks\n                                mode=\"wishlist\"\n                                account={account}\n                                profile={profile}\n                                isOwner={isOwner}\n                            />\n                        </Tabs.TabPane>\n                        {isOwner && (\n                            <Tabs.TabPane tab=\"Settings\" key={8}>\n                                <Button\n                                    danger={true}\n                                    onClick={() => setDeleteVisible(true)}\n                                >\n                                    Delete account\n                                </Button>\n                                <Modal\n                                    title=\"Delete account\"\n                                    visible={deleteVisible}\n                                    onOk={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                        document.body.removeAttribute('style')\n                                    }}\n                                    onCancel={() => {\n                                        setDeleteVisible(false)\n                                        setDeleteField('')\n                                        document.body.removeAttribute('style')\n                                    }}\n                                >\n                                    <p>\n                                        Please enter your nickname and press Ok\n                                        to delete your account.\n                                    </p>\n                                    <Input\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </Modal>\n                            </Tabs.TabPane>\n                        )}\n                    </Tabs>\n                </Card>\n            </div>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {profile.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n            <Modal\n                title=\"Following\"\n                visible={followingVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowingVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <Tabs>\n                    <Tabs.TabPane tab=\"People\" key=\"1\">\n                        {profile.followAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton account={account} id={item} />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Inspirations\" key={2}>\n                        {profile.followProgresses.map(item => (\n                            <MasonryCard\n                                id={item}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        type=\"progress\"\n                                        account={account}\n                                        id={item}\n                                    />\n                                }\n                                body={\n                                    <ProgressButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                                style={{\n                                    maxHeight: '170px',\n                                    marginTop: '20px',\n                                }}\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                </Tabs>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport Helmet from 'react-helmet'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const { account } = props\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 3) {\n            const accountId = pathParts[2]\n            if (props.isAuthed && account._id === accountId) {\n                const perk = account.perks.find(\n                    item => item.perkId === pathParts[3]\n                )\n                setData({ profile: account, perk })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    props.setData({\n                        post: { [data.post._id]: data.post },\n                        friendData,\n                    })\n                })\n            }\n        }\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => <UserButton id={item} />)\n        } else return items\n    }\n\n    return perk ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    {perk.name} by {profile.id}\n                </title>\n                <meta name=\"description\" content={perk.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        Item from <UserButton id={profile._id} /> shop\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={perk.images} />\n\n                <h1>{perk.name}</h1>\n                <p style={{ whiteSpace: 'pre-wrap' }}>{perk.description}</p>\n\n                <Descriptions\n                    title=\"Goal description\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                    <Item label=\"Price\">{perk.price}</Item>\n                </Descriptions>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[perk.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport AddPerk from '../Shop/AddPerk'\nimport Popconfirm from 'antd/es/popconfirm'\nimport * as wsActions from '../../websocketActions'\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { account } = props\n\n    let accountId\n    const pathParts = props.history.location.pathname.split('/')\n    if (pathParts.length > 3) {\n        accountId = pathParts[2]\n    } else return null\n\n    useEffect(() => {\n        if (!props.isAuthed || account._id === accountId) {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n\n                props.setData({\n                    post: { [data.post._id]: data.post },\n                    friendData,\n                })\n            })\n        }\n    }, [props.isAuthed])\n\n    let wishlistItem, profile\n    if (props.isAuthed && account._id === accountId) {\n        wishlistItem = account.wishlist.find(\n            item => item.itemId === pathParts[3]\n        )\n\n        profile = account\n    } else {\n        wishlistItem = data.wishlistItem\n        profile = data.profile\n    }\n    if (!wishlistItem) return null\n    props.setData({ currentPosts: wishlistItem.post })\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    return wishlistItem ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>{`${wishlistItem.name} by ${profile.name}`}</title>\n                <meta name=\"description\" content={wishlistItem.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        <UserButton id={profile._id} /> wishlist\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={wishlistItem.images} />\n                <div style={{ textAlign: 'center' }}>\n                    <h1>{wishlistItem.name}</h1>\n                    {isOwner && (\n                        <>\n                            <Button\n                                type=\"primary\"\n                                style={{ margin: '10px' }}\n                                onClick={() => {\n                                    setEditedPerk(wishlistItem.itemId)\n                                    setEditPerkOpen(true)\n                                }}\n                            >\n                                Edit\n                            </Button>\n\n                            <Popconfirm\n                                title=\"Are you sure you want to delete this item?\"\n                                onConfirm={() => {\n                                    wsActions.deletePerk(\n                                        account._id,\n                                        wishlistItem.itemId,\n                                        'wishlist'\n                                    )\n                                    props.history.push(\n                                        '/profile/' + profile._id\n                                    )\n                                }}\n                                onCancel={() => {}}\n                                okText=\"Confirm\"\n                                cancelText=\"Cancel\"\n                            >\n                                <Button\n                                    danger\n                                    type=\"text\"\n                                    style={{ margin: '10px' }}\n                                >\n                                    Delete\n                                </Button>\n                            </Popconfirm>\n                        </>\n                    )}\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap' }}>\n                    {wishlistItem.description}\n                </p>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[wishlistItem.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n            <Modal\n                title=\"Edit item\"\n                visible={editPerkOpen}\n                maskClosable\n                closable\n                onCancel={() => {\n                    setEditPerkOpen(false)\n                    document.body.removeAttribute('style')\n                }}\n                width=\"90%\"\n                footer={null}\n                destroyOnClose={true}\n            >\n                <AddPerk\n                    setEditPerkOpen={setEditPerkOpen}\n                    perkId={editedPerk}\n                    mode=\"wishlist\"\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Progress from './containers/Progress/Progress'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\nimport Modal from 'antd/es/modal/Modal'\nimport Button from 'antd/es/button'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const [timer, setTimer] = useState(null)\n    const [explanationVisible, setExplanationVisible] = useState(false)\n    const [showSignIn, setShowSignIn] = useState(false)\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    if (!isAuthed) {\n        if (!cookies.get('explanationSeen') && !timer)\n            setTimer(setTimeout(() => setExplanationVisible(true), 10000))\n    } else if (timer) {\n        window.clearTimeout(timer)\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n\n            <Route path=\"/inspirations\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/account\" exact component={Profile} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru\" component={Blog} />\n            <Route path=\"/blog\" component={Blog} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n    const handleExplanationClose = () => {\n        cookies.set('explanationSeen', 'true', {\n            path: '/',\n            maxAge: 86400,\n        })\n        setExplanationVisible(false)\n        setShowSignIn(true)\n        document.body.removeAttribute('style')\n    }\n    return (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout showSignIn={showSignIn}>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n                {isAuthed && <NotificationsTracker />}\n            </div>\n            <Modal\n                visible={explanationVisible}\n                footer={<Button onClick={handleExplanationClose}>Close</Button>}\n                onCancel={handleExplanationClose}\n            >\n                <h1>Welcome to Addspire!</h1>\n                <p>\n                    This is a social network where people share and get support\n                    for their ideas, pomises and resolutions.\n                </p>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    pageTitle: {},\n    friendSearchResult: {},\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'profile',\n                'currentProgress',\n                'progress',\n                'lastNotifications',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of ['user', 'account', 'profile', 'progress']) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Footer\":\"Layout_Footer__1Dfqu\",\"HideHeader\":\"Layout_HideHeader__2WRsh\",\"FooterButton\":\"Layout_FooterButton__1lZv2\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\",\"PageTitle\":\"Layout_PageTitle__368dw\"};"],"sourceRoot":""}