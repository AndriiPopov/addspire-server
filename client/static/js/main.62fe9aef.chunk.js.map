{"version":3,"sources":["components/Layout/Layout.module.css","components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Welcome/Welcome.module.scss","containers/Auth/AuthTest.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","components/Layout/LoginModal.tsx","utils/getAvatar.js","components/Layout/BottomMenu.tsx","components/UI/DialogFullscreen.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","components/FriendActionButton.tsx","components/UserButton/UserButton.tsx","components/MasonryCard.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","components/UI/TinyEditor.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/UI/WeekDayPicker.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","containers/Blog/Blog.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","components/Post/AddMessage.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/FollowButton.tsx","components/UI/ReadMore.tsx","components/Post/EditPost.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/MapSettings.tsx","components/UI/ShareButton.tsx","components/Welcome/index.tsx","containers/Explore/Explore.tsx","containers/Blog/BlogArticle.tsx","containers/MindMap/actions.tsx","containers/MindMap/FolderMM.tsx","components/ProgressButton.tsx","containers/MindMap/ProfileMM.tsx","utils/pullData.js","containers/MindMap/Line.tsx","components/MapPosition/MapPosition.tsx","components/Post/AddPost.tsx","components/Post/ResourcePosts.tsx","components/ResourceHeader.tsx","components/ResourceCoreMM.tsx","containers/MindMap/old/RewardMM.tsx","components/UI/HorizontalScrollList.tsx","components/ResourceCore.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/MindMap/old/GoalMM.tsx","containers/MindMap/old/ActivityMM.tsx","containers/MindMap/ChooseWrapMM.tsx","containers/MindMap/ContainerMM.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/MindMap/MindMap.tsx","containers/MindMap/MindMapWrap.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","bottomMenu","logo","Container","socialButtons","Background","Dots","Avatar","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","step","howWorks","videoholder","Cookies","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","props","t","data","logout","history","push","home","success","errorCode","message","warning","error","successCode","status","cookies","tryAuth","token","dispatch","sessionStorage","setItem","get","rememberMe","remove","path","userId","jwt_decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","_id","id","type","setData","setStructure","structure","noNeedToSave","setPageTitle","title","setFriendSearchResult","getListOfNeededResources","notFoundResources","store","requestedResources","user","account","progress","reward","activity","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","currentAccount","_i","_arr","concat","Object","toConsumableArray","progresses","followProgresses","recent","filter","item","resourceType","map","resourceId","length","_step","_iterator","getListOfNeededResources_createForOfIteratorHelper","followPosts","s","n","done","value","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_step5","_iterator5","_step6","_iterator6","_step7","_iterator7","rewardId","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","_i5","_arr5","currentGoal","participants","owner","users","likes","_step11","_iterator11","_step12","_iterator12","posts","_i6","_arr6","oldRewards","_i7","_arr7","oldActivities","currentPosts","_step13","_iterator13","postEl","_step14","_iterator14","parent","parentType","parentId","currentReward","_i8","_arr8","_step15","_iterator15","currentActivity","_i9","_arr9","_step16","_iterator16","friendSearchResult","_step17","_iterator17","reduce","obj","attr","Array","from","Set","includes","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","state","webSocket","checkData","__v","requestResource","getResourcesToMonitor","addData","listOfGroups","ConnectWebsocket","markNotFoundResource","ids","newNotFound","_this","setState","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","readyState","send","JSON","stringify","messageCode","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","parse","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","set","expires","Date","getTime","structureIsSaved","addToStructure","accountId","structureId","onclose","checkInterval","check","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","notRequestedIds","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","TransitionComponent","react_default","a","createElement","Slide","assign","direction","useTranslation","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","basicURL","loginVisible","Dialog","fullScreen","open","onClose","setLoginVisible","scroll","className","classes","style","maxWidth","margin","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","FormControlLabel","control","Checkbox","checked","onChange","color","label","Divider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","autoFocus","getAvatar","nickname","version","useStyles","makeStyles","theme","createStyles","speedDial","right","bottom","position","left","spacing","login","avatar","border","palette","primary","main","marginLeft","flex","blogLabel","display","breakpoints","up","blogIcon","lastNotifications","isConnectingWS","language","recentShown","markRecentShown","scrollTrigger","useScrollTrigger","isActivating","pathname","logedIn","openLink","url","numberOfUnseenNots","BottomMenu_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","Fragment","appear","in","Box","width","zIndex","pointerEvents","cll","Paper","elevation","borderRadius","IconButton","Badge","badgeContent","root","src","image","NotificationsOutlined","Search","appBar","DialogFullscreen","AppBar","Toolbar","edge","aria-label","Close","Typography","variant","save","saveText","children","changeLikesMessage","messageId","postId","editAccount","name","followResource","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","index","MenuItem","minimized","asText","preventDefault","stopPropagation","wsActions","noFollow","friendDataExp","getUserData","userName","text","typography","noWrap","userAvatar","ava","size","noClick","noName","badge","onlyName","Group","noAva","span","react_router_dom","objectSpread","cursor","to","inline","es_button","padding","height","placeholderImages","getPH","matches","match","imagePH","Math","abs","round","x","makeRand","images","picture","boxShadow","noLink","wordBreak","alignItems","body","onClickLink","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","placeholder","target","search","SearchOutlined","components_FriendCard","languageText","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","drawCircle","drawMarker","keepCurrentZoomLevel","setView","flyTo","addTo","navigator","geolocation","getCurrentPosition","withLeaflet","withTranslation","uploadFile","file","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","catch","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","justifyContent","flexDirection","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","TinyEditor","contentState","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","react_draft_wysiwyg","readOnly","toolbarClassName","MM","toolbarOnFocus","wrapperClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbar","options","inDropdown","list","textAlign","link","toolbarHidden","goalCategories","GoalCategories","category","Chip","nolim","pop","days","day","sort","Select","divider","EditResource","useRef","current","leafletElement","ELG","useMapBounds","GestureHandling","resource","selectedBox","positionIsProvided","coordinates","setPosition","initialPosition","setInitialPosition","_useState5","_useState6","positionRead","setPositionRead","_useState7","_useState8","currentTab","setCurrentTab","_useState9","descriptionText","_useState10","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","mapClick","latlng","lat","lng","setFieldsValue","nomap","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","currentId","items","temp","sizePos","y","goToResource","autoComplete","initialValues","repeat","dueDate","labelCol","wrapperCol","onValuesChange","changedFields","allValues","Item","rules","getValueFromEvent","Input","fullWidth","EditResource_GoalCategories","Map","ref","center","zoom","onclick","gestureHandling","onlocationfound","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","react_leaflet_fullscreen_dist_default","square","Tabs","indicatorColor","textColor","Tab","valuePropName","hidden","UI_ImagePickerMulti","DatePicker","format","KeyboardButtonProps","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","UI_WeekDayPicker","marginTop","marginRight","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","removeGutters","paths","Layout_createForOfIteratorHelper","checkPagePath","hide","white","background","noHeader","LinearProgress","top","tabIndex","header","Link","components_LanguageSwitcher_LanguageSwitcher","Book","noContent","paddingBottom","disableGutters","Layout_BottomMenu","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","dayjs","flexGrow","media","backgroundSize","setPosts","setTitle","all","setAll","method","query","json","Helmet","Grid","container","xs","md","xl","Card","CardActionArea","CardMedia","CardContent","gutterBottom","subtitle","published_at","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","b","date","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","console","&>div::after","&>div::before","& textarea","setImageLoading","content","replyToUser","setMessageText","isTop","TextField","multiline","messageValue","replyToMessage","editedMessage","replyTo","editingMessage","onSend","spanStyle","showUploadList","ImageCarousel","carousel","dots","autoplay","backgroundImage","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","FollowButton","ReadMore","overflow","setOverflow","setOpen","descRef","offsetHeight","initialHeight","contentEditor","maxHeight","dangerouslySetInnerHTML","__html","transition","opacity","addTitle","textTransform","EditPost","handleSave","handleCancel","ConfirmAction","confirm","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","setEditingMessage","_useState11","_useState12","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","fromNow","startMessage","messageType","Post_EditPost","anchorOrigin","vertical","horizontal","overlap","icon","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","isPostPage","postOpen","setPostOpen","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","startIcon","ThumbUpOutlined","AddCommentOutlined","messages","Post_createForOfIteratorHelper","getNumberOfMessages","p","v","vN","isNaN","stageName","itemName","price","buyer","as","stage","stageDate","year","dayOfYear","week","startOf","endOf","month","getStageName","progressId","progressName","addedAccounts","ac","droppedAccounts","for","action","profileId","profileName","rewardName","activityId","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","findIndex","toString","_newOldPosts","resultPosts","neededPosts","sub","nots","components_Post_Post","Dashboard_DashboardEvents","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","positionChanged","setPositionChanged","radius","setRadius","changed","setChanged","withMap","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","Slider","valueLabelDisplay","minHeight","whenReady","onzoomend","CircleMarker","alertVisible","setAlertVisible","setFriends","basicProps","linkHash","href","leaveDelay","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","frameBorder","allowFullScreen","allow","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","categories","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","urlDir","Explore_MapSettings","components_Welcome","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","UI_ShareButton","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","paddingLeft","paddingRight","ReactHtmlParser","data-href","data-numposts","data-width","handleSetSelectedBox","changeParentMode","setChangeParentMode","setSelectedBox","_objectSpread2","parentEl","isDecedant","actions_createForOfIteratorHelper","addBlock","_objectSpread3","selectedElement","folderType","innerChildren","addElement","_objectSpread4","dragHandler","resizeHandler","elRef","saveValue","FolderMM","el","scale","editingFolder","editingElement","selectedIndex","setSelectedIndex","setEditingElement","setEditingFolder","textValue","setTextValue","childId","child","react_rnd_lib","disableDragging","enableResizing","onMouseDown","outline","bounds","onDrag","onResize","dir","resizeHandleStyles","bottomLeft","resizeStyle","bottomRight","topLeft","topRight","dataProp","sectionTitle","structureMM","increaseAvatarV","memo","followersVisible","setFollowersVisible","startProgressVisible","setStartProgressVisible","pathParts","pullData","getData","ProfileMM_createForOfIteratorHelper","i","isOwner","unsortedItems","unsortedIds","newCurrentId","b00","addUnsorted","whiteSpace","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","newValue","scrollButtons","components_ProgressButton","Line","waitWhenRefIsReady","timer","line","drawLine","_this$props","end","LeaderLine","dragStep","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","reverse","Post_AddPost","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","ResourceHeader","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","getDropDownMeuItems","getStatusText","ThemeProvider","startDate","finishDate","navi","components_ResourceHeader","Post_ResourcePosts","ownProps","ResourceCoreMM","description","components_MapPosition_MapPosition","addBox","HorizontalScrollList","empty","customEmpty","withAdd","overflowX","flexShrink","onAdd","AddCircle","bottomContent","setResource","TabPanel","other","objectWithoutProperties","role","aria-labelledby","a11yProps","aria-controls","setReward","components_ResourceCore","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","setChosenResource","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","EditProgressReward","initialValue","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","customTheme","purple","MuiListItem","secondaryAction","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","now","diff","stageId","getNowStageId","tabs","defaultActiveKey","getStatus","dismissed","failBy","approvedBy","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","components_Activities_Activities","components_Rewards_Rewards","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","ChooseWrapMM","ContainerMM","myRef1","myRef4","myRef2","addDragStep","editorMode","handler","passive","removeEventListener","unsorted","MindMap_Line","collapsed","MindMap_FolderMM","MindMap_ProfileMM","old_RewardMM","old_GoalMM","old_ActivityMM","transform","setProgress","currentTabD","setCurrentTabD","Goal_TabPanel","setActivity","Activity_TabPanel","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","Profile_createForOfIteratorHelper","loadedProgresses","components_Transactions_Transactions","structureNotSaved","setSelectedBoxDo","chosenResource","setEditorMode","_useState17","_useState18","setEventIsFromDraggable","hash","substring","chosenElement","handleMouseDown","MindMap_createForOfIteratorHelper","nativeEvent","composedPath","getAttribute","classN","actionsProps","ArrowBack","changeParent","_structure$items","newItems","_toPropertyKey","newChildren","deleteElement","onTouchStart","onTouchEnd","onMouseUp","index_es","MindMap_ContainerMM","containers_Profile_Profile","containers_Activity_Activity","containers_Goal_Goal","setScale","eventIsFromDraggable","throttleFunc","throttle","defaultScale","defaultPositionX","defaultPositionY","limitToBounds","minScale","maxScale","disabled","pan","velocity","wheel","onZoomChange","onPanning","onPanningStop","onPinching","onPinchingStop","containers_MindMap_MindMap","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","react_router","routes","exact","MindMapWrap","Explore","DashboardPosts","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","b0","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","ADD_DRAG_STEP","SET_STRUCTURE","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","SET_RECENT_SHOWN","ADD_TO_STRUCTURE","STRUCTURE_IS_SAVED","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","useUtils_cfb96ac9","utils","DayUtils","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.62fe9aef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\",\"bottomMenu\":\"Layout_bottomMenu__p7MZh\",\"logo\":\"Layout_logo__3_HwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\",\"step\":\"Welcome_step__3KDh2\",\"howWorks\":\"Welcome_howWorks__r5E6t\",\"videoholder\":\"Welcome_videoholder__1WZ7O\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                case 'reward created':\n                    message.success(t('processRes.rewardStarted'))\n                    break\n                case 'activity created':\n                    message.success(t('processRes.activityStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const markRecentShown = () => ({\n    type: 'SET_RECENT_SHOWN',\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const addDragStep = () => ({\n    type: 'ADD_DRAG_STEP',\n})\n\nexport const setStructure = (structure, noNeedToSave) => ({\n    type: 'SET_STRUCTURE',\n    structure,\n    noNeedToSave,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n\nexport const addToStructure = (accountId, structureId, resourceId) => ({\n    type: 'ADD_TO_STRUCTURE',\n    accountId,\n    structureId,\n    resourceId,\n})\n\nexport const structureIsSaved = () => ({\n    type: 'STRUCTURE_IS_SAVED',\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                let progress = {}\n                for (let item of data) {\n                    progress[item._id] = item\n                }\n                dispatch(setData({ progress }))\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                let reward = {}\n                for (let item of data) {\n                    reward[item._id] = item\n                }\n                dispatch(setData({ reward }))\n                break\n            case 'activity':\n                let activity = {}\n                for (let item of data) {\n                    activity[item._id] = item\n                }\n                dispatch(setData({ activity }))\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","export default (props, notFoundResources) => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'goal')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'reward')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'activity')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.followProgresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progress[progress]) {\n                            requestedResources.progress.push(progress)\n                        }\n                        neededResources.progress.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.reward[reward]) {\n                            requestedResources.reward.push(reward)\n                        }\n                        neededResources.reward.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activity[activity]) {\n                            requestedResources.activity.push(activity)\n                        }\n                        neededResources.activity.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(\n                    new Set(\n                        obj[attr].filter(\n                            item => !notFoundResources.includes(item)\n                        )\n                    )\n                )\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n\n    check1('account', 'account')\n    check1('account', 'profile')\n    check2('progress')\n    check2('reward')\n    check2('activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    checkData('progress')\n    checkData('reward')\n    checkData('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport i18n from '../../translations/i18n'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n        notFoundResources: [],\n    }\n    markNotFoundResource = ids => {\n        const newNotFound = [...this.state.notFoundResources, ...ids]\n        this.setState({ notFoundResources: newNotFound })\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(i18n.t('processRes.success'))\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText || '/')\n                    break\n                case '404':\n                    message.error(i18n.t('processRes.404'))\n                    this.props.history.push(news.messageText || '/')\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'structureSaved':\n                    this.props.structureIsSaved()\n                    break\n                case 'error':\n                    message.error(i18n.t('processRes.error'))\n                    break\n                case 'notFoundResource':\n                    this.markNotFoundResource(news._id)\n                    break\n                case 'addToStructure':\n                    this.props.addToStructure(\n                        news.accountId,\n                        news.structureId,\n                        news.resourceId\n                    )\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            this.state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n        addToStructure: (accountId, structureId, resourceId) =>\n            dispatch(\n                actions.addToStructure(accountId, structureId, resourceId)\n            ),\n        logout: () => dispatch(actions.logout()),\n        structureIsSaved: () => dispatch(actions.structureIsSaved()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n            // check('progress')\n            // break\n            case 'reward':\n            // check('reward')\n            // break\n            case 'activity':\n                // check('activity')\n                // break\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            'status',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import {\n    Avatar,\n    Badge,\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Slide,\n    Theme,\n    Typography,\n    useScrollTrigger,\n} from '@material-ui/core'\nimport { History, NotificationsOutlined, Search } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport getAvatar from '../../utils/getAvatar'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport * as cll from './Layout.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst BottomMenu = props => {\n    const { account, progressData, activityData, rewardData } = props\n\n    const [recentVisible, setRecentVisible] = useState(!props.recentShown)\n    const [hideRecentTimeout, setHideRecentTimeout] = useState()\n    const scrollTrigger = !useScrollTrigger()\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n    const openLink = url => props.history.push(url)\n    // useEffect(() => {\n    //     if (!scrollTrigger) setRecentVisible(false)\n    // }, [scrollTrigger])\n\n    // useEffect(() => {\n    //     if (Boolean(logedIn && !isActivating && !props.recentShown)) {\n    //         const timeout = setTimeout(() => setRecentVisible(false), 6000)\n    //         setHideRecentTimeout(timeout)\n    //         props.markRecentShown()\n    //     }\n    // }, [Boolean(logedIn && !isActivating)])\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const classes = useStyles()\n\n    return (\n        <>\n            <Slide appear={false} direction=\"up\" in={scrollTrigger}>\n                <Box\n                    style={{\n                        position: 'fixed',\n                        bottom: '12px',\n                        width: '100%',\n                        zIndex: 1,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {logedIn && !isActivating && (\n                        <>\n                            {/* <Slide\n                                appear={false}\n                                direction=\"left\"\n                                in={recentVisible}\n                            >\n                                <Box style={{ margin: '6px 10px' }}>\n                                    <Paper\n                                        style={{\n                                            overflowX: 'auto',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'left',\n                                            position: 'relative',\n                                            maxWidth: '400px',\n                                            padding: '5px',\n                                            margin: 'auto',\n                                            pointerEvents: 'auto',\n                                        }}\n                                        onMouseDown={() => {\n                                            clearTimeout(hideRecentTimeout)\n                                        }}\n                                        onScroll={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                        onTouchStart={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                    >\n                                        {account.recent.map((item, index) => {\n                                            const urlDir =\n                                                item.resourceType === 'goal'\n                                                    ? 'goals'\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? 'rewards'\n                                                    : 'activities'\n                                            const dataType =\n                                                item.resourceType === 'goal'\n                                                    ? progressData\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? rewardData\n                                                    : activityData\n\n                                            const data =\n                                                dataType[item.resourceId]\n\n                                            return data ? (\n                                                <Card\n                                                    style={{\n                                                        overflow: 'hidden',\n                                                        marginRight: '10px',\n                                                    }}\n                                                >\n                                                    <CardActionArea>\n                                                        <Link\n                                                            to={\n                                                                '/' +\n                                                                urlDir +\n                                                                '/' +\n                                                                data._id\n                                                            }\n                                                            onClick={() =>\n                                                                setRecentVisible(\n                                                                    false\n                                                                )\n                                                            }\n                                                        >\n                                                            <CardMedia\n                                                                style={{\n                                                                    height:\n                                                                        '56px',\n                                                                    width:\n                                                                        '56px',\n                                                                    backgroundSize:\n                                                                        'cover',\n                                                                    borderRadius:\n                                                                        '28',\n                                                                }}\n                                                                image={\n                                                                    data.images\n                                                                        .length >\n                                                                    0\n                                                                        ? data\n                                                                              .images[0]\n                                                                        : placeholderImages[\n                                                                              getPH(\n                                                                                  data._id\n                                                                              )\n                                                                          ]\n                                                                }\n                                                                title={\n                                                                    data.name\n                                                                }\n                                                            />\n                                                            <CardContent\n                                                                style={{\n                                                                    padding:\n                                                                        '0px',\n                                                                    position:\n                                                                        'absolute',\n                                                                    bottom:\n                                                                        '0px',\n                                                                    background:\n                                                                        'white',\n                                                                    width:\n                                                                        '100%',\n                                                                }}\n                                                            >\n                                                                <Typography\n                                                                    variant=\"body2\"\n                                                                    noWrap\n                                                                    align=\"center\"\n                                                                >\n                                                                    {data.name}\n                                                                </Typography>\n                                                            </CardContent>\n                                                        </Link>\n                                                    </CardActionArea>\n                                                </Card>\n                                            ) : null\n                                        })}\n                                    </Paper>\n                                </Box>\n                            </Slide> */}\n                            <Box className={cll.bottomMenu}>\n                                <Paper\n                                    elevation={3}\n                                    style={{\n                                        borderRadius: '37px',\n                                        pointerEvents: 'auto',\n                                    }}\n                                >\n                                    <IconButton onClick={() => openLink('/')}>\n                                        <Badge\n                                            badgeContent={\n                                                account.friends.filter(\n                                                    item =>\n                                                        item.status ===\n                                                        'inviting'\n                                                ).length\n                                            }\n                                            color=\"secondary\"\n                                        >\n                                            <Avatar\n                                                classes={\n                                                    props.history.location\n                                                        .pathname ===\n                                                        '/profile/' +\n                                                            account._id ||\n                                                    props.history.location\n                                                        .pathname === '/'\n                                                        ? {\n                                                              root:\n                                                                  classes.avatar,\n                                                          }\n                                                        : {}\n                                                }\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/events')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/events'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={numberOfUnseenNots}\n                                            color=\"secondary\"\n                                        >\n                                            <NotificationsOutlined fontSize=\"large\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/explore')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/explore'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Search fontSize=\"large\" />\n                                    </IconButton>\n                                    {/* <IconButton\n                                        color={\n                                            recentVisible\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        onClick={() =>\n                                            setRecentVisible(!recentVisible)\n                                        }\n                                    >\n                                        <History fontSize=\"large\" />\n                                    </IconButton> */}\n                                </Paper>\n                            </Box>\n                        </>\n                    )}\n                </Box>\n            </Slide>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(BottomMenu)\n)\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.close}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {props.title}\n                    </Typography>\n                    {props.save && (\n                        <Button autoFocus color=\"inherit\" onClick={props.save}>\n                            {props.saveText || t('g.save')}\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n            {props.children}\n        </Dialog>\n    )\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const saveStructure = (accountId, structure) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveStructure',\n                accountId,\n                structure,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import { Box } from '@material-ui/core'\nimport { relative } from 'path'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: '15px',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return (\n        <Box style={{ position: 'relative' }}>\n            {props.noLink ? (\n                <>\n                    {picture}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box style={{ flex: 1 }}>{props.body}</Box>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <>\n                    <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n                        {picture}\n                    </Link>\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Link\n                            to={props.onClickLink}\n                            style={{ cursor: 'pointer', flex: 1 }}\n                        >\n                            {props.body}\n                        </Link>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n        </Box>\n    )\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n\n            drawCircle: false,\n            drawMarker: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n            flyTo: true,\n        })\n        lc.addTo(map)\n        navigator.geolocation.getCurrentPosition(() => lc.start())\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    if (typeof props.value === 'string') {\n        const blocksFromHtml = htmlToDraft(props.value)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = props.value\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <Editor\n            placeholder={t('g.addSomeText')}\n            readOnly={props.readOnly}\n            toolbarClassName={props.MM && 'demo-toolbar-absolute'}\n            toolbarOnFocus={props.MM}\n            wrapperClassName={!props.MM && 'demo-wrapper'}\n            {...(!props.readOnly ? {} : { contentState: contentState })}\n            defaultContentState={contentState}\n            onContentStateChange={value => {\n                props.onEditorChange && props.onEditorChange(value)\n                props.onEditorChangePlain &&\n                    props.onEditorChangePlain(\n                        convertFromRaw(value).getPlainText(' ')\n                    )\n            }}\n            toolbar={{\n                options: [\n                    'inline',\n                    ...(props.MM ? [] : ['blockType']),\n                    'fontSize',\n                    'fontFamily',\n                    'list',\n                    'textAlign',\n                    'colorPicker',\n                    'link',\n                    'emoji',\n                    'remove',\n                    'history',\n                ],\n                inline: { inDropdown: true },\n                list: { inDropdown: true },\n                textAlign: { inDropdown: true },\n                link: { inDropdown: true },\n                history: { inDropdown: true },\n            }}\n            toolbarHidden={props.readOnly}\n        />\n    )\n}\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst WeekDayPicker = props => {\n    const { t } = useTranslation()\n\n    const days =\n        props.language === 'ru' ? [1, 2, 3, 4, 5, 6, 0] : [0, 1, 2, 3, 4, 5, 6]\n    const value = props.value.map(item => parseInt(item))\n    return days.map(day => (\n        <Chip\n            style={{ margin: '0px 10px 10px 0px' }}\n            size=\"small\"\n            label={t(\n                'g.' +\n                    (day === 0\n                        ? 'sun'\n                        : day === 1\n                        ? 'mon'\n                        : day === 2\n                        ? 'tue'\n                        : day === 3\n                        ? 'wed'\n                        : day === 4\n                        ? 'thu'\n                        : day === 5\n                        ? 'fri'\n                        : day === 6\n                        ? 'sat'\n                        : '')\n            )}\n            color={value.includes(day) ? 'primary' : 'default'}\n            onClick={() => {\n                props.onChange(\n                    value.includes(day)\n                        ? value.filter(item => item !== day)\n                        : [...value, day].sort()\n                )\n            }}\n        />\n    ))\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(WeekDayPicker)\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n    Tabs,\n    Tab,\n    Paper,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport WeekDayPicker from '../UI/WeekDayPicker'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const {\n        resource,\n        account,\n        type,\n        structure,\n        setStructure,\n        selectedBox,\n    } = props\n\n    const defPos = [40.689078, -74.044526]\n    const positionIsProvided =\n        resource && resource.position && resource.position.coordinates\n    const [position, setPosition] = useState(\n        positionIsProvided\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n    const [positionRead, setPositionRead] = useState(false)\n    const [currentTab, setCurrentTab] = useState(0)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        let structureId\n        if (!(resource && resource._id) && structure && selectedBox) {\n            structureId = 'b' + structure.currentId\n            setStructure({\n                currentId: structure.currentId + 1,\n                items: {\n                    ...structure.items,\n                    ['b' + structure.currentId]: {\n                        type: type,\n                        children: [],\n                        parent: selectedBox,\n                        temp: true,\n                        sizePos: {\n                            x: 200,\n                            y: 0,\n                            width: 320,\n                            height: 200,\n                        },\n                    },\n                },\n            })\n        }\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type,\n            props.goToResource,\n            structureId\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                        dueDate: new Date(),\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                            onlocationfound={e => {\n                                if (!positionIsProvided && !positionRead) {\n                                    mapClick(e)\n                                    setInitialPosition([\n                                        e.latlng.lat,\n                                        e.latlng.lng,\n                                    ])\n                                    setPositionRead(true)\n                                }\n                            }}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                            <FullscreenControl position=\"topright\" />\n                        </Map>\n                    </div>\n                </Form.Item>\n                {type == 'goal' ? (\n                    <>\n                        <Form.Item label={t('g.detailsFor')}>\n                            <Paper square>\n                                <Tabs\n                                    value={currentTab}\n                                    onChange={(event, value) =>\n                                        setCurrentTab(value)\n                                    }\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                >\n                                    <Tab label={t('g.fromStart')} />\n                                    <Tab label={t('g.toGoal')} />\n                                    <Tab label={t('g.resultFinish')} />\n                                </Tabs>\n                            </Paper>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"startImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"startDate\"\n                            hidden={currentTab !== 0}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"startDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"dueDate\"\n                            hidden={currentTab !== 1}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"finishImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('progress.date')}\n                            name=\"finishDate\"\n                            hidden={currentTab !== 2}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"finishDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                    </>\n                ) : (\n                    <>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                    </>\n                )}\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <WeekDayPicker />\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (\n    accountId,\n    value,\n    type,\n    goToResource,\n    structureId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n                goToResource,\n                structureId,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const changeResourceStatus = (status, resourceId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeResourceStatus',\n                resourceId,\n                status,\n            })\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport BottomMenu from './BottomMenu'\nimport * as cll from './Layout.module.css'\nimport * as actions from '../../store/actions'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Card,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    Cake,\n    FitnessCenter,\n    GifTwoTone,\n    History,\n    HomeRounded,\n    Launch,\n    NotificationImportant,\n    Notifications,\n    NotificationsOutlined,\n    Person,\n    Repeat,\n    Search,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../MasonryCard'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n\n    const scrollTrigger = !useScrollTrigger()\n\n    const classes = useStyles()\n\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                {!props.noHeader && (\n                    <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                        <AppBar elevation={1} color=\"secondary\">\n                            {props.isConnectingWS && !logedIn && (\n                                <LinearProgress\n                                    style={{\n                                        width: '100%',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                    }}\n                                />\n                            )}\n\n                            <Toolbar>\n                                <div\n                                    tabIndex={0}\n                                    ref={domRef}\n                                    style={{ width: 0, height: 0 }}\n                                />\n                                {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                                {(account._id && props.header) || (\n                                    <Box style={{ display: 'flex', flex: 1 }}>\n                                        <Box\n                                            style={{\n                                                display: 'flex',\n                                                flex: 1,\n                                            }}\n                                        >\n                                            <Button\n                                                component={Link}\n                                                to={'/'}\n                                                style={{\n                                                    padding: '3px 8px',\n                                                }}\n                                            >\n                                                <img\n                                                    className={cll.logo}\n                                                    src=\"/logo-addspire.png\"\n                                                />\n                                            </Button>\n                                        </Box>\n                                        <Box style={{ display: 'flex' }}>\n                                            <LanguageSwitcher />\n\n                                            <Button\n                                                component={Link}\n                                                to={`/${\n                                                    language !== 'en'\n                                                        ? language + '/'\n                                                        : ''\n                                                }blog`}\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                            >\n                                                <Book\n                                                    className={classes.blogIcon}\n                                                />\n                                                <span\n                                                    className={\n                                                        classes.blogLabel\n                                                    }\n                                                >\n                                                    {t('layout.blog')}\n                                                </span>\n                                            </Button>\n\n                                            {(logedIn && isActivating) ||\n                                            (!logedIn &&\n                                                props.isConnectingWS) ? (\n                                                <Button\n                                                    onClick={() =>\n                                                        props.history.push(\n                                                            '/logout'\n                                                        )\n                                                    }\n                                                >\n                                                    {t('g.logout')}\n                                                </Button>\n                                            ) : (\n                                                !account._id && (\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        // startIcon={<Person />}\n                                                        onClick={() =>\n                                                            setLoginVisible(\n                                                                true\n                                                            )\n                                                        }\n                                                    >\n                                                        {t('layout.login')}\n                                                    </Button>\n                                                )\n                                            )}\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Toolbar>\n                        </AppBar>\n                    </Slide>\n                )}\n                {!props.noContent && (\n                    <>\n                        <Toolbar id=\"back-to-top-anchor\" />\n                        <Container\n                            style={{\n                                paddingTop: '20px',\n                                paddingBottom: '20px',\n                            }}\n                            disableGutters={Boolean(removeGutters)}\n                        >\n                            {props.children}\n                        </Container>\n                    </>\n                )}\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n                <BottomMenu />\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            goToResource\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountLayout)\n)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                {/* <Welcome /> */}\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success(t('activate.accountActivated'))\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(t('activate.accountTaken'))\n                    }\n                    if (res.data.errorCode) {\n                        message.error(t('activate.wrongData'))\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                {t('activate.accountActivation')}\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    {/* <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span> */}\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                const vN = parseInt(v.notId)\n                if (isNaN(vN)) return p\n                return p > vN ? p : vN\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const {\n        mapVisible,\n        setMapVisible,\n        onSearch,\n        setSearch,\n        search,\n        positionChanged,\n        setPositionChanged,\n    } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={200}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => getRadius()}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={8}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                    onzoomend={() => getRadius()}\n                    onlocationfound={e => {\n                        if (!positionChanged) {\n                            mapClick(e)\n                            setInitialPosition([e.latlng.lat, e.latlng.lng])\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                    <FullscreenControl position=\"topright\" />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.linkHash\n            ? 'https://addspire.com/profile/' +\n              props.profile +\n              '#' +\n              props.linkHash\n            : props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo-addspire.png',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)} scroll=\"paper\">\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            {account && account._id && (\n                                <Button\n                                    color=\"primary\"\n                                    style={{ marginTop: '10px' }}\n                                    onClick={() =>\n                                        friends.length > 0 &&\n                                        wsActions.shareWithFriends(\n                                            account._id,\n                                            basicProps.url,\n                                            friends,\n                                            props.item\n                                        )\n                                    }\n                                >\n                                    {t('g.send')}\n                                </Button>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box style={{ margin: '10% 0px 2%' }}>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n\n            <Box\n                style={{\n                    margin: '40px auto 10px',\n                    textAlign: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    {t('welcome.button')}\n                </Button>\n            </Box>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n\n            <Box>\n                <Typography\n                    variant=\"h2\"\n                    align=\"center\"\n                    style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                >\n                    {t('welcome.stepsTitle')}\n                </Typography>\n\n                <Box className={classes.howWorks}>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon1.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle1')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody1')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon2.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle2')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody2')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon3.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle3')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody3')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <div className={classes.videoholder}>\n                    <div>\n                        <iframe\n                            width=\"560\"\n                            height=\"315\"\n                            src={\n                                'https://www.youtube.com/embed/' +\n                                t('welcome.videoHowLink')\n                            }\n                            frameBorder=\"0\"\n                            allowFullScreen\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        />\n                    </div>\n                </div>\n            </Box>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Badge,\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n    const [positionChanged, setPositionChanged] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                    positionChanged={positionChanged}\n                    setPositionChanged={setPositionChanged}\n                />\n                <Welcome />\n\n                {!(props.account && props.account._id) && (\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                    >\n                        {t('explore.topGoalsTitle')}\n                    </Typography>\n                )}\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => {\n                                return (\n                                    <MasonryCard\n                                        id={item._id}\n                                        key={index}\n                                        onClickLink={\n                                            '/' + urlDir + '/' + item._id\n                                        }\n                                        images={item.images}\n                                        body={\n                                            <>\n                                                <Box\n                                                    style={{\n                                                        position: 'absolute',\n                                                        top: '10px',\n                                                    }}\n                                                >\n                                                    <UserButton\n                                                        noName={true}\n                                                        id={item.owner}\n                                                        friendDataExp={\n                                                            props.friendData\n                                                        }\n                                                    />\n                                                </Box>\n                                                {item.status && (\n                                                    <Tooltip\n                                                        title={t(\n                                                            'progress.' +\n                                                                (item.status ===\n                                                                'process'\n                                                                    ? 'inProcess'\n                                                                    : item.status)\n                                                        )}\n                                                    >\n                                                        <Box\n                                                            style={{\n                                                                display:\n                                                                    'inline-block',\n                                                                width: '10px',\n                                                                height: '10px',\n                                                                borderRadius:\n                                                                    '5px',\n                                                                marginRight:\n                                                                    '5px',\n                                                                background:\n                                                                    item.status ===\n                                                                    'process'\n                                                                        ? 'blue'\n                                                                        : item.status ===\n                                                                          'fail'\n                                                                        ? 'red'\n                                                                        : item.status ===\n                                                                          'dismissed'\n                                                                        ? 'orange'\n                                                                        : item.status ===\n                                                                          'complete'\n                                                                        ? 'green'\n                                                                        : 'white',\n                                                            }}\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            </>\n                                        }\n                                        actions={\n                                            <ShareButton\n                                                link={\n                                                    'https://addspire.com/' +\n                                                    urlDir +\n                                                    '/' +\n                                                    item._id\n                                                }\n                                                title={\n                                                    item.name +\n                                                    t('explore.shareText')\n                                                }\n                                                media={\n                                                    item.images &&\n                                                    item.images[0]\n                                                }\n                                                item={{\n                                                    progressId: item._id,\n                                                    progressName: item.name,\n                                                }}\n                                                profile={item.owner}\n                                                linkHash={item._id}\n                                            />\n                                        }\n                                    />\n                                )\n                            })}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                {/* <Welcome /> */}\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM D, YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            className=\"blogArticle\"\n                            style={{ fontSize: '1.05rem' }}\n                        >\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","const isDecedant = (structure, parentId, id) => {\n    if (structure.items[parentId] && structure.items[id]) {\n        if (structure.items[parentId].children.includes(id)) return true\n        else {\n            for (let child of structure.items[parentId].children) {\n                const result = isDecedant(structure, child, id)\n                if (result) {\n                    return true\n                }\n            }\n        }\n    }\n}\n\nexport const handleSetSelectedBox = props => {\n    const {\n        structure,\n        setStructure,\n        selectedBox,\n        id,\n        changeParentMode,\n        setChangeParentMode,\n        setSelectedBox,\n    } = props\n    if (changeParentMode) {\n        const parentEl = structure.items[id]\n\n        if (\n            structure.items[selectedBox] &&\n            parentEl &&\n            selectedBox !== id &&\n            !isDecedant(structure, selectedBox, id) &&\n            structure.items[selectedBox].parent !== id &&\n            ['profile', 'folder'].includes(parentEl.type)\n        ) {\n            setStructure({\n                ...structure,\n                items: {\n                    ...structure.items,\n                    [id]: {\n                        ...structure.items[id],\n                        children: [\n                            ...structure.items[id].children,\n                            selectedBox,\n                        ],\n                    },\n                    [selectedBox]: {\n                        ...structure.items[selectedBox],\n                        parent: id,\n                    },\n                    [structure.items[selectedBox].parent]: {\n                        ...structure.items[structure.items[selectedBox].parent],\n                        children: structure.items[\n                            structure.items[selectedBox].parent\n                        ].children.filter(item => item !== selectedBox),\n                    },\n                },\n            })\n            setChangeParentMode('')\n        }\n    } else setSelectedBox(id)\n}\n\nexport const addBlock = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    children: [\n                        ...selectedElement.children,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type: 'folder',\n                    folderType: type,\n                    children: [],\n                    parent: selectedBox,\n                    innerChildren: type\n                        ? ['b' + (structure.currentId + 1)]\n                        : [],\n                    sizePos: {\n                        x: 200,\n                        y: 0,\n                        width: 320,\n                        height: 200,\n                    },\n                },\n                ...(type\n                    ? {\n                          ['b' + (structure.currentId + 1)]: {\n                              type,\n                              children: [],\n                              value:\n                                  type === 'text'\n                                      ? 'Add text here'\n                                      : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                              parent: 'b' + structure.currentId,\n                              sizePos: {\n                                  x: 5,\n                                  y: 5,\n                                  width: selectedElement.sizePos.width - 10,\n                                  height: 100,\n                              },\n                          },\n                      }\n                    : {}),\n            },\n            currentId: structure.currentId + (type ? 2 : 1),\n        })\n    }\n}\n\nexport const addElement = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            currentId: structure.currentId + 1,\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    innerChildren: [\n                        ...selectedElement.innerChildren,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type,\n                    children: [],\n                    value:\n                        type === 'text'\n                            ? 'Add text here'\n                            : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                    parent: selectedBox,\n                    sizePos: {\n                        x: 5,\n                        y: 5,\n                        width: selectedElement.sizePos.width - 10,\n                        height: 100,\n                    },\n                },\n            },\n        })\n    }\n}\n\nexport const changeParent = props => {\n    const {\n        selectedBox,\n        changeParentMode,\n        setChangeParentMode,\n        selectedElement,\n    } = props\n    if (changeParentMode) {\n        setChangeParentMode('')\n    } else {\n        if (selectedElement) {\n            setChangeParentMode(selectedBox)\n        }\n    }\n}\nexport const collapse = props => {\n    const { selectedBox, structure, setStructure } = props\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [selectedBox]: {\n                ...structure.items[selectedBox],\n                collapsed: !structure.items[selectedBox].collapsed,\n            },\n        },\n    })\n}\n\nexport const deleteElement = props => {\n    const {\n        selectedBox,\n        structure,\n        setStructure,\n        selectedIndex,\n        setSelectedIndex,\n        editingFolder,\n    } = props\n    if (!editingFolder) {\n        const newChildren = {}\n        for (let child of structure.items[selectedBox].children) {\n            newChildren[child] = {\n                ...structure.items[child],\n                parent: structure.items[selectedBox].parent,\n            }\n        }\n        const newItems = {\n            ...structure.items,\n            [structure.items[selectedBox].parent]: {\n                ...structure.items[structure.items[selectedBox].parent],\n                children: [\n                    ...structure.items[\n                        structure.items[selectedBox].parent\n                    ].children.filter(item => item !== selectedBox),\n                    ...structure.items[selectedBox].children,\n                ],\n            },\n            ...newChildren,\n        }\n        delete newItems[selectedBox]\n        setStructure({\n            ...structure,\n            items: newItems,\n        })\n    } else {\n        let { [selectedIndex]: el, ...newItems } = structure.items\n        if (el) {\n            setStructure({\n                ...structure,\n                items: {\n                    ...newItems,\n                    [selectedBox]: {\n                        ...newItems[selectedBox],\n                        innerChildren: newItems[\n                            selectedBox\n                        ].innerChildren.filter(item => item !== selectedIndex),\n                    },\n                },\n            })\n        }\n    }\n    setSelectedIndex('')\n}\n\nexport const dragHandler = (id, data, structure, setStructure) => {\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [id]: {\n                ...structure.items[id],\n                sizePos: {\n                    ...structure.items[id].sizePos,\n                    x: data.x,\n                    y: data.y,\n                },\n            },\n        },\n    })\n}\n\nexport const resizeHandler = (id, elRef, position, structure, setStructure) => {\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [id]: {\n                ...structure.items[id],\n                sizePos: {\n                    ...structure.items[id].sizePos,\n                    x: position.x,\n                    y: position.y,\n                    width: parseInt(elRef.style.width),\n                    height: parseInt(elRef.style.height),\n                },\n            },\n        },\n    })\n}\n\nexport const saveValue = (id, value, structure, setStructure) => {\n    if (structure.items[id])\n        setStructure({\n            ...structure,\n            items: {\n                ...structure.items,\n                [id]: {\n                    ...structure.items[id],\n                    value,\n                },\n            },\n        })\n}\n\nexport const addUnsorted = (structure, setStructure, profile) => {\n    const unsortedItems = {}\n    const unsortedIds = []\n    let newCurrentId = structure.currentId\n    for (let item of profile.progresses) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'goal',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    for (let item of profile.rewards) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'reward',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    for (let item of profile.activities) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'activity',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    if (unsortedIds.length > 0) {\n        setStructure(\n            {\n                ...structure,\n                currentId: newCurrentId,\n                items: {\n                    ...structure.items,\n                    ...unsortedItems,\n                    b00: {\n                        ...structure.items.b00,\n                        children: [\n                            ...structure.items.b00.children,\n                            ...unsortedIds,\n                        ],\n                    },\n                },\n            },\n            true\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { Rnd } from 'react-rnd'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../components/UI/TinyEditor'\nimport { dragHandler, resizeHandler, saveValue } from './actions'\nimport { resizeStyle } from './ContainerMM'\n\nconst FolderMM = props => {\n    const {\n        selectedBox,\n        structure,\n        setStructure,\n        el,\n        scale,\n        id,\n        editingFolder,\n        editingElement,\n        selectedIndex,\n        setSelectedIndex,\n        setEditingElement,\n        setEditingFolder,\n    } = props\n    const [textValue, setTextValue] = useState()\n\n    return (\n        <div style={{ background: 'white', flex: 1 }}>\n            {el.innerChildren &&\n                el.innerChildren.map(childId => {\n                    const child = structure.items[childId]\n                    const content = child ? (\n                        <div\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                overflow: 'auto',\n                                background: 'white',\n                            }}\n                        >\n                            {child.type === 'text' ? (\n                                <>\n                                    <TinyEditor\n                                        MM\n                                        value={child.value}\n                                        readOnly\n                                    />\n                                    <DialogFullscreen\n                                        open={\n                                            editingElement &&\n                                            selectedBox === id &&\n                                            selectedIndex === childId\n                                        }\n                                        close={() => {\n                                            setEditingElement(false)\n                                            if (el.folderType) {\n                                                setSelectedIndex('')\n                                                setEditingFolder(false)\n                                            }\n                                        }}\n                                        save={() => {\n                                            saveValue(\n                                                childId,\n                                                textValue,\n                                                structure,\n                                                setStructure\n                                            )\n                                            setEditingElement(false)\n                                            if (el.folderType) {\n                                                setSelectedIndex('')\n                                                setEditingFolder(false)\n                                            }\n                                        }}\n                                    >\n                                        {editingElement &&\n                                            selectedBox === id &&\n                                            selectedIndex === childId && (\n                                                <TinyEditor\n                                                    onEditorChange={value =>\n                                                        setTextValue(value)\n                                                    }\n                                                    value={child.value}\n                                                />\n                                            )}\n                                    </DialogFullscreen>\n                                </>\n                            ) : child.type === 'image' ? (\n                                <div\n                                    style={{\n                                        width: '100%',\n                                        height: '100%',\n                                        backgroundSize: 'contain',\n                                        backgroundRepeat: 'no-repeat',\n                                        backgroundPosition: 'center',\n                                        backgroundImage:\n                                            'url(\"' + child.value + '\")',\n                                    }}\n                                />\n                            ) : null}\n                        </div>\n                    ) : null\n                    return child ? (\n                        el.folderType ? (\n                            content\n                        ) : (\n                            <Rnd\n                                scale={scale}\n                                default={\n                                    child.sizePos || {\n                                        width: el.sizePos.width - 10,\n                                        height: 50,\n                                        x: 5,\n                                        y: 5,\n                                    }\n                                }\n                                disableDragging={\n                                    !editingFolder ||\n                                    (selectedIndex === childId &&\n                                        editingElement)\n                                }\n                                enableResizing={editingFolder}\n                                onMouseDown={e => {\n                                    if (editingFolder) {\n                                        setSelectedIndex(childId)\n                                    }\n                                }}\n                                style={{\n                                    outline:\n                                        selectedBox === id &&\n                                        selectedIndex === childId\n                                            ? '1px solid blue'\n                                            : 'none',\n                                }}\n                                bounds=\"parent\"\n                                onDrag={(e, data) => {\n                                    dragHandler(\n                                        selectedIndex,\n                                        data,\n                                        structure,\n                                        setStructure\n                                    )\n                                }}\n                                onResize={(e, dir, elRef, delta, position) => {\n                                    resizeHandler(\n                                        selectedIndex,\n                                        elRef,\n                                        position,\n                                        structure,\n                                        setStructure\n                                    )\n                                }}\n                                resizeHandleStyles={\n                                    selectedIndex === childId\n                                        ? {\n                                              bottomLeft: resizeStyle,\n                                              bottomRight: resizeStyle,\n                                              topLeft: resizeStyle,\n                                              topRight: resizeStyle,\n                                          }\n                                        : {}\n                                }\n                            >\n                                {content}\n                            </Rnd>\n                        )\n                    ) : null\n                })}\n        </div>\n    )\n}\n\nexport default FolderMM\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { memo, useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\nimport { addUnsorted } from './actions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst ProfileMM = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const getData = key => {\n                        const d = {}\n                        for (let i of data[key]) d[i._id] = i\n                        return d\n                    }\n\n                    const friendData = getData('friendData')\n                    const progressData = getData('progressData')\n                    const activityData = getData('activityData')\n                    const rewardData = getData('rewardData')\n                    const progress = getData('progress')\n                    const activity = getData('activity')\n                    const reward = getData('reward')\n                    const post = getData('post')\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        // post,\n                        account: {},\n                        progressData,\n                        progress,\n                        activityData,\n                        activity,\n                        rewardData,\n                        reward,\n                        onlineUsers: data.onlineUsers,\n                        currentProfile: profileId,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n    useEffect(() => {\n        if (isOwner && props.structure) {\n            addUnsorted(props.structure, props.setStructure, profile)\n        }\n    }, [props.structure, profile])\n\n    if (!profile || !profile._id) return null\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Paper style={{ padding: '15px', whiteSpace: 'nowrap' }}>\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    {isOwner ? (\n                        <Upload\n                            name=\"avatar\"\n                            accept=\"image/*\"\n                            listType=\"picture-card\"\n                            showUploadList={false}\n                            customRequest={({ file }) => {\n                                uploadFile(file, 800, 'avatar', url => {\n                                    if (url) props.increaseAvatarV()\n                                })\n                            }}\n                        >\n                            <div\n                                style={{\n                                    flex: 1,\n                                    display: 'flex',\n                                    height: '100%',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    flexDirection: 'column',\n                                }}\n                                onClick={e => {\n                                    if (window.isRNWebView) {\n                                        e.stopPropagation()\n                                        window.ReactNativeWebView.postMessage(\n                                            'uploadFile'\n                                        )\n                                        window.callback = url => {\n                                            props.increaseAvatarV()\n                                        }\n                                    }\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            {t('g.upload')}\n                                        </div>\n                                    </>\n                                )}\n                            </div>\n                        </Upload>\n                    ) : (\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            size={200}\n                        />\n                    )}\n\n                    <Box style={{ padding: '0 15px' }}>\n                        {props.onlineUsers.includes(profile._id) && (\n                            <Badge color=\"green\" text=\"online\" />\n                        )}\n                        <TypographyA.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <IconButton color=\"primary\">\n                                                  <Edit />\n                                              </IconButton>\n                                          ),\n                                          maxLength: fieldLength.name,\n                                          autoSize: {\n                                              minRows: 1,\n                                              maxRows: 1,\n                                          },\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </TypographyA.Title>\n                    </Box>\n                    <Typography variant=\"h5\">({profile._id})</Typography>\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button\n                            onClick={() => setFollowersVisible('following')}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followProgresses.length +\n                                    profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                            </span>\n                        </Button>\n                    </Box>\n\n                    <div>\n                        <ShareButton\n                            link={'https://addspire.com/profile/' + profile._id}\n                            media={\n                                profile.image &&\n                                getAvatar(profile._id, profile.image)\n                            }\n                            title={profile.name + t('profile.shareText')}\n                            item={{\n                                profileId: profile._id,\n                                profileName: profile.name,\n                            }}\n                        />\n                        {account && account._id !== profile._id && (\n                            <span style={{ marginRight: '10px' }}>\n                                {realFriends.find(\n                                    item => item.friend === profile._id\n                                ) ? (\n                                    <Chip color=\"primary\" label=\"Friends\" />\n                                ) : null}\n                                {account.followAccounts &&\n                                    !account.followAccounts.includes(\n                                        profile._id\n                                    ) && (\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                            style={{\n                                                marginRight: '20px',\n                                            }}\n                                            variant=\"contained\"\n                                        >\n                                            {t('g.follow')}\n                                        </Button>\n                                    )}\n                            </span>\n                        )}\n                        <FriendActionButton\n                            account={account}\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                            _id={profile._id}\n                            additionalButtons={\n                                isOwner\n                                    ? [\n                                          {\n                                              onClick: () =>\n                                                  props.history.push('/logout'),\n                                              title: t('g.logout'),\n                                          },\n                                      ]\n                                    : null\n                            }\n                            asText={true}\n                        />\n                    </div>\n                    <Box />\n                </div>\n            </Paper>\n\n            {/* {isOwner && (\n                <>\n                    <Typography\n                        className={classesM.sectionTitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('profile.settings')}\n                    </Typography>\n                    <Paper\n                        style={{\n                            padding: '15px',\n                        }}\n                    >\n                        <Box>\n                            <LanguageSwitcher settings />\n                        </Box>\n                        <Box style={{ margin: '20px auto' }}>\n                            <Button\n                                onClick={() => props.history.push('/logout')}\n                                color=\"secondary\"\n                            >\n                                {t('g.logout')}\n                            </Button>\n                        </Box>\n                        <Button\n                            onClick={() => setDeleteVisible(true)}\n                            color=\"secondary\"\n                        >\n                            {t('profile.deleteAccount')}\n                        </Button>\n                    </Paper>\n\n                    <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                        <DialogTitle>{t('profile.deleteAccount')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                <p>\n                                    {t('profile.pleaseEnterNickname')}\n                                    {account._id}\n                                    {t('profile.andPressOk')}\n                                </p>\n                                <TextField\n                                    onChange={e =>\n                                        setDeleteField(e.target.value)\n                                    }\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => setDeleteVisible(false)}>\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (deleteField !== account._id) {\n                                        message.warning(\n                                            'The nickmanme is not correct.'\n                                        )\n                                    } else {\n                                        wsActions.deleteAccount(account._id)\n                                    }\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.delete')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )} */}\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n        structure: state.structureMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        setStructure: (structure, noNeedToSave) =>\n            dispatch(actions.setStructure(structure, noNeedToSave)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(memo(ProfileMM))\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { Component } from 'react'\nimport LeaderLine from 'leader-line-new'\nimport { connect } from 'react-redux'\n\nclass Line extends Component {\n    componentDidMount() {\n        this.waitWhenRefIsReady()\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer)\n        }\n        if (this.line) this.line.remove()\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.line) {\n            this.line.position()\n            // if (nextProps.collapsed !== this.props.collapsed) {\n            //     if (nextProps.collapsed) this.line.hide()\n            //     else this.line.show()\n            // }\n        }\n\n        return false\n    }\n\n    waitWhenRefIsReady() {\n        this.timer = setInterval(() => {\n            if (this.props.start.current) {\n                clearInterval(this.timer)\n                this.drawLine()\n            }\n        }, 5)\n    }\n\n    drawLine() {\n        const { start, end } = this.props\n        this.line = new LeaderLine(start.current, end.current)\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dragStep: state.dragStep }\n}\n\nexport default connect(mapStateToProps)(Line)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                // maxWidth: '400px',\n                height: '200px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n            <FullscreenControl position=\"topright\" />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            {account._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.addPost')}\n                    </Typography>\n                    <AddPost\n                        parent={resource._id}\n                        account={account}\n                        parentType={type}\n                        // onSend={() => setEditingMessage('')}\n                    />\n                </>\n            )}\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    fade,\n    IconButton,\n    Menu,\n    MenuItem,\n    MuiThemeProvider,\n    Paper,\n    Select,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { blue, green, orange, red } from '@material-ui/core/colors'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n\n    const getStatusText = () => {\n        const status = resource.status\n        switch (status) {\n            case 'fail':\n                return t('progress.failed')\n            case 'complete':\n                return t('progress.completed')\n            case 'dismissed':\n                return t('progress.dismissed')\n            default:\n                return t('progress.inProcess')\n        }\n    }\n\n    const getTag = () => {\n        return (\n            <MuiThemeProvider\n                theme={\n                    resource.status === 'process'\n                        ? blueTheme\n                        : resource.status === 'complete'\n                        ? greenTheme\n                        : resource.status === 'fail'\n                        ? redTheme\n                        : orangeTheme\n                }\n            >\n                <Box style={{ margin: '10px 0' }}>\n                    {resource.owner === account._id ? (\n                        <Select\n                            value={resource.status}\n                            onChange={e =>\n                                wsActions.changeResourceStatus(\n                                    e.target.value,\n                                    resource._id\n                                )\n                            }\n                        >\n                            <MenuItem value=\"complete\">\n                                {t('progress.complete')}\n                            </MenuItem>\n                            <MenuItem value=\"process\">\n                                {t('progress.inProcess')}\n                            </MenuItem>\n                            <MenuItem value=\"fail\">\n                                {t('progress.fail')}\n                            </MenuItem>\n                            <MenuItem value=\"dismissed\">\n                                {t('progress.dismiss')}\n                            </MenuItem>\n                        </Select>\n                    ) : (\n                        <Chip color=\"primary\" label={getStatusText()} />\n                    )}\n                </Box>\n            </MuiThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <Paper style={{ padding: '15px 15px 0px 15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                            profile={resource.owner}\n                            linkHash={resource._id}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                        {type === 'goal' && (\n                            <Box>\n                                {getTag()}\n                                {resource.startDate && (\n                                    <Typography>\n                                        {t('progress.startDate')}:{' '}\n                                        {dayjs(resource.startDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.dueDate && (\n                                    <Typography>\n                                        {t('progress.dueDate')}:{' '}\n                                        {dayjs(resource.dueDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.status !== 'process' &&\n                                    resource.finishDate && (\n                                        <Typography>\n                                            {t('progress.finishDate')}:{' '}\n                                            {dayjs(resource.finishDate).format(\n                                                'ddd, MMM D, YYYY'\n                                            )}\n                                        </Typography>\n                                    )}\n                            </Box>\n                        )}\n                    </Box>\n                </div>\n\n                <Divider />\n                {props.navi}\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n\n    const resourceId = props.resourceId\n    if (!resourceId) return null\n    const { type } = props\n\n    const { resource, account, friendData, posts } = props\n\n    if (!resource || !resource._id) return null\n\n    return friendData ? (\n        <div\n            style={{\n                display: 'flex',\n                flex: 1,\n                background: 'white',\n                overflow: 'hidden',\n            }}\n        >\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                    navi={props.navi}\n                />\n                {props.children}\n            </div>\n            <div style={{ width: '10px' }} />\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourcePosts resource={resource} posts={posts} type={type} />\n            </div>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        posts: state.post,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourceCore))\n","import React, { useState, memo } from 'react'\nimport { Rnd } from 'react-rnd'\nimport DialogFullscreen from '../../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../../components/UI/TinyEditor'\nimport { dragHandler, resizeHandler, saveValue } from '../actions'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst RewardMM = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { id } = props\n    const { reward } = props\n    const [posts, setPosts] = useState([])\n\n    return (\n        <ResourceCoreMM\n            type=\"reward\"\n            setPosts={setPosts}\n            resourceId={id}\n            resource={reward}\n        >\n            {reward && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={reward.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={reward.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        reward: state.reward[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(RewardMM)))\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId =\n        props.resourceId || (pathParts.length > 2 ? pathParts[2] : '')\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        }\n        // else {\n        //     pullData(props, data, setData, { forceAuth: false }, data => {\n        //         const friendData = {}\n        //         for (let friend of data.friendData)\n        //             friendData[friend._id] = friend\n        //         const activityData = {}\n        //         if (data.activityData)\n        //             for (let activity of data.activityData)\n        //                 activityData[activity._id] = activity\n        //         const rewardData = {}\n        //         if (data.rewardData)\n        //             for (let reward of data.rewardData)\n        //                 rewardData[reward._id] = reward\n        //         const post = {}\n        //         if (data.posts)\n        //             for (let item of data.posts) post[item._id] = item\n\n        //         props.setData({\n        //             friendData,\n        //             post,\n        //             account: {},\n        //             activityData,\n        //             rewardData,\n        //             onlineUsers: data.onlineUsers,\n        //             [type === 'goal' ? 'progress' : type]: data.resource,\n        //         })\n        //     })\n        // }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props\n\n    useEffect(() => {\n        if (resource && resource._id) props.setResource(resource)\n    }, [resource])\n    useEffect(() => {\n        props.setPosts(posts)\n    }, [posts])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        props.resourceId ? (\n            <Layout noHeader>\n                <div className=\"contentDiv\">\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        ) : (\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {resource.name}\n                    </Typography>\n                }\n            >\n                <div className=\"contentDiv\">\n                    <Helmet>\n                        <title>\n                            {`${resource.name} ${t('g.by')}${\n                                resource.owner\n                            } - Addspire`}\n                        </title>\n                        <meta\n                            name=\"description\"\n                            content={resource.descriptionText}\n                        />\n                    </Helmet>\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        )\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource:\n            state[ownProps.type === 'goal' ? 'progress' : ownProps.type][\n                ownProps.resourceId\n            ],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Reward = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"reward\"\n            setResource={setReward}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {reward && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={reward.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={reward.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={reward}\n                            posts={posts}\n                            type=\"reward\"\n                        />\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n        setChosenResource,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <span\n                                        onClick={() =>\n                                            setChosenResource(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </span>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward id={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? t('g.forTheseActivities') : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToReward')}\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Box>\n                                            <Button\n                                                onClick={() =>\n                                                    wsActions.sendReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        selectedReward\n                                                    )\n                                                }\n                                                color=\"primary\"\n                                            >\n                                                {t('g.sendRewardManually')}\n                                            </Button>\n                                        </Box>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.editReward')}\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.removeReward')}\n                                        </Button>\n                                    </>\n                                )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <UserButton id={rewardObj.owner} />\n                                <span>\n                                    {t(\n                                        'g.' +\n                                            (rewardObj.repeat === 'manual'\n                                                ? 'manual'\n                                                : rewardObj.repeat === 'once'\n                                                ? 'once'\n                                                : rewardObj.repeat === 'time'\n                                                ? 'everyTime'\n                                                : '')\n                                    )}\n                                    {t('reward.forActivities')}\n                                    {rewardObj.activities.map(activity => {\n                                        if (activityData[activity]) {\n                                            return (\n                                                <Link\n                                                    to={\n                                                        '/activities/' +\n                                                        activityData[activity]\n                                                            ._id\n                                                    }\n                                                >\n                                                    {\n                                                        activityData[activity]\n                                                            .name\n                                                    }\n                                                </Link>\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                </span>\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            // return -1\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const {\n        activityData,\n        account,\n        progress,\n        activities,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const isOwner =\n        account && account._id && progress && account._id === progress.owner\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    setChosenResource(selectedActivity)\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToActivity')}\n                            </Button>\n                            {isOwner && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    {t('g.removeActivity')}\n                                </Button>\n                            )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <ActivityTable activityId={selectedActivity} />\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst GoalMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { progress } = props\n\n    return (\n        <ResourceCoreMM type=\"goal\" resourceId={id} resource={progress}>\n            {progress && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={progress.description}\n                        />\n                    </Paper>\n                    <Activities progress={progress} />\n                    <Rewards progress={progress} />\n\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={progress.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(GoalMM)))\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport ActivityTable from '../../Goal/ActivityTable'\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst ActivityMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { activity } = props\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCoreMM type=\"activity\" resourceId={id} resource={activity}>\n            {activity && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.tracking')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ActivityTable activityId={activity._id} />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        {activity.repeat !== 'no' && (\n                            <>\n                                <p>\n                                    <RetweetOutlined />\n                                    {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                </p>\n                                <Divider\n                                    light\n                                    variant=\"middle\"\n                                    style={{ marginBottom: '15px' }}\n                                />\n                            </>\n                        )}\n\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={activity.description}\n                        />\n                    </Paper>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={activity.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        activity: state.activity[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(ActivityMM)))\n","import { Button, Divider } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                display: 'flex',\n                overflow: 'hidden',\n                flexDirection: 'column',\n            }}\n        >\n            <div style={{ padding: '5px', textAlign: 'right' }}>\n                <Button onClick={props.onClick} color=\"primary\">\n                    {t('g.open')}\n                </Button>\n            </div>\n            <Divider />\n            <div style={{ flex: 1, overflow: 'hidden', display: 'flex' }}>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport FolderMM from './FolderMM'\nimport ProfileMM from './ProfileMM'\nimport Line from './Line'\nimport { Rnd } from 'react-rnd'\nimport { dragHandler, resizeHandler } from './actions'\nimport RewardMM from './old/RewardMM'\nimport GoalMM from './old/GoalMM'\nimport ActivityMM from './old/ActivityMM'\nimport { Button } from '@material-ui/core'\nimport ChooseWrapMM from './ChooseWrapMM'\n\nexport const resizeStyle = {\n    height: '20px',\n    width: '20px',\n    background: '#eee',\n    border: '1px #ccc solid',\n    borderRadius: '10px',\n    zIndex: 1,\n}\n\nconst ContainerMM = props => {\n    const myRef1 = useRef(null)\n\n    const myRef4 = useRef(null)\n    const {\n        setSelectedBox,\n        selectedBox,\n        structure,\n        setStructure,\n        scale,\n        myRef2,\n        id,\n        editingFolder,\n        editingElement,\n        selectedIndex,\n        setSelectedIndex,\n        setEditingElement,\n        addDragStep,\n        editorMode,\n        setChosenResource,\n        setEditingFolder,\n    } = props\n    const el = structure.items[props.id]\n\n    useEffect(() => {\n        const handler = e => {\n            // e.stopPropagation()\n        }\n        if (myRef4 && myRef4.current) {\n            myRef4.current.addEventListener('touchstart', handler, {\n                passive: false,\n            })\n            myRef4.current.addEventListener('touchmove', handler, {\n                passive: false,\n            })\n            addDragStep()\n        }\n\n        return () => {\n            if (myRef4 && myRef4.current) {\n                myRef4.current.removeEventListener('touchstart', handler)\n                myRef4.current.removeEventListener('touchmove', handler)\n            }\n        }\n    }, [Boolean(myRef4 && myRef4.current)])\n    return el &&\n        !el.temp &&\n        (!el.unsorted || (el.unsorted && el.children.length > 0)) ? (\n        <div>\n            {el.type !== 'profile' && (\n                <Line start={myRef2} end={myRef1} collapsed={props.collapsed} />\n            )}\n            <div\n                ref={myRef4}\n                style={{\n                    position: el.type === 'profile' ? 'relative' : 'absolute',\n                }}\n            >\n                <Rnd\n                    scale={scale}\n                    default={el.type !== 'profile' && el.sizePos}\n                    disableDragging={\n                        el.type === 'profile' || editingFolder || !editorMode\n                    }\n                    enableResizing={el.type !== 'profile' && editorMode}\n                    resizeHandleStyles={\n                        selectedBox === id\n                            ? {\n                                  bottomLeft: resizeStyle,\n                                  bottomRight: resizeStyle,\n                                  topLeft: resizeStyle,\n                                  topRight: resizeStyle,\n                              }\n                            : {}\n                    }\n                    onMouseDown={e => {\n                        if (editorMode) setSelectedBox(id)\n                    }}\n                    style={{\n                        outline: selectedBox === id ? '1px solid blue' : 'none',\n                        // overflow: 'hidden',\n                    }}\n                    onDrag={(e, data) => {\n                        props.addDragStep()\n                        dragHandler(id, data, structure, setStructure)\n                    }}\n                    onResize={(e, dir, elRef, delta, position) => {\n                        props.addDragStep()\n                        resizeHandler(\n                            id,\n                            elRef,\n                            position,\n                            structure,\n                            setStructure\n                        )\n                    }}\n                >\n                    <div\n                        ref={myRef1}\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            position: 'relative',\n                            background: 'white',\n                        }}\n                    >\n                        {/* {el.children.length > 0 && (\n                            <Button\n                                style={{\n                                    position: 'absolute',\n                                    top: '-40px',\n                                    right: '0px',\n                                }}\n                                variant=\"contained\"\n                            >{`${el.collapsed ? 'Expand' : 'Collapse'} ${\n                                el.children.length\n                            }`}</Button>\n                        )} */}\n                        {el.type === 'folder' && (\n                            <FolderMM\n                                el={el}\n                                id={id}\n                                selectedBox={selectedBox}\n                                structure={structure}\n                                setStructure={setStructure}\n                                scale={scale}\n                                editingFolder={editingFolder}\n                                editingElement={editingElement}\n                                selectedIndex={selectedIndex}\n                                setSelectedIndex={setSelectedIndex}\n                                setEditingElement={setEditingElement}\n                                setEditingFolder={setEditingFolder}\n                            />\n                        )}\n                        {el.type === 'profile' && (\n                            <ChooseWrapMM onClick={() => setChosenResource(id)}>\n                                <ProfileMM />\n                            </ChooseWrapMM>\n                        )}\n\n                        {el.type === 'reward' && (\n                            <ChooseWrapMM onClick={() => setChosenResource(id)}>\n                                <RewardMM id={id} />\n                            </ChooseWrapMM>\n                        )}\n                        {el.type === 'goal' && (\n                            <ChooseWrapMM onClick={() => setChosenResource(id)}>\n                                <GoalMM id={id} />\n                            </ChooseWrapMM>\n                        )}\n                        {el.type === 'activity' && (\n                            <ChooseWrapMM onClick={() => setChosenResource(id)}>\n                                <ActivityMM id={id} />\n                            </ChooseWrapMM>\n                        )}\n                    </div>\n                </Rnd>\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        // visibility:\n                        //     props.collapsed || el.collapsed\n                        //         ? 'hidden'\n                        //         : 'visible',\n                        transform:\n                            'translate(' +\n                            el.sizePos.x +\n                            'px, ' +\n                            el.sizePos.y +\n                            'px)',\n                    }}\n                >\n                    {el.children &&\n                        el.children.map(itemId => (\n                            <ContainerMM\n                                key={itemId}\n                                id={itemId}\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                structure={structure}\n                                setStructure={setStructure}\n                                scale={scale}\n                                myRef2={myRef1}\n                                addDragStep={addDragStep}\n                                editingFolder={editingFolder}\n                                editingElement={editingElement}\n                                selectedIndex={selectedIndex}\n                                setSelectedIndex={setSelectedIndex}\n                                setEditingElement={setEditingElement}\n                                collapsed={props.collapsed || el.collapsed}\n                                editorMode={editorMode}\n                                setChosenResource={setChosenResource}\n                                setEditingFolder={setEditingFolder}\n                            />\n                        ))}\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nexport default ContainerMM\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../components/SimilarResources'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Goal = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    const [posts, setPosts] = useState([])\n\n    const [currentTab, setCurrentTab] = useState(1)\n    const [currentTabD, setCurrentTabD] = useState(0)\n\n    return (\n        <ResourceCore\n            type=\"goal\"\n            setResource={setProgress}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {progress && progress._id && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.detailsFor')}\n                        </Typography>\n                        <Paper square>\n                            <Tabs\n                                value={currentTabD}\n                                onChange={(event, value) =>\n                                    setCurrentTabD(value)\n                                }\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label={t('g.fromStart')} />\n                                <Tab label={t('g.toGoal')} />\n                                <Tab label={t('g.resultFinish')} />\n                            </Tabs>\n                        </Paper>\n\n                        {progress[\n                            currentTabD === 0\n                                ? 'startImages'\n                                : currentTabD === 1\n                                ? 'images'\n                                : 'finishImages'\n                        ].length > 0 && (\n                            <>\n                                <Typography\n                                    className={classes.title}\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                >\n                                    {t('g.images')}\n                                </Typography>\n                                <ImageCarousel\n                                    images={\n                                        progress[\n                                            currentTabD === 0\n                                                ? 'startImages'\n                                                : currentTabD === 1\n                                                ? 'images'\n                                                : 'finishImages'\n                                        ]\n                                    }\n                                />\n                            </>\n                        )}\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={\n                                    progress[\n                                        currentTabD === 0\n                                            ? 'startDescription'\n                                            : currentTabD === 1\n                                            ? 'description'\n                                            : 'finishDescription'\n                                    ]\n                                }\n                            />\n                        </Paper>\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={progress.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"goal\" /> */}\n\n                        <ResourcePosts\n                            resource={progress}\n                            posts={posts}\n                            type=\"goal\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Activities progress={progress} />\n                        <Rewards progress={progress} />\n                    </TabPanel>\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Activity = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(2)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore\n            type=\"activity\"\n            setResource={setActivity}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {activity && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            {activity.repeat !== 'no' && (\n                                <>\n                                    <p>\n                                        <RetweetOutlined />\n                                        {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                    </p>\n                                    <Divider\n                                        light\n                                        variant=\"middle\"\n                                        style={{ marginBottom: '15px' }}\n                                    />\n                                </>\n                            )}\n\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={activity.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={activity.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={activity}\n                            posts={posts}\n                            type=\"activity\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.tracking')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ActivityTable activityId={activity._id} />\n                        </Paper>\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const {\n        transactionData,\n        rewardData,\n        account,\n        transactions,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <span\n                                    onClick={() =>\n                                        setChosenResource(rewardObj._id)\n                                    }\n                                >\n                                    {rewardObj.name || 'Selected activity'}\n                                </span>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    // const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setChosenResource } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    // useEffect(() => {\n    //     const pathParts = props.history.location.pathname.split('/')\n    //     if (pathParts.length > 2) {\n    //         const profileId = pathParts[2]\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: profileId })\n    //         } else {\n    //             pullData(props, data, setData, { forceAuth: false }, data => {\n    //                 const friendData = {}\n    //                 for (let friend of data.friendData)\n    //                     friendData[friend._id] = friend\n\n    //                 const progressData = {}\n    //                 if (data.progressData)\n    //                     for (let progress of data.progressData)\n    //                         progressData[progress._id] = progress\n\n    //                 const activityData = {}\n    //                 if (data.activityData)\n    //                     for (let activity of data.activityData)\n    //                         activityData[activity._id] = activity\n    //                 const rewardData = {}\n    //                 if (data.rewardData)\n    //                     for (let reward of data.rewardData)\n    //                         rewardData[reward._id] = reward\n    //                 const post = {}\n    //                 if (data.posts)\n    //                     for (let item of data.posts) post[item._id] = item\n\n    //                 props.setData({\n    //                     profile: data.profile,\n    //                     friendData,\n    //                     post,\n    //                     account: {},\n    //                     progressData,\n    //                     activityData,\n    //                     rewardData,\n    //                     onlineUsers: data.onlineUsers,\n    //                 })\n    //             })\n    //         }\n    //     } else {\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: account._id })\n    //         }\n    //     }\n    // }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Layout noHeader>\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea\n                            onClick={() => setChosenResource(item._id)}\n                        >\n                            {/* <Link to={'/goals/' + item._id}> */}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    align=\"center\"\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                            {/* </Link> */}\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities\n                    activities={profile.activities}\n                    isOwner={isOwner}\n                    setChosenResource={setChosenResource}\n                />\n                <ProfileRewards\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner={isOwner}\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect, useState } from 'react'\n\nimport { TransformComponent } from 'react-zoom-pan-pinch'\nimport ContainerMM from './ContainerMM'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    addFolder,\n    changeParent,\n    handleSetSelectedBox,\n    deleteElement,\n    saveValue,\n    addElement,\n    addBlock,\n} from './actions'\nimport 'tui-image-editor/dist/tui-image-editor.css'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport Goal from '../Goal/Goal'\nimport Reward from '../Reward/Reward'\nimport Activity from '../Activity/Activity'\nimport BottomMenu from '../../components/Layout/BottomMenu'\nimport { Button, Dialog, Menu, MenuItem, Slide } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Profile from '../Profile/Profile'\nimport Layout from '../../components/Layout/Layout'\nimport { withRouter } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst MindMap = props => {\n    const { t } = useTranslation()\n    const [selectedBox, setSelectedBoxDo] = useState('')\n\n    const [changeParentMode, setChangeParentMode] = useState('')\n    const [editingFolder, setEditingFolder] = useState(false)\n    const [editingElement, setEditingElement] = useState(false)\n    const [selectedIndex, setSelectedIndex] = useState('')\n    const [chosenResource, setChosenResource] = useState('')\n    const [editorMode, setEditorMode] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const {\n        structure,\n        setStructure,\n        account,\n        profile,\n        setEventIsFromDraggable,\n        scale,\n        structureNotSaved,\n    } = props\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n    useEffect(() => {\n        if (profile && profile.structure && profile.structure.items) {\n            setStructure(profile.structure, true)\n            if (props.history.location.hash.length > 0) {\n                const hash = props.history.location.hash.substring(1)\n                if (hash === 'profile') setChosenResource('b0')\n                else setChosenResource(hash)\n            }\n        }\n    }, [profile && profile._id])\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n        return () => {\n            document.body.style.overflow = 'auto'\n        }\n    }, [])\n    if (!structure || !structure.items) return null\n    const selectedElement = selectedBox && structure.items[selectedBox]\n    const chosenElement = chosenResource && structure.items[chosenResource]\n    const setSelectedBox = id => {\n        if (id !== selectedBox) {\n            setEditingElement(false)\n            setEditingFolder(false)\n            setSelectedIndex('')\n            // setChosenResource('')\n        }\n        setSelectedBoxDo(id)\n    }\n    const handleMouseDown = e => {\n        if (editorMode && !editingElement) {\n            const path = e.nativeEvent.composedPath()\n            for (let el of path) {\n                if (el) {\n                    if (\n                        el.getAttribute('id') === 'panWrap' ||\n                        el === document.body\n                    ) {\n                        setEventIsFromDraggable(false)\n                        return\n                    }\n                    const classN = el.getAttribute('class')\n                    if (classN && classN.indexOf('react-draggable') > -1) {\n                        setEventIsFromDraggable(true)\n                        return\n                    }\n                }\n            }\n        }\n        setEventIsFromDraggable(false)\n    }\n\n    const handleClick = e => {\n        if (!changeParentMode && !editingElement) {\n            if (editorMode) {\n                const path = e.nativeEvent.composedPath()\n                for (let el of path) {\n                    if (el) {\n                        if (\n                            el.getAttribute('id') === 'panWrap' ||\n                            el === document.body\n                        ) {\n                            setEditingElement(false)\n                            setEditingFolder(false)\n                            setSelectedIndex('')\n                            // setChosenResource('')\n                            setSelectedBox('')\n                            return\n                        }\n                        const classN = el.getAttribute('class')\n                        if (classN && classN.indexOf('react-draggable') > -1) {\n                            return\n                        }\n                    }\n                }\n            }\n            setEditingElement(false)\n            setEditingFolder(false)\n            setSelectedIndex('')\n\n            // setChosenResource('')\n            setSelectedBox('')\n        }\n    }\n\n    const actionsProps = {\n        structure,\n        setStructure,\n        selectedBox,\n        changeParentMode,\n        setChangeParentMode,\n        setSelectedBox,\n        selectedElement,\n        selectedIndex,\n        setSelectedIndex,\n        editingFolder,\n    }\n\n    return (\n        <>\n            <div\n                style={{\n                    display: 'flex',\n                    width: '100%',\n                    height: '100%',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        background: 'white',\n                        zIndex: 1,\n                        display: 'flex',\n                    }}\n                >\n                    {isOwner ? (\n                        <Button\n                            onClick={() => {\n                                if (editingFolder) {\n                                    setEditingFolder(!editingFolder)\n                                } else {\n                                    setEditorMode(!editorMode)\n                                    setSelectedBox('')\n                                }\n                                setSelectedIndex('')\n                            }}\n                            color=\"primary\"\n                        >\n                            {editorMode ? <ArrowBack /> : t('g.edit')}\n                        </Button>\n                    ) : (\n                        <Layout noContent />\n                    )}\n                    <div style={{ flex: 1, overflow: 'auto' }}>\n                        <div>\n                            {isOwner && editorMode && (\n                                <>\n                                    {structureNotSaved && (\n                                        <Button\n                                            onClick={() =>\n                                                wsActions.saveStructure(\n                                                    account._id,\n                                                    structure\n                                                )\n                                            }\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                        >\n                                            {t('g.save')}\n                                        </Button>\n                                    )}\n                                    <Button\n                                        onClick={e =>\n                                            setAnchorEl(e.currentTarget)\n                                        }\n                                    >\n                                        {t('g.add')}\n                                    </Button>\n                                    <Menu\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        {!editingFolder && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    setAnchorEl(null)\n                                                    addBlock(actionsProps)\n                                                }}\n                                            >\n                                                {t('g.block')}\n                                            </MenuItem>\n                                        )}\n                                        {!editingFolder && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    setStartResourceVisible(\n                                                        'goal'\n                                                    )\n                                                    setAnchorEl(null)\n                                                }}\n                                            >\n                                                {t('g.goal')}\n                                            </MenuItem>\n                                        )}\n                                        {!editingFolder && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    setStartResourceVisible(\n                                                        'activity'\n                                                    )\n                                                    setAnchorEl(null)\n                                                }}\n                                            >\n                                                {t('g.activity')}\n                                            </MenuItem>\n                                        )}\n                                        {!editingFolder && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    setStartResourceVisible(\n                                                        'reward'\n                                                    )\n                                                    setAnchorEl(null)\n                                                }}\n                                            >\n                                                {t('g.reward')}\n                                            </MenuItem>\n                                        )}\n                                        {!editingElement && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    if (editingFolder)\n                                                        addElement(\n                                                            actionsProps,\n                                                            'text'\n                                                        )\n                                                    else\n                                                        addBlock(\n                                                            actionsProps,\n                                                            'text'\n                                                        )\n                                                    setAnchorEl(null)\n                                                }}\n                                            >\n                                                {t('g.text')}\n                                            </MenuItem>\n                                        )}\n                                        {!editingElement && (\n                                            <MenuItem\n                                                onClick={() => {\n                                                    if (editingFolder)\n                                                        addElement(\n                                                            actionsProps,\n                                                            'image'\n                                                        )\n                                                    else\n                                                        addBlock(\n                                                            actionsProps,\n                                                            'image'\n                                                        )\n                                                    setAnchorEl(null)\n                                                }}\n                                            >\n                                                {t('g.image')}\n                                            </MenuItem>\n                                        )}\n                                    </Menu>\n                                </>\n                            )}\n                            {selectedElement && editorMode && (\n                                <>\n                                    {/* <Divider orientation=\"vertical\" /> */}\n\n                                    {!['profile'].includes(\n                                        selectedElement.type\n                                    ) &&\n                                        !editingFolder && (\n                                            <Button\n                                                onClick={() =>\n                                                    changeParent(actionsProps)\n                                                }\n                                                variant={\n                                                    changeParentMode\n                                                        ? 'contained'\n                                                        : 'text'\n                                                }\n                                                color={\n                                                    changeParentMode\n                                                        ? 'primary'\n                                                        : 'default'\n                                                }\n                                            >\n                                                {t('g.changeParent')}\n                                            </Button>\n                                        )}\n\n                                    {/* <button onClick={() => collapse(actionsProps)}>\n                                Collapse\n                            </button> */}\n                                    {['folder'].includes(\n                                        selectedElement.type\n                                    ) && (\n                                        <Button\n                                            onClick={() =>\n                                                deleteElement(actionsProps)\n                                            }\n                                        >\n                                            {t('g.delete')}\n                                        </Button>\n                                    )}\n                                    {['folder'].includes(\n                                        selectedElement.type\n                                    ) &&\n                                        selectedElement.folderType !==\n                                            'image' &&\n                                        !editingFolder && (\n                                            <Button\n                                                onClick={() => {\n                                                    setEditingFolder(true)\n                                                    if (\n                                                        selectedElement.folderType ===\n                                                        'text'\n                                                    ) {\n                                                        setSelectedIndex(\n                                                            selectedElement\n                                                                .innerChildren[0]\n                                                        )\n                                                        setEditingElement(true)\n                                                    }\n                                                }}\n                                            >\n                                                {t('g.edit')}\n                                            </Button>\n                                        )}\n                                    {['folder'].includes(\n                                        selectedElement.type\n                                    ) &&\n                                        selectedIndex.toString() &&\n                                        structure.items[selectedIndex].type ===\n                                            'text' && (\n                                            <Button\n                                                onClick={() => {\n                                                    setEditingElement(\n                                                        !editingElement\n                                                    )\n                                                }}\n                                            >\n                                                {t('g.edit')}\n                                            </Button>\n                                        )}\n\n                                    {selectedElement.folderType === 'image' ||\n                                    (['folder'].includes(\n                                        selectedElement.type\n                                    ) &&\n                                        selectedIndex.toString() &&\n                                        structure.items[selectedIndex].type ===\n                                            'image') ? (\n                                        <Upload\n                                            accept=\"image/*\"\n                                            showUploadList={false}\n                                            customRequest={({ file }) => {\n                                                uploadFile(\n                                                    file,\n                                                    800,\n                                                    undefined,\n                                                    url => {\n                                                        if (url) {\n                                                            saveValue(\n                                                                selectedElement.folderType ===\n                                                                    'image'\n                                                                    ? selectedElement\n                                                                          .innerChildren[0]\n                                                                    : selectedIndex,\n                                                                url,\n                                                                structure,\n                                                                setStructure\n                                                            )\n                                                        }\n                                                    }\n                                                )\n                                            }}\n                                        >\n                                            <Button>{t('g.edit')}</Button>\n                                        </Upload>\n                                    ) : null}\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    style={{\n                        overflow: 'hidden',\n                        flex: 1,\n                        display: 'flex',\n                    }}\n                    id=\"panWrap\"\n                    onMouseDown={handleMouseDown}\n                    onTouchStart={handleMouseDown}\n                    onTouchEnd={() => setEventIsFromDraggable(false)}\n                    onMouseUp={() => setEventIsFromDraggable(false)}\n                    onClick={handleClick}\n                >\n                    <TransformComponent>\n                        <div\n                            style={{\n                                cursor: 'grabbing',\n                            }}\n                        >\n                            <ContainerMM\n                                id=\"b0\"\n                                setSelectedBox={id =>\n                                    handleSetSelectedBox({\n                                        ...actionsProps,\n                                        id,\n                                    })\n                                }\n                                selectedBox={selectedBox}\n                                structure={structure}\n                                setStructure={setStructure}\n                                scale={scale}\n                                addDragStep={props.addDragStep}\n                                editingFolder={editingFolder}\n                                editingElement={editingElement}\n                                selectedIndex={selectedIndex}\n                                setSelectedIndex={setSelectedIndex}\n                                setEditingElement={setEditingElement}\n                                editorMode={editorMode}\n                                setChosenResource={setChosenResource}\n                                setEditingFolder={setEditingFolder}\n                            />\n                        </div>\n                    </TransformComponent>\n                </div>\n            </div>\n            <DialogFullscreen\n                open={Boolean(chosenElement)}\n                close={() => setChosenResource('')}\n                title=\"Opened res\"\n            >\n                {chosenElement.type === 'profile' ? (\n                    <Profile setChosenResource={setChosenResource} />\n                ) : chosenElement.type === 'reward' ? (\n                    <Reward\n                        id={chosenElement.id}\n                        setChosenResource={setChosenResource}\n                    />\n                ) : chosenElement.type === 'activity' ? (\n                    <Activity\n                        id={chosenElement.id}\n                        setChosenResource={setChosenResource}\n                    />\n                ) : chosenElement.type === 'goal' ? (\n                    <Goal\n                        id={chosenElement.id}\n                        setChosenResource={setChosenResource}\n                    />\n                ) : null}\n            </DialogFullscreen>\n            {account._id && editorMode && (\n                <>\n                    {/* <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen> */}\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            structure={structure}\n                            setStructure={setStructure}\n                            selectedBox={selectedBox}\n                        />\n                    </Dialog>\n                </>\n            )}\n            <BottomMenu />\n        </>\n    )\n    {\n        /* <SpeedDial\n                                    ariaLabel=\"SpeedDial\"\n                                    className={classes.speedDial}\n                                    icon={<SpeedDialIcon />}\n                                    onClose={(event, reason) => {\n                                        if (reason !== 'mouseLeave') {\n                                            domRef.current.focus()\n                                            setSpeedDialOpen(false)\n                                        }\n                                    }}\n                                    onOpen={(event, reason) =>\n                                        reason === 'toggle' &&\n                                        setSpeedDialOpen(true)\n                                    }\n                                    open={speedDialOpen}\n                                >\n                                    <SpeedDialAction\n                                        icon={<Person />}\n                                        tooltipTitle={\n                                            <span\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                }}\n                                            >\n                                                {t('g.addFriend')}\n                                            </span>\n                                        }\n                                        tooltipOpen\n                                        onClick={() => {\n                                            domRef.current.focus()\n                                            setAddFriendOpen(true)\n                                            setSpeedDialOpen(false)\n                                        }}\n                                    />\n                                    <SpeedDialAction\n                                        icon={<Cake />}\n                                        tooltipTitle={\n                                            <span\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                }}\n                                            >\n                                                {t('g.addReward')}\n                                            </span>\n                                        }\n                                        tooltipOpen\n                                        onClick={() => {\n                                            domRef.current.focus()\n                                            setStartResourceVisible(\n                                                'reward'\n                                            )\n                                            setSpeedDialOpen(false)\n                                        }}\n                                    />\n                                    <SpeedDialAction\n                                        icon={<FitnessCenter />}\n                                        tooltipTitle={\n                                            <span\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                }}\n                                            >\n                                                {t('g.addActivity')}\n                                            </span>\n                                        }\n                                        tooltipOpen\n                                        onClick={() => {\n                                            domRef.current.focus()\n                                            setStartResourceVisible(\n                                                'activity'\n                                            )\n                                            setSpeedDialOpen(false)\n                                        }}\n                                    />\n                                    <SpeedDialAction\n                                        icon={<Star />}\n                                        tooltipTitle={\n                                            <span\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                }}\n                                            >\n                                                {t('g.addGoal')}\n                                            </span>\n                                        }\n                                        tooltipOpen\n                                        onClick={() => {\n                                            domRef.current.focus()\n                                            setStartResourceVisible('goal')\n                                            setSpeedDialOpen(false)\n                                        }}\n                                    />\n                                </SpeedDial> */\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        structure: state.structureMM,\n        account: state.account,\n        profile: state.profile,\n        structureNotSaved: state.structureNotSaved,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setStructure: (structure, noNeedToSave) =>\n            dispatch(actions.setStructure(structure, noNeedToSave)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MindMap)\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { TransformWrapper } from 'react-zoom-pan-pinch'\nimport MindMap from './MindMap'\nimport * as actions from '../../store/actions'\nimport { throttle } from 'throttle-debounce'\n\nconst MindMapWrap = props => {\n    const [scale, setScale] = useState(0.5)\n    const [eventIsFromDraggable, setEventIsFromDraggable] = useState(false)\n    const throttleFunc = throttle(10, () => props.addDragStep())\n    return (\n        <TransformWrapper\n            defaultScale={0.5}\n            defaultPositionX={200}\n            defaultPositionY={100}\n            options={{\n                limitToBounds: false,\n                minScale: 0.1,\n                maxScale: 100,\n                disabled: eventIsFromDraggable,\n            }}\n            pan={{\n                velocity: false,\n            }}\n            wheel={{\n                step: 300,\n            }}\n            onZoomChange={value => {\n                setScale(value.scale)\n                throttleFunc()\n            }}\n            onPanning={throttleFunc}\n            onPanningStop={throttleFunc}\n            onPinching={throttleFunc}\n            onPinchingStop={throttleFunc}\n        >\n            <MindMap\n                setEventIsFromDraggable={setEventIsFromDraggable}\n                scale={scale}\n            />\n        </TransformWrapper>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(MindMapWrap)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Blog from './containers/Blog/Blog'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport MindMapWrap from './containers/MindMap/MindMapWrap'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route\n                path=\"/\"\n                exact\n                component={isAuthed ? MindMapWrap : Explore}\n            />\n            {isAuthed && <Route path=\"/explore\" exact component={Explore} />}\n            {/* <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} /> */}\n            <Route path=\"/profile\" component={MindMapWrap} />\n            {isAuthed && <Route path=\"/events\" component={DashboardPosts} />}\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n    recentShown: false,\n    dragStep: 0,\n    structureMM: {\n        currentId: 9,\n        items: {\n            b0: {\n                type: 'profile',\n                children: ['b00'],\n                parent: '',\n                sizePos: { x: 0, y: 0 },\n            },\n            b00: {\n                type: 'folder',\n                unsorted: true,\n                children: [],\n                innerChildren: [],\n                parent: 'b0',\n                sizePos: {\n                    x: -600,\n                    y: -300,\n                    width: 200,\n                    height: 200,\n                },\n            },\n        },\n    },\n    structureNotSaved: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'progress',\n                'reward',\n                'activity',\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    ADD_DRAG_STEP: (state: Object) => {\n        state.dragStep = state.dragStep + 1\n    },\n    SET_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM = action.structure\n        if (!action.noNeedToSave) state.structureNotSaved = true\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n    SET_RECENT_SHOWN: (state: Object) => {\n        state.recentShown = true\n    },\n    ADD_TO_STRUCTURE: (state: Object, action: Object) => {\n        if (\n            state.profile._id === action.accountId &&\n            state.structureMM.items[action.structureId]\n        ) {\n            const parentId = state.structureMM.items[action.structureId].parent\n            if (state.structureMM.items[parentId]) {\n                state.structureMM.items[parentId] = {\n                    ...state.structureMM.items[parentId],\n                    children: [\n                        ...state.structureMM.items[parentId].children,\n                        action.resourceId,\n                    ],\n                }\n                state.structureMM.items[action.resourceId] = {\n                    ...state.structureMM.items[action.structureId],\n                    id: action.resourceId,\n                    temp: false,\n                }\n                state.structureNotSaved = true\n            }\n        }\n        delete state.structureMM.items[action.structureId]\n    },\n    STRUCTURE_IS_SAVED: (state: Object) => {\n        state.structureNotSaved = false\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\n// pick a date util library\nimport DayUtils from '@date-io/dayjs'\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <MuiPickersUtilsProvider utils={DayUtils}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <ThemeProvider theme={outerTheme}>\n                    <App />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    </MuiPickersUtilsProvider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}