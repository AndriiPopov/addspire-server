{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Progress/Messages.module.css","containers/Account/Account.module.css","components/Layout/Layout.module.css","components/Svg/Svg.tsx","containers/Auth/Auth.tsx","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/Layout.tsx","utils/processRes.js","store/actions/auth.tsx","utils/pullData.js","utils/uploadFile.js","components/Rewards/Rewards.tsx","components/UI/DraggableTabs/DraggableTabs.js","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Goals/AddGoal.tsx","containers/Goals/GoalCard.tsx","components/AddCard/AddCard.tsx","containers/Goals/Goals.tsx","components/RewardsView/RewardsView.tsx","containers/Goal/Goal.tsx","containers/Progresses/ProgressCard.tsx","containers/Progresses/Progresses.tsx","containers/ProgressWebsocket/ProgressWebsocket.tsx","websocketActions/progresses.tsx","containers/Progress/ProgressMessage.tsx","containers/Progress/Messages.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","containers/Progress/Activity.tsx","containers/Progress/Progress.tsx","containers/Shop/Wallet.tsx","containers/Shop/Transactions.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Shop.tsx","components/FriendActionButton.tsx","containers/Friends/methods.js","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","utils/processResErr.js","containers/Account/Account.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Wishlist/Wishlist.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx"],"names":["module","exports","Container","socialButtons","Messages","Avatar","Layout","Header","TopHeader","BottomHeader","Main","Button","MenuButtonContiner","QuickButtonContiner","Svg","props","result","icon","objectSvg","svg","obj","stack","length","trim","indexOf","substring","pop","curObj","type","children","attr","selfclosing","key","value","push","svgStringToObj","react_default","a","createElement","data-testid","datatestid","height","width","viewBox","className","map","element","index","svgChildrenToElements","elementIndex","d","fill","el","cookies","Cookies","withRouter","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","redirectParam","history","location","toString","get","basicURL","console","log","classes","Fragment","href","concat","components_Svg_Svg","es_checkbox","checked","onChange","es_button","onClick","set","path","maxAge","window","open","getAvatar","nickname","version","Content","connect","account","pageTitle","isAuthed","menuVisible","setMenuVisible","toggleMenu","selectedKey","pathname","split","undefined","buttonProps","size","checkHighligh","url","ghost","openLink","isActivating","es_layout","tooltip","title","placement","mouseEnterDelay","assign","MenuOutlined_default","LogoutOutlined_default","RocketFilled_default","ShopOutlined_default","TeamOutlined_default","style","margin","cursor","avatar","src","_id","name","page_header","onBack","goBack","main","subTitle","sub","drawer","closable","onClose","visible","menu","theme","mode","selectedKeys","_ref","overflowedIndicator","Item","AimOutlined_default","HeartFilled_default","UserOutlined_default","includes","processRes","res","data","logout","success","errorCode","message","warning","error","successCode","status","tryAuth","forceLogin","dispatch","sessionStorage","setItem","token","rememberMe","remove","userId","jwt","decode","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","id","setData","setPageTitle","confirmTransaction","transactionId","then","catch","err","cancelTransaction","pullData","options","callback","objectSpread","forceAuth","forceActivate","uploadFile","file","filename","alert","reader","FileReader","onload","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","getSignedRequest","stop","_x","apply","this","arguments","readAsArrayBuffer","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","signedRequest","Content-Type","Rewards","previewImage","setPreviewImage","editedReward","setEditedReward","_useState5","_useState6","editedRewardIndex","setEditedRewardIndex","rewardsGI","rewards","findIndex","item","rewardKey","setRewards","toConsumableArray","es_form","label","simple","money","itemName","EditOutlined_default","newRewards","filter","indexIn","danger","DeleteOutlined_default","PlusOutlined_default","modal","onCancel","onOk","rewardToSave","destroyOnClose","okText","es_select","placeholder","onSelect","Option","divider","input","TextArea","input_number","upload","listType","fileList","itemImages","image","uid","onPreview","_ref2","customRequest","_ref3","footer","alt","_ref4","itemDescription","_ref5","TabNode","_this$props","connectDragSource","connectDropTarget","React","Component","WrapTabNode","DropTarget","drop","monitor","dragKey","getItem","hoverKey","moveTabNode","dropTarget","DragSource","beginDrag","dragSource","isDragging","DraggableTabs","order","newOrder","_this","slice","Children","forEach","c","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","b","orderA","orderB","DndProvider","backend","HTML5Backend","es_tabs","EditGoalAndProgressForm","goal","deleteGoal","milestones","setMilestones","activeKey","setActiveKey","images","setImages","_useState7","withMilestones","_useState8","setWithMilestones","_useState9","_useState10","_useState11","newTabIndex","_useState12","setNewTabIndex","goalId","_useState13","rewardsGroups","_useState14","add","newPanes","newKey","targetKey","lastIndex","newActiveKey","pane","i","connections","friendsData","connectionsSelect","marginRight","_Form$useForm","Form","useForm","form","onFinish","milestonesValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","milestone","return","autoComplete","initialValues","mile1","labelCol","span","wrapperCol","onValuesChange","changedValues","_loop","newMilestones","valuePropName","getValueFromEvent","e","Array","isArray","rules","required","isGoal","components_Rewards_Rewards","es_switch","UI_DraggableTabs_DraggableTabs","tabPosition","aK","onEdit","action","TabPane","tab","offset","htmlType","popconfirm","onConfirm","cancelText","actions","setGoal","components_EditGoalAndProgressForm_EditGoalAndProgressForm","setEditGoalOpen","GoalCard","owner","available","setEditedGoal","setInviteGoal","card","display","cover","backgroundImage","backgroundSize","EditFilled_default","fontSize","ownerId","RocketOutlined_default","Meta","AddCard","hoverable","alignItems","justifyContent","PlusCircleOutlined_default","description","Tabs","editedGoal","editGoalOpen","inviteGoal","editGoal","maskClosable","Goals_AddGoal","inviteToGoalModal","friend","progresses","find","user","startProgress","background","boxShadow","marginTop","components_AddCard_AddCard","goals","Goals_GoalCard","indexG","users","Descriptions","previewReward","setPreviewReward","rewardsGroup","groupKey","padding","descriptions","bordered","column","xxl","xl","lg","md","sm","xs","profile","items","setTitle","Goal_Item","friendObj","supporters","experts","components_RewardsView_RewardsView","totalPrice","Card","progress","ProgressCard_Meta","worker","progressesData","Progresses_TabPane","Progresses_ProgressCard","empty","imageStyle","diffpatcher","require","create","propertyFilter","context","webSocket","ReserveWebsite","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","send","JSON","stringify","messageCode","onopen","progressId","onmessage","news","parse","messageValue","messageText","setFriendsData","newProgress","oldProgress","cloneDeep","__v","patch","wsActions","friends","text","onclose","checkInterval","check","readyState","setInterval","clearInterval","sendMessage","imageUrl","editedMessage","replyToMessage","accountId","getFriendsData","accountFriends","accountIds","Set","changeLikes","messageId","comment","likes","LikeFilled_default","LikeOutlined_default","paddingLeft","dislikes","DislikeFilled_default","DislikeOutlined_default","author","content","datetime","timeago_react","date","live","imageLoading","setImageLoading","messagesEndRef","useRef","current","scrollIntoView","behavior","messages","textAlign","marginBottom","getMessages","Progress_ProgressMessage","replies","ref","position","bottom","left","autoSize","minRows","maxRows","rows","SendOutlined_default","showUploadList","LoadingOutlined_default","PictureOutlined_default","activityOpen","ActivityTable","renderCheckbox","milestoneId","columns","dataIndex","render","previewMilestone","expert","getCheckboxStatus","stage","approvedBy","startStage","stages","startExperts","startData","price","startPrice","paid","finishStage","finishExperts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","finishData","milestonesData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","table","dataSource","ActivityTable_Item","EditProgress","editProgressOpen","Activity_Item","orientation","Progress_ActivityTable","Progress_EditProgress","ProgressWebsocket","Progress_Messages","Progress_Activity","wallet","Wallet_Meta","amount","transactionsData","types","tag","color","es_tag","toUpperCase","perk","record","transaction","from","tableData","sorted","Date","getTime","to","AddPerkForm","perkId","deletePerk","uploadImage","min","max","setPerk","wishlistItem","Shop_AddPerkForm","setEditPerkOpen","buyPerk","currency","setEditedPerk","onlyBuy","DollarCircleOutlined_default","PerkCard_Meta","editedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","itemId","Shop_WishlistAndPerks","Shop_Wallet","Shop_Transactions","FriendActionButton","invitingFriends","invitedFriends","realFriends","acceptFriend","addFriend","unfriend","additionalButton","asIcons","ResultButtun","SmileOutlined_default","FrownOutlined_default","friendActions","friendActionButton","EyeOutlined_default","FriendCard_Meta","addFriendOpen","setAddFriendOpen","searchResult","components_FriendCard","pendingFriendsOpen","setPendingFriendsOpen","setSearchResult","friendRef","fullFriend","Friends_AddFriends","search","PendingFriends","processResErr","setAvatarV","v","increaseAvatarV","deleteVisible","setDeleteVisible","deleteField","setDeleteField","tailLayout","backIcon","whitespace","disabled","flex","maxWidth","overflow","_is","friendData","containers_Progresses_Progresses","keepPageTitle","perks","wishlist","nicknameNotUnique","pattern","Perk_Item","redirectTo","routes","react_router","exact","component","Goals","Goal","Progresses","Progress","Profile","Friends","Account","Shop","Perk","Wishlist","WishlistItem","Auth","ActivateAccount","process","reducer","createReducer","SET_DATA","SET_FRIENDS_DATA","SET_AVATAR_V","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","__webpack_require__","__webpack_exports__","store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","react_router_dom","src_App","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.3e79f253.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1KNy7\",\"socialButtons\":\"Auth_socialButtons__2wwH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1mGAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Account_Avatar__l4shx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"Button\":\"Layout_Button__1O5Hm\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\"};","import React from 'react'\n\n// type Props = {\n//     className?: string,\n//     icon: ?string,\n//     datatestid?: string,\n// }\n\n// type Element = {\n//     type: string,\n//     children: Array<Element>,\n//     fill: string,\n//     d: string,\n// }\n\nexport const Svg = props => {\n    const svgStringToObj = svg => {\n        const obj = []\n\n        const stack = []\n\n        while (svg.length > 0) {\n            svg = svg.trim()\n            if (svg.indexOf('</') === 0) {\n                svg = svg.substring(2)\n                if (svg.indexOf('<') > 0) {\n                    svg = svg.substring(svg.indexOf('<'))\n                    stack.pop()\n                } else {\n                    svg = ''\n                }\n            } else {\n                svg = svg.substring(svg.indexOf('<'))\n                const curObj = {\n                    type: svg.substring(1, svg.indexOf(' ')),\n                    children: [],\n                }\n                svg = svg.substring(svg.indexOf(' '))\n                let attr = svg.substring(0, svg.indexOf('>'))\n                let selfclosing = attr.indexOf('/>') >= 0\n\n                svg = svg.substring(svg.indexOf('>') + 1).trim()\n                while (attr.length > 0) {\n                    let key = attr.substring(0, attr.indexOf('=')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1)\n                    let value = attr.substring(0, attr.indexOf('\"')).trim()\n                    attr = attr.substring(attr.indexOf('\"') + 1).trim()\n                    curObj[key] = value\n                }\n                if (stack.length === 0) {\n                    obj.push(curObj)\n                } else {\n                    stack[stack.length - 1].children.push(curObj)\n                }\n                if (!selfclosing) {\n                    stack.push(curObj)\n                }\n            }\n        }\n        return obj[0]\n    }\n\n    const svgChildrenToElements = (element, elementIndex) => {\n        switch (element.type) {\n            case 'path':\n                return (\n                    <path key={elementIndex} d={element.d} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </path>\n                )\n            case 'g':\n                return (\n                    <g key={elementIndex} fill={element.fill}>\n                        {element.children.map((el: Element, index) =>\n                            svgChildrenToElements(el, index)\n                        )}\n                    </g>\n                )\n            default:\n                return\n        }\n    }\n\n    let result = null\n    if (props.icon) {\n        const objectSvg = svgStringToObj(props.icon)\n\n        result = (\n            <svg\n                data-testid={props.datatestid || 'svg'}\n                height={objectSvg.height}\n                width={objectSvg.width}\n                viewBox={objectSvg.viewBox}\n                className={props.className}\n            >\n                {objectSvg.children.map((element, index) =>\n                    svgChildrenToElements(element, index)\n                )}\n            </svg>\n        )\n    }\n    return result\n}\n\nexport default Svg\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport Button from 'antd/es/button'\nimport classes from './Auth.module.css'\nimport Svg from '../../components/Svg/Svg'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    let redirectParam = '&redirect=/login'\n    if (props.history.location.state) {\n        redirectParam = '&redirect=' + props.history.location.state.toString()\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://getreward.herokuapp.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    console.log(cookieConsent)\n    return (\n        <div className={classes.Container}>\n            {!cookieConsent ? (\n                <>\n                    <div>\n                        We use cookies only for login purposes. In order to\n                        proceed you need to agree with the use of cookies.\n                    </div>\n                    <Button onClick={agreeWithCookies}>Agree</Button>\n                    <Button\n                        onClick={() => {\n                            window.open('https://websiter.dev', '_self')\n                        }}\n                    >\n                        Return to the homepage\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <h1>Continue with:</h1>\n                    <div className={classes.socialButtons}>\n                        <a href={basicURL + `google/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#4285F4\" d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"></path></svg>' />\n                            <div>GOOGLE</div>\n                        </a>\n                        <a href={basicURL + `facebook/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1877F2\" d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg>' />\n                            <div>FACEBOOK</div>\n                        </a>\n                        {/* <a href={basicURL + `twitter/start${remeberMeParam}`}>\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg>' />\n                            <div>TWITTER</div>\n                        </a> */}\n                        <a\n                            href={\n                                basicURL +\n                                `github/start${remeberMeParam}&${redirectParam}`\n                            }\n                        >\n                            <Svg icon='<svg width=\"50\" height=\"50\" viewBox=\"0 0 16 16\"><path fill=\"#333\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\"></path></svg>' />\n                            <div>GITHUB</div>\n                        </a>\n                    </div>\n                    <Checkbox checked={state} onChange={() => setState(!state)}>\n                        Remember me\n                    </Checkbox>\n                </>\n            )}\n        </div>\n    )\n}\nexport default withRouter(Auth)\n","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Layout from 'antd/es/layout'\nimport Tooltip from 'antd/es/tooltip'\nimport Menu from 'antd/es/menu'\nimport Avatar from 'antd/es/avatar'\nimport Drawer from 'antd/es/drawer'\nimport Button from 'antd/es/button'\nimport * as classes from './Layout.module.css'\nimport AimOutlined from '@ant-design/icons/AimOutlined'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport UserOutlined from '@ant-design/icons/UserOutlined'\nimport HeartFilled from '@ant-design/icons/HeartFilled'\nimport RocketFilled from '@ant-design/icons/RocketFilled'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\nimport MenuOutlined from '@ant-design/icons/MenuOutlined'\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport ShopOutlined from '@ant-design/icons/ShopOutlined'\nimport PageHeader from 'antd/es/page-header'\nimport getAvatar from '../../utils/getAvatar'\nimport Account from '../../containers/Account/Account'\n\nconst { Header, Content } = Layout\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [menuVisible, setMenuVisible] = useState()\n\n    const toggleMenu = () => {\n        setMenuVisible(!menuVisible)\n    }\n    const selectedKey =\n        props.history.location.pathname.split('/')[1] || undefined\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        className: classes.Button,\n    }\n    const checkHighligh = url =>\n        selectedKey === url ? { ghost: false, type: 'primary' } : {}\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    return props.isAuthed ? (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            {!isActivating && (\n                                <Tooltip\n                                    title=\"Menu\"\n                                    placement=\"bottomLeft\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        icon={<MenuOutlined />}\n                                        onClick={toggleMenu}\n                                    />\n                                </Tooltip>\n                            )}\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {/* <Tooltip\n                                title=\"Dashboard\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('dashboard')}\n                                    icon={<HomeFilled />}\n                                    onClick={() => openLink('dashboard')}\n                                />\n                            </Tooltip> */}\n                            {!isActivating ? (\n                                <>\n                                    <Tooltip\n                                        title=\"Progresses\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('progresses')}\n                                            icon={<RocketFilled />}\n                                            onClick={() =>\n                                                openLink('progresses')\n                                            }\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Shop\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('shop')}\n                                            icon={<ShopOutlined />}\n                                            onClick={() => openLink('shop')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Friends\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <Button\n                                            {...buttonProps}\n                                            {...checkHighligh('friends')}\n                                            icon={<TeamOutlined />}\n                                            onClick={() => openLink('friends')}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip\n                                        title=\"Account\"\n                                        placement=\"bottomRight\"\n                                        mouseEnterDelay={0.3}\n                                    >\n                                        <span\n                                            onClick={() => openLink('account')}\n                                            style={{\n                                                margin: '0px 10px',\n                                                cursor: 'pointer',\n                                            }}\n                                        >\n                                            <Avatar\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.name\n                                                )}\n                                            />\n                                        </span>\n                                    </Tooltip>\n                                </>\n                            ) : (\n                                <Tooltip\n                                    title=\"Logout\"\n                                    placement=\"bottomRight\"\n                                    mouseEnterDelay={0.3}\n                                >\n                                    <Button\n                                        {...buttonProps}\n                                        {...checkHighligh('friends')}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        Logout\n                                    </Button>\n                                </Tooltip>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={\n                                isActivating\n                                    ? 'Activate your account'\n                                    : props.pageTitle && props.pageTitle.main\n                            }\n                            subTitle={\n                                (props.pageTitle && props.pageTitle.sub) || ''\n                            }\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n                {!isActivating && (\n                    <Drawer\n                        title=\"Menu\"\n                        closable={true}\n                        onClose={toggleMenu}\n                        visible={menuVisible}\n                        placement=\"left\"\n                    >\n                        <Menu\n                            theme=\"light\"\n                            mode=\"vertical\"\n                            selectedKeys={[selectedKey]}\n                            onClick={({ key }) => {\n                                props.history.push('/' + key)\n                                toggleMenu()\n                            }}\n                            overflowedIndicator={<MenuOutlined />}\n                        >\n                            {/* <Menu.Item key=\"dashboard\" icon={<HomeFilled />}>\n                            Dashboard\n                        </Menu.Item> */}\n                            <Menu.Item key=\"progresses\" icon={<RocketFilled />}>\n                                Progresses\n                            </Menu.Item>\n                            <Menu.Item key=\"goals\" icon={<AimOutlined />}>\n                                Goals\n                            </Menu.Item>\n                            <Menu.Item key=\"shop\" icon={<ShopOutlined />}>\n                                Shop\n                            </Menu.Item>\n                            <Menu.Item key=\"friends\" icon={<TeamOutlined />}>\n                                Friends\n                            </Menu.Item>\n                            <Menu.Item key=\"wishlist\" icon={<HeartFilled />}>\n                                Wishlist\n                            </Menu.Item>\n                            <Menu.Item key=\"account\" icon={<UserOutlined />}>\n                                Account\n                            </Menu.Item>\n                            <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                                Logout\n                            </Menu.Item>\n                        </Menu>\n                    </Drawer>\n                )}\n            </Layout>\n        </>\n    ) : ['/login', 'logout'].includes(props.history.location.pathname) ? (\n        props.children\n    ) : (\n        <>\n            <Layout className={classes.Layout}>\n                <Header className={classes.Header}>\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner} />\n                        <div className={classes.QuickButtonContiner}>\n                            <Tooltip\n                                title=\"Sign in or Sign up\"\n                                placement=\"bottomRight\"\n                                mouseEnterDelay={0.3}\n                            >\n                                <Button\n                                    {...buttonProps}\n                                    {...checkHighligh('friends')}\n                                    icon={<LogoutOutlined />}\n                                    onClick={() => props.history.push('/login')}\n                                >\n                                    Sign in or Sign up\n                                </Button>\n                            </Tooltip>\n                        </div>\n                    </div>\n                    <div className={classes.BottomHeader}>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            onBack={() => props.history.goBack()}\n                            title={props.title && props.title.main}\n                            subTitle={(props.title && props.title.sub) || ''}\n                        />\n                    </div>\n                </Header>\n                <Content className={classes.Main}>\n                    <div>{props.children}</div>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\nimport Cookies from 'universal-cookie'\nimport jwt from 'jsonwebtoken'\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = (props, forceLogin) => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    const token = cookies.get('auth_token')\n    const rememberMe = cookies.get('rememberme')\n    if (rememberMe) {\n        cookies.remove('rememberme', {\n            path: '/',\n        })\n        if (rememberMe === 'false') {\n            cookies.remove('auth_token', {\n                path: '/',\n            })\n        }\n    }\n    const userId = jwt.decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n        if (forceLogin) props.history.push('/login')\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data))\n            }\n        })\n        .catch(err => {})\n}\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, options, callback) => {\n    if (typeof props.isAuthed === 'undefined') return\n    options = {\n        forceAuth: true,\n        forceActivate: true,\n        pullData: true,\n        ...(options || {}),\n    }\n\n    if (!props.isAuthed) {\n        props.tryAuth(props, options.forceAuth)\n    }\n\n    if (options.pullData) {\n        axios\n            .get('/api' + props.history.location.pathname)\n            .then(res => {\n                processRes(res, props)\n                if (options.forceActivate) {\n                    if (props.isAuthed && res.data.status === 'no account') {\n                        props.history.push('/activate-account')\n                    }\n                }\n                props.setData(res.data)\n            })\n            .catch(err => {})\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: mimeType })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL()\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n\n    const rewardsGI = props.rewards.findIndex(\n        item => item.key === props.rewardKey\n    )\n\n    if (rewardsGI === -1)\n        props.setRewards([\n            ...props.rewards,\n            {\n                key: props.rewardKey,\n                rewards: [],\n            },\n        ])\n\n    return rewardsGI >= 0 ? (\n        <div>\n            <Form.Item label={props.label} key={props.rewardKey}>\n                <ol>\n                    {props.rewards[rewardsGI].rewards.map((item, index) => (\n                        <li>\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    setEditedRewardIndex(index)\n                                    setEditedReward(item)\n                                }}\n                            >\n                                <EditOutlined />\n                            </Button>\n                            <Button\n                                type=\"link\"\n                                onClick={() => {\n                                    const newRewards = [...props.rewards]\n                                    newRewards[rewardsGI] = {\n                                        ...newRewards[rewardsGI],\n                                        rewards: newRewards[\n                                            rewardsGI\n                                        ].rewards.filter(\n                                            (item, indexIn) => indexIn !== index\n                                        ),\n                                    }\n                                    props.setRewards(newRewards)\n                                }}\n                                danger={true}\n                            >\n                                <DeleteOutlined />\n                            </Button>\n                        </li>\n                    ))}\n                </ol>\n\n                <Button\n                    type=\"link\"\n                    onClick={() => {\n                        setEditedRewardIndex('new')\n                        setEditedReward({ mode: 'simple' })\n                    }}\n                >\n                    <PlusOutlined />\n                    Add rewards\n                </Button>\n            </Form.Item>\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                onCancel={() => setEditedReward()}\n                onOk={() => {\n                    const newRewards = [...props.rewards]\n\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    if (editedRewardIndex === 'new')\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: [\n                                ...newRewards[rewardsGI].rewards,\n                                rewardToSave,\n                            ],\n                        }\n                    else\n                        newRewards[rewardsGI] = {\n                            ...newRewards[rewardsGI],\n                            rewards: newRewards[rewardsGI].rewards.map(\n                                (item, index) => {\n                                    if (index === editedRewardIndex)\n                                        return rewardToSave\n                                    else return item\n                                }\n                            ),\n                        }\n                    props.setRewards(newRewards)\n                    setEditedReward()\n                    setEditedRewardIndex()\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form.Item label=\"Reward type\">\n                            <Select\n                                placeholder=\"Type\"\n                                value={editedReward.mode}\n                                onSelect={value =>\n                                    setEditedReward({\n                                        ...editedReward,\n                                        mode: value,\n                                    })\n                                }\n                                style={{ width: '100%' }}\n                            >\n                                <Select.Option key=\"simple\" value=\"simple\">\n                                    Simple reward\n                                </Select.Option>\n                                <Select.Option key=\"item\" value=\"item\">\n                                    Item reward\n                                </Select.Option>\n                                <Select.Option key=\"money\" value=\"money\">\n                                    Money reward\n                                </Select.Option>\n                            </Select>\n                        </Form.Item>\n                        <Divider type=\"horizontal\" />\n                        {editedReward.mode === 'simple' ? (\n                            <Form.Item label=\"Description\">\n                                <Input.TextArea\n                                    value={editedReward.simple}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            simple: value,\n                                        })\n                                    }\n                                    placeholder=\"Explain how you will reward\"\n                                />\n                            </Form.Item>\n                        ) : editedReward.mode === 'money' ? (\n                            <Form.Item label=\"Amount\">\n                                <InputNumber\n                                    value={editedReward.money}\n                                    onChange={value =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            money: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        ) : (\n                            <>\n                                <Form.Item label=\"Images\">\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        fileList={(\n                                            editedReward.itemImages || []\n                                        ).map((image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        }))}\n                                        onPreview={file => {\n                                            setPreviewImage(file.url)\n                                        }}\n                                        onChange={({ fileList }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemImages: fileList,\n                                            })\n                                        }\n                                        customRequest={({ file }) => {\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setEditedReward({\n                                                        ...editedReward,\n                                                        itemImages: [\n                                                            ...(editedReward.itemImages ||\n                                                                []),\n                                                            { url },\n                                                        ].map(\n                                                            (image, index) => ({\n                                                                ...image,\n                                                                uid: index,\n                                                            })\n                                                        ),\n                                                    })\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        {(editedReward.itemImages || [])\n                                            .length >= 8 ? null : (\n                                            <div>\n                                                <PlusOutlined />\n                                                <div className=\"ant-upload-text\">\n                                                    Upload\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Upload>\n                                    <Modal\n                                        visible={previewImage}\n                                        footer={null}\n                                        onCancel={() => setPreviewImage('')}\n                                    >\n                                        <img\n                                            alt=\"example\"\n                                            style={{ width: '100%' }}\n                                            src={previewImage}\n                                        />\n                                    </Modal>\n                                </Form.Item>\n                                <Form.Item label=\"Name\">\n                                    <Input\n                                        value={editedReward.itemName}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemName: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item label=\"Description\">\n                                    <Input.TextArea\n                                        value={editedReward.itemDescription}\n                                        onChange={({ target: { value } }) =>\n                                            setEditedReward({\n                                                ...editedReward,\n                                                itemDescription: value,\n                                            })\n                                        }\n                                    />\n                                </Form.Item>\n                            </>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default Rewards\n","import React from 'react'\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd'\n\n// import HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Tabs from 'antd/es/tabs'\n\nclass TabNode extends React.Component {\n    render() {\n        const { connectDragSource, connectDropTarget, children } = this.props\n\n        return connectDragSource(connectDropTarget(children))\n    }\n}\n\nconst cardTarget = {\n    drop(props, monitor) {\n        const dragKey = monitor.getItem().index\n        const hoverKey = props.index\n\n        if (dragKey === hoverKey) {\n            return\n        }\n\n        props.moveTabNode(dragKey, hoverKey)\n        monitor.getItem().index = hoverKey\n    },\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            index: props.index,\n        }\n    },\n}\n\nconst WrapTabNode = DropTarget('DND_NODE', cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget(),\n}))(\n    DragSource('DND_NODE', cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    }))(TabNode)\n)\n\nclass DraggableTabs extends React.Component {\n    state = {\n        order: [],\n    }\n\n    moveTabNode = (dragKey, hoverKey) => {\n        const newOrder = this.state.order.slice()\n        const { children } = this.props\n\n        React.Children.forEach(children, c => {\n            if (newOrder.indexOf(c.key) === -1) {\n                newOrder.push(c.key)\n            }\n        })\n\n        const dragIndex = newOrder.indexOf(dragKey)\n        const hoverIndex = newOrder.indexOf(hoverKey)\n\n        newOrder.splice(dragIndex, 1)\n        newOrder.splice(hoverIndex, 0, dragKey)\n\n        this.setState({\n            order: newOrder,\n        })\n    }\n\n    renderTabBar = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props}>\n            {node => (\n                <WrapTabNode\n                    key={node.key}\n                    index={node.key}\n                    moveTabNode={this.moveTabNode}\n                >\n                    {node}\n                </WrapTabNode>\n            )}\n        </DefaultTabBar>\n    )\n\n    render() {\n        const { order } = this.state\n        const { children } = this.props\n\n        const tabs = []\n        React.Children.forEach(children, c => {\n            tabs.push(c)\n        })\n\n        const orderTabs = tabs.slice().sort((a, b) => {\n            const orderA = order.indexOf(a.key)\n            const orderB = order.indexOf(b.key)\n\n            if (orderA !== -1 && orderB !== -1) {\n                return orderA - orderB\n            }\n            if (orderA !== -1) {\n                return -1\n            }\n            if (orderB !== -1) {\n                return 1\n            }\n\n            const ia = tabs.indexOf(a)\n            const ib = tabs.indexOf(b)\n\n            return ia - ib\n        })\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Tabs renderTabBar={this.renderTabBar} {...this.props}>\n                    {orderTabs}\n                </Tabs>\n            </DndProvider>\n        )\n    }\n}\n\nexport default DraggableTabs\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport List from 'antd/es/list'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport MinusCircleOutlined from '@ant-design/icons/MinusCircleOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport DraggableTabs from '../UI/DraggableTabs/DraggableTabs'\nimport Popconfirm from 'antd/es/popconfirm'\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, deleteGoal } = props\n\n    const [milestones, setMilestones] = useState(\n        (goal && goal.milestones) || [{ name: 'Milestone 1', key: 'mile1' }]\n    )\n\n    const [activeKey, setActiveKey] = useState('mile1')\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n    const [withMilestones, setWithMilestones] = useState(\n        goal && goal.withMilestones\n    )\n    const [previewImage, setPreviewImage] = useState('')\n    const [newTabIndex, setNewTabIndex] = useState(\n        (goal && goal.newTabIndex) || 2\n    )\n\n    const goalId = props.goalId || ''\n\n    const [rewards, setRewards] = useState((goal && goal.rewardsGroups) || [])\n\n    const onFinish = value => {\n        const milestonesValues = []\n        for (let milestone of milestones) {\n            milestonesValues.push({\n                ...value[milestone.key],\n                key: milestone.key,\n                name: milestone.name,\n            })\n        }\n\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            milestones,\n            milestonesValues,\n            newTabIndex,\n            rewardsGroups: rewards,\n        })\n    }\n\n    const onChange = aK => {\n        setActiveKey(aK)\n    }\n\n    const onEdit = (targetKey, action) => {\n        if (action === 'add') add(targetKey)\n        else remove(targetKey)\n    }\n\n    const add = () => {\n        const newPanes = [...milestones]\n        const newKey = `mile${newTabIndex}`\n        newPanes.push({ key: newKey, name: 'New milestone' })\n        setMilestones(newPanes)\n        setActiveKey(newKey)\n        setNewTabIndex(newTabIndex + 1)\n    }\n\n    const remove = targetKey => {\n        let newActiveKey = activeKey\n        let lastIndex\n        milestones.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1\n            }\n        })\n        const newPanes = milestones.filter(pane => pane.key !== targetKey)\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].key\n            } else {\n                newActiveKey = newPanes[0].key\n            }\n        }\n        setMilestones(newPanes)\n        setActiveKey(newActiveKey)\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connections = props.account.friendsData\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New goal',\n                        mile1: { name: 'Milestone 1', key: 'mile1' },\n                    }\n                }\n                {...layout}\n                onValuesChange={changedValues => {\n                    for (let attr in changedValues) {\n                        const index = milestones.findIndex(\n                            item => item.key === attr\n                        )\n\n                        if (index > -1) {\n                            if (changedValues[attr].name) {\n                                const newMilestones = [...milestones]\n                                newMilestones[index] = {\n                                    ...newMilestones[index],\n                                    name: changedValues[attr].name,\n                                }\n                                setMilestones(newMilestones)\n                            }\n                        }\n                        if (attr === 'withMilestones') {\n                            setWithMilestones(changedValues[attr])\n                        }\n                    }\n                }}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input the goal name.',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Description\" name=\"description\">\n                    <Input.TextArea placeholder=\"Write a few words about why this goal is important and how to achieve it.\" />\n                </Form.Item>\n\n                {props.isGoal && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n                <Form.Item label=\"Experts\" name=\"experts\">\n                    {connectionsSelect}\n                </Form.Item>\n                <Form.Item label=\"Supporters\" name=\"supporters\">\n                    {connectionsSelect}\n                </Form.Item>\n\n                <Rewards\n                    rewardKey=\"start\"\n                    label=\"Start rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Rewards\n                    rewardKey=\"finish\"\n                    label=\"Finish rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <Form.Item\n                    label=\"Milestones\"\n                    name=\"withMilestones\"\n                    valuePropName=\"checked\"\n                >\n                    <Switch />\n                </Form.Item>\n\n                {withMilestones && (\n                    <>\n                        <Divider>Milestones</Divider>\n\n                        <DraggableTabs\n                            tabPosition=\"left\"\n                            type=\"editable-card\"\n                            onChange={onChange}\n                            activeKey={activeKey || 'mile1'}\n                            onEdit={onEdit}\n                        >\n                            {milestones.map(milestone => (\n                                <Tabs.TabPane\n                                    tab={milestone.name}\n                                    key={milestone.key}\n                                >\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name={[milestone.key, 'name']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Missing name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Description\"\n                                        name={[milestone.key, 'description']}\n                                    >\n                                        <Input.TextArea placeholder=\"Write a few words about why this milestone is important and how to achieve it.\" />\n                                    </Form.Item>\n                                    <Rewards\n                                        rewardKey={milestone.key}\n                                        label=\"Rewards\"\n                                        rewards={rewards}\n                                        setRewards={setRewards}\n                                    />\n                                </Tabs.TabPane>\n                            ))}\n                        </DraggableTabs>\n                    </>\n                )}\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {goalId && props.isGoal && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deleteGoal}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\nimport processRes from '../../utils/processRes'\n\nconst AddGoal = props => {\n    const [goal, setGoal] = useState()\n    const { goalId, account } = props\n    if (!account._id) return null\n    useEffect(() => {\n        if (goalId)\n            axios\n                .get(`/api/goals/${account._id}/${goalId}`)\n                .then(res => {\n                    processRes(res, props)\n                    if (res.data.success) {\n                        const milestonesValues = {}\n                        for (let milestone of res.data.goal.milestonesValues) {\n                            milestonesValues[milestone.key] = milestone\n                        }\n                        const goal = { ...res.data.goal, ...milestonesValues }\n                        setGoal(goal)\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post('/api/goals/add', {\n                value,\n                id: goalId,\n            })\n            .then(res => {\n                processRes(res, props)\n                props.setData(res.data)\n            })\n            .catch(err => {})\n        props.setEditGoalOpen(false)\n    }\n\n    const deleteGoal = () => {\n        if (goalId) {\n            axios\n                .post('/api/goals/delete/' + goalId)\n                .then(res => {\n                    processRes(res, props)\n                    props.setData(res.data)\n                    props.setEditGoalOpen(false)\n                })\n                .catch(err => {})\n        }\n        props.setEditGoalOpen(false)\n    }\n\n    return !props.goalId || goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            deleteGoal={deleteGoal}\n            account={account}\n            isGoal={true}\n            goalId={goalId}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AddGoal)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport Card from 'antd/es/card'\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport RocketOutlined from '@ant-design/icons/RocketOutlined'\nimport TeamOutlined from '@ant-design/icons/TeamOutlined'\n\nimport Tooltip from 'antd/es/tooltip'\nimport processRes from '../../utils/processRes'\n\nconst GoalCard = withRouter(props => {\n    const startProgress = (goalId, ownerId, userId) => {\n        axios\n            .post('/api/progresses/add', { goalId, ownerId, userId })\n            .then(res => {\n                processRes(res)\n                props.history.push('/progresses')\n            })\n            .catch(err => {})\n    }\n\n    const {\n        goal,\n        owner,\n        available,\n        account,\n        setEditedGoal,\n        setEditGoalOpen,\n        setInviteGoal,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            '/goals/' + owner._id + '/' + goal.goalId\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (goal.images.length > 0 && goal.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        cursor: 'pointer',\n                    }}\n                />\n            }\n            actions={[\n                owner._id === account._id && setEditedGoal && (\n                    <Tooltip title=\"Edit\">\n                        <span\n                            key=\"1\"\n                            onClick={() => {\n                                setEditedGoal(goal.goalId)\n                                setEditGoalOpen(true)\n                            }}\n                        >\n                            <EditFilled style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                (available || owner._id === account._id) && (\n                    <Tooltip title=\"Start progress\">\n                        <span\n                            key=\"2\"\n                            onClick={() =>\n                                startProgress(\n                                    goal.goalId,\n                                    owner._id,\n                                    account._id\n                                )\n                            }\n                        >\n                            <RocketOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n                owner._id === account._id && setInviteGoal && (\n                    <Tooltip title=\"Invite friends\">\n                        <span\n                            type=\"link\"\n                            key=\"3\"\n                            onClick={() => {\n                                setInviteGoal(goal)\n                            }}\n                        >\n                            <TeamOutlined style={{ fontSize: '18px' }} />\n                        </span>\n                    </Tooltip>\n                ),\n            ]}\n        >\n            <Card.Meta\n                title={\n                    <span\n                        onClick={() =>\n                            props.history.push(\n                                '/goals/' + owner._id + '/' + goal.goalId\n                            )\n                        }\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {goal.name}\n                    </span>\n                }\n            />\n        </Card>\n    )\n})\n\nexport default withRouter(GoalCard)\n","import React from 'react'\nimport Card from 'antd/es/card'\nimport Tooltip from 'antd/es/tooltip'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Meta from 'antd/es/card/Meta'\n\nconst AddCard = props => (\n    <span onClick={props.action}>\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    style={{\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    onClick={props.action}\n                >\n                    <PlusCircleOutlined\n                        style={{\n                            fontSize: '60px',\n                        }}\n                    />\n                </div>\n            }\n            actions={[\n                <Tooltip title=\"Add goal\">\n                    <span key=\"3\" onClick={props.action}>\n                        <PlusCircleOutlined style={{ fontSize: '18px' }} />\n                    </span>\n                </Tooltip>,\n            ]}\n        >\n            <Meta\n                title={\n                    <span onClick={props.action} style={{ cursor: 'pointer' }}>\n                        {props.title}\n                    </span>\n                }\n                description={typeof props.sub !== 'undefined' && props.sub}\n            />\n        </Card>\n    </span>\n)\n\nexport default AddCard\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddGoal from './AddGoal'\nimport Avatar from 'antd/es/avatar'\nimport GoalCard from './GoalCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst { TabPane } = Tabs\n\nconst Goals = props => {\n    const [editedGoal, setEditedGoal] = useState('')\n    const [editGoalOpen, setEditGoalOpen] = useState(false)\n    const [inviteGoal, setInviteGoal] = useState(false)\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Goals', sub: '' })\n    }, [])\n\n    const { account } = props\n    if (!account._id) return null\n\n    const editGoal = (\n        <Modal\n            title=\"Add goal\"\n            visible={editGoalOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditGoalOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditGoalOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddGoal setEditGoalOpen={setEditGoalOpen} goalId={editedGoal} />\n        </Modal>\n    )\n    const inviteToGoalModal = account && (\n        <Modal\n            title=\"Invite friends to work on your goal\"\n            visible={inviteGoal}\n            maskClosable\n            closable\n            onCancel={() => setInviteGoal(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setInviteGoal(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            {account.friendsData &&\n                account.friendsData\n                    .filter(\n                        friend =>\n                            !(\n                                inviteGoal.progresses &&\n                                inviteGoal.progresses.find(\n                                    item => item.user === friend._id\n                                )\n                            )\n                    )\n                    .map((friend, index) => (\n                        <div key={index}>\n                            <span\n                                style={{ cursor: 'pointer' }}\n                                onClick={() =>\n                                    props.history.push('/profile/' + friend._id)\n                                }\n                            >\n                                <Avatar\n                                    src={\n                                        'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                        friend._id +\n                                        '/avatar'\n                                    }\n                                    size={20}\n                                />\n                                {friend.name} - ({friend._id})\n                            </span>\n                            <Button\n                                onClick={() =>\n                                    startProgress(\n                                        inviteGoal.goalId,\n                                        account._id,\n                                        friend._id\n                                    )\n                                }\n                            >\n                                Invite\n                            </Button>\n                        </div>\n                    ))}\n        </Modal>\n    )\n\n    return account ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"My goals\" key=\"1\">\n                    <AddCard\n                        action={() => {\n                            setEditedGoal('')\n                            setEditGoalOpen(true)\n                        }}\n                        title=\"Add goal\"\n                    />\n\n                    {account.goals &&\n                        account.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={account}\n                                account={account}\n                                setEditedGoal={setEditedGoal}\n                                setEditGoalOpen={setEditGoalOpen}\n                                setInviteGoal={setInviteGoal}\n                            />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Available goals\" key=\"2\">\n                    {account.friendsData &&\n                        [account, ...account.friendsData].map(\n                            (friend, indexG) =>\n                                friend.goals.map((goal, index) =>\n                                    goal.users.includes(account._id) ||\n                                    friend._id === account._id ? (\n                                        <GoalCard\n                                            key={indexG + '_' + index}\n                                            goal={goal}\n                                            owner={friend}\n                                            available={goal.users.includes(\n                                                account._id\n                                            )}\n                                            account={account}\n                                            setEditedGoal={setEditedGoal}\n                                            setEditGoalOpen={setEditGoalOpen}\n                                            setInviteGoal={setInviteGoal}\n                                        />\n                                    ) : null\n                                )\n                        )}\n                </TabPane>\n                <TabPane tab=\"My friends' goals\" key=\"3\">\n                    {account.friendsData &&\n                        account.friendsData.map((friend, indexG) =>\n                            friend.goals.map((goal, index) => (\n                                <GoalCard\n                                    key={indexG + '_' + index}\n                                    goal={goal}\n                                    owner={friend}\n                                    available={goal.users.includes(account._id)}\n                                    account={account}\n                                    setEditedGoal={setEditedGoal}\n                                    setEditGoalOpen={setEditGoalOpen}\n                                    setInviteGoal={setInviteGoal}\n                                />\n                            ))\n                        )}\n                </TabPane>\n            </Tabs>\n            {editGoal}\n            {inviteToGoalModal}\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goals)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\n\nconst { Item } = Descriptions\n\nconst RewardsView = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n\n    const rewardsGroup = props.goal.rewardsGroups.find(\n        item => item.key === props.groupKey\n    )\n    return rewardsGroup ? (\n        <>\n            <ol style={{ padding: 0 }}>\n                {rewardsGroup.rewards.map((item, index) => (\n                    <li key={index}>\n                        <Button\n                            type=\"link\"\n                            onClick={() => setPreviewReward(item)}\n                        >\n                            {item.mode === 'simple'\n                                ? item.simple\n                                : item.mode === 'money'\n                                ? item.money\n                                : item.mode === 'item'\n                                ? item.itemName\n                                : ''}\n                        </Button>\n                    </li>\n                ))}\n            </ol>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => setPreviewReward()}\n                title=\"Reward details\"\n            >\n                {previewReward ? (\n                    <>\n                        {previewReward.itemImages &&\n                            previewReward.itemImages.map((image, index) => (\n                                <span\n                                    key={index}\n                                    onClick={() => setPreviewImage(image)}\n                                >\n                                    <Card\n                                        type=\"inner\"\n                                        style={{\n                                            width: 200,\n                                            display: 'inline-block',\n                                        }}\n                                        hoverable\n                                        cover={\n                                            <div\n                                                style={{\n                                                    backgroundImage:\n                                                        'url(' + image + ')',\n                                                    height: 200,\n                                                    width: 200,\n                                                    backgroundSize: 'cover',\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </span>\n                            ))}\n\n                        <Descriptions\n                            title=\"Reward description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Name\">\n                                    {previewReward.itemName}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'item' && (\n                                <Item label=\"Description\">\n                                    {previewReward.itemDescription}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'simple' && (\n                                <Item label=\"Description\">\n                                    {previewReward.simple}\n                                </Item>\n                            )}\n                            {previewReward.mode === 'money' && (\n                                <Item label=\"Money\">{previewReward.money}</Item>\n                            )}\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(RewardsView)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst { Item } = Descriptions\n\nconst Goal = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { goal, profile } = props\n    console.log(goal)\n    if (goal) {\n        props.setPageTitle({ main: goal.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map((item, index) => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            key={index}\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    item +\n                                    '/avatar'\n                                }\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n    if (goal && props.setTitle) {\n        props.setTitle({ main: goal.name, sub: goal.owner })\n    }\n    return goal ? (\n        <Card>\n            {goal.images.map((image, index) => (\n                <span key={index} onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal details\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Users\">{getAccounts(goal.users)}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"Total price\">{goal.totalPrice}</Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            {goal.withMilestones && (\n                <>\n                    <Divider>Milestones</Divider>\n\n                    <Tabs tabPosition=\"left\">\n                        {goal.milestones.map(milestone => (\n                            <Tabs.TabPane\n                                tab={milestone.name}\n                                key={milestone.key}\n                            >\n                                <h2>{milestone.name}</h2>\n                                <p>{milestone.description}</p>\n                                <Descriptions\n                                    title=\"Milestone description\"\n                                    bordered\n                                    column={{\n                                        xxl: 4,\n                                        xl: 3,\n                                        lg: 3,\n                                        md: 3,\n                                        sm: 2,\n                                        xs: 1,\n                                    }}\n                                >\n                                    <Item label=\"Rewards\">\n                                        <RewardsView\n                                            groupKey={milestone.key}\n                                            goal={goal}\n                                        />\n                                    </Item>\n                                </Descriptions>\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                </>\n            )}\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        goal: state.goal,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Goal)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\n\nconst { Meta } = Card\n\nconst ProgressCard = props => {\n    const { progress } = props\n    const { goal } = progress\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            onClick={() => props.history.push('/progresses/' + progress._id)}\n        >\n            <Card\n                type=\"inner\"\n                style={{\n                    width: 200,\n                }}\n                hoverable\n                cover={\n                    <div\n                        onClick={() =>\n                            props.history.push('/progresses/' + progress._id)\n                        }\n                        style={{\n                            backgroundImage:\n                                goal &&\n                                'url(' +\n                                    (goal.images.length > 0 && goal.images[0]) +\n                                    ')',\n                            height: 200,\n                            width: 200,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                }\n            >\n                {goal && (\n                    <>\n                        <Meta title={goal.name} />\n                        <Meta\n                            title={'Made by ' + progress.worker}\n                            description={'In goal by ' + progress.owner}\n                        />\n                    </>\n                )}\n            </Card>\n        </div>\n    )\n}\n\nexport default withRouter(ProgressCard)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Button from 'antd/es/button'\nimport Empty from 'antd/es/empty'\nimport ProgressCard from './ProgressCard'\n\nconst { TabPane } = Tabs\n\nconst Progresses = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Progresses', sub: '' })\n    }, [])\n\n    const { account } = props\n    const { progressesData } = account\n\n    return account && account.progresses && account.progresses.length > 0 ? (\n        <>\n            <Tabs\n                style={{\n                    background: 'transparent',\n                    boxShadow: 'none',\n                    margin: '0',\n                    marginTop: '-15px',\n                }}\n            >\n                <TabPane tab=\"All roles\" key=\"1\">\n                    {progressesData &&\n                        progressesData.map((progress, index) => (\n                            <ProgressCard key={index} progress={progress} />\n                        ))}\n                </TabPane>\n                <TabPane tab=\"Achiever\" key=\"2\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.worker === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Motivator\" key=\"3\">\n                    {progressesData &&\n                        progressesData\n                            .filter(progress => progress.owner === account._id)\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Expert\" key=\"4\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.experts.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.experts.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n                <TabPane tab=\"Supporter\" key=\"5\">\n                    {progressesData &&\n                        progressesData\n                            .filter(\n                                progress =>\n                                    progress.goal &&\n                                    (progress.goal.supporters.includes(\n                                        account._id\n                                    ) ||\n                                        progress.goal.milestonesValues.find(\n                                            milestone =>\n                                                milestone.supporters.includes(\n                                                    account._id\n                                                )\n                                        ))\n                            )\n                            .map((progress, index) => (\n                                <ProgressCard key={index} progress={progress} />\n                            ))}\n                </TabPane>\n            </Tabs>\n        </>\n    ) : (\n        <Empty\n            imageStyle={{\n                height: 160,\n            }}\n            description={\n                <span>\n                    Here you will find your progresses.\n                    <br /> First create an important goal and start a progress.\n                </span>\n            }\n        >\n            <Button type=\"primary\" onClick={() => props.history.push('/goals')}>\n                Create my first goal\n            </Button>\n        </Empty>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport * as wsActions from '../../websocketActions'\nimport cloneDeep from 'lodash.clonedeep'\nconst diffpatcher = require('jsondiffpatch/dist/jsondiffpatch.umd.js').create({\n    propertyFilter: (name, context) => name !== 'patch',\n})\n\nexport let webSocket = false\n\nclass ReserveWebsite extends Component {\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://getreward.herokuapp.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = () => {\n            clearTimeout(pingTimeout)\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    progressId: this.props.progress._id,\n                })\n            )\n            heartbeat()\n        }\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat()\n                    break\n                case 'logout':\n                    this.props.logout()\n                    break\n                case 'messageSaved':\n                    this.props.setState({\n                        ...this.props.state,\n                        messageValue: '',\n                    })\n                    break\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/progresses')\n                    break\n                case 'update':\n                    let newProgress\n                    let oldProgress = cloneDeep(this.props.progress)\n                    if (oldProgress.__v === news.progress.__v - 1) {\n                        newProgress = diffpatcher.patch(\n                            oldProgress,\n                            news.progress.patch\n                        )\n                        newProgress.__v = news.progress.__v\n                        this.props.setData({\n                            progress: newProgress,\n                        })\n                    }\n                    wsActions.getFriendsData(\n                        newProgress || this.props.progress,\n                        this.props.account.friends\n                    )\n                    break\n                case 'error':\n                    message.error(news.text)\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n    }\n\n    render() {\n        return <span />\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progress: state.progress,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ReserveWebsite)\n)\n","import { webSocket } from '../containers/ProgressWebsocket/ProgressWebsocket'\n\nexport const sendMessage = (state, data, imageUrl) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue: state.messageValue,\n                editedMessage: state.editedMessage,\n                replyToMessage: state.replyToMessage,\n                imageUrl,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (data, messageCode, messageId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const changeStage = (data, value, milestoneId) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                milestoneId,\n                value,\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...progress.goal.supporters,\n                ...progress.goal.experts,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState !== 3) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport DislikeFilled from '@ant-design/icons/DislikeFilled'\nimport DislikeOutlined from '@ant-design/icons/DislikeOutlined'\nimport Card from 'antd/es/card'\n\nconst ProgressMessage = props => {\n    const { account, state, setState, message } = props\n\n    const changeLikes = (type, messageId) => {\n        wsActions.changeLikesMessage(props, type, messageId)\n    }\n    return (\n        <Card>\n            <Comment\n                actions={[\n                    <span key=\"comment-basic-like\">\n                        <Tooltip title=\"Like\">\n                            {message.likes.includes(account._id) ? (\n                                <LikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeLikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <LikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'likeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.likes.length}\n                        </span>\n                    </span>,\n                    <span key=\"comment-basic-dislike\">\n                        <Tooltip title=\"Dislike\">\n                            {message.dislikes.includes(account._id) ? (\n                                <DislikeFilled\n                                    onClick={() =>\n                                        changeLikes(\n                                            'removeDislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            ) : (\n                                <DislikeOutlined\n                                    onClick={() =>\n                                        changeLikes(\n                                            'dislikeMessage',\n                                            message.messageId\n                                        )\n                                    }\n                                />\n                            )}\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px' }}>\n                            {message.dislikes.length}\n                        </span>\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                replyToMessage: message.messageId,\n                                editedMessage: '',\n                            })\n                        }}\n                    >\n                        Reply to\n                    </span>,\n                    <span\n                        key=\"comment-basic-reply-to\"\n                        onClick={() => {\n                            setState({\n                                ...state,\n                                messageValue: message.text,\n                                editedMessage: message.messageId,\n                                replyToMessage: '',\n                            })\n                        }}\n                    >\n                        Edit\n                    </span>,\n                ]}\n                author={\n                    <a>\n                        {account.friendsData.find(\n                            item => item._id === message.author\n                        ).name +\n                            ' (' +\n                            message.author +\n                            ')'}\n                    </a>\n                }\n                avatar={\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            message.author +\n                            '/avatar'\n                        }\n                    />\n                }\n                content={\n                    message.action === 'message' ? (\n                        <p>{message.text}</p>\n                    ) : message.action === 'image' ? (\n                        <div\n                            style={{\n                                backgroundImage: 'url(' + message.text + ')',\n                                width: '200px',\n                                height: '200px',\n                                backgroundSize: 'cover',\n                                cursor: 'pointer',\n                            }}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    previewImage: message.text,\n                                })\n                            }\n                        />\n                    ) : null\n                }\n                datetime={\n                    <span>\n                        <TimeAgo datetime={message.date} live />\n                    </span>\n                }\n            >\n                {props.children}\n            </Comment>\n        </Card>\n    )\n}\n\nexport default withRouter(ProgressMessage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureOutlined from '@ant-design/icons/PictureOutlined'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as classes from './Messages.module.css'\nimport * as wsActions from '../../websocketActions'\nimport ProgressMessage from './ProgressMessage'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Messages = props => {\n    const [imageLoading, setImageLoading] = useState(false)\n    const { state, setState, progress, account } = props\n    const { goal } = progress\n    const messagesEndRef = useRef(null)\n\n    useEffect(() => {\n        if (messagesEndRef && messagesEndRef.current)\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [progress.messages.length])\n    const getMessages = messages =>\n        messages && messages.length\n            ? [\n                  ...messages.map((message, index) => (\n                      <ProgressMessage\n                          key={index}\n                          message={message}\n                          progress={progress}\n                          account={account}\n                          state={state}\n                          setState={setState}\n                      >\n                          {getMessages(message.replies)}\n                      </ProgressMessage>\n                  )),\n                  <div key=\"-1\" ref={messagesEndRef} />,\n              ]\n            : null\n\n    return goal ? (\n        <>\n            <div\n                style={{\n                    textAlign: 'left',\n                    marginBottom: '200px',\n                }}\n                className={classes.Messages}\n            >\n                {getMessages(progress.messages)}\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: '0px',\n                        width: '100%',\n                        background: '#fff',\n                        left: '0px',\n                        padding: '0px 10px',\n                        boxShadow:\n                            '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 -1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2)',\n                    }}\n                >\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src={getAvatar(account._id, account.image)}\n                            />\n                        }\n                        content={\n                            <>\n                                {state.editedMessage && (\n                                    <>\n                                        <span>Editing message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                    messageValue: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel editing\n                                        </Button>\n                                    </>\n                                )}\n                                {state.replyToMessage && (\n                                    <>\n                                        <span>Commenting message</span>\n                                        <Button\n                                            type=\"link\"\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    replyToMessage: '',\n                                                    editedMessage: '',\n                                                })\n                                            }}\n                                        >\n                                            Cancel commenting\n                                        </Button>\n                                    </>\n                                )}\n                                <Form.Item>\n                                    <Input.TextArea\n                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                        rows={1}\n                                        onChange={e =>\n                                            setState({\n                                                ...state,\n                                                messageValue: e.target.value,\n                                            })\n                                        }\n                                        value={state.messageValue}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        htmlType=\"submit\"\n                                        onClick={() =>\n                                            wsActions.sendMessage(state, props)\n                                        }\n                                        icon={<SendOutlined />}\n                                        size=\"large\"\n                                        type=\"link\"\n                                    />\n                                    <Upload\n                                        showUploadList={false}\n                                        customRequest={({ file }) => {\n                                            setImageLoading(true)\n                                            uploadFile(\n                                                file,\n                                                800,\n                                                undefined,\n                                                url => {\n                                                    setImageLoading(false)\n                                                    wsActions.sendMessage(\n                                                        state,\n                                                        props,\n                                                        url\n                                                    )\n                                                }\n                                            )\n                                        }}\n                                    >\n                                        <Button\n                                            size=\"large\"\n                                            type=\"link\"\n                                            icon={\n                                                imageLoading ? (\n                                                    <LoadingOutlined />\n                                                ) : (\n                                                    <PictureOutlined />\n                                                )\n                                            }\n                                        />\n                                    </Upload>\n\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={() =>\n                                            setState({\n                                                ...state,\n                                                activityOpen: true,\n                                            })\n                                        }\n                                    >\n                                        Activity and settings\n                                    </Button>\n                                </Form.Item>\n                            </>\n                        }\n                    />\n                </div>\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Messages)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Checkbox from 'antd/es/checkbox'\nimport Modal from 'antd/es/modal'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nconst { Item } = Descriptions\n\nconst ActivityTable = props => {\n    const { progress, account, state, setState } = props\n    const { goal } = progress\n\n    const renderCheckbox = ({ checked, milestoneId }) => (\n        <Checkbox\n            checked={checked}\n            onChange={e =>\n                wsActions.changeStage(props, e.target.checked, milestoneId)\n            }\n        />\n    )\n\n    const columns = [\n        {\n            title: 'Milestone',\n            dataIndex: 'name',\n            key: 'name',\n            render: milestone => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        setState({ ...state, previewMilestone: milestone })\n                    }\n                >\n                    {milestone.name}\n                </Button>\n            ),\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <div>{status ? 'Paid:' : 'Not finished'}</div>\n                    {status && (\n                        <RewardsView\n                            goal={{\n                                rewardsGroups: [{ rewards: status, key: 1 }],\n                            }}\n                            groupKey={1}\n                        />\n                    )}\n                </>\n            ),\n        },\n        {\n            title: 'Worker',\n            dataIndex: 'worker',\n            key: 'worker',\n            render: renderCheckbox,\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            render: renderCheckbox,\n        },\n        ...goal.experts.map(expert => ({\n            title: expert,\n            dataIndex: expert,\n            key: expert,\n            render: renderCheckbox,\n        })),\n    ]\n\n    const getCheckboxStatus = (id, stage, milestone) => {\n        return {\n            checked: stage.approvedBy.find(item => item.accountId === id),\n            milestoneId: milestone.key,\n        }\n    }\n\n    const startStage = progress.stages.find(\n        stage => stage.milestoneId === 'start'\n    ) || { approvedBy: [] }\n\n    const startExperts = {}\n    for (let expert of goal.experts) {\n        startExperts[expert] = getCheckboxStatus(expert, startStage, {\n            key: 'start',\n        })\n    }\n\n    const startData = {\n        key: 'start',\n        name: {\n            name: 'Start',\n            description:\n                'At this stage owner and user should agree to start this progress.',\n            key: 'start',\n        },\n        price: progress.startPrice,\n        status: startStage.paid,\n        worker: getCheckboxStatus(progress.worker, startStage, {\n            key: 'start',\n        }),\n        owner: getCheckboxStatus(progress.owner, startStage, {\n            key: 'start',\n        }),\n        ...startExperts,\n    }\n\n    const finishStage = progress.stages.find(\n        stage => stage.milestoneId === 'finish'\n    ) || { approvedBy: [] }\n\n    const finishExperts = {}\n    for (let expert of goal.experts) {\n        finishExperts[expert] = getCheckboxStatus(expert, finishStage, {\n            key: 'finish',\n        })\n    }\n\n    const finishData = {\n        key: 'finish',\n        name: {\n            name: 'Finish',\n            description:\n                'At this stage owner and user should agree to finish this progress.',\n            key: 'finish',\n        },\n        price: progress.price,\n        status: finishStage.paid,\n        worker: getCheckboxStatus(progress.worker, finishStage, {\n            key: 'finish',\n        }),\n        owner: getCheckboxStatus(progress.owner, finishStage, {\n            key: 'finish',\n        }),\n        ...finishExperts,\n    }\n\n    const milestonesData = [\n        startData,\n        ...goal.milestonesValues.map((milestone, index) => {\n            const stage = progress.stages.find(\n                stage => stage.milestoneId === milestone.key\n            ) || { approvedBy: [] }\n\n            const experts = {}\n            for (let expert of goal.experts) {\n                experts[expert] = getCheckboxStatus(expert, stage, milestone)\n            }\n            return {\n                key: index,\n                name: milestone,\n                price: milestone.price,\n                status: stage.paid,\n                worker: getCheckboxStatus(progress.worker, stage, milestone),\n                owner: getCheckboxStatus(progress.owner, stage, milestone),\n                ...experts,\n            }\n        }),\n        finishData,\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={milestonesData} />\n            <Modal\n                visible={state.previewMilestone}\n                footer={null}\n                onCancel={() => setState({ ...state, previewMilestone: '' })}\n                closable={true}\n            >\n                {state.previewMilestone ? (\n                    <>\n                        <h2>{state.previewMilestone.name}</h2>\n                        <p>{state.previewMilestone.description}</p>\n                        <Descriptions\n                            title=\"Milestone description\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Item label=\"Rewards\">\n                                <RewardsView\n                                    groupKey={state.previewMilestone.key}\n                                    goal={goal}\n                                />\n                            </Item>\n                        </Descriptions>\n                    </>\n                ) : null}\n            </Modal>\n        </>\n    )\n}\nexport default ActivityTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport Tabs from 'antd/es/tabs'\nimport Divider from 'antd/es/divider'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport Avatar from 'antd/es/avatar'\nimport DraggableTabs from '../../components/UI/DraggableTabs/DraggableTabs'\nimport { uploadFile } from '../../utils/uploadFile'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState } = props\n\n    const milestonesValues = {}\n    for (let milestone of progress.goal.milestonesValues) {\n        milestonesValues[milestone.key] = milestone\n    }\n    const goal = { ...progress.goal, ...milestonesValues }\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n    }\n\n    return goal ? (\n        <EditGoalAndProgressForm\n            goal={goal}\n            onFinish={onFinish}\n            account={account}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport PageHeader from 'antd/es/page-header'\nimport Divider from 'antd/es/divider'\nimport Modal from 'antd/es/modal'\nimport Tooltip from 'antd/es/tooltip'\nimport Avatar from 'antd/es/avatar'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\nimport RewardsView from '../../components/RewardsView/RewardsView'\n\nconst Activity = props => {\n    const { account, progress, state, setState } = props\n    const { goal } = progress\n    return goal ? (\n        <>\n            {goal.images.map((image, index) => (\n                <span\n                    key={index}\n                    onClick={() =>\n                        setState({\n                            ...state,\n                            previewImage: image,\n                        })\n                    }\n                >\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{goal.name}</h1>\n\n            <p>{goal.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Status\">{progress.status}</Item>\n                <Item label=\"Worker\">{progress.worker}</Item>\n                <Item label=\"Owner\">{progress.owner}</Item>\n                <Item label=\"Supporters\">{goal.supporters}</Item>\n                <Item label=\"Experts\">{goal.experts}</Item>\n                <Item label=\"Start reward\">\n                    <RewardsView groupKey=\"start\" goal={goal} />\n                </Item>\n                <Item label=\"Finish reward\">\n                    <RewardsView groupKey=\"finish\" goal={goal} />\n                </Item>\n                <Item label=\"With milestones\">\n                    {goal.withMilestones ? 'Yes' : 'No'}\n                </Item>\n            </Descriptions>\n            <Divider orientation=\"center\" type=\"horizontal\">\n                Milestones\n            </Divider>\n            <ActivityTable\n                progress={progress}\n                account={account}\n                state={state}\n                setState={setState}\n            />\n            <Button\n                style={{ margin: '0px 20px 50px 0px' }}\n                type=\"primary\"\n                onClick={() => {\n                    setState({ ...state, editProgressOpen: true })\n                }}\n            >\n                Edit progress\n            </Button>\n            <Button\n                danger={true}\n                onClick={() => {\n                    wsActions.leaveProgress(props)\n                }}\n            >\n                Leave the progress\n            </Button>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => setState({ ...state, editProgressOpen: false })}\n                closable={true}\n                destroyOnClose={true}\n                width=\"80%\"\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport pullData from '../../utils/pullData'\n\nimport Modal from 'antd/es/modal'\nimport Drawer from 'antd/es/drawer'\nimport Messages from './Messages'\nimport Activity from './Activity'\nimport ProgressWebsocket from '../ProgressWebsocket/ProgressWebsocket'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { progress, account, profile } = props\n\n    if (!progress) return null\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal ? (\n        <>\n            {account && <ProgressWebsocket state={state} setState={setState} />}\n\n            <Messages\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n            />\n\n            <Drawer\n                title=\"Progress activity and settings\"\n                placement=\"right\"\n                closable={true}\n                onClose={() => setState({ ...state, activityOpen: false })}\n                visible={state.activityOpen}\n                width={'100%'}\n            >\n                <Activity\n                    state={state}\n                    setState={setState}\n                    progress={progress}\n                    account={account}\n                />\n            </Drawer>\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => setState({ ...state, previewImage: '' })}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        progress: state.progress,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport PlusCircleOutlined from '@ant-design/icons/PlusCircleOutlined'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\n\nconst { Meta } = Card\n\nconst Wallet = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Wallet' })\n    return (\n        props.account.wallet &&\n        props.account.wallet.map((money, index) => (\n            <div\n                onClick={() => props.history.push('/profile/' + money.user)}\n                style={{ display: 'inline-block', margin: '4px 8px' }}\n            >\n                <Card\n                    key={index}\n                    type=\"inner\"\n                    style={{\n                        width: 200,\n                    }}\n                    cover={\n                        <span style={{ padding: '25px' }}>\n                            <Avatar\n                                src={\n                                    'https://websiter.s3.us-east-2.amazonaws.com/' +\n                                    money.user +\n                                    '/avatar'\n                                }\n                                size={150}\n                            />\n                        </span>\n                    }\n                    hoverable\n                    actions={[\n                        <Button key=\"1\" icon={<PlusCircleOutlined />}>\n                            Go to the shop\n                        </Button>,\n                    ]}\n                >\n                    <Meta title={money.user} description={money.amount} />\n                </Card>\n            </div>\n        ))\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wallet)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Table from 'antd/es/table'\nimport Tag from 'antd/es/tag'\nimport RewardsView from '../../components/RewardsView/RewardsView'\nimport TimeAgo from 'timeago-react'\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account } = props\n    if (!account) return null\n    const { transactionsData, friendsData } = account\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendsData.find(item => item._id === user)\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <RewardsView\n                        goal={{\n                            rewardsGroups: [{ rewards: [perk], key: 1 }],\n                        }}\n                        groupKey={1}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/progresses/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    props.cancelTransaction(record.transaction._id, props)\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        props.confirmTransaction(\n                                            record.transaction._id, props\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactionsData]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return (\n        <Card>\n            <Table columns={columns} dataSource={tableData} />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        cancelTransaction: (id, props) =>\n            dispatch(actions.cancelTransaction(id, props)),\n        confirmTransaction: (id, props) =>\n            dispatch(actions.confirmTransaction(id, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport Popconfirm from 'antd/es/popconfirm'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perkId,\n        perk,\n        deletePerk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={\n                            'https://websiter.s3.us-east-2.amazonaws.com/' +\n                            item._id +\n                            '/avatar'\n                        }\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            min: 1,\n                            max: 100,\n                            message: 'Please input the item name.',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            max: 500,\n                            message: 'Please input the item description.',\n                        },\n                    ]}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item\n                        label=\"Price\"\n                        name=\"price\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the item price.',\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n\n                    {perkId && (\n                        <Popconfirm\n                            title=\"Are you sure you want to delete this item?\"\n                            onConfirm={deletePerk}\n                            onCancel={() => {}}\n                            okText=\"Confirm\"\n                            cancelText=\"Cancel\"\n                        >\n                            <Button type=\"link\" danger size=\"large\">\n                                Delete\n                            </Button>\n                        </Popconfirm>\n                    )}\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport processRes from '../../utils/processRes'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId)\n            axios\n                .get(`/api/${mode || 'shop'}/${account._id}/${perkId}`)\n                .then(res => {\n                    if (res.data.success) {\n                        console.log(res.data)\n                        const perk =\n                            mode === 'wishlist'\n                                ? res.data.wishlistItem\n                                : res.data.perk\n                        setPerk(perk)\n                        setImages(\n                            perk.images.map((url, index) => ({\n                                url,\n                                uid: index,\n                            }))\n                        )\n                    }\n                })\n                .catch(err => {})\n    }, [])\n\n    const onFinish = value => {\n        axios\n            .post(`/api/${mode || 'shop'}/add`, {\n                value: { ...value, images: images.map(image => image.url) },\n                id: perkId,\n            })\n            .then(res => {\n                processRes(res, props)\n                props.setEditPerkOpen(false)\n                props.setData(res.data)\n            })\n            .catch(err => {})\n    }\n\n    const deletePerk = () => {\n        if (perkId) {\n            axios\n                .post(`/api/${mode || 'shop'}/delete/${perkId}`)\n                .then(res => {\n                    processRes(res, props)\n                    props.setData(res.data)\n                })\n                .catch(err => {})\n        }\n        props.setEditPerkOpen(false)\n    }\n\n    const connections = account.friendsData || []\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perkId={perkId}\n            perk={perk}\n            deletePerk={deletePerk}\n            onFinish={onFinish}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AddPerk)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\n\nimport EditFilled from '@ant-design/icons/EditFilled'\nimport Tooltip from 'antd/es/tooltip'\nimport DollarCircleOutlined from '@ant-design/icons/DollarCircleOutlined'\n\nconst { Meta } = Card\n\nconst PerkCard = props => {\n    const {\n        perk,\n        perkId,\n        owner,\n        account,\n        setEditedPerk,\n        setEditPerkOpen,\n        mode,\n    } = props\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{\n                width: 200,\n                display: 'inline-block',\n                margin: '4px 8px',\n            }}\n            hoverable\n            cover={\n                <div\n                    onClick={() =>\n                        props.history.push(\n                            `/${mode || 'shop'}/${owner._id}/${perkId}`\n                        )\n                    }\n                    style={{\n                        backgroundImage:\n                            'url(' +\n                            (perk.images.length > 0 && perk.images[0]) +\n                            ')',\n                        height: 200,\n                        width: 200,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            }\n            actions={[\n                ...(owner._id === account._id && !props.onlyBuy\n                    ? [\n                          <Tooltip title=\"Edit\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() => {\n                                      setEditedPerk(perkId)\n                                      setEditPerkOpen(true)\n                                  }}\n                              >\n                                  <EditFilled style={{ fontSize: '18px' }} />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n\n                ...(props.mode === 'shop'\n                    ? [\n                          <Tooltip title=\"Buy\">\n                              <span\n                                  key=\"1\"\n                                  onClick={() =>\n                                      props.buyPerk(account, perk, owner, props)\n                                  }\n                              >\n                                  <DollarCircleOutlined\n                                      style={{ fontSize: '18px' }}\n                                  />\n                              </span>\n                          </Tooltip>,\n                      ]\n                    : []),\n            ]}\n        >\n            <Meta title={perk.name} description={perk.price} />\n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        buyPerk: (account, perk, owner, props) =>\n            dispatch(actions.buyPerk(account, perk, owner, props)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(PerkCard)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => setEditPerkOpen(false)}\n            width=\"90%\"\n            footer={\n                <Button key=\"back\" onClick={() => setEditPerkOpen(false)}>\n                    Close\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <AddCard\n                action={() => {\n                    setEditedPerk('')\n                    setEditPerkOpen(true)\n                }}\n                title=\"Add item\"\n                sub={props.mode === 'shop' && 'Set price'}\n            />\n\n            {account[props.listKey || props.mode] &&\n                account[props.listKey || props.mode].map((perk, index) => (\n                    <PerkCard\n                        key={index}\n                        perk={perk}\n                        perkId={\n                            props.mode === 'wishlist'\n                                ? perk.itemId\n                                : perk.perkId\n                        }\n                        owner={account}\n                        account={account}\n                        setEditedPerk={setEditedPerk}\n                        setEditPerkOpen={setEditPerkOpen}\n                        mode={props.mode}\n                    />\n                ))}\n            {editPerk}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(WishlistAndPerks))\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Tabs from 'antd/es/tabs'\nimport pullData from '../../utils/pullData'\nimport Wallet from './Wallet'\nimport Transactions from './Transactions'\nimport WishlistAndPerks from './WishlistAndPerks'\n\nconst Shop = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Shop', sub: 'My items' })\n    }, [])\n\n    return props.account ? (\n        <Tabs\n            style={{\n                background: 'transparent',\n                boxShadow: 'none',\n                margin: '0',\n                marginTop: '-15px',\n            }}\n        >\n            <Tabs.TabPane tab=\"My shop\" key={1}>\n                <WishlistAndPerks mode=\"shop\" listKey=\"perks\" />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Wallet\" key={3}>\n                <Wallet />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Transactions\" key={4}>\n                <Transactions />\n            </Tabs.TabPane>\n        </Tabs>\n    ) : (\n        <span />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Shop)\n)\n","import React from 'react'\n\nimport Button from 'antd/es/button'\nimport Tooltip from 'antd/es/tooltip'\nimport FrownOutlined from '@ant-design/icons/FrownOutlined'\nimport SmileOutlined from '@ant-design/icons/SmileOutlined'\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined'\n\nconst FriendActionButton = props => {\n    const {\n        invitingFriends,\n        invitedFriends,\n        realFriends,\n        _id,\n        accountId,\n        acceptFriend,\n        addFriend,\n        unfriend,\n    } = props\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const { asIcons } = props\n    const ResultButtun = props =>\n        asIcons ? (\n            <Tooltip title={props.text}>\n                <span\n                    type=\"link\"\n                    key={props.key}\n                    onClick={props.onClick}\n                    style={{ fontSize: '18px' }}\n                >\n                    {props.icon}\n                </span>\n            </Tooltip>\n        ) : (\n            <Button {...props}>{props.text}</Button>\n        )\n\n    return [\n        props.additionalButton,\n        ...(invitingFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Accept\"\n                      key=\"0\"\n                      onClick={() => acceptFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n                  <ResultButtun\n                      text=\"Decline\"\n                      key=\"1\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : invitedFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      text=\"Cancel invitation\"\n                      key=\"2\"\n                      onClick={() => unfriend(_id)}\n                      icon={<DeleteOutlined />}\n                      danger={true}\n                  />,\n              ]\n            : realFriends.find(item => item.friend === _id)\n            ? [\n                  <ResultButtun\n                      key=\"3\"\n                      onClick={() => unfriend(_id)}\n                      icon={<FrownOutlined />}\n                      text=\"Unfriend\"\n                      danger={true}\n                  />,\n              ]\n            : [\n                  <ResultButtun\n                      text=\"Become friends\"\n                      key=\"4\"\n                      onClick={() => addFriend(_id)}\n                      icon={<SmileOutlined />}\n                      type=\"primary\"\n                  />,\n              ]),\n    ]\n}\n\nexport default FriendActionButton\n","import axios from 'axios'\nimport processRes from '../../utils/processRes'\nimport pullData from '../../utils/pullData'\n\nexport const acceptFriend = (id, props) => {\n    axios\n        .post('/api/friends/accept', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const addFriend = (id, props) => {\n    axios\n        .post('/api/friends/add', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n\nexport const unfriend = (id, props) => {\n    axios\n        .post('/api/friends/unfriend', {\n            id,\n        })\n        .then(res => {\n            processRes(res, props)\n            if (res.data.success) {\n                pullData(props, {})\n            }\n        })\n        .catch(err => {})\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Avatar from 'antd/es/avatar'\n\nimport Tooltip from 'antd/es/tooltip'\nimport EyeOutlined from '@ant-design/icons/EyeOutlined'\nimport friendActionButton from './FriendActionButton'\nimport getAvatar from '../utils/getAvatar'\nimport {\n    acceptFriend,\n    unfriend,\n    addFriend,\n} from '../containers/Friends/methods'\nconst { Meta } = Card\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        accountId: props.account ? props.account._id : '',\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n        acceptFriend: acceptFriend,\n        unfriend: unfriend,\n        addFriend: addFriend,\n        additionalButton: (\n            <Tooltip title=\"See profile\">\n                <span\n                    type=\"link\"\n                    key=\"100\"\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                    style={{ fontSize: '18px' }}\n                >\n                    <EyeOutlined />\n                </span>\n            </Tooltip>\n        ),\n    })\n\n    return (\n        <Card\n            type=\"inner\"\n            style={{ width: 200, display: 'inline-block', margin: '4px 8px' }}\n            cover={\n                <span\n                    style={{ padding: '25px', cursor: 'pointer' }}\n                    onClick={() =>\n                        props.history.push('/profile/' + props.friend._id)\n                    }\n                >\n                    <Avatar\n                        src={getAvatar(props.friend._id, props.friend.image)}\n                        size={150}\n                    />\n                </span>\n            }\n            actions={friendActions}\n        >\n            <Meta\n                title={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend.name}\n                    </span>\n                }\n                description={\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                            props.history.push('/profile/' + props.friend._id)\n                        }\n                    >\n                        {props.friend._id}\n                    </span>\n                }\n            />\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst AddFriends = props => {\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        onFinish,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => setAddFriendOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setAddFriendOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            <p>To find a friend you need to enter your friend's nickname.</p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Search\"\n                    name=\"search\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Search field is too short',\n                            min: 2,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult && (\n                <Card title=\"Search result\">\n                    <FriendCard\n                        {...props}\n                        friend={searchResult}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                </Card>\n            )}\n        </Modal>\n    )\n}\nexport default withRouter(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport FriendCard from '../../components/FriendCard'\n\nconst pendingFriends = props => {\n    const {\n        pendingFriendsOpen,\n        setPendingFriendsOpen,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    return (\n        <Modal\n            title=\"Pending friends\"\n            visible={pendingFriendsOpen}\n            maskClosable\n            closable\n            onCancel={() => setPendingFriendsOpen(false)}\n            footer={\n                <Button key=\"back\" onClick={() => setPendingFriendsOpen(false)}>\n                    Return\n                </Button>\n            }\n        >\n            {invitingFriends.length > 0 && (\n                <Card title=\"People invited me to be friends\">\n                    {invitingFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <Card title=\"I invited these people\">\n                    {invitedFriends.map(friend => (\n                        <FriendCard\n                            key={friend._id}\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\n\nimport axios from 'axios'\nimport pullData from '../../utils/pullData'\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Divider from 'antd/es/divider'\nimport message from 'antd/es/message'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n    const [pendingFriendsOpen, setPendingFriendsOpen] = useState()\n    const [searchResult, setSearchResult] = useState(null)\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account } = props\n    if (!account) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friendsData && account.friends) {\n        for (let friend of account.friendsData) {\n            const friendRef = account.friends.find(\n                item => item.friend.toString() === friend._id.toString()\n            )\n            const fullFriend = { ...friendRef, ...friend }\n            if (friendRef) {\n                if (friendRef.status === 'friend') realFriends.push(fullFriend)\n                else if (friendRef.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (friendRef.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/friends/find', {\n                ...value,\n            })\n            .then(res => {\n                if (!res.data.success) {\n                    message.warning(\n                        'Accounts with nickname ' +\n                            value.search +\n                            ' do not exist.'\n                    )\n                    setSearchResult(null)\n                } else setSearchResult(res.data.friend)\n            })\n            .catch(err => {})\n    }\n\n    return (\n        <>\n            {(invitedFriends.length > 0 || invitingFriends.length > 0) && (\n                <>\n                    <Button\n                        style={{ margin: '30px 0px ' }}\n                        type=\"primary\"\n                        onClick={() => setPendingFriendsOpen(true)}\n                    >\n                        Show pending friends\n                    </Button>\n                    <Divider type=\"horizontal\" />\n                </>\n            )}\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n\n            {realFriends.map(friend => (\n                <FriendCard\n                    key={friend._id}\n                    {...props}\n                    friend={friend}\n                    realFriends={realFriends}\n                    invitingFriends={invitingFriends}\n                    invitedFriends={invitedFriends}\n                />\n            ))}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                onFinish={onFinish}\n                searchResult={searchResult}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n            <PendingFriends\n                pendingFriendsOpen={pendingFriendsOpen}\n                setPendingFriendsOpen={setPendingFriendsOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import message from 'antd/es/message'\n\nexport default err => {\n    message.error('Something failed. Try again.')\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Input from 'antd/es/input'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Upload from 'antd/es/upload'\nimport * as classes from './Account.module.css'\n\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport processRes from '../../utils/processRes'\nimport processResErr from '../../utils/processResErr'\nimport Modal from 'antd/es/modal'\nimport message from 'antd/es/message'\n\nconst Account = props => {\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const { account } = props\n\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Account', sub: '' })\n    }, [])\n\n    const loading = false\n\n    const deleteAccount = () => {\n        if (deleteField !== account._id) {\n            message.warning('The nickmanme is not correct.')\n        } else {\n            axios\n                .post('/api/account/delete', {\n                    accountId: account._id,\n                })\n                .then(res => {\n                    props.history.push('/logout')\n                })\n                .catch(err => {\n                    processResErr(err)\n                })\n        }\n    }\n\n    const onFinish = value => {\n        axios\n            .post('/api/account', {\n                name: value.name,\n            })\n            .then(res => {\n                processRes(res, props)\n            })\n            .catch(err => {\n                processResErr(err)\n            })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 0 },\n    }\n    return account && account.name ? (\n        <Card>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"My account\"\n                backIcon={false}\n            />\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className={classes.Avatar}\n                showUploadList={false}\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, 'avatar', () => {\n                        props.increaseAvatarV()\n                    })\n                }}\n            >\n                {account.image ? (\n                    <Avatar\n                        src={getAvatar(account._id, account.image)}\n                        size={150}\n                        style={{ margin: '25px' }}\n                    />\n                ) : (\n                    <div>\n                        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                        <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                )}\n            </Upload>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                initialValues={{\n                    name: account.name,\n                    nickname: account._id,\n                }}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item label=\"Nickname\" name=\"nickname\">\n                    <Input disabled={true} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    style={{\n                        flex: 'none',\n                        maxWidth: ' 100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Button\n                        type=\"dashed\"\n                        onClick={() => setDeleteVisible(true)}\n                        danger={true}\n                        size=\"large\"\n                    >\n                        Delete account\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                title=\"Delete account\"\n                visible={deleteVisible}\n                onOk={deleteAccount}\n                onCancel={() => {\n                    setDeleteVisible(false)\n                    setDeleteField('')\n                }}\n            >\n                <p>\n                    Please enter your nickname and press Ok to delete your\n                    account.\n                </p>\n                <Input onChange={e => setDeleteField(e.target.value)} />\n            </Modal>\n        </Card>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAvatarV: v => dispatch(actions.setAvatarV(v)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Account)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport pullData from '../../utils/pullData'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport GoalCard from '../Goals/GoalCard'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport { acceptFriend, unfriend, addFriend } from '../Friends/methods'\n\nconst Profile = props => {\n    const [data, setData] = useState()\n\n    useEffect(() => {\n        pullData(props, {\n            forceAuth: false,\n            forceActivate: false,\n        })\n    }, [props.history.location.pathname])\n\n    const { profile, account } = props\n    if (!profile._id) return null\n    props.setPageTitle({ main: profile.name, sub: profile._id })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (account && account.friends) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        accountId: account ? account._id : '',\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        acceptFriend: acceptFriend,\n        unfriend: unfriend,\n        addFriend: addFriend,\n        additionalButton: null,\n    })\n    return (\n        <Card>\n            <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                <Avatar\n                    src={getAvatar(profile._is, profile.image)}\n                    size={200}\n                />\n                <h1>{profile.name}</h1>\n                <h3>({profile._id})</h3>\n                {friendActions}\n            </div>\n            <Tabs>\n                <Tabs.TabPane tab=\"Friends\" key={1}>\n                    <Card title=\"Friends\">\n                        {profile.friends\n                            .filter(friend => friend.status === 'friend')\n                            .map(friend => {\n                                const friendData = {\n                                    ...profile.friendsData.find(\n                                        item =>\n                                            item._id.toString() ===\n                                            friend.friend.toString()\n                                    ),\n                                    ...friend.friend,\n                                }\n\n                                return (\n                                    <FriendCard\n                                        key={friendData._id}\n                                        {...props}\n                                        account={account}\n                                        friend={friendData}\n                                        realFriends={realFriends}\n                                        invitingFriends={invitingFriends}\n                                        invitedFriends={invitedFriends}\n                                        data={data}\n                                        setData={setData}\n                                    />\n                                )\n                            })}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Progresses\" key={2}>\n                    <Card title=\"Progresses\">\n                        <Progresses\n                            account={profile}\n                            progressesData={profile.progressesData}\n                            keepPageTitle={true}\n                        />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Goals\" key={3}>\n                    <Card title=\"Goals\">\n                        {profile.goals.map((goal, index) => (\n                            <GoalCard\n                                key={index}\n                                goal={goal}\n                                owner={profile}\n                                available={goal.users.includes(account._id)}\n                                account={account}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Shop\" key={4}>\n                    <Card title=\"Shop\">\n                        {profile.perks &&\n                            profile.perks.map((perk, index) => (\n                                <PerkCard\n                                    key={index}\n                                    perk={perk}\n                                    owner={profile}\n                                    account={account}\n                                    onlyBuy={true}\n                                    data={data}\n                                    setData={setData}\n                                    mode=\"shop\"\n                                />\n                            ))}\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wallet\" key={5}>\n                    <Card title=\"Wallet\">\n                        <Wallet data={{ account: profile }} />\n                    </Card>\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Wishlist\" key={6}>\n                    <Card title=\"Wishlist\">\n                        {profile.wishlist.map((item, index) => (\n                            <PerkCard\n                                key={index}\n                                perk={item}\n                                owner={profile}\n                                account={account}\n                                setEditedPerk={() => {}}\n                                setEditPerkOpen={() => {}}\n                            />\n                        ))}\n                    </Card>\n                </Tabs.TabPane>\n            </Tabs>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.history.push('/account')\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Name is too short',\n                            min: 2,\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Nickname is too short',\n                            whitespace: true,\n                            min: 2,\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]*$/,\n                            message:\n                                \"Nickname should contain only letters, numbers, '-' and '_'.\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivateAccount))\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Modal from 'antd/es/modal'\nimport Avatar from 'antd/es/avatar'\nimport Button from 'antd/es/button'\nimport getAvatar from '../../utils/getAvatar'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { perk, profile } = props\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && profile.friendsData) {\n            return items.map(item => {\n                const friendObj = profile.friendsData.find(\n                    friend => friend._id === item\n                )\n                if (friendObj) {\n                    return (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + item)\n                            }\n                        >\n                            <Avatar\n                                src={getAvatar(item, friendObj.image)}\n                                size={20}\n                                style={{ marginRight: '10px' }}\n                            />\n                            {friendObj.name} - ({item})\n                        </span>\n                    )\n                } else return item\n            })\n        } else return items\n    }\n\n    return perk ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    shop\n                </span>\n            }\n        >\n            {perk.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <p>{perk.description}</p>\n\n            <Descriptions\n                title=\"Goal description\"\n                bordered\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                <Item label=\"Price\">{perk.price}</Item>\n            </Descriptions>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        perk: state.perk,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Modal from 'antd/es/modal'\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst WishlistItem = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    useEffect(() => {\n        pullData(props, {})\n    }, [])\n\n    const { wishlistItem, profile } = props\n    if (wishlistItem) {\n        props.setPageTitle({ main: wishlistItem.name, sub: profile._id })\n    }\n    return wishlistItem ? (\n        <Card\n            title={\n                <span>\n                    Item from{' '}\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() =>\n                            props.history.push('/profile/' + profile._id)\n                        }\n                    >\n                        <Avatar\n                            src={getAvatar(profile._id, profile.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {profile.name + ' (' + profile._id + ')'}\n                    </Button>{' '}\n                    wishlist\n                </span>\n            }\n        >\n            {wishlistItem.images.map(image => (\n                <span onClick={() => setPreviewImage(image)}>\n                    <Card\n                        type=\"inner\"\n                        style={{\n                            width: 200,\n                            display: 'inline-block',\n                        }}\n                        hoverable\n                        cover={\n                            <div\n                                style={{\n                                    backgroundImage: 'url(' + image + ')',\n                                    height: 200,\n                                    width: 200,\n                                    backgroundSize: 'cover',\n                                }}\n                            />\n                        }\n                    />\n                </span>\n            ))}\n            <h1>{wishlistItem.name}</h1>\n            <p>{wishlistItem.description}</p>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </Card>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        wishlistItem: state.wishlistItem,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport pullData from '../../utils/pullData'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\n\nconst Wishlist = props => {\n    useEffect(() => {\n        pullData(props, {})\n        props.setPageTitle({ main: 'Wishlist', sub: '' })\n    }, [])\n\n    return props.account ? <WishlistAndPerks mode=\"wishlist\" /> : <span />\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: () => dispatch(actions.tryAuth()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Wishlist)\n)\n","import React, { useEffect } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\n\nimport Auth from './containers/Auth/Auth'\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Goals from './containers/Goals/Goals'\nimport Goal from './containers/Goal/Goal'\nimport Progresses from './containers/Progresses/Progresses'\nimport Progress from './containers/Progress/Progress'\nimport Shop from './containers/Shop/Shop'\n// import Dashboard from './containers/Dashboard/Dashboard'\n\nimport Friends from './containers/Friends/Friends'\nimport Account from './containers/Account/Account'\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport Wishlist from './containers/Wishlist/Wishlist'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const { isAuthed } = props\n    useEffect(() => {\n        props.tryAuth()\n    })\n\n    const redirectTo = cookies.get('redirectto')\n\n    if (redirectTo) {\n        cookies.remove('redirectto', {\n            path: '/',\n        })\n    }\n\n    const Logout = () => {\n        props.logout()\n        return <Redirect to=\"/login\" />\n    }\n\n    const routes = (\n        <Switch>\n            <Route path=\"/goals\" exact component={Goals} />\n            <Route path=\"/goals\" component={Goal} />\n\n            <Route path=\"/progresses\" exact component={Progresses} />\n            <Route path=\"/progresses\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/friends\" exact component={Friends} />\n\n            <Route path=\"/account\" exact component={Account} />\n            {/* <Route\n                    path=\"/dashboard\"\n                    exact\n                    component={withProps(Dashboard, generalProps)}\n                /> */}\n\n            <Route path=\"/shop\" exact component={Shop} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" exact component={Wishlist} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            {!isAuthed && <Route path=\"/login\" exact component={Auth} />}\n            <Route path=\"/logout\" exact component={Logout} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            {isAuthed ? (\n                <Redirect to=\"/progresses\" />\n            ) : (\n                <Redirect to=\"/login\" />\n            )}\n        </Switch>\n    )\n\n    return redirectTo ? (\n        <Redirect to={redirectTo} />\n    ) : (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout>{routes}</AccountLayout>\n            </div>\n            {/* {this.props.loading && <Spinner cover />} */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    account: {},\n    profile: {},\n    pageTitle: {},\n    isAuthed: false,\n    wishlistItem: null,\n    goal: null,\n    progress: null,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            if (action.data.account) state.account = action.data.account\n            if (action.data.profile) state.profile = action.data.profile\n            if (action.data.wishlistItem)\n                state.wishlistItem = action.data.wishlistItem\n            if (action.data.goal) state.goal = action.data.goal\n            if (action.data.progress) state.progress = action.data.progress\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://getreward.herokuapp.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}