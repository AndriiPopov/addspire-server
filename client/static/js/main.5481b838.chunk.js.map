{"version":3,"sources":["components/Layout/Layout.module.css","components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","components/Welcome/Welcome.module.scss","containers/Auth/AuthTest.tsx","translations/languages/index.tsx","translations/i18n.tsx","utils/processRes.js","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/requestResource.tsx","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","store/actions/auth.tsx","store/actions/saveResources.tsx","store/actions/updateResource.tsx","components/Layout/LoginModal.tsx","utils/getAvatar.js","components/Layout/BottomMenu.tsx","components/UI/DialogFullscreen.tsx","components/FriendActionButton.tsx","components/UserButton/UserButton.tsx","components/MasonryCard.tsx","components/FriendCard.tsx","containers/Friends/AddFriends.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","constants/fieldLength.js","constants/fieldRules.js","components/EditResource/ConnectionsSelect.tsx","containers/Explore/LocateControl.tsx","utils/uploadFile.js","components/UI/ImagePickerMulti.tsx","components/UI/TinyEditor.tsx","constants/goalCategories.tsx","components/EditResource/GoalCategories.tsx","components/UI/WeekDayPicker.tsx","components/EditResource/EditResource.tsx","websocketActions/resources.tsx","components/Layout/Layout.tsx","containers/Blog/Blog.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","components/Post/AddMessage.tsx","components/UI/ImageCarousel/ImageCarousel.tsx","components/FollowButton.tsx","components/UI/ReadMore.tsx","components/Post/EditPost.tsx","components/UI/ConfirmAction.tsx","components/Post/Message.tsx","components/Post/Post.tsx","containers/Dashboard/DashboardEvents.tsx","websocketActions/dashboard.tsx","containers/Dashboard/DashboardPosts.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/MapSettings.tsx","components/UI/ShareButton.tsx","components/Welcome/index.tsx","containers/Explore/Explore.tsx","containers/Blog/BlogArticle.tsx","containers/MindMap/Line.tsx","containers/MindMap/actions.tsx","components/UI/HorizontalScrollList.tsx","components/ResourceHeader.tsx","components/ResourceCore.tsx","components/MapPosition/MapPosition.tsx","components/Post/AddPost.tsx","components/Post/ResourcePosts.tsx","containers/Reward/Reward.tsx","components/ProfileRewards/ProfileRewards.tsx","components/ProfileActivities/ProfileActivities.tsx","components/Rewards/EditProgressReward.tsx","websocketActions/goals.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","utils/getNowStageId.ts","containers/Goal/ActivityTable.tsx","websocketActions/activities.tsx","components/Activities/Activities.tsx","containers/Goal/Goal.tsx","containers/Activity/Activity.tsx","components/ProgressButton.tsx","components/Transactions/Transactions.tsx","websocketActions/transactions.tsx","containers/Profile/Profile.tsx","containers/MindMap/FolderMM.tsx","containers/MindMap/ProfileMM.tsx","utils/pullData.js","components/ResourceCoreMM.tsx","containers/MindMap/old/GoalMM.tsx","containers/MindMap/ChooseWrapMM.tsx","containers/MindMap/ContainerMM.tsx","containers/MindMap/MindMap.tsx","containers/MindMap/MindMapWrap.tsx","App.tsx","components/TrackingGA/index.tsx","store/reducer/reducer.tsx","setupDayjs.tsx","index.tsx"],"names":["module","exports","Layout","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle","bottomMenu","logo","Container","socialButtons","Background","Dots","Avatar","header__title","subheader","slider","slider__word","slider__words","wordSlider","videoWrapper","step","howWorks","videoholder","Cookies","languages","en","translation","ru","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","nonExplicitSupportedLngs","processRes","res","props","t","data","logout","history","push","home","success","errorCode","message","warning","error","successCode","status","getListOfNeededResources","notFoundResources","store","requestedResources","user","account","progress","reward","activity","post","progressData","friendData","postData","transactionData","rewardData","activityData","neededResources","isAuthed","_id","currentAccount","_i","_arr","concat","Object","toConsumableArray","progresses","followProgresses","recent","filter","item","resourceType","map","resourceId","length","_step","_iterator","_createForOfIteratorHelper","followPosts","s","n","done","value","err","e","f","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","rewards","_i3","_arr3","activities","_i4","_arr4","followingAccounts","followAccounts","currentProfile","profile","_step5","_iterator5","_step6","_iterator6","_step7","_iterator7","rewardId","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","_i5","_arr5","currentGoal","participants","owner","users","likes","_step11","_iterator11","_step12","_iterator12","posts","_i6","_arr6","oldRewards","_i7","_arr7","oldActivities","currentPosts","_step13","_iterator13","postEl","_step14","_iterator14","parent","parentType","parentId","currentReward","_i8","_arr8","_step15","_iterator15","currentActivity","_i9","_arr9","_step16","_iterator16","friendSearchResult","_step17","_iterator17","reduce","obj","attr","Array","from","Set","includes","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","requestResource","type","ids","state","notRequestedIds","id","webSocket","readyState","send","JSON","stringify","messageCode","compareVersionsAndRerequest","versions","checkData","__v","getResourcesToMonitor","addData","cookies","listOfGroups","ConnectWebsocket","markNotFoundResource","newNotFound","_this","setState","start","pingTimeout","WebSocket","heartbeat","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","axios","defaults","headers","common","initializeRequestResources","onmessage","news","parse","setData","onlineUsers","messageText","setFriendsData","friendsData","saveResource","newOnlineUsers","updateResource","code","update","setFriendSearchResult","set","path","expires","Date","getTime","structureIsSaved","addToStructure","accountId","structureId","onclose","checkInterval","check","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","ConnectWebsocket_createForOfIteratorHelper","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","prevProps","prevState","_loop2","Component","withRouter","connect","dispatch","pulledFrom","actions","changeLikesMessage","messageId","postId","followResource","unfollowResource","changeLikesResource","add","followAccount","accountFollow","unfollowAccount","addFriend","friendId","acceptFriend","unfriend","tryAuth","token","sessionStorage","setItem","get","rememberMe","remove","userId","jwt_decode","put","delete","Accept","setIsAuthed","setPageTitle","title","saveStructure","getState","structure","console","log","structureMM","myAccount","find","saveResources_createForOfIteratorHelper","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","split","applyUpdateToPart","updatedFields","applyDeleteToPart","splice","updateResource_createForOfIteratorHelper","removedFields","field","indexOf","parState","element","defineProperty","updateData","TransitionComponent","react_default","a","createElement","Slide","assign","direction","useTranslation","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","basicURL","loginVisible","Dialog","fullScreen","open","onClose","setLoginVisible","scroll","className","classes","style","maxWidth","margin","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","FormControlLabel","control","Checkbox","checked","onChange","color","label","Divider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","maxAge","autoFocus","getAvatar","nickname","version","useStyles","makeStyles","theme","createStyles","speedDial","right","bottom","position","left","spacing","login","avatar","border","palette","primary","main","marginLeft","flex","blogLabel","display","breakpoints","up","blogIcon","lastNotifications","isConnectingWS","language","recentShown","markRecentShown","scrollTrigger","useScrollTrigger","isActivating","pathname","logedIn","openLink","url","numberOfUnseenNots","BottomMenu_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","Fragment","appear","in","Box","width","zIndex","pointerEvents","cll","Paper","elevation","borderRadius","IconButton","Badge","badgeContent","root","src","image","NotificationsOutlined","Search","appBar","DialogFullscreen","AppBar","Toolbar","edge","aria-label","Close","Typography","variant","save","saveText","children","FriendActionButton","anchorEl","setAnchorEl","invitingFriends","invitedFriends","realFriends","handleClose","handleClick","currentTarget","additionalButtons","MoreVertOutlined","Menu","keepMounted","Boolean","button","index","MenuItem","minimized","asText","preventDefault","stopPropagation","wsActions","noFollow","friendDataExp","getUserData","userName","text","name","typography","noWrap","userAvatar","ava","size","noClick","noName","badge","onlyName","Group","noAva","span","react_router_dom","objectSpread","cursor","to","inline","es_button","padding","height","placeholderImages","getPH","matches","match","imagePH","Math","abs","round","x","makeRand","images","picture","boxShadow","noLink","wordBreak","alignItems","body","onClickLink","forceAuth","MasonryCard","components_FriendActionButton","asIcons","components_UserButton_UserButton","input","iconButton","searchResult","setSearchField","searchField","AddFriends_createForOfIteratorHelper","fullFriend","paddingTop","align","InputBase","placeholder","target","search","SearchOutlined","components_FriendCard","languageText","languageIcon","currentLanguage","_useTranslation","languageMenu","setLanguageMenu","handleLanguageMenuClose","changeLanguage","LANGUAGES_LABEL","Tooltip","enterDelay","aria-owns","undefined","aria-haspopup","data-ga-event-category","data-ga-event-action","Language_default","settings","join","ExpandMore_default","component","data-no-link","selected","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","es_select","getPopupContainer","trigger","parentNode","Option","LocateControl","leaflet","lc","Locate","strings","drawCircle","drawMarker","keepCurrentZoomLevel","setView","flyTo","addTo","navigator","geolocation","getCurrentPosition","withLeaflet","withTranslation","uploadFile","file","filename","callback","alert","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","mimeType","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","readAsDataURL","img","Image","widthCoef","heightCoef","oc","document","octx","getContext","drawImage","toDataURL","onerror","_unused","fileName","response","doUploadFile","catch","signedRequest","Content-Type","ImagePickerMulti","setImages","previewImage","setPreviewImage","onValueChange","upload","accept","listType","fileList","uid","onPreview","customRequest","_ref2","justifyContent","flexDirection","isRNWebView","ReactNativeWebView","postMessage","PlusOutlined_default","dividers","TinyEditor","contentState","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","ContentState","createFromBlockArray","convertToRaw","react_draft_wysiwyg","readOnly","toolbarClassName","MM","wrapperClassName","defaultContentState","onContentStateChange","onEditorChange","onEditorChangePlain","convertFromRaw","getPlainText","toolbar","options","inDropdown","list","textAlign","link","toolbarHidden","goalCategories","GoalCategories","category","Chip","nolim","pop","days","day","sort","Select","divider","EditResource","useRef","current","leafletElement","ELG","useMapBounds","GestureHandling","resource","selectedBox","setStructure","addEmptyToStructure","positionIsProvided","coordinates","setPosition","initialPosition","setInitialPosition","_useState5","_useState6","positionRead","setPositionRead","_useState7","_useState8","currentTab","setCurrentTab","_useState9","descriptionText","_useState10","descriptionPlain","setDescriptionPlain","_Form$useForm","Form","useForm","form","mapClick","latlng","lat","lng","setFieldsValue","nomap","goalId","cancel","charAt","toUpperCase","slice","submit","es_form","onFinish","now","goToResource","autoComplete","initialValues","repeat","dueDate","labelCol","wrapperCol","onValuesChange","changedFields","allValues","Item","rules","getValueFromEvent","Input","fullWidth","EditResource_GoalCategories","Map","ref","center","zoom","onclick","gestureHandling","onlocationfound","Explore_LocateControl","TileLayer","attribution","Marker","draggable","ondragend","getLatLng","react_leaflet_fullscreen_dist_default","square","Tabs","indicatorColor","textColor","Tab","valuePropName","hidden","UI_ImagePickerMulti","DatePicker","format","KeyboardButtonProps","EditResource_ConnectionsSelect","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","UI_WeekDayPicker","marginTop","marginRight","domRef","useMediaQuery","startResourceVisible","setStartResourceVisible","addFriendOpen","setAddFriendOpen","removeGutters","paths","Layout_createForOfIteratorHelper","checkPagePath","hide","white","background","noHeader","LinearProgress","top","tabIndex","customHeader","header","Link","components_LanguageSwitcher_LanguageSwitcher","Book","noContent","paddingBottom","disableGutters","Layout_BottomMenu","Layout_LoginModal","Friends_AddFriends","components_EditResource_EditResource","dayjs","flexGrow","media","backgroundSize","setPosts","setTitle","all","setAll","method","query","json","Helmet","Grid","container","xs","md","xl","Card","CardActionArea","CardMedia","CardContent","gutterBottom","subtitle","published_at","accountNotActive","setAccountActivated","nicknameNotUnique","offset","htmlType","statePosts","sortNotifiacations","b","date","NotificationsTracker_createForOfIteratorHelper","notifications","filterSameNot","arr","myNotifications","isEqual","addEventListener","goBack","&>div::after","&>div::before","& textarea","setImageLoading","content","replyToUser","setMessageText","isTop","TextField","multiline","messageValue","replyToMessage","editedMessage","replyTo","editingMessage","onSend","spanStyle","showUploadList","ImageCarousel","carousel","dots","autoplay","backgroundImage","backgroundPosition","backgroundRepeat","Modal","visible","footer","onCancel","alt","FollowButton","ReadMore","overflow","setOverflow","setOpen","descRef","offsetHeight","initialHeight","contentEditor","maxHeight","dangerouslySetInnerHTML","__html","transition","opacity","addTitle","textTransform","EditPost","handleSave","handleCancel","ConfirmAction","confirm","Message","replies","isStart","replyVisible","setReplyVisible","deleteMessageOpen","setDeleteMessageOpen","setLikes","setReplyToUser","setEditingMessage","_useState11","_useState12","showReplies","setShowReplies","_useState13","_useState14","_useState15","_useState16","editMessageOpen","setEditMessageOpen","handleEditPostCancel","author","Post_AddMessage","fromNow","startMessage","messageType","Post_EditPost","anchorOrigin","vertical","horizontal","overlap","icon","ThumbUp","UI_ImageCarousel_ImageCarousel","reply","details","itemId","UI_ReadMore","components_FollowButton","isPostPage","postOpen","setPostOpen","postRef","scrollTo","offsetTop","behavior","noStartMessage","Post_Message","noPostControls","startIcon","ThumbUpOutlined","AddCommentOutlined","messages","Post_createForOfIteratorHelper","getNumberOfMessages","p","v","vN","isNaN","stageName","itemName","price","buyer","as","stage","stageDate","year","dayOfYear","week","startOf","endOf","month","getStageName","progressId","progressName","addedAccounts","ac","droppedAccounts","for","action","profileId","profileName","rewardName","activityId","activityName","comment","startTime","sortPosts","aN","bN","DashboardPosts_createForOfIteratorHelper","newPosts","newUnseenPosts","newOldPosts","oldPosts","oldPostIndex","findIndex","toString","_newOldPosts","resultPosts","neededPosts","sub","nots","components_Post_Post","Dashboard_DashboardEvents","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","MapSettings","mapVisible","setMapVisible","onSearch","setSearch","positionChanged","setPositionChanged","radius","setRadius","changed","setChanged","withMap","getRadius","metresPerPixel","cos","getCenter","PI","pow","getZoom","units","distance","sm","Switch","Slider","valueLabelDisplay","minHeight","whenReady","onzoomend","CircleMarker","alertVisible","setAlertVisible","setFriends","basicProps","linkHash","href","leaveDelay","Share","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","PinterestShareButton","PinterestIcon","LinkedinShareButton","LinkedinIcon","VKShareButton","VKIcon","EmailShareButton","subject","EmailIcon","lib","onCopy","FileCopy","Snackbar","autoHideDuration","Alert","severity","frameBorder","allowFullScreen","allow","sortProgresses","views","foundProgresses","setFoundProgresses","noMore","setNoMore","setValue","categories","liveFoundProcesses","skip","newFriendData","Explore_createForOfIteratorHelper","urlDir","Explore_MapSettings","components_Welcome","orientation","LocationOn","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","UI_ShareButton","backToBlog","setPost","fbAsyncInit","FB","appId","cookie","xfbml","d","js","fjs","getElementsByTagName","getElementById","insertBefore","XFBML","paddingLeft","paddingRight","ReactHtmlParser","data-href","data-numposts","data-width","Line","waitWhenRefIsReady","timer","line","setOptions","el","lineType","lineColor","lineWidth","show","drawLine","_this$props","end","LeaderLine","dragStep","addBox","HorizontalScrollList","items","empty","customEmpty","withAdd","overflowX","flexShrink","onAdd","AddCircle","bottomContent","redTheme","createMuiTheme","red","overrides","MuiSelect","selectMenu","select","&:focus","backgroundColor","fade","blueTheme","blue","greenTheme","green","orangeTheme","orange","ResourceHeader","followersVisible","setFollowersVisible","editResourceOpen","setEditResourceOpen","deleteResourceOpen","setDeleteResourceOpen","leaveResourceOpen","setLeaveResourceOpen","accountProp","followProp","dropDownMeuItems","getDropDownMeuItems","getStatusText","ThemeProvider","startDate","finishDate","navi","ownProps","pathParts","setResource","components_ResourceHeader","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","prototype","MapPosition","reverse","Post_AddPost","TabPanel","other","objectWithoutProperties","role","aria-labelledby","a11yProps","aria-controls","setReward","components_ResourceCore","description","components_MapPosition_MapPosition","Post_ResourcePosts","addRewardOpen","setAddRewardOpen","rewardPreview","setRewardPreview","wish","additionalButton","isSelect","multiple","setChosenResource","isOwner","isSelected","openInDialog","containers_Reward_Reward","addActivityOpen","setAddActivityOpen","activityPreview","setActivityPreview","EditProgressReward","initialValue","rewardObj","components_ProfileRewards_ProfileRewards","ProfileActivities","EditProgressReward_Option","editRewardOpen","setEditRewardOpen","selectedReward","setSelectedReward","deleteRewardVisible","setDeleteRewardVisible","selectedRewardObj","Rewards_EditProgressReward","customTheme","purple","MuiListItem","secondaryAction","showEarnedRewards","setShowEarnedRewards","activityObj","nowStageId","lastStages","stages","aS","aF","bS","bF","old","diff","stageId","getNowStageId","tabs","defaultActiveKey","getStatus","dismissed","failBy","approvedBy","myStatus","stageStatus","getTag","labelId","userStatus","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","tabTitle","TabPane","tab","List","dense","paid","selectedActivity","setSelectedActivity","deleteActivityVisible","setDeleteActivityVisible","activitiesIds","Goal_ActivityTable","setProgress","currentTabD","setCurrentTabD","Goal_TabPanel","components_Activities_Activities","components_Rewards_Rewards","setActivity","Activity_TabPanel","RetweetOutlined_default","getRepeatType","acc","val","getDay","light","dataProp","selectedTransaction","setSelectedTransaction","deleteTransactionVisible","setDeleteTransactionVisible","transactionObj","rewardObject","sectionTitle","increaseAvatarV","classesM","deleteVisible","setDeleteVisible","deleteField","setDeleteField","startProgressVisible","setStartProgressVisible","Profile_createForOfIteratorHelper","loadedProgresses","Title","level","editable","Edit","maxLength","autoSize","minRows","maxRows","components_Transactions_Transactions","newValue","scrollButtons","components_ProgressButton","FolderMM","editingText","setEditingText","editingTextModal","saveValueMM","setTextValue","setEditingTextModal","textValue","handleSaveText","editorMode","bgColor","imageValue","videoURL","lazy_default","noNeedToSave","memo","pullData","getData","ProfileMM_createForOfIteratorHelper","i","unsortedItems","unsortedIds","newCurrentId","currentId","actions_createForOfIteratorHelper","sizePos","y","b00","addUnsorted","whiteSpace","ResourceCoreMM","addDragStep","resType","addBlock","blockType","deleteBlock","videoURLOpen","setVideoURLOpen","anchorElRadius","setAnchorElRadius","anchorElbgColor","setAnchorElbgColor","anchorElLineColor","setAnchorElLineColor","anchorElLineWidth","setAnchorElLineWidth","anchorElLine","setAnchorElLine","_useState17","_useState18","editingStyle","setEditingStyle","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setChangeParentMode","changeParentMode","_useState25","_useState26","setVideoURL","_useState27","hash","substring","_useState28","openElement","setOpenElement","addMenu","lineTypeMenu","lineColorMenu","Popover","transformOrigin","onMouseDown","react_color_es","hex","onChangeComplete","lineWidthMenu","bgColorMenu","radiusMenu","videoDialog","defaultValue","Add","esm_Image","Videocam","Brush","Send","Delete","MindMap_FolderMM","MindMap_ProfileMM","old_GoalMM","containers_Profile_Profile","containers_Activity_Activity","containers_Goal_Goal","resizeStyle","ConnectedContainerMM","scale","scaleMM","setSizepos","changeParentMM","childId","myRef1","myRef4","setSelectedBox","myRef2","editingFolder","editingElement","selectedIndex","setSelectedIndex","setEditingElement","setEditingFolder","handler","passive","removeEventListener","temp","unsorted","MindMap_Line","collapsed","react_rnd_lib","disableDragging","enableResizing","resizeHandleStyles","bottomLeft","bottomRight","topLeft","topRight","outline","onDrag","dragHandler","onResize","dir","elRef","resizeHandler","MindMap_ChooseWrapMM","transform","structureNotSaved","setEditorMode","setEventIsFromDraggable","setScale","resetTransform","useBeforeunload","handleMouseDown","MindMap_createForOfIteratorHelper","nativeEvent","composedPath","getAttribute","classN","react_router","when","labelPlacement","Fullscreen","onTouchStart","onTouchEnd","onMouseUp","index_es","MindMap_ContainerMM","setScaleMM","eventIsFromDraggable","throttleFunc","throttle","defaultScale","defaultPositionX","defaultPositionY","limitToBounds","minScale","maxScale","disabled","pan","velocity","wheel","onZoomChange","onPanning","onPanningStop","onPinching","onPinchingStop","doubleClick","zoomIn","animation","zoomOut","containers_MindMap_MindMap","setLanguage","mountedRef","auth","useCallback","abrupt","t0","trackingID","ReactGA","initialize","pageview","locale","Logout","routes","exact","MindMapWrap","Explore","DashboardPosts","Blog","BlogArticle","ActivateAccount","process","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","pageTitle","b0","innerChildren","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","ADD_DRAG_STEP","SET_STRUCTURE","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","perk","SET_AVATAR_V","SET_LANGUAGE","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","SET_RECENT_SHOWN","ADD_TO_STRUCTURE","STRUCTURE_IS_SAVED","ADD_BLOCK","SET_SIZEPOS","SAVE_VALUE_MM","ADD_EMPTY_TO_STRUCTURE","DELETE_BLOCK","child","CHANGE_PARENT_MM","isDecedant","childParentId","SET_SCALEMM","extend","weekOfYear","relativeTime","updateLocale","future","past","ss","m","mm","h","hh","dd","w","ww","M","yy","__webpack_require__","__webpack_exports__","src_store","outerTheme","MuiAppBar","colorSecondary","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","useUtils_cfb96ac9","utils","DayUtils","es","src_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.5481b838.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3q-xb\",\"Header\":\"Layout_Header__J8BzQ\",\"Footer\":\"Layout_Footer__1UfUY\",\"HideHeader\":\"Layout_HideHeader__2uuFO\",\"FooterButton\":\"Layout_FooterButton__VhJUa\",\"TopHeader\":\"Layout_TopHeader__277Y8\",\"BottomHeader\":\"Layout_BottomHeader__3YPE5\",\"Main\":\"Layout_Main__Py9vL\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__2imT-\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__3mw1U\",\"PageTitle\":\"Layout_PageTitle__1_EDr\",\"bottomMenu\":\"Layout_bottomMenu__p7MZh\",\"logo\":\"Layout_logo__3_HwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__1PdGZ\",\"socialButtons\":\"LoginModal_socialButtons__1H9u7\",\"Background\":\"LoginModal_Background__2foqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__3XuKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__3n37F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Welcome_header__title__2PVWK\",\"subheader\":\"Welcome_subheader__8NTpe\",\"slider\":\"Welcome_slider__1C5Wk\",\"slider__word\":\"Welcome_slider__word__2M0ri\",\"slider__words\":\"Welcome_slider__words__2RsMS\",\"wordSlider\":\"Welcome_wordSlider__3DU7B\",\"videoWrapper\":\"Welcome_videoWrapper__203j_\",\"step\":\"Welcome_step__3KDh2\",\"howWorks\":\"Welcome_howWorks__r5E6t\",\"videoholder\":\"Welcome_videoholder__1WZ7O\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","import en from './en.json'\nimport ru from './ru.json'\n\nexport default {\n    en: {\n        translation: en,\n    },\n    ru: {\n        translation: ru,\n    },\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resources from './languages'\n\n// the translations\n// (tip move them in a JSON file and import them)\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        fallbackLng: 'en',\n        keySeparator: '.', // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n        nonExplicitSupportedLngs: true,\n    })\n\nexport default i18n\n","import message from 'antd/es/message'\nimport i18n from '../translations/i18n'\n\nexport default (res, props) => {\n    const { t } = i18n\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.home) props.history.push('/')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning(t('processRes.accountNotFound'))\n                    break\n                case 'bad data':\n                    message.error(t('processRes.error'))\n                    break\n                default:\n                    message.warning(t('processRes.generalError'))\n                    break\n            }\n        } else {\n            message.error(t('processRes.generalError'))\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success(t('processRes.avaSaved'))\n                    break\n                case 'success':\n                    message.success(t('processRes.success'))\n                    break\n                case 'item saved':\n                    message.success(t('processRes.saved'))\n                    break\n                case 'progress created':\n                    message.success(t('processRes.goalStarted'))\n                    break\n                case 'reward created':\n                    message.success(t('processRes.rewardStarted'))\n                    break\n                case 'activity created':\n                    message.success(t('processRes.activityStarted'))\n                    break\n                default:\n                    message.success(t('processRes.success'))\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","export default (props, notFoundResources) => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'goal')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of [\n                        ...store.account.rewards,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'reward')\n                            .map(item => item.resourceId),\n                        ,\n                    ]) {\n                        if (!store.rewardData[reward]) {\n                            requestedResources.rewardData.push(reward)\n                        }\n                        neededResources.rewardData.push(reward)\n                    }\n                    for (let activity of [\n                        ...store.account.activities,\n                        ...store.account.recent\n                            .filter(item => item.resourceType === 'activity')\n                            .map(item => item.resourceId),\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of store.profile.followProgresses) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let progress of store.profile.progresses) {\n                        if (!store.progress[progress]) {\n                            requestedResources.progress.push(progress)\n                        }\n                        neededResources.progress.push(progress)\n                    }\n\n                    for (let transaction of store.profile.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        } else {\n                            const rewardId =\n                                store.transactionData[transaction].reward\n                            if (!store.rewardData[rewardId]) {\n                                requestedResources.rewardData.push(rewardId)\n                            }\n                            neededResources.rewardData.push(rewardId)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let reward of store.profile.rewards) {\n                        if (!store.reward[reward]) {\n                            requestedResources.reward.push(reward)\n                        }\n                        neededResources.reward.push(reward)\n                    }\n                    for (let activity of store.profile.activities) {\n                        if (!store.activity[activity]) {\n                            requestedResources.activity.push(activity)\n                        }\n                        neededResources.activity.push(activity)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentGoal) {\n                if (store.progress._id !== store.currentGoal) {\n                    requestedResources.progress.push(store.currentGoal)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.users)\n                        participants = participants.concat(store.progress.users)\n                    if (store.progress.likes)\n                        participants = participants.concat(store.progress.likes)\n                    if (store.progress.followingAccounts)\n                        participants = participants.concat(\n                            store.progress.followingAccounts\n                        )\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n\n                    for (let reward of [\n                        ...store.progress.rewards,\n                        ...store.progress.oldRewards,\n                    ]) {\n                        if (!store.rewardData[reward.reward]) {\n                            requestedResources.rewardData.push(reward.reward)\n                        }\n                        neededResources.rewardData.push(reward.reward)\n                    }\n                    for (let activity of [\n                        ...store.progress.activities,\n                        ...store.progress.oldActivities,\n                    ]) {\n                        if (!store.activityData[activity]) {\n                            requestedResources.activityData.push(activity)\n                        }\n                        neededResources.activityData.push(activity)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'reward')\n                                neededResources.rewardData.push(\n                                    post.parent.parentId\n                                )\n                            if (post.parent.parentType === 'activity')\n                                neededResources.activityData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.currentReward) {\n                if (store.reward._id !== store.currentReward) {\n                    requestedResources.reward.push(store.currentReward)\n                } else {\n                    neededResources.reward.push(store.reward._id)\n                    for (let friend of [\n                        ...store.reward.likes,\n                        ...store.reward.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.reward.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.currentActivity) {\n                if (store.activity._id !== store.currentActivity) {\n                    requestedResources.activity.push(store.currentActivity)\n                } else {\n                    neededResources.activity.push(store.activity._id)\n                    for (let friend of [\n                        ...store.activity.likes,\n                        ...store.activity.followingAccounts,\n                    ]) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n\n                    for (let post of store.activity.posts) {\n                        if (!store.post[post]) {\n                            requestedResources.post.push(post)\n                        }\n                        neededResources.post.push(post)\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(\n                    new Set(\n                        obj[attr].filter(\n                            item => !notFoundResources.includes(item)\n                        )\n                    )\n                )\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n\n    check1('account', 'account')\n    check1('account', 'profile')\n    check2('progress')\n    check2('reward')\n    check2('activity')\n    check2('post')\n    check2('friendData')\n    check2('rewardData')\n    check2('activityData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n    return requestedResources\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        reward: [],\n        activity: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    checkData('progress')\n    checkData('reward')\n    checkData('activity')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('rewardData')\n    checkData('activityData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.reward.length > 0 ||\n        notNeededResources.rewardData.length > 0 ||\n        notNeededResources.activity.length > 0 ||\n        notNeededResources.activityData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        reward: {},\n        activity: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n        rewardData: {},\n        activityData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n    if (store.activity._id) {\n        resources.activity[store.activity._id] = store.activity.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('rewardData')\n    addData('activityData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport Cookies from 'universal-cookie'\nimport axios from 'axios'\nimport i18n from '../../translations/i18n'\n\nexport let webSocket = false\nconst cookies = new Cookies()\nconst listOfGroups = [\n    'user',\n    'account',\n    'progress',\n    'reward',\n    'activity',\n    'post',\n    'postData',\n    'progressData',\n    'friendData',\n    'transactionData',\n    'rewardData',\n    'activityData',\n]\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        reward: [],\n        activity: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n        rewardData: [],\n        activityData: [],\n        notFoundResources: [],\n    }\n    markNotFoundResource = ids => {\n        const newNotFound = [...this.state.notFoundResources, ...ids]\n        this.setState({ notFoundResources: newNotFound })\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'heartbeat',\n                        notNeededResources,\n                    })\n                )\n            }\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    this.props.setData({\n                        onlineUsers: news.onlineUsers,\n                    })\n                    break\n                case 'logout':\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(i18n.t('processRes.success'))\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToAccount':\n                    this.props.history.push(\n                        '/profile/' + this.props.store.account._id\n                    )\n                    break\n                case 'addResource':\n                    this.props.saveResource(\n                        news.resources,\n                        news.type,\n                        news.newOnlineUsers\n                    )\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n                case 'goTo':\n                    this.props.history.push(news.messageText || '/')\n                    break\n                case '404':\n                    message.error(i18n.t('processRes.404'))\n                    this.props.history.push(news.messageText || '/')\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'authSuccess':\n                    axios.defaults.headers.common['x-auth-token'] &&\n                        cookies.set(\n                            'auth_token',\n                            axios.defaults.headers.common['x-auth-token'],\n                            {\n                                path: '/',\n                                expires: new Date(\n                                    new Date().getTime() +\n                                        6 * 24 * 60 * 60 * 1000\n                                ),\n                            }\n                        )\n                    break\n                case 'structureSaved':\n                    this.props.structureIsSaved()\n                    break\n                case 'error':\n                    message.error(i18n.t('processRes.error'))\n                    break\n                case 'notFoundResource':\n                    this.markNotFoundResource(news._id)\n                    break\n                case 'addToStructure':\n                    this.props.addToStructure(\n                        news.accountId,\n                        news.structureId,\n                        news.resourceId\n                    )\n                    break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    // componentWillMount() {\n    //     this.checkInterval = setInterval(this.check, 50)\n    // }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of listOfGroups) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.checkInterval = setInterval(this.check, 50)\n        this.props.setConnectingToWS(true)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.store.currentAccount !== this.props.store.currentAccount)\n            if (webSocket && webSocket.readyState === 1) {\n                webSocket.send(\n                    JSON.stringify({\n                        messageCode: 'currentAccount',\n                        id: this.props.store.currentAccount,\n                    })\n                )\n            }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.initializeRequestResources(nextProps)\n    // }\n    // componentDidUpdate() {\n    //     this.initializeRequestResources(this.props)\n    // }\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            this.state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const newRequestedResources = getListOfNeededResources(\n            nextProps,\n            state.notFoundResources\n        )\n        for (let group of listOfGroups) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        // clearInterval(this.reRequestResourcesInterval)\n        // this.reRequestResourcesInterval = setInterval(\n        //     this.reRequestResources,\n        //     3000\n        // )\n        return newRequestedResources\n    }\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type, newOnlineUsers) =>\n            dispatch(actions.saveResource(data, type, newOnlineUsers)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n        addToStructure: (accountId, structureId, resourceId) =>\n            dispatch(\n                actions.addToStructure(accountId, structureId, resourceId)\n            ),\n        logout: () => dispatch(actions.logout()),\n        structureIsSaved: () => dispatch(actions.structureIsSaved()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const editPost = (accountId, postId, messageValue, images) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editPost',\n                accountId,\n                postId,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n\nexport const deletePost = (accountId, postId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deletePost',\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const deleteMessage = (accountId, postId, messageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteMessage',\n                accountId,\n                postId,\n                messageId,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const unfollowResource = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowResource',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const changeLikesResource = (accountId, resourceId, add, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesResource',\n                accountId,\n                resourceId,\n                add,\n                type,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n\nexport const addRecent = (accountId, resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRecent',\n                accountId,\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const saveStructure = (accountId, structure) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveStructure',\n                accountId,\n                structure,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const shareWithFriends = (accountId, url, friends, item) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'shareWithFriends',\n                accountId,\n                url,\n                friends,\n                item,\n            })\n        )\n    }\n}\n","import Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\nimport axios from 'axios'\nimport * as wsActions from '../../websocketActions'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    }\n\n    const userId = jwt_decode(token)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(null))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const setLanguage = language => ({\n    type: 'SET_LANGUAGE',\n    language,\n})\n\nexport const markRecentShown = () => ({\n    type: 'SET_RECENT_SHOWN',\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const addDragStep = () => ({\n    type: 'ADD_DRAG_STEP',\n})\n\nexport const setStructure = (structure, noNeedToSave) => ({\n    type: 'SET_STRUCTURE',\n    structure,\n    noNeedToSave,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n\nexport const addToStructure = (accountId, structureId, resourceId) => ({\n    type: 'ADD_TO_STRUCTURE',\n    accountId,\n    structureId,\n    resourceId,\n})\n\nexport const structureIsSaved = () => ({\n    type: 'STRUCTURE_IS_SAVED',\n})\n\nexport const addBlock = (id, blockType) => ({\n    type: 'ADD_BLOCK',\n    id,\n    blockType,\n})\n\nexport const setSizepos = (id, sizePos) => ({\n    type: 'SET_SIZEPOS',\n    id,\n    sizePos,\n})\n\nexport const saveValueMM = (id, value) => ({\n    type: 'SAVE_VALUE_MM',\n    id,\n    value,\n})\n\nexport const addEmptyToStructure = (id, selectedBox, type) => ({\n    type: 'ADD_EMPTY_TO_STRUCTURE',\n    id,\n    selectedBox,\n    resType: type,\n})\nexport const deleteBlock = id => ({\n    type: 'DELETE_BLOCK',\n    id,\n})\n\nexport const changeParentMM = (childId, parentId) => ({\n    type: 'CHANGE_PARENT_MM',\n    childId,\n    parentId,\n})\n\nexport const saveStructure = () => (dispatch, getState) => {\n    const state = getState()\n    console.log(state)\n    wsActions.saveStructure(state.account._id, state.structureMM)\n    dispatch({\n        type: 'STRUCTURE_IS_SAVED',\n    })\n}\n\nexport const setScaleMM = value => ({\n    type: 'SET_SCALEMM',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type, newOnlineUsers) => (\n    dispatch,\n    getState\n) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account, newOnlineUsers }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile, newOnlineUsers }))\n                }\n\n                break\n            case 'progress':\n                let progress = {}\n                for (let item of data) {\n                    progress[item._id] = item\n                }\n                dispatch(setData({ progress }))\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n\n            case 'reward':\n                let reward = {}\n                for (let item of data) {\n                    reward[item._id] = item\n                }\n                dispatch(setData({ reward }))\n                break\n            case 'activity':\n                let activity = {}\n                for (let item of data) {\n                    activity[item._id] = item\n                }\n                dispatch(setData({ activity }))\n                break\n\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData, newOnlineUsers }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n            case 'rewardData':\n                let rewardData = {}\n                for (let item of data) {\n                    rewardData[item._id] = item\n                }\n                dispatch(setData({ rewardData }))\n                break\n            case 'activityData':\n                let activityData = {}\n                for (let item of data) {\n                    activityData[item._id] = item\n                }\n                dispatch(setData({ activityData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    // console.log('--------------------------------result----------------')\n    // console.log(result)\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n            // check('progress')\n            // break\n            case 'reward':\n            // check('reward')\n            // break\n            case 'activity':\n                // check('activity')\n                // break\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'name',\n                            'notifications',\n                            'likes',\n                            'followingAccounts',\n                            'activities',\n                            'status',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'rewardData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'activityData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'name',\n                            'owner',\n                            'images',\n                            'likes',\n                            'stages',\n                            'followingAccounts',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n    InstagramLoginButton,\n} from 'react-social-login-buttons'\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    FormControlLabel,\n    Slide,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst cookies = new Cookies()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst LoginModal = props => {\n    const { t } = useTranslation()\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return props.loginVisible ? (\n        !cookieConsent ? (\n            <Dialog open={!cookieConsent}>\n                <DialogTitle>{'Cookies consent'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('login.cookieText')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            props.setLoginVisible(false)\n                            setCookieConsent(false)\n                        }}\n                    >\n                        {t('g.disagree')}\n                    </Button>\n                    <Button\n                        onClick={agreeWithCookies}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('g.agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : (\n            <Dialog\n                fullScreen\n                open={props.loginVisible}\n                onClose={() => props.setLoginVisible(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <div className=\"contentDiv\">\n                    <div\n                        className={classes.Container}\n                        style={{\n                            maxWidth: '500px',\n                            margin: '0 auto',\n                        }}\n                    >\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            {t('login.welcome')}\n                        </h1>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <InstagramLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `instagram/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={state}\n                                    onChange={() => setState(!state)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={t('login.rememberMe')}\n                        />\n\n                        <Divider style={{ margin: '20px' }} />\n\n                        <Button\n                            onClick={() => props.setLoginVisible(false)}\n                            color=\"secondary\"\n                        >\n                            {t('login.loginLater')}\n                        </Button>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            </Dialog>\n        )\n    ) : null\n}\n\nexport default withRouter(LoginModal)\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import {\n    Avatar,\n    Badge,\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Slide,\n    Theme,\n    Typography,\n    useScrollTrigger,\n} from '@material-ui/core'\nimport { History, NotificationsOutlined, Search } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport getAvatar from '../../utils/getAvatar'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport * as cll from './Layout.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst BottomMenu = props => {\n    const { account, progressData, activityData, rewardData } = props\n\n    const [recentVisible, setRecentVisible] = useState(!props.recentShown)\n    const [hideRecentTimeout, setHideRecentTimeout] = useState()\n    const scrollTrigger = !useScrollTrigger()\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n    const openLink = url => props.history.push(url)\n    // useEffect(() => {\n    //     if (!scrollTrigger) setRecentVisible(false)\n    // }, [scrollTrigger])\n\n    // useEffect(() => {\n    //     if (Boolean(logedIn && !isActivating && !props.recentShown)) {\n    //         const timeout = setTimeout(() => setRecentVisible(false), 6000)\n    //         setHideRecentTimeout(timeout)\n    //         props.markRecentShown()\n    //     }\n    // }, [Boolean(logedIn && !isActivating)])\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const classes = useStyles()\n\n    return (\n        <>\n            <Slide appear={false} direction=\"up\" in={scrollTrigger}>\n                <Box\n                    style={{\n                        position: 'fixed',\n                        bottom: '12px',\n                        width: '100%',\n                        zIndex: 1,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {logedIn && !isActivating && (\n                        <>\n                            {/* <Slide\n                                appear={false}\n                                direction=\"left\"\n                                in={recentVisible}\n                            >\n                                <Box style={{ margin: '6px 10px' }}>\n                                    <Paper\n                                        style={{\n                                            overflowX: 'auto',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'left',\n                                            position: 'relative',\n                                            maxWidth: '400px',\n                                            padding: '5px',\n                                            margin: 'auto',\n                                            pointerEvents: 'auto',\n                                        }}\n                                        onMouseDown={() => {\n                                            clearTimeout(hideRecentTimeout)\n                                        }}\n                                        onScroll={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                        onTouchStart={() =>\n                                            clearTimeout(hideRecentTimeout)\n                                        }\n                                    >\n                                        {account.recent.map((item, index) => {\n                                            const urlDir =\n                                                item.resourceType === 'goal'\n                                                    ? 'goals'\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? 'rewards'\n                                                    : 'activities'\n                                            const dataType =\n                                                item.resourceType === 'goal'\n                                                    ? progressData\n                                                    : item.resourceType ===\n                                                      'reward'\n                                                    ? rewardData\n                                                    : activityData\n\n                                            const data =\n                                                dataType[item.resourceId]\n\n                                            return data ? (\n                                                <Card\n                                                    style={{\n                                                        overflow: 'hidden',\n                                                        marginRight: '10px',\n                                                    }}\n                                                >\n                                                    <CardActionArea>\n                                                        <Link\n                                                            to={\n                                                                '/' +\n                                                                urlDir +\n                                                                '/' +\n                                                                data._id\n                                                            }\n                                                            onClick={() =>\n                                                                setRecentVisible(\n                                                                    false\n                                                                )\n                                                            }\n                                                        >\n                                                            <CardMedia\n                                                                style={{\n                                                                    height:\n                                                                        '56px',\n                                                                    width:\n                                                                        '56px',\n                                                                    backgroundSize:\n                                                                        'cover',\n                                                                    borderRadius:\n                                                                        '28',\n                                                                }}\n                                                                image={\n                                                                    data.images\n                                                                        .length >\n                                                                    0\n                                                                        ? data\n                                                                              .images[0]\n                                                                        : placeholderImages[\n                                                                              getPH(\n                                                                                  data._id\n                                                                              )\n                                                                          ]\n                                                                }\n                                                                title={\n                                                                    data.name\n                                                                }\n                                                            />\n                                                            <CardContent\n                                                                style={{\n                                                                    padding:\n                                                                        '0px',\n                                                                    position:\n                                                                        'absolute',\n                                                                    bottom:\n                                                                        '0px',\n                                                                    background:\n                                                                        'white',\n                                                                    width:\n                                                                        '100%',\n                                                                }}\n                                                            >\n                                                                <Typography\n                                                                    variant=\"body2\"\n                                                                    noWrap\n                                                                    align=\"center\"\n                                                                >\n                                                                    {data.name}\n                                                                </Typography>\n                                                            </CardContent>\n                                                        </Link>\n                                                    </CardActionArea>\n                                                </Card>\n                                            ) : null\n                                        })}\n                                    </Paper>\n                                </Box>\n                            </Slide> */}\n                            <Box className={cll.bottomMenu}>\n                                <Paper\n                                    elevation={3}\n                                    style={{\n                                        borderRadius: '37px',\n                                        pointerEvents: 'auto',\n                                    }}\n                                >\n                                    <IconButton onClick={() => openLink('/')}>\n                                        <Badge\n                                            badgeContent={\n                                                account.friends.filter(\n                                                    item =>\n                                                        item.status ===\n                                                        'inviting'\n                                                ).length\n                                            }\n                                            color=\"secondary\"\n                                        >\n                                            <Avatar\n                                                classes={\n                                                    props.history.location\n                                                        .pathname ===\n                                                        '/profile/' +\n                                                            account._id ||\n                                                    props.history.location\n                                                        .pathname === '/'\n                                                        ? {\n                                                              root:\n                                                                  classes.avatar,\n                                                          }\n                                                        : {}\n                                                }\n                                                src={getAvatar(\n                                                    account._id,\n                                                    account.image\n                                                )}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/events')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/events'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Badge\n                                            badgeContent={numberOfUnseenNots}\n                                            color=\"secondary\"\n                                        >\n                                            <NotificationsOutlined fontSize=\"large\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => openLink('/explore')}\n                                        color={\n                                            props.history.location.pathname ===\n                                            '/explore'\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                    >\n                                        <Search fontSize=\"large\" />\n                                    </IconButton>\n                                    {/* <IconButton\n                                        color={\n                                            recentVisible\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        onClick={() =>\n                                            setRecentVisible(!recentVisible)\n                                        }\n                                    >\n                                        <History fontSize=\"large\" />\n                                    </IconButton> */}\n                                </Paper>\n                            </Box>\n                        </>\n                    )}\n                </Box>\n            </Slide>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(BottomMenu)\n)\n","import {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n            onClose={props.close}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <div className=\"tinyEditorText_\">\n                <AppBar className={classes.appBar} color=\"primary\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={props.close}\n                            aria-label=\"close\"\n                        >\n                            <Close />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            className={classes.title}\n                            color=\"inherit\"\n                        >\n                            {props.title}\n                        </Typography>\n                        {props.save && (\n                            <Button\n                                autoFocus\n                                color=\"inherit\"\n                                onClick={props.save}\n                            >\n                                {props.saveText || t('g.save')}\n                            </Button>\n                        )}\n                    </Toolbar>\n                </AppBar>\n                <Toolbar />\n                {props.children}\n            </div>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../websocketActions'\n\nimport { IconButton, Menu, MenuItem, Button, Box } from '@material-ui/core'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendActionButton = props => {\n    const { t } = useTranslation()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return null\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    if (accountId === _id)\n        return props.additionalButtons ? (\n            <>\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick()\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </>\n        ) : null\n\n    return (\n        <>\n            {props.minimized ? (\n                props.asText ? (\n                    <Button\n                        onClick={e => handleClick(e)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {t('g.actions')}\n                    </Button>\n                ) : (\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                )\n            ) : invitingFriends.find(item => item.friend === _id) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.acceptFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.acceptFriendship')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n                  item => item.friend === _id\n              ) ? (\n                <Box>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            wsActions.addFriend(accountId, _id)\n                        }}\n                    >\n                        {t('g.becomeFriends')}\n                    </Button>\n                    <IconButton onClick={e => handleClick(e)}>\n                        <MoreVertOutlined />\n                    </IconButton>\n                </Box>\n            ) : props.asText ? (\n                <Button\n                    onClick={e => handleClick(e)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    {t('g.actions')}\n                </Button>\n            ) : (\n                <IconButton onClick={e => handleClick(e)}>\n                    <MoreVertOutlined />\n                </IconButton>\n            )}\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.minimized &&\n                    invitingFriends.find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.acceptFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.acceptFriendship')}\n                        </MenuItem>\n                    )}\n                {props.minimized &&\n                    ![\n                        ...realFriends,\n                        ...invitingFriends,\n                        ...invitedFriends,\n                    ].find(item => item.friend === _id) && (\n                        <MenuItem\n                            key={7}\n                            onClick={() => {\n                                wsActions.addFriend(accountId, _id)\n                                handleClose()\n                            }}\n                        >\n                            {t('g.becomeFriends')}\n                        </MenuItem>\n                    )}\n                {props.additionalButtons &&\n                    props.additionalButtons.map((button, index) => (\n                        <MenuItem\n                            key={index + 100}\n                            onClick={() => {\n                                button.onClick\n                                handleClose()\n                            }}\n                        >\n                            {button.title}\n                        </MenuItem>\n                    ))}\n                {invitingFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"2\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.decline')}\n                    </MenuItem>\n                ) : invitedFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"3\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.cancelInvitation')}\n                    </MenuItem>\n                ) : realFriends.find(item => item.friend === _id) ? (\n                    <MenuItem\n                        key=\"4\"\n                        onClick={() => {\n                            wsActions.unfriend(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfriend')}\n                    </MenuItem>\n                ) : null}\n                {props.noFollow ? null : account.followAccounts.includes(\n                      _id\n                  ) ? (\n                    <MenuItem\n                        key=\"5\"\n                        onClick={() => {\n                            wsActions.unfollowAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.unfollow')}\n                    </MenuItem>\n                ) : (\n                    <MenuItem\n                        key=\"6\"\n                        onClick={() => {\n                            wsActions.followAccount(accountId, _id)\n                            handleClose()\n                        }}\n                    >\n                        {t('g.follow')}\n                    </MenuItem>\n                )}\n            </Menu>\n        </>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport { Typography } from '@material-ui/core'\nimport Badge from 'antd/es/badge'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult, onlineUsers } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => {\n        const text = getUserData(id) ? getUserData(id).name : id\n        return props.typography ? <Typography noWrap>{text}</Typography> : text\n    }\n    const userAvatar = id => {\n        const ava = getUserData(id) ? (\n            <Avatar\n                src={getAvatar(id, getUserData(id).image)}\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group || props.noName ? {} : { margin: ' 0 5px' }}\n            />\n        ) : null\n        return getUserData(id) ? (\n            onlineUsers.includes(id) ? (\n                <span key={id}>\n                    <Badge color=\"green\">{ava}</Badge>\n                </span>\n            ) : (\n                <span key={id}>{ava}</span>\n            )\n        ) : null\n    }\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                // display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import { Box } from '@material-ui/core'\nimport { relative } from 'path'\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport const placeholderImages = [\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n    'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n]\nexport const getPH = id => {\n    if (!id) return 0\n    const makeRand = x => {\n        x = Math.abs(x)\n        while (x > 1) x = x / 10\n        return x\n    }\n    const matches = id.match(/\\d+$/)\n    const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n    return Math.abs(\n        Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n    )\n}\nexport default withRouter(props => {\n    const images = props.images || []\n\n    const picture = !props.friends ? (\n        <img\n            style={{\n                maxWidth: '100%',\n                margin: 'auto',\n                display: 'block',\n                borderRadius: '15px',\n                boxShadow:\n                    '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n                ...props.style,\n            }}\n            src={\n                images.length > 0\n                    ? images[0]\n                    : placeholderImages[getPH(props.id)]\n            }\n        />\n    ) : null\n\n    return (\n        <Box style={{ position: 'relative' }}>\n            {props.noLink ? (\n                <>\n                    {picture}\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box style={{ flex: 1 }}>{props.body}</Box>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <>\n                    <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n                        {picture}\n                    </Link>\n                    <div\n                        style={{\n                            padding: '5px 0px',\n                            wordBreak: 'break-word',\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Link\n                            to={props.onClickLink}\n                            style={{ cursor: 'pointer', flex: 1 }}\n                        >\n                            {props.body}\n                        </Link>\n                        {props.actions && (\n                            <div style={{ marginLeft: '10px' }}>\n                                {props.actions}\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n        </Box>\n    )\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\nimport { useTranslation } from 'react-i18next'\n\nconst FriendCard = props => {\n    const { t } = useTranslation()\n    return (\n        <MasonryCard\n            friends={true}\n            noLink={true}\n            actions={\n                <FriendActionButton\n                    account={props.account}\n                    realFriends={props.realFriends}\n                    invitedFriends={props.invitedFriends}\n                    invitingFriends={props.invitingFriends}\n                    _id={props.friend._id}\n                    additionalButtons={[\n                        {\n                            title: t('g.seeProfile'),\n                            onClick: () =>\n                                props.history.push(\n                                    '/profile/' + props.friend._id\n                                ),\n                        },\n                    ]}\n                    asIcons={true}\n                />\n            }\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport FriendCard from '../../components/FriendCard'\nimport {\n    Container,\n    createStyles,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport { SearchOutlined } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n            margin: '30px auto',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            margin: 'auto',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n)\nconst AddFriends = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    useEffect(() => {\n        props.setFriendSearchResult({})\n        setSearchField('')\n    }, [props.open])\n    const [searchField, setSearchField] = useState('')\n    const { account, friendData, searchResult } = props\n\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    return (\n        <Container style={{ paddingTop: '20px', maxWidth: '800px' }}>\n            <Typography variant=\"body2\" align=\"center\">\n                {t('friends.instructions')}\n            </Typography>\n            <Paper className={classes.root}>\n                <InputBase\n                    className={classes.input}\n                    placeholder={t('friends.searchFriends')}\n                    onChange={e => setSearchField(e.target.value)}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    onClick={() => wsActions.searchFriends(searchField)}\n                >\n                    <SearchOutlined />\n                </IconButton>\n            </Paper>\n            {searchResult.length > 0 &&\n                searchResult.map(friend => (\n                    <FriendCard\n                        {...props}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import { Menu, MenuItem, Tooltip, Button } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n        },\n        languageText: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        languageIcon: {\n            display: 'block',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\nconst LanguageSwitcher = props => {\n    const { currentLanguage } = props\n    const { i18n, t } = useTranslation()\n    const classes = useStyles()\n\n    const [languageMenu, setLanguageMenu] = useState(null)\n    const handleLanguageIconClick = event => {\n        setLanguageMenu(event.currentTarget)\n    }\n    const handleLanguageMenuClose = code => {\n        if (code) i18n.changeLanguage(code)\n        setLanguageMenu(null)\n    }\n    const LANGUAGES_LABEL = [\n        { code: 'en', text: 'English' },\n        { code: 'ru', text: 'Русский' },\n    ]\n\n    return (\n        <>\n            <Tooltip title={t('changeLanguage')} enterDelay={300}>\n                <Button\n                    color=\"inherit\"\n                    aria-owns={languageMenu ? 'language-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleLanguageIconClick}\n                    data-ga-event-category=\"header\"\n                    data-ga-event-action=\"language\"\n                >\n                    <LanguageIcon className={classes.languageIcon} />\n                    <span\n                        className={\n                            props.settings\n                                ? classes.language\n                                : [classes.language, classes.languageText].join(\n                                      ' '\n                                  )\n                        }\n                    >\n                        {LANGUAGES_LABEL.filter(\n                            language => language.code === currentLanguage\n                        ).length > 0\n                            ? LANGUAGES_LABEL.filter(\n                                  language => language.code === currentLanguage\n                              )[0].text\n                            : LANGUAGES_LABEL[0].text}\n                    </span>\n                    <ExpandMoreIcon fontSize=\"small\" />\n                </Button>\n            </Tooltip>\n\n            <Menu\n                id=\"language-menu\"\n                anchorEl={languageMenu}\n                open={Boolean(languageMenu)}\n                onClose={() => handleLanguageMenuClose()}\n            >\n                {LANGUAGES_LABEL.map(language => (\n                    <MenuItem\n                        component=\"a\"\n                        data-no-link=\"true\"\n                        key={language.code}\n                        selected={i18n.language === language.code}\n                        onClick={() => handleLanguageMenuClose(language.code)}\n                    >\n                        {language.text}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguage: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(LanguageSwitcher)\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\nimport i18n from '../translations/i18n'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: i18n.t('rules.nicknameShort'),\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `${i18n.t('rules.nicknameLong')} ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: i18n.t('rules.nicknameType'),\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.nameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.nameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: i18n.t('rules.accNameShort'),\n    },\n    {\n        max: fieldLength.name,\n        message: `${i18n.t('rules.accNameLong')} ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `${i18n.t('rules.descLong')} ${fieldLength.description}.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: i18n.t('rules.messageShort'),\n    },\n    {\n        max: fieldLength.message,\n        message: `${i18n.t('rules.messageLong')} ${fieldLength.message}.`,\n    },\n]\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst ConnectionsSelect = props => {\n    const { t } = useTranslation()\n    const { account, friendData } = props\n    return account._id && friendData ? (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder={t('g.pleaseSelect')}\n            value={props.value}\n            onChange={props.onChange}\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {[\n                props.account,\n                ...props.account.friends\n                    .filter(friend => friend.status === 'friend')\n                    .map(friend => props.friendData[friend.friend]),\n            ].map(\n                item =>\n                    item &&\n                    item._id && (\n                        <Select.Option key={item._id}>\n                            <UserButton id={item._id} noClick={true} />\n                        </Select.Option>\n                    )\n            )}\n        </Select>\n    ) : (\n        <span>Please login to share with your Addspire friends.</span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(ConnectionsSelect)\n","import React, { Component } from 'react'\nimport { withLeaflet } from 'react-leaflet'\nimport Locate from 'leaflet.locatecontrol'\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css'\nimport { withTranslation } from 'react-i18next'\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const { map } = this.props.leaflet\n\n        const lc = new Locate({\n            position: 'topleft',\n            strings: {\n                title: this.props.t('explore.myLocation'),\n            },\n\n            drawCircle: false,\n            drawMarker: false,\n            keepCurrentZoomLevel: true,\n            setView: this.props.setView === 'no' ? false : 'untilPanOrZoom',\n            flyTo: true,\n        })\n        lc.addTo(map)\n        navigator.geolocation.getCurrentPosition(() => lc.start())\n    }\n\n    render() {\n        return null\n    }\n}\n\nexport default withLeaflet(withTranslation()(LocateControl))\n","import message from 'antd/es/message'\nimport axios from 'axios'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            if (!data) {\n                callback()\n            } else {\n                urltoFile(data, '/120').then(function(file) {\n                    getSignedRequest(file, filename, callback)\n                })\n            }\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    try {\n        var data\n        var img = new Image()\n        img.onload = function() {\n            const widthCoef = img.width / size.width\n            const heightCoef = img.height / size.height\n            var oc = document.createElement('canvas'),\n                octx = oc.getContext('2d')\n            oc.width = img.width\n            oc.height = img.height\n            octx.drawImage(img, 0, 0)\n            if (widthCoef > 1 || heightCoef > 1) {\n                if (img.width > img.height) {\n                    oc.height = (img.height / img.width) * size.width\n                    oc.width = size.width\n                } else {\n                    oc.width = (img.width / img.height) * size.width\n                    oc.height = size.width\n                }\n            }\n            octx.drawImage(oc, 0, 0, oc.width, oc.height)\n            octx.drawImage(img, 0, 0, oc.width, oc.height)\n            data = oc.toDataURL('image/jpeg', 0.6)\n            cb(data)\n        }\n        img.onerror = () => {\n            cb()\n        }\n        img.src = src\n    } catch {}\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {})\n}\n","import Upload from 'antd/es/upload'\nimport React, { useState, useEffect } from 'react'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst ImagePickerMulti = props => {\n    const { t } = useTranslation()\n    const [images, setImages] = useState(props.images || [])\n    const [previewImage, setPreviewImage] = useState()\n\n    useEffect(() => {\n        props.onValueChange(images)\n    }, [images])\n\n    return (\n        <>\n            <Upload\n                accept=\"image/*\"\n                listType=\"picture-card\"\n                fileList={images.map((image, index) => ({\n                    url: image,\n                    uid: index,\n                }))}\n                onPreview={file => {\n                    setPreviewImage(file.url)\n                }}\n                onChange={({ fileList }) =>\n                    setImages(fileList.map(item => item.url))\n                }\n                customRequest={({ file }) => {\n                    uploadFile(file, 800, undefined, url => {\n                        if (!url) {\n                            setImages([...images])\n                        } else {\n                            setImages([...images, url])\n                        }\n                    })\n                }}\n            >\n                {images.length >= 8 ? null : (\n                    <div\n                        style={{\n                            flex: 1,\n                            display: 'flex',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexDirection: 'column',\n                        }}\n                        onClick={e => {\n                            if (window.isRNWebView) {\n                                e.stopPropagation()\n                                window.ReactNativeWebView.postMessage(\n                                    'uploadFile'\n                                )\n                                window.callback = url => {\n                                    setImages([...images, url])\n                                }\n                            }\n                        }}\n                    >\n                        <PlusOutlined />\n                        <div className=\"ant-upload-text\">{t('g.upload')}</div>\n                    </div>\n                )}\n            </Upload>\n            <Dialog\n                open={Boolean(previewImage)}\n                onClose={() => setPreviewImage()}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    {t('g.previewImage')}\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <img src={previewImage} style={{ width: '100%' }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPreviewImage()} color=\"primary\">\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ImagePickerMulti\n","import React from 'react'\n// import { Editor } from '@tinymce/tinymce-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertFromRaw, ContentState, convertToRaw } from 'draft-js'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport htmlToDraft from 'html-to-draftjs'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n    let contentState\n    if (typeof props.value === 'string') {\n        const blocksFromHtml = htmlToDraft(props.value)\n        const { contentBlocks, entityMap } = blocksFromHtml\n        contentState = ContentState.createFromBlockArray(\n            contentBlocks,\n            entityMap\n        )\n        contentState = convertToRaw(contentState)\n    } else contentState = props.value\n    return (\n        // <Editor\n        //     apiKey=\"cgz3v5s8p6m4ivfow51e7pin01evzej1lqy90qmi5z75ly57\"\n        //     // initialValue={form.getFieldValue('description')}\n        //     init={{\n        //         inline: true,\n        //     }}\n        //     onEditorChange={props.onEditorChange}\n        //     value={props.value}\n        // />\n        <div className=\"buttonsMM\">\n            <Editor\n                placeholder={t('g.addSomeText')}\n                readOnly={props.readOnly}\n                toolbarClassName={props.MM && 'demo-toolbar-absolute buttonsMM'}\n                // toolbarOnFocus={props.MM}\n                wrapperClassName={!props.MM && 'demo-wrapper'}\n                {...(!props.readOnly ? {} : { contentState: contentState })}\n                defaultContentState={contentState}\n                onContentStateChange={value => {\n                    props.onEditorChange && props.onEditorChange(value)\n                    props.onEditorChangePlain &&\n                        props.onEditorChangePlain(\n                            convertFromRaw(value).getPlainText(' ')\n                        )\n                }}\n                toolbar={{\n                    options: [\n                        'inline',\n                        ...(props.MM ? [] : ['blockType']),\n                        'fontSize',\n                        'fontFamily',\n                        'list',\n                        'textAlign',\n                        'colorPicker',\n                        'link',\n                        'emoji',\n                        'remove',\n                        'history',\n                    ],\n                    inline: { inDropdown: true },\n                    list: { inDropdown: true },\n                    textAlign: { inDropdown: true },\n                    link: { inDropdown: true },\n                    history: { inDropdown: true },\n                }}\n                toolbarHidden={props.readOnly}\n            />\n        </div>\n    )\n}\n","export default [\n    'animals',\n    'building',\n    'cars',\n    'diy',\n    'design',\n    'education',\n    'entertainment',\n    'food',\n    'gardening',\n    'health',\n    'sport',\n    'home',\n    'kids',\n    'fashion',\n    'nature',\n    'travel',\n    'other',\n]\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport goalCategories from '../../constants/goalCategories'\nconst GoalCategories = props => {\n    const { t } = useTranslation()\n    const handleClick = category => {\n        let value = props.value ? [...props.value] : []\n        if (value.includes(category))\n            props.onChange(value.filter(item => item !== category))\n        else {\n            if (!props.nolim) while (value.length > 4) value.pop()\n            props.onChange([...value, category])\n        }\n    }\n    return (\n        <>\n            {goalCategories.map(category => (\n                <Chip\n                    label={t('g.' + category)}\n                    onClick={() => handleClick(category)}\n                    color={\n                        props.value && props.value.includes(category)\n                            ? 'primary'\n                            : 'default'\n                    }\n                    style={{ margin: '5px' }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default GoalCategories\n","import { Chip } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\n\nconst WeekDayPicker = props => {\n    const { t } = useTranslation()\n\n    const days =\n        props.language === 'ru' ? [1, 2, 3, 4, 5, 6, 0] : [0, 1, 2, 3, 4, 5, 6]\n    const value = props.value.map(item => parseInt(item))\n    return days.map(day => (\n        <Chip\n            style={{ margin: '0px 10px 10px 0px' }}\n            size=\"small\"\n            label={t(\n                'g.' +\n                    (day === 0\n                        ? 'sun'\n                        : day === 1\n                        ? 'mon'\n                        : day === 2\n                        ? 'tue'\n                        : day === 3\n                        ? 'wed'\n                        : day === 4\n                        ? 'thu'\n                        : day === 5\n                        ? 'fri'\n                        : day === 6\n                        ? 'sat'\n                        : '')\n            )}\n            color={value.includes(day) ? 'primary' : 'default'}\n            onClick={() => {\n                props.onChange(\n                    value.includes(day)\n                        ? value.filter(item => item !== day)\n                        : [...value, day].sort()\n                )\n            }}\n        />\n    ))\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n    }\n}\n\nexport default connect(mapStateToProps)(WeekDayPicker)\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Form from 'antd/es/form'\n\nimport { nameRules } from '../../constants/fieldRules'\nimport ConnectionsSelect from './ConnectionsSelect'\nimport Select from 'antd/es/select'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from '../../containers/Explore/LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Input,\n    Tabs,\n    Tab,\n    Paper,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport TinyEditor from '../UI/TinyEditor'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from './GoalCategories'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport WeekDayPicker from '../UI/WeekDayPicker'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditResource = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const {\n        resource,\n        account,\n        type,\n        structure,\n        setStructure,\n        selectedBox,\n        addEmptyToStructure,\n    } = props\n\n    const defPos = [40.689078, -74.044526]\n    const positionIsProvided =\n        resource && resource.position && resource.position.coordinates\n    const [position, setPosition] = useState(\n        positionIsProvided\n            ? [\n                  resource.position.coordinates[1],\n                  resource.position.coordinates[0],\n              ]\n            : defPos\n    )\n    const [initialPosition, setInitialPosition] = useState(position)\n    const [positionRead, setPositionRead] = useState(false)\n    const [currentTab, setCurrentTab] = useState(0)\n\n    const [descriptionPlain, setDescriptionPlain] = useState(\n        resource && resource.descriptionText\n    )\n\n    const onFinish = value => {\n        let structureId\n        if (!(resource && resource._id) && selectedBox) {\n            structureId = 'b' + Date.now()\n            addEmptyToStructure(structureId, selectedBox, type)\n        }\n        wsActions.saveResource(\n            account._id,\n            {\n                ...value,\n                descriptionText: descriptionPlain,\n                position: {\n                    type: 'Point',\n                    coordinates: [position[1], position[0]],\n                },\n                _id: resource && resource._id,\n            },\n            type,\n            props.goToResource,\n            structureId\n        )\n\n        props.cancel()\n    }\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 },\n    }\n\n    const [form] = Form.useForm()\n\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setPosition([latlng.lat, latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const mapClick = e => {\n        setPosition([e.latlng.lat, e.latlng.lng])\n        form.setFieldsValue({ nomap: false })\n    }\n    const classes = useStyles()\n\n    return !props.goalId || resource ? (\n        <div className=\"tinyEditorText_\">\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'g.' +\n                                (resource ? 'edit' : 'add') +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    resource || {\n                        name: t(\n                            'g.new' +\n                                type.charAt(0).toUpperCase() +\n                                type.slice(1)\n                        ),\n                        repeat: 'no',\n                        days: ['0'],\n                        nomap: false,\n                        users: [account._id],\n                        dueDate: new Date(),\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) => {\n                    allValues.days &&\n                        form.setFieldsValue({\n                            days: [...allValues.days].sort(),\n                        })\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={nameRules}\n                    getValueFromEvent={event => event.target.value}\n                >\n                    <Input fullWidth={true} />\n                </Form.Item>\n                <Form.Item label={t('g.categories')} name=\"category\">\n                    <GoalCategories />\n                </Form.Item>\n                <Form.Item label={t('g.place')}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            height: '300px',\n                        }}\n                    >\n                        <Map\n                            ref={map}\n                            center={initialPosition}\n                            zoom={11}\n                            onclick={mapClick}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'relative',\n                                zIndex: 1,\n                            }}\n                            gestureHandling={true}\n                            onlocationfound={e => {\n                                if (!positionIsProvided && !positionRead) {\n                                    mapClick(e)\n                                    setInitialPosition([\n                                        e.latlng.lat,\n                                        e.latlng.lng,\n                                    ])\n                                    setPositionRead(true)\n                                }\n                            }}\n                        >\n                            <LocateControl\n                                setView={\n                                    resource &&\n                                    resource.position &&\n                                    resource.position.coordinates\n                                        ? 'no'\n                                        : true\n                                }\n                            />\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                position={position}\n                                draggable\n                                ondragend={mapDragEnd}\n                            />\n                            <FullscreenControl position=\"topright\" />\n                        </Map>\n                    </div>\n                </Form.Item>\n                {type == 'goal' ? (\n                    <>\n                        <Form.Item label={t('g.detailsFor')}>\n                            <Paper square>\n                                <Tabs\n                                    value={currentTab}\n                                    onChange={(event, value) =>\n                                        setCurrentTab(value)\n                                    }\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                >\n                                    <Tab label={t('g.fromStart')} />\n                                    <Tab label={t('g.toGoal')} />\n                                    <Tab label={t('g.resultFinish')} />\n                                </Tabs>\n                            </Paper>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"startImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"startDate\"\n                            hidden={currentTab !== 0}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"startDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 0}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"dueDate\"\n                            hidden={currentTab !== 1}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 1}\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"finishImages\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.date')}\n                            name=\"finishDate\"\n                            hidden={currentTab !== 2}\n                        >\n                            <KeyboardDatePicker\n                                format=\"ddd, MMM D, YYYY\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"finishDescription\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                            hidden={currentTab !== 2}\n                        >\n                            <TinyEditor />\n                        </Form.Item>\n                    </>\n                ) : (\n                    <>\n                        <Form.Item\n                            name=\"images\"\n                            label={t('g.images')}\n                            valuePropName=\"images\"\n                            trigger=\"onValueChange\"\n                        >\n                            <ImagePickerMulti />\n                        </Form.Item>\n                        <Form.Item\n                            label={t('g.desc')}\n                            name=\"description\"\n                            // rules={descriptionRules}\n                            trigger=\"onEditorChange\"\n                        >\n                            <TinyEditor\n                                onEditorChangePlain={value =>\n                                    setDescriptionPlain(value)\n                                }\n                            />\n                        </Form.Item>\n                    </>\n                )}\n\n                {type === 'activity' && (\n                    <>\n                        <Form.Item label={t('progress.achievers')} name=\"users\">\n                            <ConnectionsSelect />\n                        </Form.Item>\n                        <Form.Item label={t('g.repeats')} name=\"repeat\">\n                            <Select\n                                getPopupContainer={trigger =>\n                                    trigger.parentNode\n                                }\n                            >\n                                <Option value=\"no\">{t('g.noRepeat')}</Option>\n                                <Option value=\"day\">{t('g.everyDay')}</Option>\n                                <Option value=\"weekday\">\n                                    {t('g.everyDayOfWeek')}\n                                </Option>\n                                <Option value=\"week\">{t('g.everyWeek')}</Option>\n                                <Option value=\"month\">\n                                    {t('g.everyMonth')}\n                                </Option>\n                                <Option value=\"year\">{t('g.everyYear')}</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            noStyle\n                            shouldUpdate={(prevValues, currentValues) =>\n                                prevValues.repeat !== currentValues.repeat\n                            }\n                        >\n                            {({ getFieldValue }) => {\n                                return getFieldValue('repeat') === 'weekday' ? (\n                                    <Form.Item label=\"Days of week\" name=\"days\">\n                                        <WeekDayPicker />\n                                    </Form.Item>\n                                ) : null\n                            }}\n                        </Form.Item>\n                    </>\n                )}\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    ) : null\n}\nexport default EditResource\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const saveResource = (\n    accountId,\n    value,\n    type,\n    goToResource,\n    structureId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveResource',\n                accountId,\n                value,\n                type,\n                goToResource,\n                structureId,\n            })\n        )\n    }\n}\n\nexport const leaveResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\nexport const deleteResource = (resourceId, type) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteResource',\n                resourceId,\n                type,\n            })\n        )\n    }\n}\n\nexport const changeResourceStatus = (status, resourceId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeResourceStatus',\n                resourceId,\n                status,\n            })\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport BottomMenu from './BottomMenu'\nimport * as cll from './Layout.module.css'\nimport * as actions from '../../store/actions'\n\nimport {\n    AppBar,\n    IconButton,\n    Slide,\n    Toolbar,\n    useScrollTrigger,\n    createStyles,\n    makeStyles,\n    Theme,\n    Container,\n    Badge,\n    Avatar,\n    LinearProgress,\n    Dialog,\n    useMediaQuery,\n    Box,\n    Paper,\n    Typography,\n    Button,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Card,\n} from '@material-ui/core'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport {\n    Book,\n    Cake,\n    FitnessCenter,\n    GifTwoTone,\n    History,\n    HomeRounded,\n    Launch,\n    NotificationImportant,\n    Notifications,\n    NotificationsOutlined,\n    Person,\n    Repeat,\n    Search,\n    Star,\n} from '@material-ui/icons'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport AddFriends from '../../containers/Friends/AddFriends'\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../MasonryCard'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        speedDial: {\n            right: '12px',\n            // bottom: theme.spacing(2),\n            bottom: '16px',\n            position: 'fixed',\n        },\n        logout: {\n            left: theme.spacing(2),\n            bottom: theme.spacing(2),\n            position: 'fixed',\n        },\n        login: {\n            right: '16px',\n            bottom: '16px',\n            position: 'fixed',\n        },\n        home: {\n            right: '16px',\n            bottom: '88px',\n            position: 'fixed',\n        },\n        avatar: {\n            border: '1px solid ' + theme.palette.primary.main,\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        blogLabel: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'inline',\n            },\n        },\n        blogIcon: {\n            display: 'inline',\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n    })\n)\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst AccountLayout = props => {\n    const { t } = useTranslation()\n    const domRef = useRef()\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const { account, language } = props\n\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n    const logedIn = props.isAuthed && account._id\n\n    const scrollTrigger = !useScrollTrigger()\n\n    const classes = useStyles()\n\n    const checkPagePath = paths => {\n        for (let path of paths)\n            if (props.history.location.pathname.indexOf(path) === 0) return true\n    }\n    const removeGutters =\n        !matches && checkPagePath(['/goals', '/posts', '/profile', '/account'])\n    return props.hide ? (\n        props.children\n    ) : (\n        <>\n            <div\n                className={cll.Layout}\n                style={props.white ? { background: '#fff' } : {}}\n            >\n                {!props.noHeader && (\n                    <Slide appear={false} direction=\"down\" in={scrollTrigger}>\n                        <AppBar elevation={1} color=\"secondary\">\n                            {props.isConnectingWS && !logedIn && (\n                                <LinearProgress\n                                    style={{\n                                        width: '100%',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                    }}\n                                />\n                            )}\n\n                            <Toolbar>\n                                <div\n                                    tabIndex={0}\n                                    ref={domRef}\n                                    style={{ width: 0, height: 0 }}\n                                />\n                                {/* <div className={classes.MenuButtonContiner}>\n                                <IconButton\n                                    onClick={() => props.history.goBack()}\n                                >\n                                    <ArrowBack color=\"primary\" />\n                                </IconButton>\n                            </div> */}\n                                {props.customHeader\n                                    ? props.customHeader\n                                    : (account._id && props.header) || (\n                                          <Box\n                                              style={{\n                                                  display: 'flex',\n                                                  flex: 1,\n                                              }}\n                                          >\n                                              <Box\n                                                  style={{\n                                                      display: 'flex',\n                                                      flex: 1,\n                                                  }}\n                                              >\n                                                  <Button\n                                                      component={Link}\n                                                      to={'/'}\n                                                      style={{\n                                                          padding: '3px 8px',\n                                                      }}\n                                                  >\n                                                      <img\n                                                          className={cll.logo}\n                                                          src=\"/logo-addspire.png\"\n                                                      />\n                                                  </Button>\n                                              </Box>\n                                              <Box style={{ display: 'flex' }}>\n                                                  <LanguageSwitcher />\n\n                                                  <Button\n                                                      component={Link}\n                                                      to={`/${\n                                                          language !== 'en'\n                                                              ? language + '/'\n                                                              : ''\n                                                      }blog`}\n                                                      style={{\n                                                          marginRight: '20px',\n                                                      }}\n                                                  >\n                                                      <Book\n                                                          className={\n                                                              classes.blogIcon\n                                                          }\n                                                      />\n                                                      <span\n                                                          className={\n                                                              classes.blogLabel\n                                                          }\n                                                      >\n                                                          {t('layout.blog')}\n                                                      </span>\n                                                  </Button>\n\n                                                  {(logedIn && isActivating) ||\n                                                  (!logedIn &&\n                                                      props.isConnectingWS) ? (\n                                                      <Button\n                                                          onClick={() =>\n                                                              props.history.push(\n                                                                  '/logout'\n                                                              )\n                                                          }\n                                                      >\n                                                          {t('g.logout')}\n                                                      </Button>\n                                                  ) : (\n                                                      !account._id && (\n                                                          <Button\n                                                              variant=\"contained\"\n                                                              color=\"primary\"\n                                                              // startIcon={<Person />}\n                                                              onClick={() =>\n                                                                  setLoginVisible(\n                                                                      true\n                                                                  )\n                                                              }\n                                                          >\n                                                              {t(\n                                                                  'layout.login'\n                                                              )}\n                                                          </Button>\n                                                      )\n                                                  )}\n                                              </Box>\n                                          </Box>\n                                      )}\n                            </Toolbar>\n                        </AppBar>\n                    </Slide>\n                )}\n                {!props.noContent && (\n                    <>\n                        <Toolbar id=\"back-to-top-anchor\" />\n                        <Container\n                            style={{\n                                paddingTop: '20px',\n                                paddingBottom: '20px',\n                            }}\n                            disableGutters={Boolean(removeGutters)}\n                        >\n                            {props.children}\n                        </Container>\n                    </>\n                )}\n                {/* <Toolbar\n                    style={{\n                        marginTop: '50px',\n                        background: '#eee',\n                        paddingTop: '22px',\n                        paddingBottom: '22px',\n                    }}\n                >\n                    <Box style={{ display: 'flex', flex: 1 }}>\n                        <Box\n                            style={{\n                                display: 'flex',\n                                flex: 1,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'baseline',\n                                }}\n                            >\n                                <img\n                                    style={{\n                                        height: '23px',\n                                    }}\n                                    src=\"/android-icon-36x36.png\"\n                                />\n                                <Typography variant=\"button\">\n                                    Addspire\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Box>\n                </Toolbar> */}\n                {(logedIn || !props.isConnectingWS) &&\n                    (isActivating && 'Activate your account')}\n                <BottomMenu />\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            {(logedIn || !props.isConnectingWS) && (!isActivating && <></>)}\n\n            {account._id && (\n                <>\n                    <DialogFullscreen\n                        open={addFriendOpen}\n                        close={() => {\n                            setAddFriendOpen(false)\n                        }}\n                        title={t('g.addFriend')}\n                    >\n                        <AddFriends\n                            close={() => setAddFriendOpen(false)}\n                            open={addFriendOpen}\n                            account={account}\n                            friendData={props.friendData}\n                        />\n                    </DialogFullscreen>\n\n                    <Dialog\n                        fullScreen\n                        open={Boolean(startResourceVisible)}\n                        onClose={() => {\n                            setStartResourceVisible('')\n                        }}\n                        TransitionComponent={TransitionComponent}\n                        scroll=\"paper\"\n                    >\n                        <EditResource\n                            account={account}\n                            friendData={props.friendData}\n                            cancel={() => setStartResourceVisible('')}\n                            type={startResourceVisible}\n                            goToResource\n                        />\n                    </Dialog>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        language: state.language,\n        recentShown: state.recentShown,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        markRecentShown: () => {\n            dispatch(actions.markRecentShown())\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountLayout)\n)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [posts, setPosts] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState(false)\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n             query {\n   posts (\n       ${\n           !all\n               ? `where: { language:\"${\n                     props.history.location.pathname.indexOf('/ru') === 0\n                         ? 'ru'\n                         : 'en'\n                 }\" },`\n               : ''\n       } \n   sort:\"published_at:desc\"){\n    url\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                setPosts(data.data.posts)\n                setTitle(t('blog.title'))\n            })\n    }, [props.history.location.pathname, all])\n    return (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <Layout white>\n                {/* <Welcome /> */}\n                <Button onClick={() => setAll(!all)} color=\"primary\">\n                    {all ? t('blog.hide') : t('blog.show')}\n                </Button>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        {posts.map(post => (\n                            <Grid item xs={12} md={6} xl={4}>\n                                <Card>\n                                    <Link\n                                        to={\n                                            props.history.location.pathname +\n                                            '/' +\n                                            post.url.split('.')[0]\n                                        }\n                                    >\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={\n                                                    post.previewImage &&\n                                                    post.previewImage.url\n                                                }\n                                                title={post.title}\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title}\n                                                </Typography>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"subtitle1\"\n                                                >\n                                                    {post.subtitle}\n                                                </Typography>\n\n                                                <Typography\n                                                    align=\"right\"\n                                                    variant=\"button\"\n                                                    color=\"textSecondary\"\n                                                    component=\"p\"\n                                                >\n                                                    {dayjs(\n                                                        post.published_at\n                                                    ).format('MMMM D[,] YYYY')}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\n\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport Layout from '../../components/Layout/Layout'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ActivateAccount = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success(t('activate.accountActivated'))\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(t('activate.accountTaken'))\n                    }\n                    if (res.data.errorCode) {\n                        message.error(t('activate.wrongData'))\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <Layout\n            header={\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                    color=\"inherit\"\n                    noWrap\n                >\n                    {t('activate.activateAccount')}\n                </Typography>\n            }\n        >\n            <Typography variant=\"h4\" align=\"center\">\n                Addspire\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                {t('activate.accountActivation')}\n            </Typography>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '50px auto 0px',\n                    padding: '15px',\n                    width: '90%',\n                }}\n            >\n                <Form.Item\n                    label={t('g.name')}\n                    name=\"name\"\n                    rules={accountNameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item\n                    label={t('activate.nickname')}\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder={t('activate.minLength')} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        {t('g.save')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress] && progressData[progress].notifications) {\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n        }\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n\n        try {\n            const data = JSON.parse(e.data)\n            switch (data.message) {\n                case 'token':\n                    const token = data.token\n                    props.tryAuth(token)\n                    break\n                case 'callback':\n                    window.callback(data.url)\n                    break\n                case 'back':\n                    if (!props.history.location.key) {\n                        window.isRNWebView &&\n                            window.ReactNativeWebView.postMessage('exit')\n                    } else props.history.goBack()\n                    break\n                default:\n                    return\n            }\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(RNBridge)\n)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport { spanStyle } from './Message'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n    text: {\n        '&>div::after': { border: 'none' },\n        '&>div::before': { border: 'none !important' },\n        '& textarea': {\n            fontSize: '14px',\n        },\n    },\n})\nconst AddMessage = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <Box style={{ display: 'flex', width: '100%', margin: '10px 0px' }}>\n            <Box style={{ marginRight: '10px' }}>\n                <UserButton\n                    noName={true}\n                    id={account._id}\n                    span={true}\n                    size={props.isTop ? 36 : 25}\n                />\n            </Box>\n            <Box style={{ flex: 1 }}>\n                <Box\n                    style={{\n                        background: '#efefef',\n                        padding: '5px 15px',\n                        borderRadius: '15px',\n                    }}\n                >\n                    <TextField\n                        multiline\n                        value={messageText}\n                        onChange={e => setMessageText(e.target.value)}\n                        margin=\"dense\"\n                        placeholder={t('post.addComment')}\n                        className={classes.text}\n                        fullWidth\n                    />\n                    {images.length > 0 && (\n                        <ImagePickerMulti\n                            images={images}\n                            onValueChange={value => setImages(value)}\n                        />\n                    )}\n                    <Button\n                        onClick={() => {\n                            wsActions.sendMessage(\n                                account._id,\n                                post._id,\n                                messageText,\n                                images,\n                                props.replyTo,\n                                props.editingMessage\n                            )\n                            setMessageText('')\n                            setImages([])\n                            if (props.onSend) props.onSend()\n                        }}\n                    >\n                        <span style={spanStyle}>{t('g.send')}</span>\n                    </Button>\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={({ file }) => {\n                            if (images.length > 8) {\n                                message.warning(t('post.imageLimit'))\n                                return\n                            }\n                            setImageLoading(true)\n                            uploadFile(file, 800, undefined, url => {\n                                setImageLoading(false)\n                                if (!url) {\n                                    setImages([...images])\n                                } else {\n                                    setImages([...images, url])\n                                }\n                            })\n                        }}\n                    >\n                        <Button\n                            onClick={e => {\n                                if (window.isRNWebView) {\n                                    e.stopPropagation()\n                                    window.ReactNativeWebView.postMessage(\n                                        'uploadFile'\n                                    )\n                                    window.callback = url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    }\n                                }\n                            }}\n                        >\n                            <span style={spanStyle}>{t('g.image')}</span>\n                        </Button>\n                    </Upload>\n                    {props.cancel && (\n                        <Button onClick={props.cancel}>\n                            <span style={spanStyle}>{t('g.cancel')}</span>\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    ) : (\n        <Box style={{ height: '10px' }} />\n    )\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto', margin: '10px 0' }}\n                dots={{ className: classes.Dots }}\n                autoplay\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        maxWidth: '800px',\n                                        backgroundRepeat: 'no-repeat',\n                                        borderRadius: '20px',\n                                        margin: 'auto',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React from 'react'\nimport * as wsActions from '../websocketActions'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst FollowButton = props => {\n    const { t } = useTranslation()\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type !== 'account') {\n            return account[\n                type === 'goal'\n                    ? 'followProgresses'\n                    : type === 'reward'\n                    ? 'followRewards'\n                    : 'followActivities'\n            ].includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followResource(account._id, id, type)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.unfollowAccount(account._id, id)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </Button>\n            ) : (\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={e => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        wsActions.followAccount(account._id, id)\n                    }}\n                >\n                    {t('g.follow')}\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport TinyEditor from './TinyEditor'\nimport { useTranslation } from 'react-i18next'\n\nconst ReadMore = props => {\n    const { t } = useTranslation()\n    const [overflow, setOverflow] = useState(false)\n    const [open, setOpen] = useState(false)\n    const descRef = useRef(null)\n\n    useEffect(() => {\n        if (\n            descRef.current &&\n            descRef.current.offsetHeight > props.initialHeight\n        ) {\n            setOverflow(true)\n        }\n    }, [\n        descRef.current && descRef.current.offsetHeight,\n        props.content,\n        props.contentEditor,\n        props.children,\n    ])\n    return (\n        <div\n            style={{\n                maxHeight: open ? 'initial' : props.initialHeight + 'px',\n                overflow: 'hidden',\n                position: 'relative',\n                paddingBottom: overflow && open ? '50px' : '0px',\n            }}\n        >\n            {props.content && (\n                <div\n                    ref={descRef}\n                    dangerouslySetInnerHTML={{ __html: props.content }}\n                />\n            )}\n            {props.contentEditor && (\n                <div ref={descRef}>\n                    <TinyEditor readOnly value={props.contentEditor} />\n                </div>\n            )}\n            {props.children && <div ref={descRef}>{props.children}</div>}\n            {overflow && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        // zIndex: 1,\n                    }}\n                >\n                    <div\n                        style={{\n                            transition: 'opacity 0.25s',\n                            opacity: open ? 0 : 1,\n                            backgroundImage:\n                                'linear-gradient(to bottom, rgba(255, 255, 255, 1), #ffffff )',\n                            content: '',\n                            height: '50px',\n                            width: '100%',\n\n                            bottom: '0',\n                            left: '0',\n                            position: 'absolute',\n                        }}\n                    />\n\n                    <Button color=\"primary\" onClick={() => setOpen(!open)}>\n                        {open\n                            ? t('g.readLess')\n                            : t('g.readMore') + (props.addTitle || '')}\n                    </Button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReadMore\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport TinyEditor from '../UI/TinyEditor'\nimport ImagePickerMulti from '../UI/ImagePickerMulti'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst EditPost = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [images, setImages] = useState(props.images || [])\n\n    const [messageText, setMessageText] = useState(props.content || '')\n\n    useEffect(() => {\n        setImages(props.images || [])\n        setMessageText(props.content || '')\n    }, [props.open])\n\n    const handleSave = () => {\n        props.save(images, messageText)\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setImages([])\n        setMessageText('')\n        props.cancel()\n    }\n\n    return (\n        <DialogFullscreen\n            open={props.open}\n            close={handleCancel}\n            title={props.title}\n            save={handleSave}\n        >\n            <Box\n                style={{\n                    padding: '0 16px',\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    width: '100%',\n                }}\n            >\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.desc')}\n                </Typography>\n                <Box>\n                    <TinyEditor\n                        value={messageText}\n                        onEditorChange={value => setMessageText(value)}\n                    />\n                </Box>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('g.images')}\n                </Typography>\n                <ImagePickerMulti\n                    images={images}\n                    onValueChange={value => setImages(value)}\n                />\n                <Box\n                    style={{\n                        textAlign: 'right',\n                        marginTop: '50px',\n                    }}\n                >\n                    <Button size=\"large\" onClick={handleCancel}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                        onClick={handleSave}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Box>\n            </Box>\n        </DialogFullscreen>\n    )\n}\n\nexport default EditPost\n","import { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default props => {\n    const { t } = useTranslation()\n\n    return (\n        <Dialog open={Boolean(props.open)} onClose={props.cancel}>\n            <DialogTitle>{props.title}</DialogTitle>\n\n            <DialogActions>\n                <Button onClick={props.cancel} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        props.confirm()\n                        props.cancel()\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport * as wsActions from '../../websocketActions'\nimport AddMessage from './AddMessage'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    Badge,\n    Box,\n    Button,\n    Chip,\n    IconButton,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport { MoreVertOutlined, ThumbUp } from '@material-ui/icons'\nimport ReadMore from '../UI/ReadMore'\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport message from 'antd/es/message'\n\ndayjs().format()\n\nexport const spanStyle = {\n    fontSize: '12px',\n    color: '#666',\n    textTransform: 'none',\n}\nconst Message = props => {\n    const { t } = useTranslation()\n    const { account, message, friendData, post, replies, isStart } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [deleteMessageOpen, setDeleteMessageOpen] = useState(false)\n    const [likes, setLikes] = useState(null)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [editMessageOpen, setEditMessageOpen] = useState(false)\n\n    const handleEditPostSave = (images, messageText) => {\n        wsActions.editPost(account._id, post._id, messageText, images)\n        if (props.onSend) props.onSend()\n        handleEditPostCancel()\n    }\n\n    const handleEditPostCancel = () => {\n        setEditMessageOpen(false)\n    }\n\n    return account && friendData ? (\n        <>\n            {account._id !== message.author || !editingMessage ? (\n                <>\n                    {props.isStart ? (\n                        <Box\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                margin: '10px 0px',\n                            }}\n                        >\n                            <Box style={{ marginRight: '10px' }}>\n                                <UserButton\n                                    noName={true}\n                                    id={message.author}\n                                    span={true}\n                                />\n                            </Box>\n                            <Box style={{ flex: 1 }}>\n                                <span\n                                    style={{\n                                        color: '#333',\n                                        fontWeight: 'bold',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <UserButton\n                                        id={message.author}\n                                        span={true}\n                                        noAva={true}\n                                    />{' '}\n                                    <div\n                                        style={spanStyle}\n                                        onClick={() =>\n                                            props.history.push(\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                    '/goals/' +\n                                                        post.parent.parentId +\n                                                        '/post/' +\n                                                        post._id\n                                            )\n                                        }\n                                    >\n                                        {dayjs(message.date).fromNow()}\n                                    </div>\n                                    {/* <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/goals/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )} */}\n                                    {post.startMessage &&\n                                        ['wishlist', 'perk', 'goal'].includes(\n                                            post.startMessage.messageType\n                                        ) && (\n                                            <span\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                                onClick={() =>\n                                                    props.history.push(\n                                                        '/profile/' +\n                                                            message.author\n                                                    )\n                                                }\n                                            >\n                                                {post.startMessage\n                                                    .messageType === 'wishlist'\n                                                    ? t('g.wishlist')\n                                                    : post.startMessage\n                                                          .messageType ===\n                                                      'goals'\n                                                    ? t('g.goals')\n                                                    : t('g.rewards')}\n                                            </span>\n                                        )}\n                                </span>\n                            </Box>\n                            {account._id === message.author && (\n                                <Box>\n                                    <IconButton\n                                        onClick={event =>\n                                            setAnchorEl(event.currentTarget)\n                                        }\n                                    >\n                                        <MoreVertOutlined />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={() => setAnchorEl(null)}\n                                    >\n                                        <MenuItem\n                                            onClick={() => {\n                                                setEditMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.edit')}\n                                        </MenuItem>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setDeleteMessageOpen(true)\n                                                setAnchorEl(null)\n                                            }}\n                                        >\n                                            {t('g.delete')}\n                                        </MenuItem>\n                                    </Menu>\n                                    <EditPost\n                                        open={editMessageOpen}\n                                        cancel={handleEditPostCancel}\n                                        title={t('post.editPost')}\n                                        save={handleEditPostSave}\n                                        images={message.image}\n                                        content={message.text}\n                                    />\n                                    <ConfirmAction\n                                        open={deleteMessageOpen}\n                                        cancel={() =>\n                                            setDeleteMessageOpen(false)\n                                        }\n                                        title={t('post.confirmDelete')}\n                                        confirm={() =>\n                                            wsActions.deletePost(\n                                                account._id,\n                                                post._id\n                                            )\n                                        }\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    ) : (\n                        <>\n                            <Box style={{ display: 'flex', width: '100%' }}>\n                                <Box style={{ marginRight: '10px' }}>\n                                    <UserButton\n                                        noName={true}\n                                        id={message.author}\n                                        span={true}\n                                        size={props.isTop ? 36 : 25}\n                                    />\n                                </Box>\n                                <Box style={{ flex: 1 }}>\n                                    <Badge\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right',\n                                        }}\n                                        overlap=\"circle\"\n                                        badgeContent={\n                                            message.likes.length ? (\n                                                <Chip\n                                                    icon={<ThumbUp />}\n                                                    color=\"primary\"\n                                                    label={message.likes.length}\n                                                    size=\"small\"\n                                                    onClick={() =>\n                                                        setLikes(message.likes)\n                                                    }\n                                                />\n                                            ) : (\n                                                0\n                                            )\n                                        }\n                                    >\n                                        <Box\n                                            style={{\n                                                background: '#efefef',\n                                                padding: '5px 15px',\n                                                borderRadius: '15px',\n                                            }}\n                                        >\n                                            <UserButton\n                                                id={message.author}\n                                                span={true}\n                                                noAva={true}\n                                            />\n                                            {message.image &&\n                                                message.image.length > 0 && (\n                                                    <ImageCarousel\n                                                        images={message.image}\n                                                        height=\"60vmin\"\n                                                        type=\"contain\"\n                                                    />\n                                                )}\n                                            {message.text && (\n                                                <p\n                                                    style={{\n                                                        wordBreak: 'break-word',\n                                                    }}\n                                                >\n                                                    {message.text}\n                                                </p>\n                                            )}\n                                        </Box>\n                                    </Badge>\n                                    <Box>\n                                        <span\n                                            style={{\n                                                ...spanStyle,\n                                                marginRight: '15px',\n                                            }}\n                                        >\n                                            {dayjs(message.date).fromNow()}\n                                        </span>\n\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        message.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        message.messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                        >\n                                            <span style={spanStyle}>\n                                                {message.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n\n                                        {message.author !== account._id && (\n                                            <Button\n                                                onClick={() => {\n                                                    if (!account._id)\n                                                        message.warning(\n                                                            t('g.needLogin')\n                                                        )\n                                                    if (account._id)\n                                                        if (\n                                                            props.setReplyVisible\n                                                        ) {\n                                                            props.setReplyVisible(\n                                                                true\n                                                            )\n                                                            props.setReplyToUser(\n                                                                props.message\n                                                                    .author\n                                                            )\n                                                        } else {\n                                                            setReplyVisible(\n                                                                true\n                                                            )\n                                                            setReplyToUser('')\n                                                        }\n                                                    setShowReplies(true)\n                                                }}\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('post.reply')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                        {message.author === account._id && (\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingMessage(\n                                                        message.messageId\n                                                    )\n                                                }\n                                            >\n                                                <span style={spanStyle}>\n                                                    {t('g.edit')}\n                                                </span>\n                                            </Button>\n                                        )}\n                                    </Box>\n                                    {props.isTop &&\n                                    replies &&\n                                    replies.length > 0 ? (\n                                        showReplies ? (\n                                            replies.map((reply, index) => (\n                                                <Message\n                                                    key={index}\n                                                    message={reply}\n                                                    post={post}\n                                                    account={account}\n                                                    friendData={friendData}\n                                                    setReplyVisible={\n                                                        setReplyVisible\n                                                    }\n                                                    setReplyToUser={\n                                                        setReplyToUser\n                                                    }\n                                                />\n                                            ))\n                                        ) : (\n                                            <Button\n                                                onClick={() =>\n                                                    setShowReplies(true)\n                                                }\n                                            >\n                                                <span\n                                                    style={{\n                                                        ...spanStyle,\n                                                        fontSize: '15px',\n                                                    }}\n                                                >\n                                                    {`${t('g.show')} ${\n                                                        replies.length\n                                                    } ${t('post.replies')}`}\n                                                </span>\n                                            </Button>\n                                        )\n                                    ) : null}\n\n                                    {props.isTop && replyVisible ? (\n                                        <AddMessage\n                                            post={post}\n                                            account={account}\n                                            replyTo={message.messageId}\n                                            replyToUser={replyToUser}\n                                            cancel={() =>\n                                                setReplyVisible(false)\n                                            }\n                                        />\n                                    ) : null}\n                                </Box>\n                            </Box>\n                        </>\n                    )}\n\n                    {isStart ? (\n                        <>\n                            {message.messageType === 'wishlist' && (\n                                <>\n                                    {' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                            margin: '10px 0px 0px ',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${\n                                                    message.details.owner\n                                                }/${message.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {message.details.name}\n                                    </span>\n                                </>\n                            )}\n                            {message.text && (\n                                <ReadMore\n                                    initialHeight={700}\n                                    contentEditor={message.text}\n                                />\n                            )}\n                            {message.image && message.image.length > 0 && (\n                                <ImageCarousel\n                                    images={message.image}\n                                    height=\"60vmin\"\n                                    type=\"contain\"\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            ) : (\n                <AddMessage\n                    post={post}\n                    account={account}\n                    replyTo={message.messageId}\n                    editingMessage={editingMessage}\n                    content={message.text}\n                    images={message.image}\n                    onSend={() => setEditingMessage('')}\n                    cancel={() => setEditingMessage('')}\n                />\n            )}\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title=\"Message likes\"\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n        </>\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message, { spanStyle } from './Message'\nimport AddMessage from './AddMessage'\nimport {\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport MasonryCard from '../MasonryCard'\nimport FollowButton from '../FollowButton'\nimport UserButton from '../UserButton/UserButton'\nimport {\n    AddCommentOutlined,\n    ThumbUp,\n    ThumbUpOutlined,\n} from '@material-ui/icons'\nimport ShareButton from '../UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\nimport message from 'antd/es/message'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst Post = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { post, account, friendData, progressData } = props\n    const isPostPage = props.history.location.pathname.indexOf(post._id) > -1\n    const [postOpen, setPostOpen] = useState(props.showReplies || isPostPage)\n    const [likes, setLikes] = useState(null)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    const postRef = useRef(null)\n\n    useEffect(() => {\n        if (isPostPage && postRef.current) {\n            window.scrollTo({\n                top: postRef.current.offsetTop - 70,\n                behavior: 'smooth',\n            })\n            setPostOpen(true)\n        }\n    }, [isPostPage])\n    return post ? (\n        <>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.mainPost')}\n                </Typography>\n            )}\n            <Card elevation={isPostPage && 3}>\n                <CardContent ref={postRef}>\n                    {!props.noStartMessage && (\n                        <>\n                            <Message\n                                message={post.startMessage}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                progressData={progressData}\n                                replies={[]}\n                                isStart={true}\n                            />\n\n                            {post.startMessage.likes.length > 0 && (\n                                <Chip\n                                    icon={<ThumbUp />}\n                                    color=\"primary\"\n                                    label={post.startMessage.likes.length}\n                                    size=\"small\"\n                                    onClick={() =>\n                                        setLikes(post.startMessage.likes)\n                                    }\n                                    style={{ marginBottom: '10px' }}\n                                />\n                            )}\n                            <Divider />\n                        </>\n                    )}\n\n                    <div\n                        style={{\n                            textAlign: 'left',\n                            // marginBottom: '200px',\n                            position: 'relative',\n                        }}\n                    >\n                        {!props.noPostControls && (\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-around',\n                                    }}\n                                >\n                                    <span key=\"comment-basic-like\">\n                                        <Button\n                                            onClick={() => {\n                                                if (account._id)\n                                                    wsActions.changeLikesMessage(\n                                                        post.startMessage.likes.includes(\n                                                            account._id\n                                                        )\n                                                            ? 'dislikeMessage'\n                                                            : 'likeMessage',\n                                                        post.startMessage\n                                                            .messageId,\n                                                        account._id,\n                                                        post._id\n                                                    )\n                                                else\n                                                    message.warning(\n                                                        t('g.needLogin')\n                                                    )\n                                            }}\n                                            startIcon={<ThumbUpOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {post.startMessage.likes.includes(\n                                                    account._id\n                                                )\n                                                    ? t('g.unlike')\n                                                    : t('g.like')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    <span>\n                                        <Button\n                                            onClick={() => setPostOpen(true)}\n                                            startIcon={<AddCommentOutlined />}\n                                        >\n                                            <span style={spanStyle}>\n                                                {t('post.comment')}\n                                            </span>\n                                        </Button>\n                                    </span>\n                                    {/* <span key=\"comment-basic-like\">\n                                        <ShareButton\n                                            post\n                                            link={\n                                                post.parent.parentType ===\n                                                    'progress' &&\n                                                'https://addspire.com/goals/' +\n                                                    post.parent.parentId +\n                                                    '/post/' +\n                                                    post._id\n                                            }\n                                            media={\n                                                post.startMessage.image &&\n                                                post.startMessage.image.length >\n                                                    0 &&\n                                                post.startMessage.image[0]\n                                            }\n                                            title={t('post.shareText')}\n                                            item={{\n                                                postId: post._id,\n                                            }}\n                                        />\n                                    </span> */}\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {!postOpen ? (\n                            post.messages.length > 0 && (\n                                <Button onClick={() => setPostOpen(true)}>\n                                    <span\n                                        style={{\n                                            ...spanStyle,\n                                            fontSize: '15px',\n                                        }}\n                                    >\n                                        {`${t('g.show')} \n                                        ${getNumberOfMessages(post.messages)} \n                                        ${t('post.comments')}`}\n                                    </span>\n                                </Button>\n                            )\n                        ) : (\n                            <>\n                                <AddMessage\n                                    post={post}\n                                    account={account}\n                                    isTop={true}\n                                />\n                                {post.messages && post.messages.length\n                                    ? post.messages.map((message, index) => (\n                                          <Message\n                                              key={index}\n                                              message={message}\n                                              post={post}\n                                              account={account}\n                                              friendData={friendData}\n                                              replies={message.replies}\n                                              isTop={true}\n                                          />\n                                      ))\n                                    : null}\n                            </>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n            <DialogFullscreen\n                open={Boolean(likes)}\n                close={() => setLikes(null)}\n                title={t('post.messageLikes')}\n            >\n                {likes &&\n                    likes.map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n            </DialogFullscreen>\n            {isPostPage && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {t('post.otherPosts')}\n                </Typography>\n            )}\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport dayjs from 'dayjs'\nimport { Card, CardContent } from '@material-ui/core'\nimport * as wsActions from '../../websocketActions'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst DashboardEvents = props => {\n    const { t } = useTranslation()\n    const { lastNotifications } = props\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate\n                    .startOf('week')\n                    .format('wo [' + t('g.week') + '] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = dayjs()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = dayjs().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n\n    useEffect(() => {\n        wsActions.setLastSeenNot(\n            props.account._id,\n            lastNotifications.reduce(function(p, v) {\n                const vN = parseInt(v.notId)\n                if (isNaN(vN)) return p\n                return p > vN ? p : vN\n            }, 0)\n        )\n    }, [lastNotifications])\n    return (\n        <Card>\n            <CardContent>\n                {lastNotifications.map((item, index) => {\n                    let text = null,\n                        stageName\n\n                    switch (item.code) {\n                        case 'change name':\n                            text = (\n                                <span>\n                                    {' '}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.changedName')}\n                                </span>\n                            )\n                            break\n                        case 'delete account':\n                            text = (\n                                <span>\n                                    {item.user}\n                                    {t('dash.deletedAccount')}\n                                </span>\n                            )\n                            break\n                        case 'friend request':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.wantsToBecomeFriends')}\n                                </span>\n                            )\n                            break\n                        case 'friend add':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.becameFriends')}\n                                </span>\n                            )\n                            break\n                        case 'unfriend':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.and')}\n\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.friend}\n                                    />\n                                    {t('dash.stoppedFriends')}\n                                    {' stopped being friends.'}\n                                </span>\n                            )\n                            break\n                        case 'add wishlist item':\n                        case 'edit wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add wishlist item'\n                                        ? t('dash.addedToWish')\n                                        : t('dash.editedWish')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/wishlist/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete wishlist item':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName} {t('dash.fromWish')}\n                                </span>\n                            )\n                            break\n                        case 'add goal':\n                        case 'edit goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'add goal'\n                                        ? t('dash.addedGoal')\n                                        : t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {'.'}\n                                </span>\n                            )\n                            break\n                        case 'delete goal':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.deleted')}\n                                    {item.details.itemName}{' '}\n                                    {t('dash.fromGoals')}\n                                </span>\n                            )\n                            break\n\n                        case 'cancel transaction':\n                        case 'confirm transaction':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {item.code === 'cancel transaction'\n                                        ? t('dash.cancelled')\n                                        : t('dash.confirmed')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/shop/${item.user}/${\n                                                    item.details.itemId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName} ($\n                                        {item.details.price})\n                                    </span>\n                                    {t('dash.by')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.buyer}\n                                    />\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'start progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.startedParticipating')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${item.details.itemId}`\n                                            )\n                                        }\n                                    >\n                                        {item.details.itemName}\n                                    </span>\n                                    {t('dash.as')}\n                                    {item.details.as}.\n                                </span>\n                            )\n                            break\n                        case 'stage approve':\n                        case 'stage progress':\n                        case 'stage fail':\n                        case 'stage dismiss':\n                            stageName = getStageName(item.details)\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {item.code === 'stage approve'\n                                        ? t('dash.approved')\n                                        : item.code === 'stage progress'\n                                        ? t('dash.putToProgress')\n                                        : item.code === 'stage fail'\n                                        ? t('dash.markedFailed')\n                                        : t('dash.dismissed')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'stage complete':\n                            text = (\n                                <span>\n                                    {t('dash.goal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {stageName && (\n                                        <>\n                                            {t('dash.for')}\n                                            <span\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {stageName}\n                                            </span>\n                                        </>\n                                    )}\n\n                                    {t('dash.wasApprovedAndFinished')}\n                                </span>\n                            )\n                            break\n\n                        case 'leave progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.leftGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'edit progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.editedGoalND')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    {item.details.addedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andAdded')}\n                                            {item.details.addedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}{' '}\n                                        </>\n                                    ) : (\n                                        ''\n                                    )}\n                                    {item.details.droppedAccounts.length > 0 ? (\n                                        <>\n                                            {t('dash.andRemoved')}\n                                            {item.details.droppedAccounts.map(\n                                                ac => (\n                                                    <UserButton\n                                                        span={true}\n                                                        noAva={true}\n                                                        id={ac}\n                                                    />\n                                                )\n                                            )}\n                                            {'.'}\n                                        </>\n                                    ) : (\n                                        '.'\n                                    )}\n                                </span>\n                            )\n                            break\n                        case 'remove from progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.removed')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.fromGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add to progress':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />\n                                    {t('dash.added')}\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.details.account}\n                                    />\n                                    {t('dash.toGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'add reward':\n                        case 'add activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.added')} {item.name}{' '}\n                                    {item.code === 'add reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  noAva={true}\n                                                                  span={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n                        case 'delete reward':\n                        case 'delete activity':\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.removed')}\n                                    {item.name}\n                                    {item.code === 'delete reward' && (\n                                        <>\n                                            {t('dash.asRewardFor')}\n                                            {!item.details.for ||\n                                            item.details.for.length === 0\n                                                ? t('dash.all')\n                                                : item.details.for.map(\n                                                      account => (\n                                                          <>\n                                                              <UserButton\n                                                                  span={true}\n                                                                  noAva={true}\n                                                                  id={account}\n                                                              />\n                                                              ,\n                                                          </>\n                                                      )\n                                                  )}\n                                        </>\n                                    )}\n                                    {t('dash.inGoal')}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={() =>\n                                            props.history.push(\n                                                `/goals/${\n                                                    item.details.progressId\n                                                }`\n                                            )\n                                        }\n                                    >\n                                        {item.details.progressName}\n                                    </span>\n                                    .\n                                </span>\n                            )\n                            break\n\n                        case 'shared':\n                            let action = () =>\n                                props.history.push(\n                                    item.details.url.split(\n                                        'https://addspire.com'\n                                    ).length > 0\n                                        ? item.details.url.split(\n                                              'https://addspire.com'\n                                          )[1]\n                                        : item.details.url\n                                )\n                            let title = t('dash.somethingOnAddspire')\n\n                            if (\n                                item.details.progressName &&\n                                item.details.progressId\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/goals/${item.details.progressId}`\n                                    )\n                                title = item.details.progressName\n                            } else if (\n                                item.details.profileId &&\n                                item.details.profileName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/profile/${item.details.profileId}`\n                                    )\n                                title = item.details.profileName\n                            } else if (\n                                item.details.rewardId &&\n                                item.details.rewardName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/rewards/${item.details.rewardId}`\n                                    )\n                                title = item.details.rewardName\n                            } else if (\n                                item.details.activityId &&\n                                item.details.activityName\n                            ) {\n                                action = () =>\n                                    props.history.push(\n                                        `/activities/${item.details.activityId}`\n                                    )\n                                title = item.details.activityName\n                            }\n                            text = (\n                                <span>\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={item.user}\n                                    />{' '}\n                                    {t('dash.sharedAndInvitedYouTo')}{' '}\n                                    <span\n                                        style={{\n                                            fontWeight: 'bold',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => action()}\n                                    >\n                                        {title}\n                                    </span>\n                                </span>\n                            )\n                            break\n                        default:\n                            text = t('dash.newEvent')\n                            break\n                    }\n                    return (\n                        <div key={index}>\n                            {index !== 0 && (\n                                <Divider style={{ margin: '5px 0px' }} />\n                            )}\n                            <Comment\n                                avatar={\n                                    <UserButton\n                                        noName={true}\n                                        id={item.user}\n                                        span={true}\n                                    />\n                                }\n                                content={text}\n                            />\n                        </div>\n                    )\n\n                    // <Card>{text}</Card>\n                })}{' '}\n            </CardContent>\n        </Card>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Badge,\n    Button,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport DashboardEvents from './DashboardEvents'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            fontWeight: 600,\n        },\n    })\n)\n\nconst DashboardPosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState('posts')\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return (\n        <Layout\n            header={\n                <>\n                    <Button\n                        style={{ margin: '0px 20px' }}\n                        color={currentTab === 'posts' ? 'primary' : 'default'}\n                        onClick={() => setCurrentTab('posts')}\n                        variant=\"contained\"\n                    >\n                        {t('g.posts')}\n                    </Button>\n                    <Badge badgeContent={numberOfUnseenNots} color=\"secondary\">\n                        <Button\n                            color={\n                                currentTab === 'events' ? 'primary' : 'default'\n                            }\n                            onClick={() => setCurrentTab('events')}\n                            variant=\"contained\"\n                        >\n                            {t('g.events')}\n                        </Button>\n                    </Badge>\n                </>\n            }\n        >\n            {currentTab === 'posts' ? (\n                posts.map((item, index) => {\n                    let text = null\n                    const nots = item.notifications.filter(\n                        not => not.user !== account._id\n                    )\n                    const not = nots.length > 0 ? nots[0] : null\n                    if (not) {\n                        switch (not.code) {\n                            case 'edit wishlist item':\n                                text = t('dash.editedItem')\n                                break\n                            case 'edit goal':\n                                text = t('dash.editedGoal')\n                                break\n                            case 'comment':\n                                text = t('dash.addedComment')\n                                break\n                            case 'edit comment':\n                                text = t('dash.editedComment')\n                                break\n                            case 'like':\n                                text = t('dash.addedLike')\n                                break\n                            case 'dislike':\n                                text = t('dash.removedLike')\n                                break\n                            default:\n                                text = null\n                                break\n                        }\n                    }\n                    return (\n                        <div key={index} style={{ paddingTop: '10px' }}>\n                            {text && (\n                                <>\n                                    <Typography\n                                        className={classes.title}\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                    >\n                                        <span>\n                                            <UserButton\n                                                id={not.user}\n                                                noAva={true}\n                                                span={true}\n                                                style={{\n                                                    fontWeight: 'bold',\n                                                }}\n                                            />{' '}\n                                            {text}\n                                        </span>\n                                    </Typography>\n                                </>\n                            )}\n                            <Post\n                                friendData={friendData}\n                                account={account}\n                                post={item}\n                                progressData={progressData}\n                            />\n                        </div>\n                    )\n                })\n            ) : (\n                <DashboardEvents account={account} />\n            )}\n        </Layout>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { CircleMarker, Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport LocateControl from './LocateControl'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    Dialog,\n    IconButton,\n    makeStyles,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    Slider,\n    MenuItem,\n    Select,\n    Switch,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport { useTranslation } from 'react-i18next'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\n\nconst MapSettings = props => {\n    const { t } = useTranslation()\n    const {\n        mapVisible,\n        setMapVisible,\n        onSearch,\n        setSearch,\n        search,\n        positionChanged,\n        setPositionChanged,\n    } = props\n    const map = useRef(null)\n    const [radius, setRadius] = useState(false)\n    const [changed, setChanged] = useState(false)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    const [initialPosition, setInitialPosition] = useState(search.position)\n\n    const mapClick = e => {\n        setSearch({\n            ...search,\n            position: [e.latlng.lat, e.latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n    const mapDragEnd = e => {\n        const latlng = e.target.getLatLng()\n        setSearch({\n            ...search,\n            position: [latlng.lat, latlng.lng],\n            withMap: true,\n        })\n        setPositionChanged(true)\n    }\n\n    useEffect(() => {\n        getRadius()\n    }, [props.search])\n\n    useEffect(() => setChanged(false), [mapVisible])\n\n    const getRadius = () => {\n        if (map && map.current && map.current.leafletElement) {\n            const metresPerPixel =\n                (40075016.686 *\n                    Math.abs(\n                        Math.cos(\n                            (map.current.leafletElement.getCenter().lat *\n                                Math.PI) /\n                                180\n                        )\n                    )) /\n                Math.pow(2, map.current.leafletElement.getZoom() + 8)\n\n            setRadius(\n                search.units === 'mi'\n                    ? (search.distance * 1609) / metresPerPixel\n                    : (search.distance * 1000) / metresPerPixel\n            )\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Dialog\n            fullScreen\n            open={mapVisible}\n            onClose={() => {\n                setMapVisible(false)\n                if (changed) onSearch(search)\n            }}\n            TransitionComponent={TransitionComponent}\n            scroll=\"paper\"\n        >\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t('explore.searchWithLocation')}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => {\n                            setMapVisible(false)\n                            if (changed) onSearch(search)\n                        }}\n                    >\n                        {t('g.done')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Grid\n                container\n                style={{ padding: '15px', maxWidth: '800px' }}\n                alignItems=\"center\"\n            >\n                <Grid item xs={4} sm={4}>\n                    {t('explore.searchWithLocation')}\n                </Grid>\n                <Grid item xs={8} sm={8}>\n                    <Switch\n                        checked={search.withMap}\n                        color=\"primary\"\n                        onChange={e => {\n                            setSearch({\n                                ...search,\n                                withMap: e.target.checked,\n                            })\n                            setChanged(true)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.distance')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Slider\n                        valueLabelDisplay=\"auto\"\n                        min={1}\n                        max={200}\n                        onChange={(e, distance) => {\n                            setSearch({ ...search, distance })\n                            setChanged(true)\n                        }}\n                        value={search.distance}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    {t('g.units')}\n                </Grid>\n                <Grid item xs={8}>\n                    <Select\n                        value={search.units}\n                        onChange={event => {\n                            setSearch({\n                                ...search,\n                                units: event.target.value,\n                            })\n                            setChanged(true)\n                        }}\n                    >\n                        <MenuItem value=\"mi\">{t('g.miles')}</MenuItem>\n                        <MenuItem value=\"km\">{t('g.km')}</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    position: 'relative',\n                    minHeight: '300px',\n                    flex: 1,\n                    marginTop: '30px',\n                    overflow: 'hidden',\n                }}\n            >\n                <Map\n                    whenReady={() => getRadius()}\n                    ref={map}\n                    center={initialPosition}\n                    zoom={8}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        zIndex: 1,\n                    }}\n                    onClick={mapClick}\n                    gestureHandling={true}\n                    onzoomend={() => getRadius()}\n                    onlocationfound={e => {\n                        if (!positionChanged) {\n                            mapClick(e)\n                            setInitialPosition([e.latlng.lat, e.latlng.lng])\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocateControl />\n                    <CircleMarker center={search.position} radius={radius} />\n                    <Marker\n                        position={search.position}\n                        draggable\n                        ondragend={mapDragEnd}\n                    />\n                    <FullscreenControl position=\"topright\" />\n                </Map>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MapSettings\n","import React, { useState } from 'react'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Paper,\n    Snackbar,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\nimport { FileCopy, Share } from '@material-ui/icons'\nimport {\n    EmailShareButton,\n    FacebookShareButton,\n    // WeiboShareButton,\n    // HatenaShareButton,\n    // InstapaperShareButton,\n    // LineShareButton,\n    LinkedinShareButton,\n    // LivejournalShareButton,\n    // MailruShareButton,\n    // OKShareButton,\n    PinterestShareButton,\n    // PocketShareButton,\n    // RedditShareButton,\n    TelegramShareButton,\n    // TumblrShareButton,\n    TwitterShareButton,\n    // ViberShareButton,\n    VKShareButton,\n    // WhatsappShareButton,     ,\n    FacebookIcon,\n    TwitterIcon,\n    LinkedinIcon,\n    PinterestIcon,\n    VKIcon,\n    // OKIcon,\n    TelegramIcon,\n    // WhatsappIcon,\n    // RedditIcon,\n    // TumblrIcon,\n    // MailruIcon,\n    EmailIcon,\n    // LivejournalIcon,\n    // ViberIcon,\n    // WorkplaceIcon,\n    // LineIcon,\n    // PocketIcon,\n    // InstapaperIcon,\n    // WeiboIcon,\n    // HatenaIcon,\n    // FacebookMessengerIcon,\n    // FacebookMessengerShareButton,\n} from 'react-share'\nimport { spanStyle } from '../Post/Message'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Alert } from '@material-ui/lab'\nimport { useTranslation } from 'react-i18next'\nimport ConnectionsSelect from '../EditResource/ConnectionsSelect'\nimport { connect } from 'react-redux'\n\nconst ShareButton = props => {\n    const { t } = useTranslation()\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [friends, setFriends] = useState([])\n    const { account } = props\n    const basicProps = {\n        url: props.linkHash\n            ? 'https://addspire.com/profile/' +\n              props.profile +\n              '#' +\n              props.linkHash\n            : props.link || window.location.href,\n        title: props.title,\n        media: props.media || 'https://addspire.com/logo-addspire.png',\n        style: {\n            margin: '10px',\n            display: 'inline-block',\n            textAlign: 'center',\n            cursor: 'pointer',\n        },\n    }\n    return (\n        <>\n            <Tooltip title={t('g.share')} enterDelay={500} leaveDelay={200}>\n                {props.post ? (\n                    <Button onClick={() => setOpen(true)} startIcon={<Share />}>\n                        <span style={spanStyle}>{t('g.share')}</span>\n                    </Button>\n                ) : (\n                    <IconButton\n                        // color=\"primary\"\n                        style={props.style}\n                        onClick={() => setOpen(true)}\n                    >\n                        <Share />\n                    </IconButton>\n                )}\n            </Tooltip>\n            <Dialog open={open} onClose={() => setOpen(false)} scroll=\"paper\">\n                <DialogTitle>{t('g.shareTo')}</DialogTitle>\n                <DialogContent>\n                    <Box style={{ margin: '10px auto 30px' }}>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.addspireFriends')}:\n                        </Typography>\n                        <Box style={{ marginTop: '15px', padding: '10px' }}>\n                            <ConnectionsSelect\n                                value={friends}\n                                onChange={value => setFriends(value)}\n                            />\n                            {account && account._id && (\n                                <Button\n                                    color=\"primary\"\n                                    style={{ marginTop: '10px' }}\n                                    onClick={() =>\n                                        friends.length > 0 &&\n                                        wsActions.shareWithFriends(\n                                            account._id,\n                                            basicProps.url,\n                                            friends,\n                                            props.item\n                                        )\n                                    }\n                                >\n                                    {t('g.send')}\n                                </Button>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box>\n                        <Typography variant=\"subtitle1\">\n                            {t('g.otherFriends')}:\n                        </Typography>\n                    </Box>\n                    <Box style={{ marginTop: '15px', padding: '10px' }}>\n                        <FacebookShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <FacebookIcon size={32} round />\n                            <Box>Facebook</Box>\n                        </FacebookShareButton>\n                        {/* <FacebookMessengerShareButton\n                            {...basicProps}\n                            appId=\"521270401588372\"\n                        >\n                            <FacebookMessengerIcon size={32} round />\n                        </FacebookMessengerShareButton> */}\n                        <TwitterShareButton {...basicProps}>\n                            <TwitterIcon size={32} round />\n                            <Box>Twitter</Box>\n                        </TwitterShareButton>\n                        <TelegramShareButton {...basicProps}>\n                            <TelegramIcon size={32} round />\n                            <Box>Telegram</Box>\n                        </TelegramShareButton>\n                        <PinterestShareButton {...basicProps}>\n                            <PinterestIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </PinterestShareButton>\n\n                        {/* <InstapaperShareButton {...basicProps}>\n                            <InstapaperIcon size={32} round />\n                            <Box>Pinterest</Box>\n                        </InstapaperShareButton>\n                        <PocketShareButton {...basicProps}>\n                            <PocketIcon size={32} round />\n                            <Box>Pocket</Box>\n                        </PocketShareButton> */}\n                        <LinkedinShareButton {...basicProps}>\n                            <LinkedinIcon size={32} round />\n                            <Box>LinkedIn</Box>\n                        </LinkedinShareButton>\n                        {/* <ViberShareButton {...basicProps}>\n                            <ViberIcon size={32} round />\n                        </ViberShareButton>\n                        <LineShareButton {...basicProps}>\n                            <LineIcon size={32} round />\n                        </LineShareButton> */}\n                        {/* <LivejournalShareButton {...basicProps}>\n                            <LivejournalIcon size={32} round />\n                        </LivejournalShareButton> */}\n                        {/* <MailruShareButton {...basicProps}>\n                            <MailruIcon size={32} round />\n                        </MailruShareButton> */}\n                        {/* <OKShareButton {...basicProps} image={props.media}>\n                            <OKIcon size={32} round />\n                        </OKShareButton>\n                        <RedditShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <RedditIcon size={32} round />\n                        </RedditShareButton>\n                        <TumblrShareButton {...basicProps}>\n                            <TumblrIcon size={32} round />\n                        </TumblrShareButton> */}\n                        <VKShareButton {...basicProps} image={props.media}>\n                            <VKIcon size={32} round />\n                            <Box>VK</Box>\n                        </VKShareButton>\n                        {/* <WhatsappShareButton {...basicProps} separator=\":: \">\n                            <WhatsappIcon size={32} round />\n                        </WhatsappShareButton> */}\n                        {/* <WorkplaceShareButton\n                            {...basicProps}\n                            quote={props.title}\n                        >\n                            <WorkplaceIcon size={32} round />\n                        </WorkplaceShareButton> */}\n                        {/* <WeiboShareButton {...basicProps} image={props.media}>\n                            <WeiboIcon size={32} round />\n                        </WeiboShareButton> */}\n                        {/* <HatenaShareButton\n                            {...basicProps}\n                            windowWidth={300}\n                            windowHeight={300}\n                        >\n                            <HatenaIcon size={32} round />\n                        </HatenaShareButton> */}\n                        <EmailShareButton\n                            {...basicProps}\n                            subject={props.title}\n                            body=\"body\"\n                        >\n                            <EmailIcon size={32} round />\n                            <Box>{t('g.email')}</Box>\n                        </EmailShareButton>\n\n                        <CopyToClipboard\n                            text={basicProps.url}\n                            {...basicProps}\n                            onCopy={() => setAlertVisible(true)}\n                            style={{\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <button>\n                                <FileCopy style={{ fontSize: 32 }} />\n                                <Box>{t('g.copyUrl')}</Box>\n                            </button>\n                        </CopyToClipboard>\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                open={alertVisible}\n                autoHideDuration={2000}\n                onClose={() => setAlertVisible(false)}\n            >\n                <Alert\n                    onClose={() => setAlertVisible(false)}\n                    severity=\"success\"\n                >\n                    {t('g.urlCopied')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShareButton))\n","import { Box, Button, Container, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginModal from '../Layout/LoginModal'\nimport * as classes from './Welcome.module.scss'\nimport { useTranslation } from 'react-i18next'\n\nconst Welcome = props => {\n    const { t } = useTranslation()\n    const [loginVisible, setLoginVisible] = useState(false)\n\n    return props.account._id ? null : (\n        <Container>\n            <Box style={{ margin: '10% 0px 2%' }}>\n                <header className={classes.header}>\n                    <h1 className={classes.header__title}>\n                        <div>\n                            <span>{t('welcome.title')}</span>\n                        </div>\n                        <div className={classes.slider}>\n                            <ul className={classes.slider__words}>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase2')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase3')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase4')}\n                                </li>\n                                <li className={classes.slider__word}>\n                                    {t('welcome.phrase1')}\n                                </li>\n                            </ul>\n                        </div>\n                    </h1>\n                </header>\n            </Box>\n            <span className={classes.subheader}>{t('welcome.subheader')}</span>\n            <div className={classes.videoWrapper}>\n                <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={\n                        'https://www.youtube.com/embed/' +\n                        t('welcome.videoLink')\n                    }\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                />\n            </div>\n\n            <Box\n                style={{\n                    margin: '40px auto 10px',\n                    textAlign: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    {t('welcome.button')}\n                </Button>\n            </Box>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n\n            <Box>\n                <Typography\n                    variant=\"h2\"\n                    align=\"center\"\n                    style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                >\n                    {t('welcome.stepsTitle')}\n                </Typography>\n\n                <Box className={classes.howWorks}>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon1.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle1')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody1')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                height: '70px',\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon2.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle2')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody2')}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.step}>\n                        <Box\n                            style={{\n                                marginBottom: '20px',\n                            }}\n                        >\n                            <img src=\"/images/icon3.jpg\" />\n                        </Box>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {t('welcome.stepTitle3')}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {t('welcome.stepBody3')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <div className={classes.videoholder}>\n                    <div>\n                        <iframe\n                            width=\"560\"\n                            height=\"315\"\n                            src={\n                                'https://www.youtube.com/embed/' +\n                                t('welcome.videoHowLink')\n                            }\n                            frameBorder=\"0\"\n                            allowFullScreen\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        />\n                    </div>\n                </div>\n            </Box>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nexport default connect(mapStateToProps)(Welcome)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nimport 'leaflet/dist/leaflet.css'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    Badge,\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Divider,\n    IconButton,\n    InputBase,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Theme,\n    Tooltip,\n    Typography,\n} from '@material-ui/core'\nimport { LocationOn, SearchOutlined } from '@material-ui/icons'\nimport MapSettings from './MapSettings'\nimport Layout from '../../components/Layout/Layout'\nimport { Link } from 'react-router-dom'\nimport ShareButton from '../../components/UI/ShareButton'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport Welcome from '../../components/Welcome'\nimport axios from 'axios'\nimport { useTranslation } from 'react-i18next'\nimport GoalCategories from '../../components/EditResource/GoalCategories'\nimport ReadMore from '../../components/UI/ReadMore'\nimport UserButton from '../../components/UserButton/UserButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\n\nexport const sortProgresses = (a, b) => {\n    const valA = a.views || 0\n    const valB = b.views || 0\n    return valA > valB ? -1 : 1\n}\nconst Explore = props => {\n    const { t } = useTranslation()\n\n    const [mapVisible, setMapVisible] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n\n    const [noMore, setNoMore] = useState(false)\n    const [value, setValue] = useState(false)\n    const [positionChanged, setPositionChanged] = useState(false)\n\n    const [search, setSearch] = useState({\n        value: '',\n        withMap: false,\n        distance: 20,\n        zoom: 7,\n        position: [40.689078, -74.044526],\n        units: 'mi',\n        categories: [],\n        type: 'goal',\n    })\n\n    const onSearch = value => {\n        let liveFoundProcesses = [...foundProgresses]\n        if (value) {\n            setSearch(value)\n            setNoMore(false)\n            setFoundProgresses([])\n            liveFoundProcesses = []\n        }\n        if (!noMore || value) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || search,\n                    skip: value ? 0 : liveFoundProcesses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses([\n                            ...liveFoundProcesses,\n                            ...res.data.progresses,\n                        ])\n                        if (res.data.progresses.length === 0)\n                            message.warning(t('explore.noGoals'))\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(t('explore.wrongData'))\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    const classes = useStyles()\n\n    const urlDir =\n        search.type === 'goal'\n            ? 'goals'\n            : search.type === 'activity'\n            ? 'activities'\n            : 'rewards'\n    return (\n        <Layout white>\n            <div>\n                <Helmet>\n                    <title>{t('explore.title')}</title>\n                    <meta name=\"description\" content={t('explore.desc')} />\n                </Helmet>\n\n                <MapSettings\n                    mapVisible={mapVisible}\n                    setMapVisible={setMapVisible}\n                    setFoundProgresses={setFoundProgresses}\n                    onSearch={onSearch}\n                    setSearch={setSearch}\n                    search={search}\n                    positionChanged={positionChanged}\n                    setPositionChanged={setPositionChanged}\n                />\n                <Welcome />\n\n                {!(props.account && props.account._id) && (\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        style={{ margin: '50px auto 30px', fontWeight: 500 }}\n                    >\n                        {t('explore.topGoalsTitle')}\n                    </Typography>\n                )}\n                <Tabs\n                    value={search.type}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, type) => onSearch({ ...search, type })}\n                    style={{ marginBottom: '15px' }}\n                >\n                    <Tab label={t('g.goals')} value=\"goal\" />\n                    <Tab label={t('g.activities')} value=\"activity\" />\n                    <Tab label={t('g.rewards')} value=\"reward\" />\n                </Tabs>\n\n                <Paper className={classes.root} variant=\"outlined\">\n                    <InputBase\n                        className={classes.input}\n                        placeholder={t(\n                            'explore.' +\n                                (search.type === 'goal'\n                                    ? 'mapPHGoals'\n                                    : search.type === 'activity'\n                                    ? 'mapPHActivities'\n                                    : 'mapPHRewards')\n                        )}\n                        onChange={e => {\n                            if (!e.target.value && !search.withMap) {\n                                setSearch({ ...search, value: '' })\n                            }\n                            setValue(e.target.value || '')\n                        }}\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            if (value && value !== search.value) {\n                                onSearch({\n                                    ...search,\n                                    value,\n                                })\n                            }\n                        }}\n                    >\n                        <SearchOutlined />\n                    </IconButton>\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                            setMapVisible(true)\n                            setSearch({ ...search, withMap: true })\n                        }}\n                        color={search.withMap ? 'primary' : 'default'}\n                    >\n                        <LocationOn />\n                    </IconButton>\n                </Paper>\n                <Box margin=\"10px 0px 50px\">\n                    <ReadMore\n                        initialHeight={135}\n                        addTitle={t('g.spaceCategories')}\n                    >\n                        <GoalCategories\n                            nolim\n                            value={search.categories}\n                            onChange={categories =>\n                                onSearch({ ...search, categories })\n                            }\n                        />\n                    </ReadMore>\n                </Box>\n\n                {/* {loadedProgresses.length > 0 ? ( */}\n                {/* ) : null} */}\n\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => onSearch()}\n                    hasMore={!noMore}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            <span>{t('explore.loading')}</span>\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {foundProgresses\n                            .sort(sortProgresses)\n                            .map((item, index) => {\n                                return (\n                                    <MasonryCard\n                                        id={item._id}\n                                        key={index}\n                                        onClickLink={\n                                            '/' + urlDir + '/' + item._id\n                                        }\n                                        images={item.images}\n                                        body={\n                                            <>\n                                                <Box\n                                                    style={{\n                                                        position: 'absolute',\n                                                        top: '10px',\n                                                    }}\n                                                >\n                                                    <UserButton\n                                                        noName={true}\n                                                        id={item.owner}\n                                                        friendDataExp={\n                                                            props.friendData\n                                                        }\n                                                    />\n                                                </Box>\n                                                {item.status && (\n                                                    <Tooltip\n                                                        title={t(\n                                                            'progress.' +\n                                                                (item.status ===\n                                                                'process'\n                                                                    ? 'inProcess'\n                                                                    : item.status)\n                                                        )}\n                                                    >\n                                                        <Box\n                                                            style={{\n                                                                display:\n                                                                    'inline-block',\n                                                                width: '10px',\n                                                                height: '10px',\n                                                                borderRadius:\n                                                                    '5px',\n                                                                marginRight:\n                                                                    '5px',\n                                                                background:\n                                                                    item.status ===\n                                                                    'process'\n                                                                        ? 'blue'\n                                                                        : item.status ===\n                                                                          'fail'\n                                                                        ? 'red'\n                                                                        : item.status ===\n                                                                          'dismissed'\n                                                                        ? 'orange'\n                                                                        : item.status ===\n                                                                          'complete'\n                                                                        ? 'green'\n                                                                        : 'white',\n                                                            }}\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            </>\n                                        }\n                                        actions={\n                                            <ShareButton\n                                                link={\n                                                    'https://addspire.com/' +\n                                                    urlDir +\n                                                    '/' +\n                                                    item._id\n                                                }\n                                                title={\n                                                    item.name +\n                                                    t('explore.shareText')\n                                                }\n                                                media={\n                                                    item.images &&\n                                                    item.images[0]\n                                                }\n                                                item={{\n                                                    progressId: item._id,\n                                                    progressName: item.name,\n                                                }}\n                                                profile={item.owner}\n                                                linkHash={item._id}\n                                            />\n                                        }\n                                    />\n                                )\n                            })}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nexport default connect(mapStateToProps)(Explore)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../../components/Layout/Layout'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    createStyles,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\nimport Welcome from '../../components/Welcome'\nimport dayjs from 'dayjs'\nimport ReactHtmlParser from 'react-html-parser'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { useTranslation } from 'react-i18next'\n\ndayjs().format()\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        root: {\n            flexGrow: 1,\n            marginTop: '20px',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\\\n            backgroundSize: 'contain',\n        },\n        backToBlog: {\n            left: '16px',\n            bottom: '88px',\n            position: 'fixed',\n            zIndex: 1,\n        },\n    })\n)\n\nconst Blog = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [post, setPost] = useState(null)\n    // const [comments, setComments] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        fetch('https://addspire-blog.herokuapp.com/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            query {\n  posts (where: { language:\"${\n      props.history.location.pathname.indexOf('/ru') === 0 ? 'ru' : 'en'\n  }\",\n  _or: [\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }\"},\n      {url: \"${\n          props.history.location.pathname.split('/')[\n              props.history.location.pathname.split('/').length - 1\n          ]\n      }.ru\"}\n  ] }){\n    id\n    url\n    content\n    title\n    published_at\n   previewImage {\n    url\n  }\n    subtitle\n  }\n}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.data.posts.length > 0) {\n                    setPost(data.data.posts[0])\n                    setTitle(data.data.posts[0].title + t('g.shareText'))\n                }\n            })\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: '115517331888071',\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.5', // use version 2.1\n            })\n        }\n\n        // Load the SDK asynchronously\n        ;(function(d, s, id) {\n            var js,\n                fjs = d.getElementsByTagName(s)[0]\n            if (d.getElementById(id)) return\n            js = d.createElement(s)\n            js.id = id\n            js.src = '//connect.facebook.net/en_US/sdk.js'\n            fjs.parentNode.insertBefore(js, fjs)\n        })(document, 'script', 'facebook-jssdk')\n    }, [])\n    useEffect(() => {\n        if (window.FB) window.FB.XFBML.parse()\n    })\n    return post ? (\n        <>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n\n            <Layout white>\n                {/* <Welcome /> */}\n\n                <Card\n                    style={{\n                        margin: '50px auto',\n                        maxWidth: '1000px',\n                        boxShadow: 'none',\n                    }}\n                >\n                    <CardMedia\n                        className={classes.media}\n                        image={post.previewImage && post.previewImage.url}\n                        title={post.title}\n                    />\n                    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"button\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                            gutterBottom\n                        >\n                            {dayjs(post.published_at).format('MMMM D, YYYY')}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <Typography gutterBottom variant=\"h2\" component=\"h1\">\n                            {post.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\">\n                            {post.subtitle}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            className=\"blogArticle\"\n                            style={{ fontSize: '1.05rem' }}\n                        >\n                            {ReactHtmlParser(post.content)}\n                        </Typography>\n                        <div style={{ textAlign: 'right' }}>\n                            <ShareButton\n                                post\n                                title={post.title + t('g.shareText')}\n                                media={\n                                    post.previewImage && post.previewImage.url\n                                }\n                            />\n                        </div>\n                        <div\n                            className=\"fb-comments\"\n                            data-href={\n                                'https://addspire.com' +\n                                props.history.location.pathname\n                            }\n                            data-numposts=\"5\"\n                            data-width=\"\"\n                        />\n                    </CardContent>\n                </Card>\n            </Layout>\n        </>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React, { Component } from 'react'\nimport LeaderLine from 'leader-line-new'\nimport { connect } from 'react-redux'\n\nclass Line extends Component {\n    componentDidMount() {\n        this.waitWhenRefIsReady()\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer)\n        }\n        if (this.line) this.line.remove()\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.line) {\n            this.line.position()\n            // if (nextProps.collapsed !== this.props.collapsed) {\n            //     if (nextProps.collapsed) this.line.hide()\n            //     else this.line.show()\n            // }\n            this.line.setOptions({\n                path: nextProps.el.lineType || 'magnet',\n                color: this.props.el.lineColor || '#3612B8',\n                size: this.props.el.lineWidth || 2,\n            })\n            if (nextProps.el.lineType === 'no') this.line.hide()\n            else this.line.show()\n        }\n\n        return false\n    }\n\n    waitWhenRefIsReady() {\n        this.timer = setInterval(() => {\n            if (this.props.start.current) {\n                clearInterval(this.timer)\n                this.drawLine()\n            }\n        }, 5)\n    }\n\n    drawLine() {\n        const { start, end } = this.props\n        this.line = new LeaderLine(start.current, end.current, {\n            path: this.props.el.lineType || 'magnet',\n            color: this.props.el.lineColor || '#3612B8',\n            size: this.props.el.lineWidth || 2,\n        })\n        if (this.props.el.lineType === 'no') this.line.hide()\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dragStep: state.dragStep }\n}\n\nexport default connect(mapStateToProps)(Line)\n","export const addBlock = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    children: [\n                        ...selectedElement.children,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type: 'folder',\n                    folderType: type,\n                    children: [],\n                    parent: selectedBox,\n                    innerChildren: type\n                        ? ['b' + (structure.currentId + 1)]\n                        : [],\n                    sizePos: {\n                        x: 200,\n                        y: 0,\n                        width: 320,\n                        height: 200,\n                    },\n                },\n                ...(type\n                    ? {\n                          ['b' + (structure.currentId + 1)]: {\n                              type,\n                              children: [],\n                              value:\n                                  type === 'text'\n                                      ? 'Add text here'\n                                      : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                              parent: 'b' + structure.currentId,\n                              sizePos: {\n                                  x: 5,\n                                  y: 5,\n                                  width: selectedElement.sizePos.width - 10,\n                                  height: 100,\n                              },\n                          },\n                      }\n                    : {}),\n            },\n            currentId: structure.currentId + (type ? 2 : 1),\n        })\n    }\n}\n\nexport const addElement = (props, type) => {\n    const { structure, setStructure, selectedBox, selectedElement } = props\n    if (selectedElement) {\n        setStructure({\n            currentId: structure.currentId + 1,\n            items: {\n                ...structure.items,\n                [selectedBox]: {\n                    ...selectedElement,\n                    innerChildren: [\n                        ...selectedElement.innerChildren,\n                        'b' + structure.currentId,\n                    ],\n                },\n                ['b' + structure.currentId]: {\n                    type,\n                    children: [],\n                    value:\n                        type === 'text'\n                            ? 'Add text here'\n                            : 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n                    parent: selectedBox,\n                    sizePos: {\n                        x: 5,\n                        y: 5,\n                        width: selectedElement.sizePos.width - 10,\n                        height: 100,\n                    },\n                },\n            },\n        })\n    }\n}\n\nexport const changeParent = props => {\n    const {\n        selectedBox,\n        changeParentMode,\n        setChangeParentMode,\n        selectedElement,\n    } = props\n    if (changeParentMode) {\n        setChangeParentMode('')\n    } else {\n        if (selectedElement) {\n            setChangeParentMode(selectedBox)\n        }\n    }\n}\nexport const collapse = props => {\n    const { selectedBox, structure, setStructure } = props\n    setStructure({\n        ...structure,\n        items: {\n            ...structure.items,\n            [selectedBox]: {\n                ...structure.items[selectedBox],\n                collapsed: !structure.items[selectedBox].collapsed,\n            },\n        },\n    })\n}\n\nexport const deleteElement = props => {\n    const {\n        selectedBox,\n        structure,\n        setStructure,\n        selectedIndex,\n        setSelectedIndex,\n        editingFolder,\n    } = props\n    if (!editingFolder) {\n        const newChildren = {}\n        for (let child of structure.items[selectedBox].children) {\n            newChildren[child] = {\n                ...structure.items[child],\n                parent: structure.items[selectedBox].parent,\n            }\n        }\n        const newItems = {\n            ...structure.items,\n            [structure.items[selectedBox].parent]: {\n                ...structure.items[structure.items[selectedBox].parent],\n                children: [\n                    ...structure.items[\n                        structure.items[selectedBox].parent\n                    ].children.filter(item => item !== selectedBox),\n                    ...structure.items[selectedBox].children,\n                ],\n            },\n            ...newChildren,\n        }\n        delete newItems[selectedBox]\n        setStructure({\n            ...structure,\n            items: newItems,\n        })\n    } else {\n        let { [selectedIndex]: el, ...newItems } = structure.items\n        if (el) {\n            setStructure({\n                ...structure,\n                items: {\n                    ...newItems,\n                    [selectedBox]: {\n                        ...newItems[selectedBox],\n                        innerChildren: newItems[\n                            selectedBox\n                        ].innerChildren.filter(item => item !== selectedIndex),\n                    },\n                },\n            })\n        }\n    }\n    setSelectedIndex('')\n}\n\nexport const saveValue = (id, key, value, structure, setStructure) => {\n    if (structure.items[id])\n        setStructure({\n            ...structure,\n            items: {\n                ...structure.items,\n                [id]: {\n                    ...structure.items[id],\n                    [key]: value,\n                },\n            },\n        })\n}\n\nexport const addUnsorted = (structure, setStructure, profile) => {\n    const unsortedItems = {}\n    const unsortedIds = []\n    let newCurrentId = structure.currentId\n    for (let item of profile.progresses) {\n        if (!structure.items[item]) {\n            unsortedIds.push(item)\n            unsortedItems[item] = {\n                type: 'goal',\n                id: item,\n                sizePos: { x: -800, y: 0, width: 500, height: 500 },\n                children: [],\n                parent: 'b00',\n            }\n        }\n    }\n    // for (let item of profile.rewards) {\n    //     if (!structure.items[item]) {\n    //         unsortedIds.push(item)\n    //         unsortedItems[item] = {\n    //             type: 'reward',\n    //             id: item,\n    //             sizePos: { x: -800, y: 0, width: 500, height: 500 },\n    //             children: [],\n    //             parent: 'b00',\n    //         }\n    //     }\n    // }\n    // for (let item of profile.activities) {\n    //     if (!structure.items[item]) {\n    //         unsortedIds.push(item)\n    //         unsortedItems[item] = {\n    //             type: 'activity',\n    //             id: item,\n    //             sizePos: { x: -800, y: 0, width: 500, height: 500 },\n    //             children: [],\n    //             parent: 'b00',\n    //         }\n    //     }\n    // }\n    if (unsortedIds.length > 0) {\n        setStructure(\n            {\n                ...structure,\n                currentId: newCurrentId,\n                items: {\n                    ...structure.items,\n                    ...unsortedItems,\n                    b00: {\n                        ...structure.items.b00,\n                        children: [\n                            ...structure.items.b00.children,\n                            ...unsortedIds,\n                        ],\n                    },\n                },\n            },\n            true\n        )\n    }\n}\n\nexport const dragHandler = (id, data, setSizepos) =>\n    setSizepos(id, { x: data.x, y: data.y })\n\nexport const resizeHandler = (id, elRef, position, setSizepos) =>\n    setSizepos(id, {\n        x: position.x,\n        y: position.y,\n        width: parseInt(elRef.style.width),\n        height: parseInt(elRef.style.height),\n    })\n","import {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    createStyles,\n    makeStyles,\n    Paper,\n    Theme,\n    Typography,\n} from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport Empty from 'antd/es/empty'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n        addBox: {\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    })\n)\nexport default props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    return props.items.length > 0 ||\n        props.empty ||\n        props.customEmpty ||\n        props.withAdd ? (\n        <>\n            {props.title && (\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {props.title}\n                </Typography>\n            )}\n            <Paper\n                style={{\n                    padding: '15px',\n                    paddingBottom: '10px',\n                }}\n            >\n                <Box\n                    style={{\n                        display: 'flex',\n                        overflowX: 'auto',\n                        padding: '3px',\n                    }}\n                >\n                    {props.items.length === 0 && props.empty ? (\n                        props.customEmpty || <Empty />\n                    ) : (\n                        <>\n                            {props.withAdd && (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                        minHeight: '160px',\n                                    }}\n                                >\n                                    <CardActionArea\n                                        style={{\n                                            height: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                        onClick={() => props.onAdd()}\n                                    >\n                                        <CardContent\n                                            style={{\n                                                flex: 1,\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                padding: '5px',\n                                            }}\n                                        >\n                                            <Box\n                                                style={{\n                                                    flexDirection: 'column',\n                                                }}\n                                                className={classes.addBox}\n                                            >\n                                                <AddCircle />\n                                                <Box\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {props.addTitle ||\n                                                        t('g.add')}\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            )}\n                            {props.items.map((item, index) => (\n                                <Card\n                                    style={{\n                                        borderRadius: '15px',\n                                        cursor: 'pointer',\n                                        flexShrink: 0,\n                                        width: '100px',\n                                        marginRight: '10px',\n                                        position: 'relative',\n                                    }}\n                                >\n                                    {props.content(item, index)}\n                                </Card>\n                            ))}\n                            <Box style={{ width: '10px', flexShrink: 0 }} />\n                        </>\n                    )}\n                </Box>\n                <Box style={{ marginTop: '20px' }}>\n                    {props.bottomContent || null}\n                </Box>\n            </Paper>\n        </>\n    ) : null\n}\n","import React, { useState } from 'react'\nimport {\n    Box,\n    Button,\n    Chip,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    fade,\n    IconButton,\n    Menu,\n    MenuItem,\n    MuiThemeProvider,\n    Paper,\n    Select,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport ImageCarousel from './UI/ImageCarousel/ImageCarousel'\nimport ShareButton from './UI/ShareButton'\nimport * as wsActions from '../websocketActions'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../components/EditResource/EditResource'\nimport MasonryCard from './MasonryCard'\nimport FollowButton from './FollowButton'\nimport UserButton from './UserButton/UserButton'\nimport { MoreVertOutlined } from '@material-ui/icons'\nimport ConfirmAction from './UI/ConfirmAction'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport { blue, green, orange, red } from '@material-ui/core/colors'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst ResourceHeader = props => {\n    const { t } = useTranslation()\n    const { resource, account, friendData, type } = props\n    const [followersVisible, setFollowersVisible] = useState('')\n    const [editResourceOpen, setEditResourceOpen] = useState(false)\n    const [deleteResourceOpen, setDeleteResourceOpen] = useState(false)\n    const [leaveResourceOpen, setLeaveResourceOpen] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const accountProp =\n        type === 'goal'\n            ? 'progresses'\n            : type === 'reward'\n            ? 'rewards'\n            : 'activities'\n    const followProp =\n        type === 'goal'\n            ? 'followProgresses'\n            : type === 'reward'\n            ? 'followRewards'\n            : 'followActivities'\n    const getDropDownMeuItems = () => {\n        const items = []\n        if (account._id === resource.owner)\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setEditResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.edit')}\n                </MenuItem>\n            )\n\n        if (account[followProp].includes(resource._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.unfollowResource(\n                            account._id,\n                            resource._id,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unfollow')}\n                </MenuItem>\n            )\n\n        if (resource.likes.includes(account._id))\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        wsActions.changeLikesResource(\n                            account._id,\n                            resource._id,\n                            false,\n                            type\n                        )\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.unlike')}\n                </MenuItem>\n            )\n        if (\n            type !== 'reward' &&\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setLeaveResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.leave')}\n                </MenuItem>\n            )\n        if (\n            account[accountProp] &&\n            account[accountProp].includes(resource._id.toString())\n        )\n            items.push(\n                <MenuItem\n                    onClick={() => {\n                        setDeleteResourceOpen(true)\n                        setAnchorEl(null)\n                    }}\n                >\n                    {t('g.delete')}\n                </MenuItem>\n            )\n        return items.length > 0 && items\n    }\n\n    const dropDownMeuItems = account._id ? getDropDownMeuItems() : null\n\n    const getStatusText = () => {\n        const status = resource.status\n        switch (status) {\n            case 'fail':\n                return t('progress.failed')\n            case 'complete':\n                return t('progress.completed')\n            case 'dismissed':\n                return t('progress.dismissed')\n            default:\n                return t('progress.inProcess')\n        }\n    }\n\n    const getTag = () => {\n        return (\n            <MuiThemeProvider\n                theme={\n                    resource.status === 'process'\n                        ? blueTheme\n                        : resource.status === 'complete'\n                        ? greenTheme\n                        : resource.status === 'fail'\n                        ? redTheme\n                        : orangeTheme\n                }\n            >\n                <Box style={{ margin: '10px 0' }}>\n                    {resource.owner === account._id ? (\n                        <Select\n                            value={resource.status}\n                            onChange={e =>\n                                wsActions.changeResourceStatus(\n                                    e.target.value,\n                                    resource._id\n                                )\n                            }\n                        >\n                            <MenuItem value=\"complete\">\n                                {t('progress.complete')}\n                            </MenuItem>\n                            <MenuItem value=\"process\">\n                                {t('progress.inProcess')}\n                            </MenuItem>\n                            <MenuItem value=\"fail\">\n                                {t('progress.fail')}\n                            </MenuItem>\n                            <MenuItem value=\"dismissed\">\n                                {t('progress.dismiss')}\n                            </MenuItem>\n                        </Select>\n                    ) : (\n                        <Chip color=\"primary\" label={getStatusText()} />\n                    )}\n                </Box>\n            </MuiThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <Paper style={{ padding: '15px 15px 0px 15px' }}>\n                {resource.images.length > 0 && (\n                    <ImageCarousel images={resource.images} />\n                )}\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        {resource.name}\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {t('g.' + type) + ' ' + t('g.by')}\n                        <UserButton id={resource.owner} />\n                    </Typography>\n                    {resource.category.map(category => (\n                        <Chip\n                            label={t('g.' + category)}\n                            variant=\"outlined\"\n                            style={{ margin: '5px' }}\n                        />\n                    ))}\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button onClick={() => setFollowersVisible('likes')}>\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${resource.likes.length} ${t('g.likes')}`}\n                            </span>\n                        </Button>\n                        <ShareButton\n                            title={resource.name + t('g.shareText')}\n                            media={resource.images && resource.images[0]}\n                            item={{\n                                progressId: resource._id,\n                                progressName: resource.name,\n                                type,\n                            }}\n                            profile={resource.owner}\n                            linkHash={resource._id}\n                        />\n                        {dropDownMeuItems && account && account._id && (\n                            <>\n                                <IconButton\n                                    onClick={event =>\n                                        setAnchorEl(event.currentTarget)\n                                    }\n                                >\n                                    <MoreVertOutlined />\n                                </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    {dropDownMeuItems}\n                                </Menu>\n                            </>\n                        )}\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '0px 0px 20px',\n                        }}\n                    >\n                        {account &&\n                            account._id &&\n                            !account[followProp].includes(resource._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() =>\n                                        wsActions.followResource(\n                                            account._id,\n                                            resource._id,\n                                            type\n                                        )\n                                    }\n                                    style={{ marginRight: '20px' }}\n                                    variant=\"contained\"\n                                >\n                                    {t('g.follow')}\n                                </Button>\n                            )}\n\n                        {account &&\n                            account._id &&\n                            !resource.likes.includes(account._id) && (\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        wsActions.changeLikesResource(\n                                            account._id,\n                                            resource._id,\n                                            true,\n                                            type\n                                        )\n                                    }\n                                >\n                                    {t('g.like')}\n                                </Button>\n                            )}\n                        {type === 'goal' && (\n                            <Box>\n                                {getTag()}\n                                {resource.startDate && (\n                                    <Typography>\n                                        {t('progress.startDate')}:{' '}\n                                        {dayjs(resource.startDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.dueDate && (\n                                    <Typography>\n                                        {t('progress.dueDate')}:{' '}\n                                        {dayjs(resource.dueDate).format(\n                                            'ddd, MMM D, YYYY'\n                                        )}\n                                    </Typography>\n                                )}\n                                {resource.status !== 'process' &&\n                                    resource.finishDate && (\n                                        <Typography>\n                                            {t('progress.finishDate')}:{' '}\n                                            {dayjs(resource.finishDate).format(\n                                                'ddd, MMM D, YYYY'\n                                            )}\n                                        </Typography>\n                                    )}\n                            </Box>\n                        )}\n                    </Box>\n                </div>\n\n                <Divider />\n                {props.navi}\n            </Paper>\n            <Dialog\n                fullScreen\n                open={editResourceOpen}\n                onClose={() => setEditResourceOpen(false)}\n                TransitionComponent={TransitionComponent}\n                scroll=\"paper\"\n            >\n                <EditResource\n                    type={type}\n                    account={account}\n                    friendData={friendData}\n                    cancel={() => setEditResourceOpen(false)}\n                    resource={resource}\n                />\n            </Dialog>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible === 'likes'\n                        ? t('g.' + type + 'Likes')\n                        : t('g.' + type + 'Followers')}\n                </DialogTitle>\n                <DialogContent>\n                    {resource[\n                        followersVisible === 'likes'\n                            ? 'likes'\n                            : 'followingAccounts'\n                    ].map(item => (\n                        <MasonryCard\n                            friends={true}\n                            noLink={true}\n                            key={item}\n                            actions={\n                                <FollowButton\n                                    account={account}\n                                    id={item}\n                                    type=\"account\"\n                                />\n                            }\n                            body={\n                                <UserButton span={true} id={item} size={50} />\n                            }\n                        />\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ConfirmAction\n                open={deleteResourceOpen}\n                cancel={() => setDeleteResourceOpen(false)}\n                title={t('resource.confirmDelete')}\n                confirm={() => wsActions.deleteResource(resource._id, type)}\n            />\n            <ConfirmAction\n                open={leaveResourceOpen}\n                cancel={() => setLeaveResourceOpen(false)}\n                title={t('resource.confirmLeave')}\n                confirm={() => wsActions.leaveResource(resource._id, type)}\n            />\n        </>\n    )\n}\n\nexport default ResourceHeader\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const resourceId =\n        props.resourceId || (pathParts.length > 2 ? pathParts[2] : '')\n    if (!resourceId) return null\n    const { type } = props\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({\n                [type === 'goal'\n                    ? 'currentGoal'\n                    : type === 'reward'\n                    ? 'currentReward'\n                    : 'currentActivity']: resourceId,\n            })\n            if (props.account._id)\n                wsActions.addRecent(props.account._id, resourceId, props.type)\n        }\n        // else {\n        //     pullData(props, data, setData, { forceAuth: false }, data => {\n        //         const friendData = {}\n        //         for (let friend of data.friendData)\n        //             friendData[friend._id] = friend\n        //         const activityData = {}\n        //         if (data.activityData)\n        //             for (let activity of data.activityData)\n        //                 activityData[activity._id] = activity\n        //         const rewardData = {}\n        //         if (data.rewardData)\n        //             for (let reward of data.rewardData)\n        //                 rewardData[reward._id] = reward\n        //         const post = {}\n        //         if (data.posts)\n        //             for (let item of data.posts) post[item._id] = item\n\n        //         props.setData({\n        //             friendData,\n        //             post,\n        //             account: {},\n        //             activityData,\n        //             rewardData,\n        //             onlineUsers: data.onlineUsers,\n        //             [type === 'goal' ? 'progress' : type]: data.resource,\n        //         })\n        //     })\n        // }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { resource, account, friendData, posts } = props\n\n    useEffect(() => {\n        if (resource && resource._id) props.setResource(resource)\n    }, [resource])\n    useEffect(() => {\n        props.setPosts(posts)\n    }, [posts])\n\n    if (!resource || !resource._id) return null\n\n    props.setData({ currentPosts: resource.posts })\n\n    return friendData ? (\n        props.resourceId ? (\n            <Layout noHeader>\n                <div className=\"contentDiv\">\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        ) : (\n            <Layout\n                header={\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        {resource.name}\n                    </Typography>\n                }\n            >\n                <div className=\"contentDiv\">\n                    <Helmet>\n                        <title>\n                            {`${resource.name} ${t('g.by')}${\n                                resource.owner\n                            } - Addspire`}\n                        </title>\n                        <meta\n                            name=\"description\"\n                            content={resource.descriptionText}\n                        />\n                    </Helmet>\n                    <ResourceHeader\n                        account={account}\n                        resource={resource}\n                        friendData={friendData}\n                        type={type}\n                        navi={props.navi}\n                    />\n\n                    {props.children}\n                </div>\n            </Layout>\n        )\n    ) : null\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        resource:\n            state[ownProps.type === 'goal' ? 'progress' : ownProps.type][\n                ownProps.resourceId\n            ],\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ResourceCore)\n)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport * as ELG from 'esri-leaflet-geocoder'\nimport 'esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css'\nimport { GestureHandling } from 'leaflet-gesture-handling'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\n\nimport { useTranslation } from 'react-i18next'\nimport LocateControl from '../../containers/Explore/LocateControl'\n\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport L from 'leaflet'\nimport 'react-leaflet-fullscreen/dist/styles.css'\nimport FullscreenControl from 'react-leaflet-fullscreen'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst MapPosition = props => {\n    const { t } = useTranslation()\n    const map = useRef(null)\n\n    useEffect(() => {\n        if (map && map.current && map.current.leafletElement) {\n            new ELG.Geosearch({\n                useMapBounds: false,\n                placeholder: t('g.mapPlaceholder'),\n                title: t('g.mapTitle'),\n            }).addTo(map.current.leafletElement)\n            new GestureHandling(map.current.leafletElement)\n        }\n    }, [])\n    return props.position ? (\n        <Map\n            ref={map}\n            style={{\n                width: '100%',\n                // maxWidth: '400px',\n                height: '200px',\n                position: 'relative',\n                zIndex: 1,\n            }}\n            gestureHandling={true}\n            center={[...props.position.coordinates].reverse()}\n            zoom={11}\n        >\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocateControl setView=\"no\" />\n            <Marker position={[...props.position.coordinates].reverse()} />\n            <FullscreenControl position=\"topright\" />\n        </Map>\n    ) : null\n}\n\nexport default MapPosition\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport { Box, Card, CardContent } from '@material-ui/core'\nimport UserButton from '../UserButton/UserButton'\n\nimport EditPost from './EditPost'\nimport { useTranslation } from 'react-i18next'\n\nconst AddPost = props => {\n    const { t } = useTranslation()\n    const [postOpen, setPostOpen] = useState(false)\n\n    const { parent, account, parentType } = props\n\n    const handleSave = (images, messageText) => {\n        wsActions.addPost(account._id, parent, parentType, messageText, images)\n        if (props.onSend) props.onSend()\n        handleCancel()\n    }\n\n    const handleCancel = () => {\n        setPostOpen(false)\n    }\n\n    return account._id ? (\n        <>\n            <Card elevation={3}>\n                <CardContent>\n                    <Box style={{ display: 'flex', width: '100%' }}>\n                        <Box style={{ marginRight: '20px' }}>\n                            <UserButton\n                                noName={true}\n                                id={account._id}\n                                span={true}\n                                size={36}\n                            />\n                        </Box>\n                        <Box style={{ flex: 1 }}>\n                            <Box\n                                style={{\n                                    background: '#efefef',\n                                    padding: '5px 15px',\n                                    borderRadius: '15px',\n                                    color: '#7d7d7d',\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => setPostOpen(true)}\n                            >\n                                {t('post.postNew')}\n                            </Box>\n                        </Box>\n                    </Box>\n                    <EditPost\n                        open={postOpen}\n                        cancel={handleCancel}\n                        title={t('post.createNewPost')}\n                        save={handleSave}\n                    />\n                </CardContent>\n            </Card>\n        </>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AddPost from './AddPost'\nimport Post from './Post'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, Typography } from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nconst ResourcePosts = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { resource, account, posts, friendData, type } = props\n\n    return (\n        <>\n            {account._id && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.addPost')}\n                    </Typography>\n                    <AddPost\n                        parent={resource._id}\n                        account={account}\n                        parentType={type}\n                        // onSend={() => setEditingMessage('')}\n                    />\n                </>\n            )}\n            <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n            >\n                {t('g.postsAndComments')}\n            </Typography>\n            {posts &&\n                [...resource.posts]\n                    .sort((a, b) =>\n                        props.history.location.pathname.indexOf(a) > -1\n                            ? 1\n                            : props.history.location.pathname.indexOf(b) > -1\n                            ? -1\n                            : 0\n                    )\n                    .map(postId => {\n                        if (posts[postId]) {\n                            const post = posts[postId]\n                            return (\n                                <div\n                                    key={postId}\n                                    style={{ paddingTop: '10px' }}\n                                >\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            )\n                        } else return null\n                    })\n                    .reverse()}\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourcePosts))\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Reward = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [reward, setReward] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(1)\n    return (\n        <ResourceCore\n            type=\"reward\"\n            setResource={setReward}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {reward && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={reward.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={reward.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={reward}\n                            posts={posts}\n                            type=\"reward\"\n                        />\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Reward)\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addRewardOpen, setAddRewardOpen] = useState(false)\n    const [rewardPreview, setRewardPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        rewardData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        multiple,\n        setChosenResource,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={\n                    isSelect\n                        ? 'I want to give these rewards:'\n                        : wish\n                        ? t('g.wishlist')\n                        : t('g.rewards')\n                }\n                items={owner.rewards\n                    .map(item => rewardData[item])\n                    .filter(item => item)}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setRewardPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <span\n                                        onClick={() =>\n                                            setChosenResource(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </span>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addReward')}\n                onAdd={() => setAddRewardOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addRewardOpen}\n                    onClose={() => setAddRewardOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"reward\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddRewardOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(rewardPreview)}\n                    onClose={() => setRewardPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setRewardPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {rewardPreview && <Reward id={rewardPreview} />}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport {\n    Box,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport AddEditActivity from './AddEditActivity'\nimport Reward from '../../containers/Reward/Reward'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ProfileRewards = props => {\n    const { t } = useTranslation()\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [activityPreview, setActivityPreview] = useState('')\n\n    const {\n        account,\n        owner,\n        activityData,\n        wish,\n        additionalButton,\n        isSelect,\n        value,\n        onChange,\n        activities,\n        multiple,\n    } = props\n    const isOwner = account && account._id && account._id === owner._id\n    const handleSelect = id => {\n        if (multiple)\n            if (value.includes(id)) {\n                onChange(value.filter(item => item !== id))\n            } else {\n                onChange([...value, id])\n            }\n        else onChange([id])\n    }\n    return (\n        <>\n            <HorizontalScrollList\n                title={isSelect ? t('g.forTheseActivities') : t('g.activities')}\n                items={(activities || owner.activities)\n                    .map(item => activityData[item])\n                    .filter(\n                        item => item && Boolean(wish) === Boolean(item.wish)\n                    )}\n                content={item => {\n                    const isSelected = isSelect && value.includes(item._id)\n                    const content = (\n                        <>\n                            {' '}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={isSelected ? 'primary' : undefined}\n                                    style={{\n                                        fontWeight: isSelected\n                                            ? 600\n                                            : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )\n                    return (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <CardActionArea\n                                onClick={() =>\n                                    isSelect && handleSelect(item._id)\n                                }\n                            >\n                                {isSelect ? (\n                                    content\n                                ) : props.openInDialog ? (\n                                    <Box\n                                        onClick={() =>\n                                            setActivityPreview(item._id)\n                                        }\n                                    >\n                                        {content}\n                                    </Box>\n                                ) : (\n                                    <Link to={'/activities/' + item._id}>\n                                        {content}\n                                    </Link>\n                                )}\n                            </CardActionArea>\n                            {additionalButton && additionalButton(item)}\n                        </CardContent>\n                    )\n                }}\n                withAdd={isOwner}\n                addTitle={t('g.addItem')}\n                onAdd={() => setAddActivityOpen(true)}\n            />\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n            {props.openInDialog && (\n                <Dialog\n                    open={Boolean(activityPreview)}\n                    onClose={() => setActivityPreview('')}\n                    fullWidth\n                    maxWidth=\"md\"\n                    scroll=\"paper\"\n                >\n                    <DialogActions>\n                        <IconButton onClick={() => setActivityPreview('')}>\n                            <Close />\n                        </IconButton>\n                    </DialogActions>\n                    <DialogContent>\n                        {activityPreview && (\n                            <Reward activityId={activityPreview} />\n                        )}\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProfileRewards))\n","import React from 'react'\n\nimport Form from 'antd/es/form'\n\nimport Select from 'antd/es/select'\nimport 'leaflet/dist/leaflet.css'\nimport * as wsActions from '../../websocketActions'\nimport 'leaflet-gesture-handling/dist/leaflet-gesture-handling.css'\nimport {\n    AppBar,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n    Button,\n    Box,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\nimport ProfileRewards from '../ProfileRewards/ProfileRewards'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nconst { Option } = Select\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: 400,\n            width: '100%',\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        appBar: {\n            position: 'fixed',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst EditProgressReward = props => {\n    const { t } = useTranslation()\n    const [form] = Form.useForm()\n\n    const { account, rewardId, progress } = props\n\n    const onFinish = value => {\n        wsActions.saveRewardInProgress(\n            account._id,\n            progress._id,\n            rewardId,\n            value\n        )\n\n        props.cancel()\n    }\n\n    const classes = useStyles()\n    let initialValue = {\n        rewards: [],\n        activities: [],\n        repeat: 'time',\n    }\n    if (rewardId !== 'new') {\n        const rewardObj = progress.rewards.find(\n            item => item.rewardId === rewardId\n        )\n        initialValue = {\n            rewards: [rewardObj.reward],\n            activities: rewardObj.activities,\n            repeat: rewardObj.repeat,\n        }\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={props.cancel}\n                        aria-label=\"close\"\n                    >\n                        <Close />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                        color=\"inherit\"\n                    >\n                        {t(\n                            'progress.' +\n                                (rewardId !== 'new' ? 'editGoal' : 'addNewGoal')\n                        )}\n                    </Typography>\n                    <Button\n                        autoFocus\n                        color=\"inherit\"\n                        onClick={() => form.submit()}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n\n            <Form\n                form={form}\n                style={{\n                    maxWidth: '1200px',\n                    margin: '0 auto',\n                    padding: '15px',\n                    width: '100%',\n                }}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={initialValue}\n            >\n                <Form.Item name=\"rewards\">\n                    <ProfileRewards owner={account} isSelect multiple />\n                </Form.Item>\n\n                <Form.Item name=\"activities\">\n                    <ProfileActivities\n                        owner={account}\n                        isSelect\n                        activities={progress.activities}\n                    />\n                </Form.Item>\n                <Form.Item name=\"repeat\">\n                    <Select getPopupContainer={trigger => trigger.parentNode}>\n                        <Option value=\"once\">{t('g.once')}</Option>\n                        <Option value=\"time\">{t('g.everyTime')}</Option>\n                        <Option value=\"manual\">{t('g.manual')}</Option>\n                        {/* \n                        <Option value=\"day\">{t('g.everyDay')}</Option>\n                        <Option value=\"week\">{t('g.everyWeek')}</Option>\n                        <Option value=\"month\">{t('g.everyMonth')}</Option>\n                        <Option value=\"year\">{t('g.everyYear')}</Option> */}\n                    </Select>\n                </Form.Item>\n\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button size=\"large\" onClick={() => props.cancel(false)}>\n                        {t('g.cancel')}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        size=\"large\"\n                        style={{\n                            marginLeft: '10px',\n                            marginRight: '50px',\n                        }}\n                    >\n                        {t('g.save')}\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n}\nexport default EditProgressReward\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveGoal = (accountId, goalId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveGoal',\n                accountId,\n                goalId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteGoal = (accountId, goalId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteGoal',\n                accountId,\n                goalId,\n            })\n        )\n    }\n}\n\nexport const saveRewardInProgress = (accountId, goalId, rewardId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardInProgress = (accountId, goalId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardInProgress',\n                accountId,\n                goalId,\n                rewardId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport UserButton from '../UserButton/UserButton'\nimport EditProgressReward from './EditProgressReward'\nimport ConfirmAction from '../UI/ConfirmAction'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Rewards = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [editRewardOpen, setEditRewardOpen] = useState('')\n    const [selectedReward, setSelectedReward] = useState('')\n    const [deleteRewardVisible, setDeleteRewardVisible] = useState('')\n\n    const { account, progress, rewardData, activityData } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n    const rewardObj =\n        progress &&\n        progress.rewards.find(item => item.rewardId === selectedReward)\n    const selectedRewardObj =\n        progress && rewardObj && rewardData[rewardObj.reward]\n\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.rewards')}\n                items={progress.rewards.filter(item => rewardData[item.reward])}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedReward(item.rewardId)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    rewardData[item.reward].images.length > 0\n                                        ? rewardData[item.reward].images[0]\n                                        : placeholderImages[\n                                              getPH(item.rewardId)\n                                          ]\n                                }\n                                title={rewardData[item.reward].name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedReward === item.rewardId\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedReward === item.rewardId\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {rewardData[item.reward].name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(account._id)}\n                addTitle={t('g.addReward')}\n                onAdd={() => setEditRewardOpen('new')}\n                bottomContent={\n                    selectedReward && selectedRewardObj ? (\n                        <>\n                            <Typography gutterBottom>\n                                {selectedRewardObj.name}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    props.history.push(\n                                        '/rewards/' + selectedRewardObj._id\n                                    )\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToReward')}\n                            </Button>\n                            {selectedRewardObj &&\n                                account._id &&\n                                rewardObj.owner === account._id && (\n                                    <>\n                                        <Box>\n                                            <Button\n                                                onClick={() =>\n                                                    wsActions.sendReward(\n                                                        account._id,\n                                                        progress._id,\n                                                        selectedReward\n                                                    )\n                                                }\n                                                color=\"primary\"\n                                            >\n                                                {t('g.sendRewardManually')}\n                                            </Button>\n                                        </Box>\n                                        <Button\n                                            onClick={() =>\n                                                setEditRewardOpen(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.editReward')}\n                                        </Button>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteRewardVisible(\n                                                    selectedReward\n                                                )\n                                            }\n                                        >\n                                            {t('g.removeReward')}\n                                        </Button>\n                                    </>\n                                )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <UserButton id={rewardObj.owner} />\n                                <span>\n                                    {t(\n                                        'g.' +\n                                            (rewardObj.repeat === 'manual'\n                                                ? 'manual'\n                                                : rewardObj.repeat === 'once'\n                                                ? 'once'\n                                                : rewardObj.repeat === 'time'\n                                                ? 'everyTime'\n                                                : '')\n                                    )}\n                                    {t('reward.forActivities')}\n                                    {rewardObj.activities.map(activity => {\n                                        if (activityData[activity]) {\n                                            return (\n                                                <Link\n                                                    to={\n                                                        '/activities/' +\n                                                        activityData[activity]\n                                                            ._id\n                                                    }\n                                                >\n                                                    {\n                                                        activityData[activity]\n                                                            .name\n                                                    }\n                                                </Link>\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                </span>\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={Boolean(editRewardOpen)}\n                        close={() => setEditRewardOpen('')}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        {editRewardOpen && (\n                            <EditProgressReward\n                                account={account}\n                                rewardId={editRewardOpen}\n                                rewardData={rewardData}\n                                activityData={activityData}\n                                progress={progress}\n                                cancel={() => setEditRewardOpen('')}\n                            />\n                        )}\n                    </DialogFullscreen>\n                    <ConfirmAction\n                        open={Boolean(deleteRewardVisible)}\n                        title={t('activity.confirmRemove')}\n                        cancel={() => setDeleteRewardVisible('')}\n                        confirm={() => {\n                            wsActions.deleteRewardInProgress(\n                                account._id,\n                                progress._id,\n                                deleteRewardVisible\n                            )\n                            setSelectedReward('')\n                        }}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Rewards)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteRewardFromProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteRewardFromProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\nexport const addRewardToProgress = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addRewardToProgress',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const deleteActivityFromProgress = (\n    accountId,\n    progressId,\n    activityId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivityFromProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\nexport const addActivityToProgress = (accountId, progressId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addActivityToProgress',\n                accountId,\n                progressId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const sendReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n","import dayjs from 'dayjs'\ndayjs().format()\nexport default activityObj => {\n    let lastStages = activityObj.stages\n        .slice(Math.max(activityObj.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            // return -1\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = dayjs()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = dayjs()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = dayjs()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = dayjs()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = dayjs()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = dayjs()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = dayjs()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = dayjs()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = dayjs()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = dayjs()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = dayjs()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    return lastStages.length > 0 ? lastStages[0].stageId : 0\n}\n","import React, { useState } from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Tabs from 'antd/es/tabs'\nimport Badge from 'antd/es/badge'\nimport dayjs from 'dayjs'\nimport {\n    Button,\n    CardContent,\n    CardMedia,\n    Chip,\n    createMuiTheme,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MuiThemeProvider,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { blue, green, orange, purple, red } from '@material-ui/core/colors'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport { getPH, placeholderImages } from '../../components/MasonryCard'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport getNowStageId from '../../utils/getNowStageId'\n\ndayjs().format()\n\nconst redTheme = createMuiTheme({\n    palette: { primary: { main: red[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: red[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(red[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst blueTheme = createMuiTheme({\n    palette: { primary: { main: blue[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: blue[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(blue[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst greenTheme = createMuiTheme({\n    palette: { primary: { main: green[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: green[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(green[600], 0.05),\n                },\n            },\n        },\n    },\n})\nconst orangeTheme = createMuiTheme({\n    palette: { primary: { main: orange[600] } },\n    overrides: {\n        MuiSelect: {\n            selectMenu: { color: orange[600] },\n            select: {\n                '&:focus': {\n                    backgroundColor: fade(orange[600], 0.05),\n                },\n            },\n        },\n    },\n})\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    overrides: {\n        MuiListItem: {\n            secondaryAction: {\n                paddingRight: '133px',\n                paddingLeft: 0,\n            },\n        },\n    },\n})\n\nconst ActivityTable = props => {\n    const { t } = useTranslation()\n    const [showEarnedRewards, setShowEarnedRewards] = useState(false)\n    const { account, rewardData, activityData, activityId, activity } = props\n\n    if (!activityId) return null\n    const activityObj =\n        activityId === activity._id ? activity : activityData[activityId]\n    if (!activityObj) return null\n\n    const isOwner = account && account._id === activityObj.owner\n\n    const nowStageId = getNowStageId(activityObj)\n    const stages = activityObj.stages\n\n    return stages.length === 0 ? null : (\n        <MuiThemeProvider theme={customTheme}>\n            <Tabs\n                // activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? stages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                // onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {stages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getStatusText = id => {\n                        const status = getStatus(id)\n                        switch (status) {\n                            case 'fail':\n                                return t('progress.failed')\n                            case 'complete':\n                                return t('progress.completed')\n                            case 'dismissed':\n                                return t('progress.dismissed')\n                            default:\n                                return t('progress.inProcess')\n                        }\n                    }\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(activityObj.owner)\n\n                    const getTag = id => {\n                        return id === account._id ? (\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={myStatus}\n                                onChange={e =>\n                                    wsActions.changeStage(\n                                        e.target.value,\n                                        account._id,\n                                        activityObj._id,\n                                        stage.stageId\n                                    )\n                                }\n                            >\n                                <MenuItem value=\"complete\">\n                                    {t('progress.complete')}\n                                </MenuItem>\n                                <MenuItem value=\"process\">\n                                    {t('progress.inProcess')}\n                                </MenuItem>\n                                <MenuItem value=\"fail\">\n                                    {t('progress.fail')}\n                                </MenuItem>\n                                <MenuItem value=\"dismissed\">\n                                    {t('progress.dismiss')}\n                                </MenuItem>\n                            </Select>\n                        ) : (\n                            <Chip color=\"primary\" label={getStatusText(id)} />\n                        )\n                    }\n\n                    const users = activityObj.users\n                        .filter(item => item !== activityObj.owner)\n                        .map(user => {\n                            const userStatus = getStatus(user)\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <UserButton noName={true} id={user} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <UserButton\n                                                id={user}\n                                                noAva={true}\n                                                span={true}\n                                                onlyName={true}\n                                            />\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <MuiThemeProvider\n                                            theme={\n                                                userStatus === 'process'\n                                                    ? blueTheme\n                                                    : userStatus === 'complete'\n                                                    ? greenTheme\n                                                    : userStatus === 'fail'\n                                                    ? redTheme\n                                                    : orangeTheme\n                                            }\n                                        >\n                                            {getTag(user)}\n                                        </MuiThemeProvider>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n\n                    const owner = [\n                        <ListItem>\n                            <ListItemAvatar>\n                                <UserButton\n                                    noName={true}\n                                    id={activityObj.owner}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Typography noWrap variant=\"body2\">\n                                        <UserButton\n                                            id={activityObj.owner}\n                                            noAva={true}\n                                            span={true}\n                                            onlyName={true}\n                                        />\n                                    </Typography>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <MuiThemeProvider\n                                    theme={\n                                        stageStatus === 'process'\n                                            ? blueTheme\n                                            : stageStatus === 'complete'\n                                            ? greenTheme\n                                            : stageStatus === 'fail'\n                                            ? redTheme\n                                            : orangeTheme\n                                    }\n                                >\n                                    {getTag(activityObj.owner)}\n                                </MuiThemeProvider>\n                            </ListItemSecondaryAction>\n                        </ListItem>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('dddd')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('D MMM YY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('wo')} week</span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .startOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span>\n                                        {stageDate\n                                            .endOf('week')\n                                            .format('D MMM YY')}\n                                    </span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = dayjs()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>\n                                    <span>{stageDate.format('MMMM')}</span>\n                                </div>\n                                <div>\n                                    <span>{stageDate.format('YYYY')}</span>\n                                </div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = dayjs().year(stage.year)\n\n                        tabTitle = (\n                            <div>\n                                <span>{stageDate.format('YYYY')}</span>\n                            </div>\n                        )\n                    }\n\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'blue'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            <List dense={true}>\n                                {owner}\n                                {users}\n                            </List>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    {/* {showEarnedRewards && (\n                                        // <Rewards\n                                        //     rewards={stage.paid}\n                                        //     readOnly\n                                        // />\n                                    )} */}\n                                    <Button\n                                        onClick={() =>\n                                            setShowEarnedRewards(\n                                                !showEarnedRewards\n                                            )\n                                        }\n                                        color=\"primary\"\n                                        style={{}}\n                                    >\n                                        {(showEarnedRewards\n                                            ? t('g.hide')\n                                            : t('g.show')) +\n                                            t('progress.earnedRewards')}\n                                    </Button>\n                                    {showEarnedRewards && (\n                                        <HorizontalScrollList\n                                            items={stage.paid\n                                                .map(item => rewardData[item])\n                                                .filter(item => item)}\n                                            content={item => (\n                                                <CardContent\n                                                    style={{\n                                                        textAlign: 'center',\n                                                        position: 'relative',\n                                                        padding: '5px',\n                                                    }}\n                                                >\n                                                    <Link\n                                                        to={\n                                                            '/rewards/' +\n                                                            item._id\n                                                        }\n                                                    >\n                                                        <CardMedia\n                                                            style={{\n                                                                height: '150px',\n                                                                backgroundSize:\n                                                                    'contain',\n                                                            }}\n                                                            image={\n                                                                item.images\n                                                                    .length > 0\n                                                                    ? item\n                                                                          .images[0]\n                                                                    : placeholderImages[\n                                                                          getPH(\n                                                                              item._id\n                                                                          )\n                                                                      ]\n                                                            }\n                                                            title={item.name}\n                                                        />\n                                                        <CardContent\n                                                            style={{\n                                                                padding: '5px',\n                                                            }}\n                                                        >\n                                                            <Typography\n                                                                variant=\"body2\"\n                                                                noWrap\n                                                            >\n                                                                {item.name}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Link>\n                                                </CardContent>\n                                            )}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        activity: state.activity,\n        account: state.account,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ActivityTable))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const saveActivity = (accountId, activity) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveActivity',\n                accountId,\n                activity,\n            })\n        )\n    }\n}\n\nexport const changeLikesActivity = (accountId, activityId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesActivity',\n                accountId,\n                activityId,\n                add,\n            })\n        )\n    }\n}\n\nexport const deleteActivity = (accountId, activityId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteActivity',\n                accountId,\n                activityId,\n            })\n        )\n    }\n}\n\nexport const changeStage = (value, accountId, activityId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                activityId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Slide,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport ProfileActivities from '../ProfileActivities/ProfileActivities'\nimport DialogFullscreen from '../UI/DialogFullscreen'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport EditResource from '../EditResource/EditResource'\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst Activities = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const [addActivityOpen, setAddActivityOpen] = useState(false)\n    const [selectedActivity, setSelectedActivity] = useState('')\n    const [deleteActivityVisible, setDeleteActivityVisible] = useState(false)\n\n    const {\n        activityData,\n        account,\n        progress,\n        activities,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const isOwner =\n        account && account._id && progress && account._id === progress.owner\n\n    const activitiesIds = (progress ? progress.activities : activities) || []\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('g.activities')}\n                items={activitiesIds\n                    .map(item => activityData[item])\n                    .filter(item => item)}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedActivity(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedActivity === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedActivity === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </CardContent>\n                )}\n                withAdd={Boolean(\n                    account &&\n                        (props.isOwner ||\n                            (progress && progress.owner === account._id))\n                )}\n                addTitle={t('g.addActivity')}\n                onAdd={() => setAddActivityOpen(true)}\n                bottomContent={\n                    selectedActivity && activityData[selectedActivity] ? (\n                        <>\n                            <Typography gutterBottom>\n                                {activityData[selectedActivity]\n                                    ? activityData[selectedActivity].name\n                                    : 'Selected activity'}\n                            </Typography>\n                            <Button\n                                onClick={() =>\n                                    setChosenResource(selectedActivity)\n                                }\n                                color=\"primary\"\n                            >\n                                {t('g.goToActivity')}\n                            </Button>\n                            {isOwner && (\n                                <Button\n                                    onClick={() =>\n                                        setDeleteActivityVisible(\n                                            selectedActivity\n                                        )\n                                    }\n                                >\n                                    {t('g.removeActivity')}\n                                </Button>\n                            )}\n                            <Box style={{ marginTop: '10px' }}>\n                                <ActivityTable activityId={selectedActivity} />\n                            </Box>\n                        </>\n                    ) : null\n                }\n            />\n            {progress && (\n                <>\n                    <DialogFullscreen\n                        open={addActivityOpen}\n                        close={() => setAddActivityOpen(false)}\n                        title={t('activity.addActivityToGoal')}\n                    >\n                        <ProfileActivities\n                            owner={account}\n                            isSelect\n                            value={[]}\n                            onChange={value => {\n                                if (value.length > 0)\n                                    wsActions.addActivityToProgress(\n                                        account._id,\n                                        progress._id,\n                                        value[0]\n                                    )\n                                setAddActivityOpen(false)\n                            }}\n                            // openInDialog\n                            // additionalButton={item => (\n                            //     <Button\n                            //         color=\"primary\"\n                            //         onClick={() => {\n                            //             wsActions.addActivityToProgress(\n                            //                 account._id,\n                            //                 progress._id,\n                            //                 item._id\n                            //             )\n                            //             setAddActivityOpen(false)\n                            //         }}\n                            //     >\n                            //         {t('g.choose')}\n                            //     </Button>\n                            // )}\n                        />\n                    </DialogFullscreen>\n                    <Dialog\n                        open={Boolean(deleteActivityVisible)}\n                        onClose={() => setDeleteActivityVisible(false)}\n                    >\n                        <DialogTitle>{t('activity.confirmRemove')}</DialogTitle>\n\n                        <DialogActions>\n                            <Button\n                                onClick={() => setDeleteActivityVisible(false)}\n                                color=\"primary\"\n                            >\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    wsActions.deleteActivityFromProgress(\n                                        account._id,\n                                        progress._id,\n                                        deleteActivityVisible\n                                    )\n                                    setDeleteActivityVisible(false)\n                                    setSelectedActivity('')\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.confirm')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n            {props.isOwner && (\n                <Dialog\n                    fullScreen\n                    open={addActivityOpen}\n                    onClose={() => setAddActivityOpen(false)}\n                    TransitionComponent={TransitionComponent}\n                >\n                    <EditResource\n                        type=\"activity\"\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setAddActivityOpen(false)}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        activityData: state.activityData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Activities)\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../components/Rewards/Rewards'\nimport Activities from '../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../components/SimilarResources'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Goal = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [progress, setProgress] = useState(null)\n    const [posts, setPosts] = useState([])\n\n    const [currentTab, setCurrentTab] = useState(1)\n    const [currentTabD, setCurrentTabD] = useState(0)\n\n    return (\n        <ResourceCore\n            type=\"goal\"\n            setResource={setProgress}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {progress && progress._id && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.detailsFor')}\n                        </Typography>\n                        <Paper square>\n                            <Tabs\n                                value={currentTabD}\n                                onChange={(event, value) =>\n                                    setCurrentTabD(value)\n                                }\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label={t('g.fromStart')} />\n                                <Tab label={t('g.toGoal')} />\n                                <Tab label={t('g.resultFinish')} />\n                            </Tabs>\n                        </Paper>\n\n                        {progress[\n                            currentTabD === 0\n                                ? 'startImages'\n                                : currentTabD === 1\n                                ? 'images'\n                                : 'finishImages'\n                        ].length > 0 && (\n                            <>\n                                <Typography\n                                    className={classes.title}\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                >\n                                    {t('g.images')}\n                                </Typography>\n                                <ImageCarousel\n                                    images={\n                                        progress[\n                                            currentTabD === 0\n                                                ? 'startImages'\n                                                : currentTabD === 1\n                                                ? 'images'\n                                                : 'finishImages'\n                                        ]\n                                    }\n                                />\n                            </>\n                        )}\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={\n                                    progress[\n                                        currentTabD === 0\n                                            ? 'startDescription'\n                                            : currentTabD === 1\n                                            ? 'description'\n                                            : 'finishDescription'\n                                    ]\n                                }\n                            />\n                        </Paper>\n\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={progress.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"goal\" /> */}\n\n                        <ResourcePosts\n                            resource={progress}\n                            posts={posts}\n                            type=\"goal\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Activities progress={progress} />\n                        <Rewards progress={progress} />\n                    </TabPanel>\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Goal)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport ReadMore from '../../components/UI/ReadMore'\nimport {\n    Box,\n    Divider,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../components/ResourceCore'\nimport ActivityTable from '../Goal/ActivityTable'\nimport MapPosition from '../../components/MapPosition/MapPosition'\nimport ResourcePosts from '../../components/Post/ResourcePosts'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\nconst Activity = props => {\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [activity, setActivity] = useState(null)\n    const [posts, setPosts] = useState([])\n    const [currentTab, setCurrentTab] = useState(2)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return t('g.sunday')\n            case '1':\n                return t('g.monday')\n            case '2':\n                return t('g.tuesday')\n            case '3':\n                return t('g.wednesday')\n            case '4':\n                return t('g.thursday')\n            case '5':\n                return t('g.friday')\n            case '6':\n                return t('g.saturday')\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return t('g.everyDay')\n            case 'weekday':\n                return t('g.everyDayOfWeek')\n            case 'week':\n                return t('g.everyWeek')\n            case 'month':\n                return t('g.everyMonth')\n            case 'year':\n                return t('g.everyYear')\n            default:\n                return ''\n        }\n    }\n    return (\n        <ResourceCore\n            type=\"activity\"\n            setResource={setActivity}\n            setPosts={setPosts}\n            navi={\n                <Tabs\n                    value={currentTab}\n                    onChange={(event, value) => setCurrentTab(value)}\n                    aria-label=\"simple tabs example\"\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab label={t('g.desc')} {...a11yProps(0)} />\n                    <Tab label={t('g.posts')} {...a11yProps(1)} />\n                    <Tab label={t('g.tracking')} {...a11yProps(2)} />\n                </Tabs>\n            }\n            resourceId={props.id}\n        >\n            {activity && (\n                <>\n                    <TabPanel value={currentTab} index={0}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.desc')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            {activity.repeat !== 'no' && (\n                                <>\n                                    <p>\n                                        <RetweetOutlined />\n                                        {` ${t('g.repeats')} \n                            ${getRepeatType(activity.repeat) +\n                                (activity.repeat === 'weekday'\n                                    ? ' (' +\n                                      activity.days.reduce(\n                                          (acc, val, index) =>\n                                              acc +\n                                              (index > 0 ? ', ' : '') +\n                                              getDay(val),\n                                          ''\n                                      ) +\n                                      ').'\n                                    : '.')}`}\n                                    </p>\n                                    <Divider\n                                        light\n                                        variant=\"middle\"\n                                        style={{ marginBottom: '15px' }}\n                                    />\n                                </>\n                            )}\n\n                            <ReadMore\n                                initialHeight={200}\n                                contentEditor={activity.description}\n                            />\n                        </Paper>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.position')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <MapPosition position={activity.position} />\n                        </Paper>\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={1}>\n                        {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                        <ResourcePosts\n                            resource={activity}\n                            posts={posts}\n                            type=\"activity\"\n                        />\n                    </TabPanel>\n                    <TabPanel value={currentTab} index={2}>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('g.tracking')}\n                        </Typography>\n                        <Paper style={{ padding: '15px' }}>\n                            <ActivityTable activityId={activity._id} />\n                        </Paper>\n                    </TabPanel>\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCore>\n    )\n}\n\nexport default withRouter(Activity)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst ProgressButton = props => {\n    const { id, type } = props\n    const dataProp =\n        type === 'goals'\n            ? 'progressData'\n            : type === 'rewards'\n            ? 'rewardData'\n            : 'activityData'\n    if (!props[dataProp][id]) return null\n\n    const handleClick = () => props.history.push('/' + type + '/' + id)\n    return (\n        <span\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {props[dataProp][id].name}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport HorizontalScrollList from '../UI/HorizontalScrollList'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport {\n    Badge,\n    Box,\n    Button,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    MenuItem,\n    Select,\n    Typography,\n} from '@material-ui/core'\nimport { getPH, placeholderImages } from '../MasonryCard'\nimport { useTranslation } from 'react-i18next'\nimport ActivityTable from '../../containers/Goal/ActivityTable'\nimport dayjs from 'dayjs'\nimport { spanStyle } from '../Post/Message'\nimport ConfirmAction from '../UI/ConfirmAction'\nimport UserButton from '../UserButton/UserButton'\ndayjs().format()\n\nconst Transactions = props => {\n    const { t } = useTranslation()\n    // const [anchorEl, setAnchorEl] = useState(null)\n\n    const [selectedTransaction, setSelectedTransaction] = useState('')\n    const [deleteTransactionVisible, setDeleteTransactionVisible] = useState(\n        false\n    )\n\n    const {\n        transactionData,\n        rewardData,\n        account,\n        transactions,\n        setChosenResource,\n    } = props\n\n    // const handleClose = () => {\n    //     setAnchorEl(null)\n    // }\n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget)\n    // }\n\n    const transactionObj =\n        selectedTransaction && transactionData[selectedTransaction]\n    const rewardObj = transactionObj && rewardData[transactionObj.reward]\n    return (\n        <>\n            <HorizontalScrollList\n                title={t('profile.receivedAndGivenRewards')}\n                items={transactions\n                    .map(item => transactionData[item])\n                    .filter(item => item)\n                    .filter(item => rewardData[item.reward])\n                    .map(item => ({\n                        ...item,\n                        rewardObject: rewardData[item.reward],\n                    }))\n                    .sort((a, b) => {\n                        if (\n                            a.status === 'confirmed' &&\n                            b.status !== 'confirmed'\n                        )\n                            return 1\n                        if (\n                            a.status !== 'confirmed' &&\n                            b.status === 'confirmed'\n                        )\n                            return -1\n                        if (a.status === 'process' && b.status !== 'process')\n                            return 1\n                        if (a.status !== 'process' && b.status === 'process')\n                            return -1\n                        // if (\n                        //     a.status !== 'confirmed' &&\n                        //     b.status !== 'confirmed'\n                        // ) {\n                        //     if (a.to === owner._id && b.to !== owner._id)\n                        //         return 1\n                        //     if (a.to !== owner._id && b.to === owner._id)\n                        //         return -1\n                        // }\n                        return new Date(a.date).getTime() <\n                            new Date(b.date).getTime()\n                            ? 1\n                            : -1\n                    })}\n                content={item => (\n                    <CardContent\n                        style={{\n                            textAlign: 'center',\n                            position: 'relative',\n                            padding: '5px',\n                        }}\n                    >\n                        <CardActionArea\n                            onClick={() => setSelectedTransaction(item._id)}\n                        >\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.rewardObject.images.length > 0\n                                        ? item.rewardObject.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.rewardObject.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    color={\n                                        selectedTransaction === item._id\n                                            ? 'primary'\n                                            : undefined\n                                    }\n                                    style={{\n                                        fontWeight:\n                                            selectedTransaction === item._id\n                                                ? 600\n                                                : 'initial',\n                                    }}\n                                >\n                                    {item.rewardObject.name}\n                                </Typography>\n                                <span style={spanStyle}>\n                                    {dayjs(item.date).fromNow()}\n                                </span>\n                                <Box />\n                            </CardContent>\n                        </CardActionArea>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '5px',\n                                right: '5px',\n                            }}\n                        >\n                            <Box\n                                style={{\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '10px',\n                                    background:\n                                        item.status === 'confirmed'\n                                            ? 'green'\n                                            : item.status === 'cancelled'\n                                            ? 'red'\n                                            : 'blue',\n                                }}\n                            />\n                        </Box>\n                    </CardContent>\n                )}\n                bottomContent={\n                    transactionObj && rewardObj ? (\n                        <>\n                            <Typography variant=\"h4\" gutterBottom>\n                                <span\n                                    onClick={() =>\n                                        setChosenResource(rewardObj._id)\n                                    }\n                                >\n                                    {rewardObj.name || 'Selected activity'}\n                                </span>\n                            </Typography>\n                            <Box style={{ ...spanStyle, margin: '10px' }}>\n                                {dayjs(transactionObj.date).format(\n                                    'DD/MM/YYYY'\n                                )}\n                            </Box>\n                            <Typography gutterBottom>\n                                {t('trans.from')}\n                                <UserButton\n                                    size={20}\n                                    id={transactionObj.from}\n                                />\n                                {t('trans.to')}\n                                <UserButton size={20} id={transactionObj.to} />\n                                {t('trans.inGoal')}\n                                <Link\n                                    to={'/goals/' + transactionObj.progressId}\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.progress}\n                                    </span>\n                                </Link>\n                                {t('trans.inActivity')}\n                                <Link\n                                    to={\n                                        '/activities/' +\n                                        transactionObj.activityId\n                                    }\n                                >\n                                    <span style={{ fontWeight: 500 }}>\n                                        {transactionObj.activity}\n                                    </span>\n                                </Link>\n                            </Typography>\n                            {t('trans.status')}\n\n                            {account._id === transactionObj.to ||\n                            account._id === transactionObj.from ? (\n                                <>\n                                    <Select\n                                        value={transactionObj.status}\n                                        onChange={e =>\n                                            wsActions.confirmTransaction(\n                                                account._id,\n                                                transactionObj._id,\n                                                e.target.value\n                                            )\n                                        }\n                                        style={{ margin: '15px 0px' }}\n                                    >\n                                        <MenuItem value=\"confirmed\">\n                                            {t('trans.confirmed')}\n                                        </MenuItem>\n                                        <MenuItem value=\"pending\">\n                                            {t('trans.pending')}\n                                        </MenuItem>\n                                        <MenuItem value=\"cancelled\">\n                                            {t('trans.cancelled')}\n                                        </MenuItem>\n                                    </Select>\n                                    <Box>\n                                        <Button\n                                            onClick={() =>\n                                                setDeleteTransactionVisible(\n                                                    true\n                                                )\n                                            }\n                                        >\n                                            {t('trans.deleteItem')}\n                                        </Button>\n                                    </Box>\n                                </>\n                            ) : (\n                                transactionObj.status\n                            )}\n                        </>\n                    ) : null\n                }\n            />\n\n            <ConfirmAction\n                open={deleteTransactionVisible}\n                title={t('trans.confirmDelete')}\n                cancel={() => setDeleteTransactionVisible(false)}\n                confirm={() =>\n                    wsActions.deleteTransaction(\n                        account._id,\n                        selectedTransaction\n                    )\n                }\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const cancelTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'cancelTransaction',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const confirmTransaction = (accountId, id, status) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'confirmTransaction',\n                id,\n                accountId,\n                status,\n            })\n        )\n    }\n}\n\nexport const deleteTransaction = (accountId, id) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteTransaction',\n                accountId,\n                id,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport * as classes from './Profile.module.css'\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst Profile = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    // const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setChosenResource } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    // useEffect(() => {\n    //     const pathParts = props.history.location.pathname.split('/')\n    //     if (pathParts.length > 2) {\n    //         const profileId = pathParts[2]\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: profileId })\n    //         } else {\n    //             pullData(props, data, setData, { forceAuth: false }, data => {\n    //                 const friendData = {}\n    //                 for (let friend of data.friendData)\n    //                     friendData[friend._id] = friend\n\n    //                 const progressData = {}\n    //                 if (data.progressData)\n    //                     for (let progress of data.progressData)\n    //                         progressData[progress._id] = progress\n\n    //                 const activityData = {}\n    //                 if (data.activityData)\n    //                     for (let activity of data.activityData)\n    //                         activityData[activity._id] = activity\n    //                 const rewardData = {}\n    //                 if (data.rewardData)\n    //                     for (let reward of data.rewardData)\n    //                         rewardData[reward._id] = reward\n    //                 const post = {}\n    //                 if (data.posts)\n    //                     for (let item of data.posts) post[item._id] = item\n\n    //                 props.setData({\n    //                     profile: data.profile,\n    //                     friendData,\n    //                     post,\n    //                     account: {},\n    //                     progressData,\n    //                     activityData,\n    //                     rewardData,\n    //                     onlineUsers: data.onlineUsers,\n    //                 })\n    //             })\n    //         }\n    //     } else {\n    //         if (props.isAuthed) {\n    //             props.setData({ currentProfile: account._id })\n    //         }\n    //     }\n    // }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Layout noHeader>\n                <Paper style={{ padding: '15px' }}>\n                    <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                accept=\"image/*\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', url => {\n                                        if (url) props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        flex: 1,\n                                        display: 'flex',\n                                        height: '100%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        flexDirection: 'column',\n                                    }}\n                                    onClick={e => {\n                                        if (window.isRNWebView) {\n                                            e.stopPropagation()\n                                            window.ReactNativeWebView.postMessage(\n                                                'uploadFile'\n                                            )\n                                            window.callback = url => {\n                                                props.increaseAvatarV()\n                                            }\n                                        }\n                                    }}\n                                >\n                                    {account.image ? (\n                                        <Avatar\n                                            src={getAvatar(\n                                                account._id,\n                                                account.image\n                                            )}\n                                            size={150}\n                                            style={{ margin: '25px' }}\n                                        />\n                                    ) : (\n                                        <>\n                                            {loading ? (\n                                                <LoadingOutlined />\n                                            ) : (\n                                                <PlusOutlined />\n                                            )}\n                                            <div className=\"ant-upload-text\">\n                                                {t('g.upload')}\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n\n                        <Box style={{ padding: '0 15px' }}>\n                            {props.onlineUsers.includes(profile._id) && (\n                                <Badge color=\"green\" text=\"online\" />\n                            )}\n                            <TypographyA.Title\n                                level={2}\n                                editable={\n                                    isOwner\n                                        ? {\n                                              onChange: res =>\n                                                  wsActions.editAccount(\n                                                      { name: res },\n                                                      account._id\n                                                  ),\n                                              icon: (\n                                                  <IconButton color=\"primary\">\n                                                      <Edit />\n                                                  </IconButton>\n                                              ),\n                                              maxLength: fieldLength.name,\n                                              autoSize: {\n                                                  minRows: 1,\n                                                  maxRows: 1,\n                                              },\n                                          }\n                                        : false\n                                }\n                            >\n                                {profile.name}\n                            </TypographyA.Title>\n                        </Box>\n                        <Typography variant=\"h5\">({profile._id})</Typography>\n                        <Box\n                            style={{\n                                margin: '5px 0px',\n                            }}\n                        >\n                            <Button\n                                onClick={() => setFollowersVisible('followers')}\n                                style={{ marginRight: '20px' }}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followingAccounts.length} ${t(\n                                        'g.followers'\n                                    )}`}\n                                </span>\n                            </Button>\n                            <Button\n                                onClick={() => setFollowersVisible('following')}\n                            >\n                                <span\n                                    style={{\n                                        textTransform: 'none',\n                                    }}\n                                >\n                                    {`${profile.followProgresses.length +\n                                        profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                                </span>\n                            </Button>\n                        </Box>\n\n                        <div>\n                            <ShareButton\n                                link={\n                                    'https://addspire.com/profile/' +\n                                    profile._id\n                                }\n                                media={\n                                    profile.image &&\n                                    getAvatar(profile._id, profile.image)\n                                }\n                                title={profile.name + t('profile.shareText')}\n                                item={{\n                                    profileId: profile._id,\n                                    profileName: profile.name,\n                                }}\n                            />\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Chip color=\"primary\" label=\"Friends\" />\n                                    ) : null}\n                                    {account.followAccounts &&\n                                        !account.followAccounts.includes(\n                                            profile._id\n                                        ) && (\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    wsActions.followAccount(\n                                                        account._id,\n                                                        profile._id\n                                                    )\n                                                }\n                                                style={{\n                                                    marginRight: '20px',\n                                                }}\n                                                variant=\"contained\"\n                                            >\n                                                {t('g.follow')}\n                                            </Button>\n                                        )}\n                                </span>\n                            )}\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={profile._id}\n                                additionalButtons={\n                                    isOwner\n                                        ? [\n                                              {\n                                                  onClick: () =>\n                                                      props.history.push(\n                                                          '/logout'\n                                                      ),\n                                                  title: t('g.logout'),\n                                              },\n                                          ]\n                                        : null\n                                }\n                                asText={true}\n                            />\n                        </div>\n                        <Box />\n                    </div>\n                </Paper>\n\n                <HorizontalScrollList\n                    title={t('g.goals')}\n                    items={loadedProgresses.sort(sortProgresses)}\n                    content={item => (\n                        <CardActionArea\n                            onClick={() => setChosenResource(item._id)}\n                        >\n                            {/* <Link to={'/goals/' + item._id}> */}\n                            <CardMedia\n                                style={{\n                                    height: '150px',\n                                    backgroundSize: 'contain',\n                                }}\n                                image={\n                                    item.images.length > 0\n                                        ? item.images[0]\n                                        : placeholderImages[getPH(item._id)]\n                                }\n                                title={item.name}\n                            />\n                            <CardContent style={{ padding: '5px' }}>\n                                <Typography\n                                    variant=\"body2\"\n                                    noWrap\n                                    align=\"center\"\n                                >\n                                    {item.name}\n                                </Typography>\n                            </CardContent>\n                            {/* </Link> */}\n                        </CardActionArea>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addGoal')}\n                    onAdd={() => setStartProgressVisible(true)}\n                />\n\n                <Activities\n                    activities={profile.activities}\n                    isOwner={isOwner}\n                    setChosenResource={setChosenResource}\n                />\n                <ProfileRewards\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                <Transactions\n                    transactions={profile.transactions}\n                    isOwner={isOwner}\n                    owner={profile}\n                    setChosenResource={setChosenResource}\n                />\n                {/* <ProfileRewards owner={profile} wish /> */}\n                {isOwner && invitedFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.pendingFriendships')}\n                            items={invitedFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                {isOwner && invitingFriends.length > 0 && (\n                    <>\n                        <HorizontalScrollList\n                            title={t('profile.awaitingApproval')}\n                            items={invitingFriends}\n                            content={item => (\n                                <CardContent\n                                    style={{\n                                        textAlign: 'center',\n                                        padding: '5px',\n                                    }}\n                                >\n                                    <Box>\n                                        <UserButton\n                                            noName\n                                            id={item.friend}\n                                            size={80}\n                                        />\n                                    </Box>\n                                    <UserButton\n                                        noAva\n                                        typography\n                                        style={{\n                                            width: '100%',\n                                            margin: '3px 0 7px',\n                                        }}\n                                        id={item.friend}\n                                    />\n                                    <Box style={{ margin: '5px 0' }}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.acceptFriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.accept')}\n                                        </Button>\n                                    </Box>\n                                    <Box>\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() =>\n                                                wsActions.unfriend(\n                                                    account._id,\n                                                    item.friend\n                                                )\n                                            }\n                                        >\n                                            {t('g.decline')}\n                                        </Button>\n                                    </Box>\n                                </CardContent>\n                            )}\n                        />\n                    </>\n                )}\n\n                <HorizontalScrollList\n                    title={t('g.friends')}\n                    items={realFriends}\n                    content={item => (\n                        <CardContent\n                            style={{\n                                textAlign: 'center',\n                                position: 'relative',\n                                padding: '5px',\n                            }}\n                        >\n                            <Box>\n                                <UserButton noName id={item.friend} size={80} />\n                            </Box>\n                            <UserButton\n                                noAva\n                                typography\n                                style={{\n                                    width: '100%',\n                                    margin: '3px 0 7px',\n                                }}\n                                id={item.friend}\n                            />\n\n                            <FriendActionButton\n                                account={account}\n                                realFriends={realFriends}\n                                invitedFriends={invitedFriends}\n                                invitingFriends={invitingFriends}\n                                _id={item.friend}\n                                asIcons={true}\n                                minimized\n                            />\n                        </CardContent>\n                    )}\n                    withAdd={isOwner}\n                    addTitle={t('g.addFriend')}\n                    onAdd={() => setAddFriendOpen(true)}\n                />\n\n                {isOwner && (\n                    <>\n                        <Typography\n                            className={classesM.sectionTitle}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            {t('profile.settings')}\n                        </Typography>\n                        <Paper\n                            style={{\n                                padding: '15px',\n                            }}\n                        >\n                            <Box>\n                                <LanguageSwitcher settings />\n                            </Box>\n                            <Box style={{ margin: '20px auto' }}>\n                                <Button\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    color=\"secondary\"\n                                >\n                                    {t('g.logout')}\n                                </Button>\n                            </Box>\n                            <Button\n                                onClick={() => setDeleteVisible(true)}\n                                color=\"secondary\"\n                            >\n                                {t('profile.deleteAccount')}\n                            </Button>\n                        </Paper>\n\n                        <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                            <DialogTitle>\n                                {t('profile.deleteAccount')}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <p>\n                                        {t('profile.pleaseEnterNickname')}\n                                        {account._id}\n                                        {t('profile.andPressOk')}\n                                    </p>\n                                    <TextField\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setDeleteVisible(false)}>\n                                    {t('g.cancel')}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    {t('g.delete')}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n            </Layout>\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useState } from 'react'\nimport ReactPlayer from 'react-player/lazy'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport TinyEditor from '../../components/UI/TinyEditor'\n\nconst FolderMM = props => {\n    const {\n        selectedBox,\n        el,\n        id,\n        editingText,\n        setEditingText,\n        saveValueMM,\n        editingTextModal,\n        setEditingTextModal,\n        textValue,\n        setTextValue,\n        handleSaveText,\n        editorMode,\n    } = props\n\n    return (\n        <div\n            style={{\n                background: el.bgColor || 'white',\n                flex: 1,\n                borderRadius: (el.radius || 0) + '%',\n            }}\n        >\n            {el.imageValue && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundImage: 'url(\"' + el.imageValue + '\")',\n                    }}\n                />\n            )}\n\n            {el.videoURL && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                >\n                    <ReactPlayer\n                        url={el.videoURL}\n                        width=\"100%\"\n                        height=\"100%\"\n                        style={{\n                            overflow: 'hidden',\n                        }}\n                    />\n                </div>\n            )}\n            {editorMode && (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                />\n            )}\n\n            {(el.textValue || editingText) && (\n                <div\n                    className={\n                        editingText && selectedBox === id\n                            ? 'tinyEditorText_'\n                            : ''\n                    }\n                >\n                    <TinyEditor\n                        onEditorChange={value => setTextValue(value)}\n                        MM\n                        value={el.textValue}\n                        readOnly={!(editingText && selectedBox === id)}\n                    />\n                </div>\n            )}\n            <div className=\"tinyEditorText_\">\n                <DialogFullscreen\n                    open={editingText && selectedBox === id && editingTextModal}\n                    close={() => {\n                        setEditingText(false)\n                    }}\n                    save={handleSaveText}\n                >\n                    <div className=\"tinyEditorText_\">\n                        {editingText && selectedBox === id && (\n                            <TinyEditor\n                                onEditorChange={value => setTextValue(value)}\n                                value={el.textValue}\n                            />\n                        )}\n                    </div>\n                </DialogFullscreen>\n            </div>\n        </div>\n    )\n}\n\nexport default FolderMM\n","import React, { memo, useEffect, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\n\nimport FriendActionButton from '../../components/FriendActionButton'\n\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nimport MasonryCard, {\n    getPH,\n    placeholderImages,\n} from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\n\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport TypographyA from 'antd/es/typography'\n\nimport message from 'antd/es/message'\n\nimport Helmet from 'react-helmet'\n\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n    Button,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    DialogContentText,\n    TextField,\n    Slide,\n    Tabs,\n    Tab,\n} from '@material-ui/core'\nimport Layout from '../../components/Layout/Layout'\nimport { Edit } from '@material-ui/icons'\nimport fieldLength from '../../constants/fieldLength'\nimport dayjs from 'dayjs'\nimport HorizontalScrollList from '../../components/UI/HorizontalScrollList'\nimport AddFriends from '../Friends/AddFriends'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport ShareButton from '../../components/UI/ShareButton'\nimport { sortProgresses } from '../Explore/Explore'\nimport ProfileRewards from '../../components/ProfileRewards/ProfileRewards'\n\nimport Badge from 'antd/es/badge'\nimport LanguageSwitcher from '../../components/LanguageSwitcher/LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport Activities from '../../components/Activities/Activities'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Transactions from '../../components/Transactions/Transactions'\nimport { addUnsorted } from './actions'\n\ndayjs().format()\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        sectionTitle: {\n            fontSize: 13,\n            margin: '30px 15px 10px',\n            textTransform: 'uppercase',\n            fontWeight: 600,\n        },\n    })\n)\nconst ProfileMM = props => {\n    const { t } = useTranslation()\n    const [currentTab, setCurrentTab] = useState('accounts')\n    const classesM = useStyles()\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState('')\n\n    const { profile, account, progressData, setStructure } = props\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [addFriendOpen, setAddFriendOpen] = useState(false)\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const getData = key => {\n                        const d = {}\n                        for (let i of data[key]) d[i._id] = i\n                        return d\n                    }\n\n                    const friendData = getData('friendData')\n                    const progressData = getData('progressData')\n                    const activityData = getData('activityData')\n                    const rewardData = getData('rewardData')\n                    const progress = getData('progress')\n                    const activity = getData('activity')\n                    const reward = getData('reward')\n                    const post = getData('post')\n                    props.setData({\n                        profile: data.profile,\n                        friendData,\n                        // post,\n                        account: {},\n                        progressData,\n                        progress,\n                        activityData,\n                        activity,\n                        rewardData,\n                        reward,\n                        onlineUsers: data.onlineUsers,\n                        currentProfile: profileId,\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    useEffect(() => {\n        if (profile && profile.structure && profile.structure.items) {\n            addUnsorted(props.structure, props.setStructure, profile)\n        }\n    }, [profile.rewards, profile.activities, profile.progresses])\n\n    useEffect(() => {\n        if (profile.structure && profile.structure.items)\n            setStructure(profile.structure, true)\n    }, [profile._id])\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    if (!profile || !profile._id) return null\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n\n    const loading = false\n\n    const { progresses } = profile\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    // const newTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status !== 'Confirmed')) ||\n    //     []\n\n    // const recievedTransactions =\n    //     (transactions &&\n    //         transactions\n    //             .filter(item => transactionData[item])\n    //             .map(item => transactionData[item])\n    //             .filter(item => item.status === 'Confirmed')) ||\n    //     []\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} {t('g.shareText')}\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Paper style={{ padding: '15px', whiteSpace: 'nowrap' }}>\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    <Avatar\n                        src={getAvatar(profile._id, profile.image)}\n                        size={200}\n                    />\n\n                    <Box style={{ padding: '0 15px' }}>\n                        {props.onlineUsers.includes(profile._id) && (\n                            <Badge color=\"green\" text=\"online\" />\n                        )}\n                        <TypographyA.Title level={2}>\n                            {profile.name}\n                        </TypographyA.Title>\n                    </Box>\n                    <Box\n                        style={{\n                            margin: '5px 0px',\n                        }}\n                    >\n                        <Button\n                            onClick={() => setFollowersVisible('followers')}\n                            style={{ marginRight: '20px' }}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followingAccounts.length} ${t(\n                                    'g.followers'\n                                )}`}\n                            </span>\n                        </Button>\n                        <Button\n                            onClick={() => setFollowersVisible('following')}\n                        >\n                            <span\n                                style={{\n                                    textTransform: 'none',\n                                }}\n                            >\n                                {`${profile.followProgresses.length +\n                                    profile.followAccounts.length} \n                                    ${t('g.following')}`}\n                            </span>\n                        </Button>\n                    </Box>\n\n                    <div>\n                        <ShareButton\n                            link={'https://addspire.com/profile/' + profile._id}\n                            media={\n                                profile.image &&\n                                getAvatar(profile._id, profile.image)\n                            }\n                            title={profile.name + t('profile.shareText')}\n                            item={{\n                                profileId: profile._id,\n                                profileName: profile.name,\n                            }}\n                        />\n                        {account && account._id !== profile._id && (\n                            <span style={{ marginRight: '10px' }}>\n                                {realFriends.find(\n                                    item => item.friend === profile._id\n                                ) ? (\n                                    <Chip color=\"primary\" label=\"Friends\" />\n                                ) : null}\n                                {account.followAccounts &&\n                                    !account.followAccounts.includes(\n                                        profile._id\n                                    ) && (\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                            style={{\n                                                marginRight: '20px',\n                                            }}\n                                            variant=\"contained\"\n                                        >\n                                            {t('g.follow')}\n                                        </Button>\n                                    )}\n                            </span>\n                        )}\n                        <FriendActionButton\n                            account={account}\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                            _id={profile._id}\n                            additionalButtons={\n                                isOwner\n                                    ? [\n                                          {\n                                              onClick: () =>\n                                                  props.history.push('/logout'),\n                                              title: t('g.logout'),\n                                          },\n                                      ]\n                                    : null\n                            }\n                            asText={true}\n                        />\n                    </div>\n                    <Box />\n                </div>\n            </Paper>\n\n            {/* {isOwner && (\n                <>\n                    <Typography\n                        className={classesM.sectionTitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('profile.settings')}\n                    </Typography>\n                    <Paper\n                        style={{\n                            padding: '15px',\n                        }}\n                    >\n                        <Box>\n                            <LanguageSwitcher settings />\n                        </Box>\n                        <Box style={{ margin: '20px auto' }}>\n                            <Button\n                                onClick={() => props.history.push('/logout')}\n                                color=\"secondary\"\n                            >\n                                {t('g.logout')}\n                            </Button>\n                        </Box>\n                        <Button\n                            onClick={() => setDeleteVisible(true)}\n                            color=\"secondary\"\n                        >\n                            {t('profile.deleteAccount')}\n                        </Button>\n                    </Paper>\n\n                    <Dialog open={Boolean(deleteVisible)} scroll=\"paper\">\n                        <DialogTitle>{t('profile.deleteAccount')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                <p>\n                                    {t('profile.pleaseEnterNickname')}\n                                    {account._id}\n                                    {t('profile.andPressOk')}\n                                </p>\n                                <TextField\n                                    onChange={e =>\n                                        setDeleteField(e.target.value)\n                                    }\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => setDeleteVisible(false)}>\n                                {t('g.cancel')}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (deleteField !== account._id) {\n                                        message.warning(\n                                            'The nickmanme is not correct.'\n                                        )\n                                    } else {\n                                        wsActions.deleteAccount(account._id)\n                                    }\n                                }}\n                                color=\"primary\"\n                            >\n                                {t('g.delete')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )} */}\n            <Dialog\n                open={Boolean(followersVisible)}\n                onClose={() => setFollowersVisible('')}\n                title={\n                    followersVisible === 'following'\n                        ? t('g.following')\n                        : t('g.followers')\n                }\n                fullWidth\n                maxWidth=\"md\"\n            >\n                <DialogTitle>\n                    {followersVisible !== 'following'\n                        ? t('g.followers')\n                        : t('g.following')}\n                    {followersVisible === 'following' && (\n                        <Tabs\n                            value={currentTab}\n                            onChange={(event, newValue) =>\n                                setCurrentTab(newValue)\n                            }\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab label={t('g.users')} value=\"accounts\" />\n                            <Tab label={t('g.goals')} value=\"goals\" />\n                            <Tab label={t('g.activities')} value=\"activities\" />\n                            <Tab label={t('g.rewards')} value=\"rewards\" />\n                        </Tabs>\n                    )}\n                </DialogTitle>\n                <DialogContent>\n                    {followersVisible === 'following' ? (\n                        currentTab === 'accounts' ? (\n                            profile.followAccounts.map(item => (\n                                <MasonryCard\n                                    friends={true}\n                                    noLink={true}\n                                    key={item}\n                                    actions={\n                                        <FollowButton\n                                            account={account}\n                                            id={item}\n                                            type=\"account\"\n                                        />\n                                    }\n                                    body={\n                                        <UserButton\n                                            span={true}\n                                            id={item}\n                                            size={50}\n                                        />\n                                    }\n                                />\n                            ))\n                        ) : (\n                            <MasonryGrid>\n                                {profile[\n                                    currentTab === 'goals'\n                                        ? 'followProgresses'\n                                        : currentTab === 'rewards'\n                                        ? 'followRewards'\n                                        : 'followActivities'\n                                ].map(item => (\n                                    <MasonryCard\n                                        id={item}\n                                        onClickLink={\n                                            '/' + currentTab + '/' + item\n                                        }\n                                        // noLink\n                                        key={item}\n                                        actions={\n                                            <FollowButton\n                                                type={\n                                                    currentTab === 'goals'\n                                                        ? 'progress'\n                                                        : currentTab ===\n                                                          'rewards'\n                                                        ? 'reward'\n                                                        : 'activity'\n                                                }\n                                                account={account}\n                                                id={item}\n                                            />\n                                        }\n                                        body={\n                                            <ProgressButton\n                                                span={true}\n                                                id={item}\n                                                size={50}\n                                                type={currentTab}\n                                            />\n                                        }\n                                        style={{\n                                            // maxHeight: '170px',\n                                            marginTop: '20px',\n                                        }}\n                                        images={\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item] &&\n                                            props[\n                                                currentTab === 'goals'\n                                                    ? 'progressData'\n                                                    : currentTab === 'rewards'\n                                                    ? 'rewardData'\n                                                    : 'activityData'\n                                            ][item].images\n                                        }\n                                    />\n                                ))}\n                            </MasonryGrid>\n                        )\n                    ) : (\n                        profile.followingAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        account={account}\n                                        id={item}\n                                        type=\"account\"\n                                    />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setFollowersVisible('')}\n                        color=\"primary\"\n                    >\n                        {t('g.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {isOwner && (\n                <Dialog\n                    fullScreen\n                    open={startProgressVisible}\n                    onClose={() => {\n                        setStartProgressVisible(false)\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartProgressVisible(false)}\n                        type=\"goal\"\n                    />\n                </Dialog>\n            )}\n            {isOwner && (\n                <DialogFullscreen\n                    open={addFriendOpen}\n                    close={() => {\n                        setAddFriendOpen(false)\n                    }}\n                    title={t('g.addFriend')}\n                >\n                    <AddFriends\n                        close={() => setAddFriendOpen(false)}\n                        open={addFriendOpen}\n                        account={account}\n                        friendData={props.friendData}\n                    />\n                </DialogFullscreen>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        transactionData: state.transactionData,\n        rewardData: state.rewardData,\n        activityData: state.activityData,\n        onlineUsers: state.onlineUsers,\n        structure: state.structureMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n        setStructure: (structure, noNeedToSave) =>\n            dispatch(actions.setStructure(structure, noNeedToSave)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(memo(ProfileMM))\n)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport * as wsActions from '../websocketActions'\n\nimport pullData from '../utils/pullData'\nimport Layout from './Layout/Layout'\nimport { createStyles, makeStyles, Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport ResourcePosts from './Post/ResourcePosts'\nimport SimilarResources from './SimilarResources'\nimport Helmet from 'react-helmet'\nimport ResourceHeader from './ResourceHeader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    })\n)\nconst ResourceCore = props => {\n    const { t } = useTranslation()\n\n    const resourceId = props.resourceId\n    if (!resourceId) return null\n    const { type } = props\n\n    const { resource, account, friendData, posts } = props\n\n    if (!resource || !resource._id) return null\n\n    return friendData ? (\n        <div\n            style={{\n                display: 'flex',\n                flex: 1,\n                background: 'white',\n                overflow: 'hidden',\n            }}\n        >\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourceHeader\n                    account={account}\n                    resource={resource}\n                    friendData={friendData}\n                    type={type}\n                    navi={props.navi}\n                />\n                {props.children}\n            </div>\n            <div style={{ width: '10px' }} />\n            <div style={{ flex: 1, overflow: 'auto' }}>\n                <ResourcePosts resource={resource} posts={posts} type={type} />\n            </div>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        posts: state.post,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ResourceCore))\n","import React, { memo, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport ReadMore from '../../../components/UI/ReadMore'\nimport {\n    AppBar,\n    Box,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n    Typography,\n} from '@material-ui/core'\n\nimport Rewards from '../../../components/Rewards/Rewards'\nimport Activities from '../../../components/Activities/Activities'\nimport { useTranslation } from 'react-i18next'\nimport ResourceCore from '../../../components/ResourceCore'\nimport MapPosition from '../../../components/MapPosition/MapPosition'\nimport SimilarResources from '../../../components/SimilarResources'\nimport ResourcePosts from '../../../components/Post/ResourcePosts'\nimport ResourceCoreMM from '../../../components/ResourceCoreMM'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontSize: 13,\n        margin: '30px 15px 10px',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n    },\n}))\n\nconst GoalMM = props => {\n    const { t } = useTranslation()\n    const { id } = props\n    const classes = useStyles()\n    const { progress } = props\n\n    return (\n        <ResourceCoreMM type=\"goal\" resourceId={id} resource={progress}>\n            {progress && (\n                <>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.desc')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <ReadMore\n                            initialHeight={200}\n                            contentEditor={progress.description}\n                        />\n                    </Paper>\n                    <Activities progress={progress} />\n                    <Rewards progress={progress} />\n\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {t('g.position')}\n                    </Typography>\n                    <Paper style={{ padding: '15px' }}>\n                        <MapPosition position={progress.position} />\n                    </Paper>\n                    {/* <SimilarResources resource={progress} type=\"activity\" /> */}\n\n                    {/* Used in goals\n                    Associated rewards */}\n                </>\n            )}\n        </ResourceCoreMM>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress[ownProps.id],\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(memo(GoalMM)))\n","import React, { useState } from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Divider,\n    IconButton,\n    Menu,\n    MenuItem,\n    Popover,\n    Slide,\n    Slider,\n    TextField,\n} from '@material-ui/core'\nimport {\n    Add,\n    Brush,\n    Check,\n    CheckCircle,\n    Delete,\n    Edit,\n    Image,\n    OpenInNew,\n    Send,\n    Title,\n    Videocam,\n} from '@material-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport Goal from '../Goal/Goal'\nimport Reward from '../Reward/Reward'\nimport Activity from '../Activity/Activity'\nimport DialogFullscreen from '../../components/UI/DialogFullscreen'\nimport EditResource from '../../components/EditResource/EditResource'\nimport Profile from '../Profile/Profile'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport FolderMM from './FolderMM'\nimport ProfileMM from './ProfileMM'\nimport RewardMM from './old/RewardMM'\nimport GoalMM from './old/GoalMM'\nimport ActivityMM from './old/ActivityMM'\nimport { saveValue } from './actions'\nimport { SketchPicker } from 'react-color'\n\nconst TransitionComponent = props => <Slide direction=\"up\" {...props} />\n\nconst ChooseWrapMM = props => {\n    const { t } = useTranslation()\n    const [startResourceVisible, setStartResourceVisible] = useState('')\n\n    const [videoURLOpen, setVideoURLOpen] = useState(false)\n    const [anchorElRadius, setAnchorElRadius] = useState(null)\n    const [anchorElbgColor, setAnchorElbgColor] = useState(null)\n    const [anchorElLineColor, setAnchorElLineColor] = useState(null)\n    const [anchorElLineWidth, setAnchorElLineWidth] = useState(null)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [anchorElLine, setAnchorElLine] = useState(null)\n    const [editingStyle, setEditingStyle] = useState(false)\n    const [editingText, setEditingText] = useState(false)\n    const [editingTextModal, setEditingTextModal] = useState(false)\n    const [textValue, setTextValue] = useState()\n    const {\n        el,\n        id,\n        selectedBox,\n        setChangeParentMode,\n        changeParentMode,\n        addEmptyToStructure,\n        editorMode,\n        account,\n        addBlock,\n        saveValueMM,\n        deleteBlock,\n    } = props\n    const [videoURL, setVideoURL] = useState(el.videoURL)\n    const [openElement, setOpenElement] = useState(\n        props.history.location.hash.length > 0 &&\n            (id === props.history.location.hash.substring(1) ||\n                (el.type === 'profile' &&\n                    props.history.location.hash.substring(1)) === 'profile')\n    )\n\n    const addMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n        >\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'text')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.text')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'image')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.image')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    addBlock(id, 'block')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.block')}\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    setStartResourceVisible('goal')\n                    setAnchorEl(null)\n                }}\n            >\n                {t('g.goal')}\n            </MenuItem>\n        </Menu>\n    )\n    const lineTypeMenu = (\n        <Menu\n            anchorEl={anchorElLine}\n            open={Boolean(anchorElLine)}\n            onClose={() => setAnchorElLine(null)}\n        >\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'fluid' })\n                    setAnchorElLine(null)\n                }}\n            >\n                Fluid\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'straight' })\n                    setAnchorElLine(null)\n                }}\n            >\n                Straight\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'arc' })\n                    setAnchorElLine(null)\n                }}\n            >\n                Arc\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'magnet' })\n                    setAnchorElLine(null)\n                }}\n            >\n                Magnet\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'grid' })\n                    setAnchorElLine(null)\n                }}\n            >\n                Grid\n            </MenuItem>\n            <MenuItem\n                onClick={() => {\n                    saveValueMM(id, { lineType: 'no' })\n                    setAnchorElLine(null)\n                }}\n            >\n                No line\n            </MenuItem>\n        </Menu>\n    )\n    const lineColorMenu = (\n        <Popover\n            id={id}\n            open={Boolean(anchorElLineColor)}\n            anchorEl={anchorElLineColor}\n            onClose={() => setAnchorElLineColor(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n            className=\"noPan\"\n        >\n            <div onMouseDown={e => e.stopPropagation()}>\n                <SketchPicker\n                    color={el.lineColor}\n                    onChange={color =>\n                        saveValueMM(id, {\n                            lineColor: color.hex,\n                        })\n                    }\n                    onChangeComplete={color =>\n                        saveValueMM(id, {\n                            lineColor: color.hex,\n                        })\n                    }\n                />\n            </div>\n        </Popover>\n    )\n    const lineWidthMenu = (\n        <Popover\n            id={id}\n            open={Boolean(anchorElLineWidth)}\n            anchorEl={anchorElLineWidth}\n            onClose={() => setAnchorElLineWidth(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n            className=\"noPan\"\n        >\n            <div\n                onMouseDown={e => e.stopPropagation()}\n                style={{ padding: '8px 15px' }}\n            >\n                <Slider\n                    min={1}\n                    max={20}\n                    step={1}\n                    value={el.lineWidth}\n                    onChange={(e, value) =>\n                        saveValueMM(id, { lineWidth: value })\n                    }\n                    style={{\n                        width: '200px',\n                    }}\n                />\n            </div>\n        </Popover>\n    )\n\n    const bgColorMenu = (\n        <Popover\n            id={id}\n            open={Boolean(anchorElbgColor)}\n            anchorEl={anchorElbgColor}\n            onClose={() => setAnchorElbgColor(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n            className=\"noPan\"\n        >\n            <div onMouseDown={e => e.stopPropagation()}>\n                <SketchPicker\n                    color={el.bgColor}\n                    onChange={color =>\n                        saveValueMM(id, {\n                            bgColor: color.hex,\n                        })\n                    }\n                    onChangeComplete={color =>\n                        saveValueMM(id, {\n                            bgColor: color.hex,\n                        })\n                    }\n                />\n            </div>\n        </Popover>\n    )\n    const radiusMenu = (\n        <Popover\n            id={id}\n            open={Boolean(anchorElRadius)}\n            anchorEl={anchorElRadius}\n            onClose={() => setAnchorElRadius(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n            className=\"noPan\"\n        >\n            <div\n                onMouseDown={e => e.stopPropagation()}\n                style={{ padding: '8px 15px' }}\n            >\n                <Slider\n                    min={0}\n                    max={50}\n                    step={1}\n                    value={el.radius}\n                    onChange={(e, value) => saveValueMM(id, { radius: value })}\n                    style={{\n                        width: '200px',\n                    }}\n                />\n            </div>\n        </Popover>\n    )\n\n    const videoDialog = (\n        <Dialog\n            open={videoURLOpen}\n            onClose={() => setVideoURLOpen(false)}\n            fullWidth\n            onMouseDown={e => e.stopPropagation()}\n        >\n            <DialogTitle>{t('g.addMedia')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{t('g.addMediaDesc')}</DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"URL\"\n                    type=\"url\"\n                    fullWidth\n                    defaultValue={el.videoURL}\n                    onChange={e => setVideoURL(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setVideoURLOpen(false)} color=\"primary\">\n                    {t('g.cancel')}\n                </Button>\n                <Button\n                    onClick={() => {\n                        saveValueMM(id, { videoURL })\n                        setVideoURLOpen(false)\n                    }}\n                    color=\"primary\"\n                >\n                    {t('g.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n    const handleSaveText = () => {\n        saveValueMM(id, { textValue })\n        setEditingText(false)\n        setEditingTextModal(false)\n    }\n\n    return (\n        <>\n            <div\n                style={{\n                    flex: 1,\n                    display: 'flex',\n                    overflow: 'hidden',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        padding: '5px',\n                        textAlign: 'right',\n                        position: 'absolute',\n                        top: '-50px',\n                        whiteSpace: 'nowrap',\n                        alignItems: 'start',\n                    }}\n                    className=\"buttonsWrapMM buttonsMM\"\n                >\n                    {el.type !== 'folder' &&\n                        (!editorMode || selectedBox === id) &&\n                        !editingText &&\n                        !editingStyle && (\n                            <Button\n                                onClick={() => setOpenElement(true)}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginRight: '10px' }}\n                            >\n                                {t('g.open')}\n                            </Button>\n                        )}\n                    {editorMode && selectedBox === id && (\n                        <>\n                            {editingStyle ? (\n                                <div>\n                                    <Button\n                                        onClick={() => setEditingStyle(false)}\n                                        style={{ marginRight: '10px' }}\n                                        color=\"primary\"\n                                    >\n                                        {t('g.back')}\n                                    </Button>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorElLine(e.currentTarget)\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineType')}\n                                    </Button>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorElLineColor(\n                                                e.currentTarget\n                                            )\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineColor')}\n                                    </Button>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorElLineWidth(\n                                                e.currentTarget\n                                            )\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.lineWidth')}\n                                    </Button>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorElbgColor(e.currentTarget)\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.background')}\n                                    </Button>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorElRadius(e.currentTarget)\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        {t('g.corners')}\n                                    </Button>\n                                    {lineColorMenu}\n                                    {lineTypeMenu}\n                                    {lineWidthMenu}\n                                    {radiusMenu}\n                                    {bgColorMenu}\n                                </div>\n                            ) : editingText ? (\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        position: 'relative',\n                                        top: '-39px',\n                                        background: 'white',\n                                        alignItems: 'start',\n                                    }}\n                                >\n                                    <Button\n                                        onClick={handleSaveText}\n                                        color=\"primary\"\n                                        style={{\n                                            marginBottom: '10px',\n                                        }}\n                                    >\n                                        {t('g.back')}\n                                    </Button>\n                                    <Button\n                                        onClick={() => {\n                                            setEditingTextModal(true)\n                                        }}\n                                        color=\"primary\"\n                                    >\n                                        {t('g.fullscreen')}\n                                    </Button>\n                                </div>\n                            ) : (\n                                <>\n                                    <Button\n                                        onClick={e => {\n                                            setAnchorEl(e.currentTarget)\n                                        }}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        <Add />\n                                    </Button>\n                                    {addMenu}\n                                    {el.type === 'folder' && (\n                                        <>\n                                            <Upload\n                                                accept=\"image/*\"\n                                                showUploadList={false}\n                                                customRequest={({ file }) => {\n                                                    uploadFile(\n                                                        file,\n                                                        800,\n                                                        undefined,\n                                                        url => {\n                                                            if (url) {\n                                                                saveValueMM(\n                                                                    id,\n                                                                    {\n                                                                        imageValue: url,\n                                                                    }\n                                                                )\n                                                            }\n                                                        }\n                                                    )\n                                                }}\n                                            >\n                                                <Button\n                                                    variant=\"contained\"\n                                                    style={{\n                                                        marginRight: '10px',\n                                                    }}\n                                                >\n                                                    <Image />\n                                                </Button>\n                                            </Upload>\n                                            <Button\n                                                onClick={() =>\n                                                    setVideoURLOpen(true)\n                                                }\n                                                variant=\"contained\"\n                                                style={{\n                                                    marginRight: '10px',\n                                                }}\n                                            >\n                                                <Videocam />\n                                            </Button>\n                                            {videoDialog}\n                                            <Button\n                                                onClick={() =>\n                                                    setEditingText(true)\n                                                }\n                                                variant=\"contained\"\n                                                style={{\n                                                    marginRight: '10px',\n                                                }}\n                                            >\n                                                <Title />\n                                            </Button>\n                                        </>\n                                    )}\n                                    <Button\n                                        onClick={() => setEditingStyle(true)}\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        <Brush />\n                                    </Button>\n                                    <Button\n                                        onClick={() =>\n                                            setChangeParentMode(\n                                                changeParentMode === id\n                                                    ? ''\n                                                    : id\n                                            )\n                                        }\n                                        color={\n                                            changeParentMode\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        variant=\"contained\"\n                                        style={{ marginRight: '10px' }}\n                                    >\n                                        <Send />\n                                    </Button>\n                                    {el.type === 'folder' && (\n                                        <Button\n                                            onClick={() => deleteBlock(id)}\n                                            variant=\"contained\"\n                                            style={{ marginRight: '10px' }}\n                                        >\n                                            <Delete />\n                                        </Button>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </div>\n                <div style={{ flex: 1, overflow: 'hidden', display: 'flex' }}>\n                    {el.type === 'folder' && (\n                        <FolderMM\n                            el={el}\n                            id={id}\n                            editingText={editingText}\n                            setEditingText={setEditingText}\n                            editingTextModal={editingTextModal}\n                            setEditingTextModal={setEditingTextModal}\n                            selectedBox={selectedBox}\n                            saveValueMM={saveValueMM}\n                            textValue={textValue}\n                            setTextValue={setTextValue}\n                            handleSaveText={handleSaveText}\n                            editorMode={editorMode}\n                        />\n                    )}\n                    {el.type === 'profile' && <ProfileMM />}\n\n                    {/* {el.type === 'reward' && <RewardMM id={id} />} */}\n                    {el.type === 'goal' && <GoalMM id={id} />}\n                    {/* {el.type === 'activity' && <ActivityMM id={id} />} */}\n                </div>\n            </div>\n            <DialogFullscreen\n                open={openElement}\n                close={() => setOpenElement(false)}\n                title=\"Opened res\"\n            >\n                {el.type === 'profile' ? (\n                    <Profile setChosenResource={setOpenElement} />\n                ) : el.type === 'reward' ? (\n                    <Reward id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'activity' ? (\n                    <Activity id={el.id} setChosenResource={setOpenElement} />\n                ) : el.type === 'goal' ? (\n                    <Goal id={el.id} setChosenResource={setOpenElement} />\n                ) : null}\n            </DialogFullscreen>\n            {account._id && editorMode && (\n                <Dialog\n                    fullScreen\n                    open={Boolean(startResourceVisible)}\n                    onClose={() => {\n                        setStartResourceVisible('')\n                    }}\n                    TransitionComponent={TransitionComponent}\n                    scroll=\"paper\"\n                >\n                    <EditResource\n                        account={account}\n                        friendData={props.friendData}\n                        cancel={() => setStartResourceVisible('')}\n                        type={startResourceVisible}\n                        addEmptyToStructure={addEmptyToStructure}\n                        selectedBox={id}\n                    />\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        addEmptyToStructure: (id, selectedBox, type) =>\n            dispatch(actions.addEmptyToStructure(id, selectedBox, type)),\n        addBlock: (id, blockType) => dispatch(actions.addBlock(id, blockType)),\n        saveValueMM: (id, value) => dispatch(actions.saveValueMM(id, value)),\n        deleteBlock: id => dispatch(actions.deleteBlock(id)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ChooseWrapMM)\n)\n","import React, { useEffect, useRef } from 'react'\n\nimport Line from './Line'\nimport { Rnd } from 'react-rnd'\nimport { dragHandler, resizeHandler } from './actions'\nimport ChooseWrapMM from './ChooseWrapMM'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nexport const resizeStyle = {\n    height: '20px',\n    width: '20px',\n    background: '#eee',\n    border: '1px #ccc solid',\n    borderRadius: '10px',\n    zIndex: 1,\n}\n\nconst ContainerMM = props => {\n    const myRef1 = useRef(null)\n\n    const myRef4 = useRef(null)\n    const {\n        setSelectedBox,\n        selectedBox,\n        setSizepos,\n        scale,\n        myRef2,\n        id,\n        editingFolder,\n        editingElement,\n        selectedIndex,\n        setSelectedIndex,\n        setEditingElement,\n        addDragStep,\n        editorMode,\n        setChosenResource,\n        setEditingFolder,\n        el,\n        setChangeParentMode,\n        changeParentMode,\n        changeParentMM,\n    } = props\n    if (el && (el.type === 'reward' || el.type === 'activity')) {\n        return null\n    }\n    useEffect(() => {\n        const handler = e => {\n            // e.stopPropagation()\n        }\n        if (myRef4 && myRef4.current) {\n            myRef4.current.addEventListener('touchstart', handler, {\n                passive: false,\n            })\n            myRef4.current.addEventListener('touchmove', handler, {\n                passive: false,\n            })\n            addDragStep()\n        }\n\n        return () => {\n            if (myRef4 && myRef4.current) {\n                myRef4.current.removeEventListener('touchstart', handler)\n                myRef4.current.removeEventListener('touchmove', handler)\n            }\n        }\n    }, [Boolean(myRef4 && myRef4.current)])\n    return el &&\n        !el.temp &&\n        (!el.unsorted || (el.unsorted && el.children.length > 0)) ? (\n        <div>\n            {el.type !== 'profile' && (\n                <Line\n                    start={myRef2}\n                    end={myRef1}\n                    collapsed={props.collapsed}\n                    el={el}\n                />\n            )}\n            <div\n                ref={myRef4}\n                style={{\n                    position: el.type === 'profile' ? 'relative' : 'absolute',\n                }}\n            >\n                <Rnd\n                    scale={scale}\n                    default={el.type !== 'profile' && el.sizePos}\n                    disableDragging={\n                        el.type === 'profile' || editingFolder || !editorMode\n                    }\n                    enableResizing={el.type !== 'profile' && editorMode}\n                    resizeHandleStyles={\n                        selectedBox === id\n                            ? {\n                                  bottomLeft: resizeStyle,\n                                  bottomRight: resizeStyle,\n                                  topLeft: resizeStyle,\n                                  topRight: resizeStyle,\n                              }\n                            : {}\n                    }\n                    onMouseDown={e => {\n                        if (editorMode) {\n                            if (changeParentMode) {\n                                changeParentMM(changeParentMode, id)\n                                setChangeParentMode('')\n                            } else {\n                                setSelectedBox(id)\n                            }\n                        }\n                    }}\n                    style={{\n                        outline: selectedBox === id ? '1px solid blue' : 'none',\n                        // overflow: 'hidden',\n                    }}\n                    onDrag={(e, data) => {\n                        props.addDragStep()\n                        dragHandler(id, data, setSizepos)\n                    }}\n                    onResize={(e, dir, elRef, delta, position) => {\n                        props.addDragStep()\n                        resizeHandler(id, elRef, position, setSizepos)\n                    }}\n                    cancel=\".buttonsMM\"\n                >\n                    <div\n                        ref={myRef1}\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            position: 'relative',\n                            background: 'white',\n                        }}\n                    >\n                        {/* {el.children.length > 0 && (\n                            <Button\n                                style={{\n                                    position: 'absolute',\n                                    top: '-40px',\n                                    right: '0px',\n                                }}\n                                variant=\"contained\"\n                            >{`${el.collapsed ? 'Expand' : 'Collapse'} ${\n                                el.children.length\n                            }`}</Button>\n                        )} */}\n                        <ChooseWrapMM\n                            el={el}\n                            id={id}\n                            selectedBox={selectedBox}\n                            scale={scale}\n                            editingFolder={editingFolder}\n                            editingElement={editingElement}\n                            selectedIndex={selectedIndex}\n                            setSelectedIndex={setSelectedIndex}\n                            setEditingElement={setEditingElement}\n                            setEditingFolder={setEditingFolder}\n                            setChosenResource={setChosenResource}\n                            editorMode={editorMode}\n                            setChangeParentMode={setChangeParentMode}\n                            changeParentMode={changeParentMode}\n                            editorMode={editorMode}\n                        />\n                    </div>\n                </Rnd>\n\n                <div\n                    style={{\n                        position: 'absolute',\n                        // visibility:\n                        //     props.collapsed || el.collapsed\n                        //         ? 'hidden'\n                        //         : 'visible',\n                        transform:\n                            'translate(' +\n                            el.sizePos.x +\n                            'px, ' +\n                            el.sizePos.y +\n                            'px)',\n                    }}\n                >\n                    {el.children &&\n                        el.children.map(itemId => (\n                            <ConnectedContainerMM\n                                key={itemId}\n                                id={itemId}\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                myRef2={myRef1}\n                                collapsed={props.collapsed || el.collapsed}\n                                editorMode={editorMode}\n                                setChangeParentMode={setChangeParentMode}\n                                changeParentMode={changeParentMode}\n                            />\n                        ))}\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        el: state.structureMM.items[ownProps.id],\n        structure: state.structureMM,\n        scale: state.scaleMM,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setSizepos: (id, sizePos) => dispatch(actions.setSizepos(id, sizePos)),\n        changeParentMM: (childId, parentId) =>\n            dispatch(actions.changeParentMM(childId, parentId)),\n    }\n}\n\nconst ConnectedContainerMM = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ContainerMM)\n\nexport default ConnectedContainerMM\n","import React, { useEffect, useState } from 'react'\n\nimport { TransformComponent } from 'react-zoom-pan-pinch'\nimport ContainerMM from './ContainerMM'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport * as actions from '../../store/actions'\nimport 'tui-image-editor/dist/tui-image-editor.css'\n\nimport BottomMenu from '../../components/Layout/BottomMenu'\nimport {\n    Button,\n    FormControlLabel,\n    IconButton,\n    Slider,\n    Snackbar,\n    Switch,\n} from '@material-ui/core'\nimport { ArrowBack, Fullscreen } from '@material-ui/icons'\n\nimport Layout from '../../components/Layout/Layout'\nimport { withRouter, Prompt } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useBeforeunload } from 'react-beforeunload'\nimport { SketchPicker } from 'react-color'\n\nconst MindMap = props => {\n    const { t } = useTranslation()\n    const [selectedBox, setSelectedBox] = useState('')\n\n    const [changeParentMode, setChangeParentMode] = useState('')\n    const [editorMode, setEditorMode] = useState(false)\n    const {\n        saveStructure,\n        account,\n        profile,\n        setEventIsFromDraggable,\n        scale,\n        structureNotSaved,\n        setScale,\n        resetTransform,\n    } = props\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n    useBeforeunload(() => structureNotSaved && \"You'll lose your data!\")\n\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n        return () => {\n            document.body.style.overflow = 'auto'\n        }\n    }, [])\n\n    useEffect(() => {\n        setEditorMode(false)\n    }, [isOwner])\n\n    // const [value, setValue] = useState(scale)\n\n    // useEffect(() => {\n    //     if (scale !== value) setScale(value)\n    // }, [value])\n\n    // useEffect(() => {\n    //     if (scale !== value) setValue(scale)\n    // }, [scale])\n\n    const handleMouseDown = e => {\n        if (editorMode) {\n            const path = e.nativeEvent.composedPath()\n            for (let el of path) {\n                if (el) {\n                    if (\n                        el.getAttribute('id') === 'panWrap' ||\n                        el === document.body\n                    ) {\n                        setEventIsFromDraggable(false)\n                        return\n                    }\n                    const classN = el.getAttribute('class')\n                    if (\n                        classN &&\n                        (classN.indexOf('react-draggable') > -1 ||\n                            classN.indexOf('tinyEditorText_') > -1 ||\n                            classN.indexOf('demo-toolbar-absolute') > -1 ||\n                            classN.indexOf('noPan') > -1)\n                    ) {\n                        setEventIsFromDraggable(true)\n                        return\n                    }\n                }\n            }\n        }\n        setEventIsFromDraggable(false)\n    }\n\n    const handleClick = e => {\n        // if (!changeParentMode) {\n        //     if (editorMode) {\n        //         const path = e.nativeEvent.composedPath()\n        //         for (let el of path) {\n        //             if (el) {\n        //                 if (\n        //                     el.getAttribute('id') === 'panWrap' ||\n        //                     el === document.body\n        //                 ) {\n        //                     // setChosenResource('')\n        //                     setSelectedBox('')\n        //                     return\n        //                 }\n        //                 const classN = el.getAttribute('class')\n        //                 if (\n        //                     classN &&\n        //                     (classN.indexOf('react-draggable') > -1 ||\n        //                         classN.indexOf('tinyEditorText_') > -1)\n        //                 ) {\n        //                     return\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     // setChosenResource('')\n        //     setSelectedBox('')\n        // }\n    }\n\n    return (\n        <>\n            <Prompt\n                when={structureNotSaved}\n                message=\"You have unsaved changes, are you sure you want to leave?\"\n            />\n            <div\n                style={{\n                    display: 'flex',\n                    width: '100%',\n                    height: '100%',\n                    flexDirection: 'column',\n                }}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        background: 'white',\n                        zIndex: 1,\n                        display: 'flex',\n                    }}\n                >\n                    {isOwner ? (\n                        <Layout\n                            noContent\n                            customHeader={\n                                <>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={editorMode}\n                                                onChange={event => {\n                                                    setEditorMode(\n                                                        event.target.checked\n                                                    )\n                                                    setSelectedBox('')\n                                                }}\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        label={t('g.edit')}\n                                        labelPlacement=\"start\"\n                                    />\n\n                                    {isOwner &&\n                                        editorMode &&\n                                        structureNotSaved && (\n                                            <Button\n                                                onClick={saveStructure}\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                style={{\n                                                    marginLeft: '20px',\n                                                }}\n                                            >\n                                                {t('g.save')}\n                                            </Button>\n                                        )}\n                                    <div\n                                        style={{\n                                            position: 'fixed',\n                                            right: '10px',\n                                            bottom: '10px',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            background: 'white',\n                                            border: '1px #ccc solid',\n                                            padding: '5px 0px',\n                                            alignItems: 'center',\n                                        }}\n                                    >\n                                        <Slider\n                                            min={0.1}\n                                            max={3}\n                                            step={0.1}\n                                            value={scale}\n                                            onChange={(e, value) =>\n                                                setScale(value)\n                                            }\n                                            style={{\n                                                height: '100px',\n                                            }}\n                                            orientation=\"vertical\"\n                                        />\n                                        <IconButton\n                                            onClick={resetTransform}\n                                            color=\"primary\"\n                                        >\n                                            <Fullscreen />\n                                        </IconButton>\n                                    </div>\n                                </>\n                            }\n                        />\n                    ) : (\n                        <Layout noContent />\n                    )}\n                </div>\n\n                <div\n                    style={{\n                        overflow: 'hidden',\n                        flex: 1,\n                        display: 'flex',\n                    }}\n                    id=\"panWrap\"\n                    onMouseDown={handleMouseDown}\n                    onTouchStart={handleMouseDown}\n                    onTouchEnd={() => setEventIsFromDraggable(false)}\n                    onMouseUp={() => setEventIsFromDraggable(false)}\n                    onClick={handleClick}\n                >\n                    <TransformComponent>\n                        <div\n                            style={{\n                                cursor: 'grabbing',\n                            }}\n                        >\n                            <ContainerMM\n                                id=\"b0\"\n                                setSelectedBox={setSelectedBox}\n                                selectedBox={selectedBox}\n                                scale={scale}\n                                editorMode={editorMode}\n                                changeParentMode={changeParentMode}\n                                setChangeParentMode={setChangeParentMode}\n                            />\n                        </div>\n                    </TransformComponent>\n                </div>\n            </div>\n\n            <BottomMenu />\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={Boolean(changeParentMode)}\n                message={t('g.chooseParent')}\n                action={\n                    <React.Fragment>\n                        <Button\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={() => setChangeParentMode('')}\n                        >\n                            {t('g.UNDO')}\n                        </Button>\n                    </React.Fragment>\n                }\n            />\n        </>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        structureNotSaved: state.structureNotSaved,\n        scale: state.scaleMM,\n    }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveStructure: () => dispatch(actions.saveStructure()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MindMap)\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { TransformWrapper } from 'react-zoom-pan-pinch'\nimport MindMap from './MindMap'\nimport * as actions from '../../store/actions'\nimport { throttle } from 'throttle-debounce'\n\nconst MindMapWrap = props => {\n    const [eventIsFromDraggable, setEventIsFromDraggable] = useState(false)\n    const throttleFunc = throttle(10, () => props.addDragStep())\n    return (\n        <TransformWrapper\n            defaultScale={0.5}\n            defaultPositionX={200}\n            defaultPositionY={100}\n            options={{\n                limitToBounds: false,\n                minScale: 0.1,\n                maxScale: 3,\n                disabled: eventIsFromDraggable,\n            }}\n            pan={{\n                velocity: false,\n            }}\n            wheel={{\n                step: 300,\n            }}\n            onZoomChange={value => {\n                props.setScaleMM(value.scale)\n                throttleFunc()\n            }}\n            onPanning={throttleFunc}\n            onPanningStop={throttleFunc}\n            onPinching={throttleFunc}\n            onPinchingStop={throttleFunc}\n            doubleClick={{\n                disabled: true,\n            }}\n            zoomIn={{\n                step: 1,\n                animation: false,\n            }}\n            zoomOut={{\n                step: 1,\n                animation: false,\n            }}\n        >\n            {({ setScale, resetTransform }) => (\n                <MindMap\n                    setEventIsFromDraggable={setEventIsFromDraggable}\n                    setScale={setScale}\n                    resetTransform={resetTransform}\n                />\n            )}\n        </TransformWrapper>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        addDragStep: () => dispatch(actions.addDragStep()),\n        setScaleMM: value => dispatch(actions.setScaleMM(value)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(MindMapWrap)\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { PageView, initGA } from './components/TrackingGA'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport Blog from './containers/Blog/Blog'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\n\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\n\nimport RNBridge from './RNBridge'\nimport DashboardPosts from './containers/Dashboard/DashboardPosts'\nimport Explore from './containers/Explore/Explore'\nimport BlogArticle from './containers/Blog/BlogArticle'\nimport { useTranslation } from 'react-i18next'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/ru'\nimport MindMapWrap from './containers/MindMap/MindMapWrap'\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const { i18n } = useTranslation()\n\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    useEffect(() => {\n        initGA('UA-45758937-4')\n    }, [])\n\n    useEffect(() => {\n        if (props.history.location.pathname.indexOf('/post/') === -1) {\n            window.scrollTo(0, 0)\n        }\n        PageView()\n    }, [props.history.location.pathname])\n\n    useEffect(() => {\n        const currentLanguage = i18n.language\n            ? i18n.language.split('-')[0]\n            : 'en'\n        props.setLanguage(currentLanguage)\n        dayjs.locale(currentLanguage)\n    }, [i18n.language])\n\n    const Logout = () => {\n        props.logout()\n        window.isRNWebView && window.ReactNativeWebView.postMessage('logout')\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route\n                path=\"/\"\n                exact\n                component={isAuthed ? MindMapWrap : Explore}\n            />\n            {isAuthed && <Route path=\"/explore\" exact component={Explore} />}\n            {/* <Route path=\"/goals\" component={Goal} />\n            <Route path=\"/rewards\" component={Reward} />\n            <Route path=\"/activities\" component={Activity} />\n            <Route path=\"/wishlist\" component={Reward} /> */}\n            <Route path=\"/profile\" component={MindMapWrap} />\n            {isAuthed && <Route path=\"/events\" component={DashboardPosts} />}\n            {/* s */}\n            {/* <Route path=\"/shop\" component={Perk} /> */}\n            {/* <Route path=\"/wishlist\" component={WishlistItem} /> */}\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru/blog\" exact component={Blog} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/ru/blog\" component={BlogArticle} />\n            <Route path=\"/blog\" component={BlogArticle} />\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            {routes}\n            {isAuthed && <ConnectWebsocket />}\n            {isAuthed && <NotificationsTracker />}\n            <RNBridge />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n        setLanguage: language => dispatch(actions.setLanguage(language)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(App)\n)\n","import ReactGA from 'react-ga'\n\nexport const initGA = trackingID => {\n    ReactGA.initialize(trackingID)\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    })\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentGoal: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    reward: {},\n    activity: {},\n    currentReward: '',\n    currentActivity: '',\n    rewardData: {},\n    activityData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n    onlineUsers: [],\n    language: 'en',\n    recentShown: false,\n    dragStep: 0,\n    structureMM: {\n        currentId: 9,\n        items: {\n            b0: {\n                type: 'profile',\n                children: ['b00'],\n                parent: '',\n                sizePos: { x: 0, y: 0 },\n            },\n            b00: {\n                type: 'folder',\n                unsorted: true,\n                children: [],\n                innerChildren: [],\n                parent: 'b0',\n                sizePos: {\n                    x: -600,\n                    y: -300,\n                    width: 200,\n                    height: 200,\n                },\n            },\n        },\n    },\n    structureNotSaved: false,\n    scaleMM: 0.5,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'currentReward',\n                'currentActivity',\n                'profile',\n                'currentGoal',\n                'lastNotifications',\n                'onlineUsers',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n\n            for (let key of [\n                'progress',\n                'reward',\n                'activity',\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n            if (action.data.newOnlineUsers) {\n                state.onlineUsers = [\n                    ...state.onlineUsers,\n                    ...action.data.newOnlineUsers,\n                ]\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'profile',\n                'progress',\n                'reward',\n                'activity',\n            ]) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'rewardData',\n                'activityData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    ADD_DRAG_STEP: (state: Object) => {\n        state.dragStep = state.dragStep + 1\n    },\n    SET_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM = action.structure\n        if (!action.noNeedToSave) state.structureNotSaved = true\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    SET_LANGUAGE: (state: Object, action: Object) => {\n        state.language = action.language\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n    SET_RECENT_SHOWN: (state: Object) => {\n        state.recentShown = true\n    },\n    ADD_TO_STRUCTURE: (state: Object, action: Object) => {\n        if (\n            state.profile._id === action.accountId &&\n            state.structureMM.items[action.structureId]\n        ) {\n            const parentId = state.structureMM.items[action.structureId].parent\n            if (state.structureMM.items[parentId]) {\n                state.structureMM.items[parentId] = {\n                    ...state.structureMM.items[parentId],\n                    children: [\n                        ...state.structureMM.items[parentId].children,\n                        action.resourceId,\n                    ],\n                }\n                state.structureMM.items[action.resourceId] = {\n                    ...state.structureMM.items[action.structureId],\n                    id: action.resourceId,\n                    temp: false,\n                }\n                state.structureNotSaved = true\n            }\n        }\n        delete state.structureMM.items[action.structureId]\n    },\n    STRUCTURE_IS_SAVED: (state: Object) => {\n        state.structureNotSaved = false\n    },\n    ADD_BLOCK: (state: Object, action: Object) => {\n        const id = state.structureMM.items[action.id] ? action.id : 'b0'\n\n        state.structureMM.items[id].children.push(\n            'b' + state.structureMM.currentId\n        )\n        state.structureMM.items['b' + state.structureMM.currentId] = {\n            type: 'folder',\n            blockType: action.blockType,\n            children: [],\n            parent: id,\n            innerChildren: [],\n            sizePos: {\n                x: 200,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n            textValue: action.blockType === 'text' ? 'Add some text' : '',\n            imageValue:\n                action.blockType === 'image'\n                    ? 'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg'\n                    : '',\n        }\n        state.structureMM.currentId++\n        state.structureNotSaved = true\n    },\n    SET_SIZEPOS: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id].sizePos = {\n                ...state.structureMM.items[action.id].sizePos,\n                ...action.sizePos,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    SAVE_VALUE_MM: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            state.structureMM.items[action.id] = {\n                ...state.structureMM.items[action.id],\n                ...action.value,\n            }\n            state.structureNotSaved = true\n        }\n    },\n    ADD_EMPTY_TO_STRUCTURE: (state: Object, action: Object) => {\n        state.structureMM.items[action.id] = {\n            type: action.resType,\n            children: [],\n            parent: action.selectedBox,\n            temp: true,\n            sizePos: {\n                x: 200,\n                y: 0,\n                width: 320,\n                height: 200,\n            },\n        }\n    },\n\n    DELETE_BLOCK: (state: Object, action: Object) => {\n        if (state.structureMM.items[action.id]) {\n            const parentId = state.structureMM.items[action.id].parent\n            for (let child of state.structureMM.items[action.id].children) {\n                state.structureMM.items[child].parent = parentId\n            }\n            state.structureMM.items[parentId].children = [\n                ...state.structureMM.items[parentId].children,\n                ...state.structureMM.items[action.id].children,\n            ]\n\n            delete state.structureMM.items[action.id]\n            state.structureNotSaved = true\n        }\n    },\n    CHANGE_PARENT_MM: (state: Object, action: Object) => {\n        if (\n            state.structureMM.items[action.childId] &&\n            state.structureMM.items[action.parentId]\n        ) {\n            if (action.parentId !== action.childId) {\n                const isDecedant = (parentId, id) => {\n                    if (state.structureMM.items[parentId].children.includes(id))\n                        return true\n                    else {\n                        for (let child of state.structureMM.items[parentId]\n                            .children) {\n                            const result = isDecedant(child, id)\n                            if (result) {\n                                return true\n                            }\n                        }\n                    }\n                }\n                if (!isDecedant(action.childId, action.parentId)) {\n                    const childParentId =\n                        state.structureMM.items[action.childId].parent\n                    state.structureMM.items[\n                        childParentId\n                    ].children = state.structureMM.items[\n                        childParentId\n                    ].children.filter(item => item !== action.childId)\n                    state.structureMM.items[action.parentId].children.push(\n                        action.childId\n                    )\n                    state.structureMM.items[action.childId].parent =\n                        action.parentId\n                    state.structureNotSaved = true\n                }\n            }\n        }\n    },\n    SET_SCALEMM: (state: Object, action: Object) => {\n        state.scaleMM = action.value\n    },\n})\n\nexport default reducer\n","import dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\ndayjs.extend(weekOfYear)\ndayjs.extend(relativeTime)\ndayjs.extend(dayOfYear)\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n    // relativeTime: {\n    //     future: 'in %s',\n    //     past: '%s ago',\n    //     s: 'a few seconds',\n    //     m: 'a minute',\n    //     mm: '%d minutes',\n    //     h: 'an hour',\n    //     hh: '%d hours',\n    //     d: 'a day',\n    //     dd: '%d days',\n    //     M: 'a month',\n    //     MM: '%d months',\n    //     y: 'a year',\n    //     yy: '%d years',\n    // },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s',\n        s: 'now',\n        ss: 'now',\n        m: '1 min',\n        mm: '%d mins',\n        h: '1 hr',\n        hh: '%d hrs',\n        d: '1 day',\n        dd: '%d days',\n        w: '1 wk',\n        ww: '%d wks',\n        M: '1 mth',\n        MM: '%d mths',\n        y: '1 year',\n        yy: '%d years',\n    },\n})\n\ndayjs.updateLocale('ru', {\n    relativeTime: {\n        future: 'через %s',\n        past: '%s',\n        s: 'сейчас',\n        ss: 'сейчас',\n        m: '1 мин',\n        mm: '%d мин',\n        h: '1 час',\n        hh: '%d часов',\n        d: '1 день',\n        dd: '%d дней',\n        w: '1 нед',\n        ww: '%d нед',\n        M: '1 мес',\n        MM: '%d мес',\n        y: '1 год',\n        yy: '%d лет',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\nimport './setupDayjs'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors'\nimport './translations/i18n'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\n// pick a date util library\nimport DayUtils from '@date-io/dayjs'\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n    },\n    typography: {\n        fontSize: 13,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                backgroundColor: 'white',\n                color: '#333',\n            },\n        },\n    },\n})\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <MuiPickersUtilsProvider utils={DayUtils}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <ThemeProvider theme={outerTheme}>\n                    <App />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    </MuiPickersUtilsProvider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}