{"version":3,"sources":["components/Layout/LoginModal.module.css","components/UI/ImageCarousel/imageCarousel.module.css","containers/Profile/Profile.module.css","containers/Auth/AuthTest.tsx","utils/getAvatar.js","components/Layout/LoginModal.tsx","utils/processRes.js","store/actions/auth.tsx","store/actions/saveResources.tsx","containers/ConnectWebsocket/methods/requestResource.tsx","store/actions/updateResource.tsx","containers/ConnectWebsocket/methods/getListOfNeededResources.js","containers/ConnectWebsocket/methods/compareVersionsAndRerequest.js","containers/ConnectWebsocket/methods/getResourcesToMonitor.js","containers/ConnectWebsocket/ConnectWebsocket.tsx","websocketActions/posts.tsx","websocketActions/account.tsx","websocketActions/friends.tsx","utils/uploadFile.js","constants/fieldLength.js","constants/fieldRules.js","components/UserButton/UserButton.tsx","components/EditGoalAndProgressForm/connectionsSelect.tsx","components/UI/MoreIcon.js","components/UI/ImageCarousel/ImageCarousel.tsx","components/Rewards/Rewards.tsx","websocketActions/progresses.tsx","components/EditGoalAndProgressForm/EditGoalAndProgressForm.tsx","containers/Progresses/AddProgress.tsx","components/Layout/Layout.tsx","containers/Progress/ActivityTable.tsx","containers/Progress/EditProgress.tsx","components/MasonryCard.tsx","components/FollowButton.tsx","containers/Progress/Activity.tsx","components/Post/AddMessage.tsx","components/Post/Message.tsx","components/Post/Post.tsx","components/Post/AddPost.tsx","utils/pullData.js","containers/Progress/Progress.tsx","containers/Dashboard/DashboardPosts.tsx","containers/Dashboard/DashboardEvents.tsx","utils/masonryBreakPoints.js","components/MasonryGrid.tsx","containers/Explore/Explore.tsx","components/AddCard/AddCard.tsx","components/UI/CustomEmpty.tsx","containers/Progresses/Progresses.tsx","containers/Dashboard/Dashboard.tsx","websocketActions/dashboard.tsx","containers/Blog/Blog.tsx","components/FriendActionButton.tsx","components/FriendCard.tsx","components/ProgressButton.tsx","containers/Friends/AddFriends.tsx","containers/Friends/PendingFriends.tsx","containers/Friends/Friends.tsx","containers/Shop/AddPerkForm.tsx","containers/Shop/AddPerk.tsx","websocketActions/wishlistAndPerks.tsx","containers/Shop/PerkCard.tsx","containers/Shop/WishlistAndPerks.tsx","containers/Shop/Transactions.tsx","containers/Profile/Profile.tsx","containers/ActivateAccount/ActivateAccount.tsx","containers/Shop/Perk.tsx","containers/Wishlist/WishlistItem.tsx","containers/Dashboard/NotificationsTracker.tsx","RNBridge.tsx","App.tsx","store/reducer/reducer.tsx","index.tsx","components/Layout/Layout.module.css"],"names":["module","exports","Container","socialButtons","Background","Dots","Avatar","Cookies","getAvatar","nickname","version","cookies","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","cookieConsent","setCookieConsent","useEffect","checkCookieConsent","remeberMeParam","get","basicURL","react_default","a","createElement","modal","visible","loginVisible","onOk","document","body","removeAttribute","onCancel","setLoginVisible","destroyOnClose","maskClosable","footer","width","style","maxWidth","className","classes","fontWeight","lineHeight","marginBottom","fontSize","dist","onClick","window","location","concat","es_checkbox","checked","onChange","typography","Link","title","set","path","maxAge","processRes","res","data","logout","history","push","success","errorCode","message","warning","error","successCode","status","tryAuth","token","dispatch","sessionStorage","setItem","JSON","parse","rememberMe","remove","alert","toString","length","userId","jwt_decode","_id","axios","defaults","headers","post","put","delete","common","Accept","setIsAuthed","id","type","setData","setPageTitle","setFriendSearchResult","requestResource","ids","notRequestedIds","filter","includes","webSocket","readyState","send","stringify","messageCode","applyDelta","source","delta","watchFields","result","cloneDeep","del","applyWithDot","keys","shift","attr","split","applyUpdateToPart","updatedFields","_step","applyDeleteToPart","splice","_iterator","updateResource_createForOfIteratorHelper","removedFields","s","n","done","field","value","indexOf","err","e","f","getListOfNeededResources","store","requestedResources","user","account","progress","progressData","friendData","postData","transactionData","neededResources","isAuthed","currentAccount","_i","_arr","toConsumableArray","progresses","followProgresses","getListOfNeededResources_createForOfIteratorHelper","followPosts","_step2","_iterator2","myPosts","_step3","_iterator3","transactions","transaction","_step4","_iterator4","friends","friend","_i2","_arr2","followingAccounts","followAccounts","item","currentProfile","profile","_i3","_arr3","_step5","_iterator5","_i4","_arr4","currentProgress","participants","owner","worker","_i5","_participants","_step6","_iterator6","posts","currentPosts","_step7","_iterator7","postEl","_step8","_iterator8","users","parent","parentType","parentId","friendSearchResult","_step9","_iterator9","console","log","reduce","obj","Array","from","Set","notNeededExist","notNeededResources","check1","key","mode","check2","removeData","compareVersionsAndRerequest","versions","checkData","__v","check","getResourcesToMonitor","resources","addData","ConnectWebsocket","start","pingTimeout","WebSocket","heartbeat","_this","clearTimeout","setTimeout","close","onopen","event","resourcesToMonitor","initializeRequestResources","onmessage","news","messageText","setFriendsData","friendsData","saveResource","updateResource","code","update","text","onclose","checkInterval","clearInterval","setInterval","reRequestResourcesInterval","reRequestResources","group","nextProps","newRequestedResources","_loop","this","setConnectingToWS","Component","connect","pulledFrom","actions","getState","myAccount","find","_createForOfIteratorHelper","parState","element","defineProperty","updateData","changeLikesMessage","messageId","accountId","postId","followProgress","progressId","unfollowProgress","followAccount","accountFollow","unfollowAccount","unfriend","friendId","uploadFile","file","size","filename","callback","reader","FileReader","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resizeImageToSpecificSize","height","urltoFile","then","getSignedRequest","stop","_x","apply","arguments","readAsArrayBuffer","url","mimeType","match","fetch","arrayBuffer","buf","File","cb","resizeImageFromSrcToSpecificSize","target","readAsDataURL","src","img","Image","widthCoef","heightCoef","oc","octx","getContext","drawImage","toDataURL","fileName","response","doUploadFile","catch","signedRequest","Content-Type","fieldLength","nicknameRules","required","whitespace","min","max","pattern","nameRules","accountNameRules","descriptionRules","messageRules","priceRules","friendDataExp","getUserData","userName","name","userAvatar","avatar","image","noClick","margin","onlyName","stopPropagation","Group","map","Fragment","noAva","noName","span","react_router_dom","objectSpread","cursor","display","to","inline","es_button","padding","EditGoalAndProgressForm_connectionsSelect","onSelect","es_select","placeholder","getPopupContainer","trigger","parentNode","Option","components_UserButton_UserButton","MoreIcon","viewBox","transform","d","ImageCarousel","previewImage","setPreviewImage","images","carousel","dots","index","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Modal","alt","_React$createElement","previewReward","setPreviewReward","_useState5","_useState6","editedReward","setEditedReward","_useState7","_useState8","editedRewardIndex","setEditedRewardIndex","readOnly","RewardButton","simple","money","itemName","layout","labelCol","wrapperCol","rewards","onlyButton","es_form","assign","Item","label","rewardKey","paddingLeft","listStyleType","es_tag","alignItems","for","marginLeft","dropdown","overlay","es_menu","rewardId","confirm","setRewards","indexIn","color","PlusOutlined_default","closable","reward","rewardToSave","undefined","newRewards","connectionsSelect","divider","upload","listType","fileList","itemImages","uid","onPreview","customRequest","_ref2","rules","input","_ref3","TextArea","itemDescription","_ref4","UI_ImageCarousel_ImageCarousel","whiteSpace","Select","EditGoalAndProgressForm","goal","setImages","_Form$useForm","Form","useForm","form","connections","goalId","onFinish","autoComplete","initialValues","repeat","days","onValuesChange","changedFields","allValues","setFieldsValue","sort","valuePropName","getValueFromEvent","isArray","autoSize","minRows","maxRows","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","components_Rewards_Rewards","textAlign","marginTop","cancel","htmlType","borderRadius","AddProgress","components_EditGoalAndProgressForm_EditGoalAndProgressForm","wsActions","setStartProgressVisible","pageTitle","lastNotifications","isConnectingWS","lastScrollY","setLastScrollY","headerVisible","setHeaderVisible","startProgressVisible","_useState9","pathname","_useState10","pageAddress","setPageAddress","handleScroll","currentScrollY","scrollY","removeEventListener","addEventListener","scrollTo","top","left","behavior","showSignIn","buttonProps","openLink","isActivating","numberOfUnseenNots","Layout_createForOfIteratorHelper","not","parseInt","notId","lastSeenNot","logedIn","editGoal","Progresses_AddProgress","join","isRNWebView","ReactNativeWebView","postMessage","icon","LogoutOutlined_default","badge","count","HomeFilled_default","border","marginRight","spin","indicator","LoadingOutlined_default","children","Layout_LoginModal","back_top","backgroundColor","UpOutlined_default","moment","format","ActivityTable","activeTab","setActiveTab","isOwner","lastStages","stages","slice","Math","b","aS","aF","bS","bF","old","day","year","dayOfYear","startOf","endOf","week","month","now","abs","diff","nowStageId","stageId","tabs","activeKey","defaultActiveKey","findIndex","onTabClick","stage","stageDate","getStatus","dismissed","failBy","approvedBy","getTag","descriptions","tabTitle","myStatus","stageStatus","TabPane","tab","textTransform","es_radio","bordered","column","xxl","xl","lg","md","sm","xs","paid","EditProgress","editProgressOpen","placeholderImages","Card","matches","imagePH","round","x","makeRand","getPH","wordBreak","float","noLink","onClickLink","FollowButton","danger","Descriptions","followersVisible","setFollowersVisible","Helmet","content","description","PushpinFilled_default","add","likes","LikeFilled_default","LikeOutlined_default","orientation","Paragraph","ellipsis","rows","expandable","symbol","RetweetOutlined_default","getRepeatType","acc","val","getDay","Progress_ActivityTable","Progress_EditProgress","MasonryCard","components_FollowButton","imageLoading","setImageLoading","replyToUser","setMessageText","background","replyTo","bottom","comment","uploadImage","messageValue","replyToMessage","editedMessage","editingMessage","onSend","SendOutlined_default","showUploadList","PictureFilled_default","CloseCircleFilled_default","Message","replies","isStart","replyVisible","setReplyVisible","setReplyToUser","setEditingMessage","showReplies","setShowReplies","commentProps","timeago_react","datetime","date","live","tooltip","author","messageType","details","itemId","startMessage","Post_AddMessage","isTop","reply","postOpen","setPostOpen","noStartMessage","Post_Message","position","justifyContent","CommentOutlined_default","messages","Post_createForOfIteratorHelper","getNumberOfMessages","zIndex","pullData","options","pathParts","Progress_createForOfIteratorHelper","main","sub","Progress_Activity","Post_AddPost","paddingTop","components_Post_Post","statePosts","setPosts","Date","getTime","startTime","sortPosts","aN","notifications","bN","newPosts","newUnseenPosts","newOldPosts","oldPosts","DashboardPosts_createForOfIteratorHelper","_loop2","oldPostIndex","_newOldPosts","resultPosts","neededPosts","isEqual","nots","getRewardText","stageName","price","buyer","as","getStageName","progressName","addedAccounts","ac","droppedAccounts","friendsBreakPoints","default","1600","1100","600","cardBreakPoints","700","310","MasonryGrid","react_masonry_css_es5_default","breakpointCols","columnClassName","isSearching","setIsSearching","foundProgresses","setFoundProgresses","setProgresses","noMore","setNoMore","noMorePopular","setNoMorePopular","_useState11","_useState12","searchValue","setSearchValue","onSearch","noNoMore","skip","newFriendData","Explore_createForOfIteratorHelper","Search","enterButton","allowClear","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","AddCard","action","shape","CustomEmpty","forceAuth","loadedProgresses","components_AddCard_AddCard","Dashboard_createForOfIteratorHelper","tabBarStyle","last","containers_Explore_Explore","containers_Progresses_Progresses","Dashboard_DashboardPosts","offset","Dashboard_DashboardEvents","setTitle","replace","dangerouslySetInnerHTML","__html","FriendActionButton","invitingFriends","invitedFriends","realFriends","additionalButton","menu","domEvent","additionalButtons","button","noFollow","Button","preventDefault","asText","DownOutlined_default","friendActions","friendActionButton","asIcons","handleClick","searchResult","addFriendOpen","setAddFriendOpen","search","card","components_FriendCard","Friends_createForOfIteratorHelper","fullFriend","confirmedFriends","empty","imageStyle","PendingFriends","Friends_AddFriends","AddPerkForm","perk","perkId","input_number","setEditPerkOpen","setPerk","wishlist","goals","perks","Shop_AddPerkForm","processedValue","WishlistAndPerks","editedPerk","setEditedPerk","editPerkOpen","editPerk","Shop_AddPerk","listKey","Shop_PerkCard","onlyBuy","tableData","sorted","Transactions_createForOfIteratorHelper","types","amount","collapse","expandIconPosition","destroyInactivePanel","accordion","Panel","header","tag","toUpperCase","increaseAvatarV","followingVisible","setFollowingVisible","deleteVisible","setDeleteVisible","deleteField","setDeleteField","profileId","Profile_createForOfIteratorHelper","Title","level","editable","EditOutlined_default","borderTop","containers_Friends_Friends","oneFriendData","Shop_Transactions","Shop_WishlistAndPerks","components_ProgressButton","maxHeight","accountNotActive","setAccountActivated","page_header","backIcon","nicknameNotUnique","Perk_createForOfIteratorHelper","items","Perk_Item","wishlistItem","WishlistItem_createForOfIteratorHelper","popconfirm","onConfirm","okText","cancelText","sortNotifiacations","NotificationsTracker_createForOfIteratorHelper","filterSameNot","arr","myNotifications","setAuth","mountedRef","useRef","timer","setTimer","explanationVisible","setExplanationVisible","setShowSignIn","auth","useCallback","current","abrupt","t0","Logout","react_router","routes","exact","component","Dashboard","Progress","Profile","Perk","WishlistItem","Blog","ActivateAccount","process","handleExplanationClose","Layout","containers_ConnectWebsocket_ConnectWebsocket","Dashboard_NotificationsTracker","src_RNBridge","reducer","createReducer","SET_DATA","REMOVE_DATA","reducer_createForOfIteratorHelper","SET_FRIEND_SEARCH_RESULT","SET_FRIENDS_DATA","SET_AVATAR_V","v","INCREASE_AVATAR_V","SET_IS_AUTHED","SET_PAGE_TITLE","SET_ACCOUNT_ACTIVATED","SET_CONNECTING_WS","__webpack_require__","__webpack_exports__","src_store","baseURL","createStore","composeWithDevTools","applyMiddleware","thunk","app","es","src_App","root","getElementById","ReactDOM","render","Header","Footer","HideHeader","FooterButton","TopHeader","BottomHeader","Main","MenuButtonContiner","QuickButtonContiner","PageTitle"],"mappings":"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","file":"static/js/main.eb46f727.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginModal_Container__f69s0\",\"socialButtons\":\"LoginModal_socialButtons__ex7dM\",\"Background\":\"LoginModal_Background__11ZaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"imageCarousel_Dots__2JZGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile_Avatar__11bEV\"};","import React from 'react'\n\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies()\n\nconst Auth = props => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n    const onFinish = value => {\n        axios\n            .post('/api/authtest/' + value.id)\n            .then(res => {\n                cookies.set('auth_token', res.data.cookie)\n                props.onTryAutoSignup()\n            })\n            .catch(err => {})\n    }\n    return (\n        <Form\n            name=\"dynamic_form_nest_item\"\n            onFinish={onFinish}\n            autoComplete=\"off\"\n            {...layout}\n        >\n            <Form.Item\n                label=\"Id\"\n                name=\"id\"\n                rules={[\n                    { required: true, message: 'Please input the goal name.' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Auth\n","export default (nickname, version) => {\n    if (!nickname) return ''\n    else {\n        return (\n            'https://websiter.s3.us-east-2.amazonaws.com/' +\n            nickname +\n            '/avatar?v=' +\n            (version || 0)\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Checkbox from 'antd/es/checkbox'\nimport Cookies from 'universal-cookie'\nimport classes from './LoginModal.module.css'\nimport Modal from 'antd/es/modal'\nimport {\n    FacebookLoginButton,\n    GithubLoginButton,\n    GoogleLoginButton,\n} from 'react-social-login-buttons'\nimport Typography from 'antd/es/typography'\n\nconst cookies = new Cookies()\n\nconst LoginModal = props => {\n    const [state, setState] = useState(false)\n    const [cookieConsent, setCookieConsent] = useState(false)\n\n    useEffect(() => {\n        checkCookieConsent()\n    })\n\n    let remeberMeParam = '?rememberme=false'\n    if (state) {\n        remeberMeParam = '?rememberme=true'\n    }\n\n    const checkCookieConsent = () => {\n        const cookiesConsent = cookies.get('cookies_consent')\n        if (cookiesConsent) {\n            setCookieConsent(true)\n        }\n    }\n\n    const agreeWithCookies = () => {\n        cookies.set('cookies_consent', 'true', {\n            path: '/',\n            maxAge: 31530000,\n        })\n        checkCookieConsent()\n    }\n    const basicURL =\n        process.env.NODE_ENV !== 'development'\n            ? 'https://addspire.com/api/auth/'\n            : 'http://my.websiter.test:5000/api/auth/'\n    return (\n        <Modal\n            visible={props.loginVisible}\n            onOk={() => document.body.removeAttribute('style')}\n            onCancel={() => {\n                props.setLoginVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            destroyOnClose={true}\n            maskClosable={false}\n            footer={[]}\n            width=\"100%\"\n            style={{ maxWidth: '600px' }}\n        >\n            {!cookieConsent ? (\n                <Modal\n                    title=\"Cookies consent\"\n                    visible={!cookieConsent}\n                    onOk={agreeWithCookies}\n                    onCancel={() => {\n                        props.setLoginVisible(false)\n                        document.body.removeAttribute('style')\n                        setCookieConsent(false)\n                    }}\n                    destroyOnClose={true}\n                    maskClosable={false}\n                    width=\"100%\"\n                    style={{ maxWidth: '600px' }}\n                >\n                    <p style={{ marginBottom: '0.3em' }}>\n                        We use cookies only for login purposes.{' '}\n                    </p>\n                    <p>\n                        In order to proceed you need to agree with the use of\n                        cookies.\n                    </p>\n                </Modal>\n            ) : (\n                <div className=\"contentDiv\">\n                    <div className={classes.Container}>\n                        <h1\n                            style={{\n                                fontWeight: 'bold',\n                                lineHeight: '1.3em',\n                                marginBottom: 0,\n                                fontSize: '2.5em',\n                            }}\n                        >\n                            Welcome to Addspire!\n                        </h1>\n                        <h3>This is where great inspiration lives.</h3>\n                        <div\n                            className={classes.socialButtons}\n                            style={{ marginBottom: '30px' }}\n                        >\n                            <FacebookLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `facebook/start${remeberMeParam}`)\n                                }\n                            />\n                            <GoogleLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `google/start${remeberMeParam}`)\n                                }\n                            />\n                            <GithubLoginButton\n                                onClick={() =>\n                                    (window.location =\n                                        basicURL +\n                                        `github/start${remeberMeParam}`)\n                                }\n                            />\n                        </div>\n                        <Checkbox\n                            checked={state}\n                            onChange={() => setState(!state)}\n                        >\n                            <Typography.Link style={{ fontSize: '17px' }}>\n                                Remember me\n                            </Typography.Link>\n                        </Checkbox>\n                    </div>\n                    <div className={classes.Background} />\n                </div>\n            )}\n        </Modal>\n    )\n}\n\nexport default withRouter(LoginModal)\n","import message from 'antd/es/message'\n\nexport default (res, props) => {\n    if (res.data.logout) props.history.push('/logout')\n    if (res.data.success === false) {\n        if (res.data.errorCode) {\n            switch (res.data.errorCode) {\n                case 'no account':\n                    message.warning('Account is not found. Please login.')\n                    break\n                case 'bad data':\n                    message.error(\n                        'Error. Please try one more time with correct data.'\n                    )\n                    break\n                case 'progress exist':\n                    message.warning('This progress already exists.')\n                    break\n                default:\n                    message.warning(\n                        'Something wrong has happened... Try again!'\n                    )\n                    break\n            }\n        } else {\n            message.error('Something failed')\n        }\n    } else {\n        if (res.data.successCode) {\n            switch (res.data.successCode) {\n                case 'avatar saved':\n                    message.success('The avatar image has been updated.')\n                    break\n                case 'success':\n                    message.success('Success!')\n                    break\n                case 'item saved':\n                    message.success('Item is saved')\n                    break\n                case 'prgress created':\n                    message.success('Progress has started!')\n                    break\n                default:\n                    message.success('Success!')\n                    break\n            }\n        }\n    }\n    if (res.data.status && res.data.status === 'no account')\n        props.history.push('/activate-account')\n}\n","import axios from 'axios'\n\nimport Cookies from 'universal-cookie'\nimport jwt_decode from 'jwt-decode'\n\nimport processRes from '../../utils/processRes'\n\nconst cookies = new Cookies()\n\nexport const tryAuth = token => (dispatch: Object) => {\n    sessionStorage.setItem('systemRefresh', '0')\n    if (!token) {\n        token = cookies.get('auth_token')\n        const rememberMe = cookies.get('rememberme')\n        if (rememberMe) {\n            cookies.remove('rememberme', {\n                path: '/',\n            })\n            if (rememberMe === 'false') {\n                cookies.remove('auth_token', {\n                    path: '/',\n                })\n            }\n        }\n    } else {\n        token = JSON.parse(token).token\n    }\n    alert('token')\n    alert(token)\n    alert(token.toString().length)\n    const userId = jwt_decode(token)\n    alert(userId)\n    alert(userId._id)\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\n    axios.defaults.headers.put['Content-Type'] = 'application/json'\n    axios.defaults.headers.delete['Content-Type'] = 'application/json'\n    axios.defaults.headers.common.Accept = 'application/json'\n    if (token && userId) {\n        axios.defaults.headers.common['x-auth-token'] = token\n        axios.defaults.headers.post['x-auth-token'] = token\n        axios.defaults.headers.get['x-auth-token'] = token\n        axios.defaults.headers.delete['x-auth-token'] = token\n        axios.defaults.headers.put['x-auth-token'] = token\n        alert(userId._id)\n        dispatch(setIsAuthed(userId._id))\n    } else {\n        dispatch(setIsAuthed(false))\n    }\n}\n\nconst setIsAuthed = id => ({\n    type: 'SET_IS_AUTHED',\n    id,\n})\n\nexport const logout = () => dispatch => {\n    cookies.remove('rememberme', {\n        path: '/',\n    })\n    cookies.remove('auth_token', {\n        path: '/',\n    })\n    delete axios.defaults.headers.common['x-auth-token']\n    delete axios.defaults.headers.post['x-auth-token']\n    delete axios.defaults.headers.get['x-auth-token']\n    delete axios.defaults.headers.delete['x-auth-token']\n    delete axios.defaults.headers.put['x-auth-token']\n    dispatch(setIsAuthed(false))\n}\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    data,\n})\n\nexport const setConnectingToWS = data => ({\n    type: 'SET_CONNECTING_WS',\n    data,\n})\n\nexport const removeData = data => ({\n    type: 'REMOVE_DATA',\n    data,\n})\n\nexport const setFriendsData = data => ({\n    type: 'SET_FRIENDS_DATA',\n    data,\n})\n\nexport const setAvatarV = v => ({\n    type: 'SET_AVATAR_V',\n    v,\n})\n\nexport const increaseAvatarV = () => ({\n    type: 'INCREASE_AVATAR_V',\n})\n\nexport const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    title,\n})\n\nexport const buyPerk = (account, perk, owner, props) => dispatch => {\n    const currency = account.wallet.find(item => item.user === owner._id)\n    if (currency && currency.amount >= perk.price) {\n        axios\n            .post('/api/shop/buy', {\n                perkId: perk.perkId,\n                ownerId: owner._id,\n            })\n            .then(res => {\n                processRes(res)\n                if (res.data.success) {\n                    dispatch(setData(res.data, props.history.location.pathname))\n                }\n            })\n            .catch(err => {})\n    } else {\n        alert(\n            'You cannot buy this item as you do not have enough money from this user.'\n        )\n    }\n}\n\nexport const confirmTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/confirm', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const cancelTransaction = (transactionId, props) => dispatch => {\n    axios\n        .post('/api/shop/cancel', {\n            transactionId,\n        })\n        .then(res => {\n            processRes(res)\n            if (res.data.success) {\n                dispatch(setData(res.data, props.history.location.pathname))\n            }\n        })\n        .catch(err => {})\n}\n\nexport const setFriendSearchResult = data => ({\n    type: 'SET_FRIEND_SEARCH_RESULT',\n    data,\n})\n\nexport const setAccountActivated = value => ({\n    type: 'SET_ACCOUNT_ACTIVATED',\n    value,\n})\n","import { setData } from './auth'\n\nexport const saveResource = (data, type) => (dispatch, getState) => {\n    if (data.length > 0) {\n        const state = getState()\n        switch (type) {\n            case 'user':\n                const user = data[0]\n                let currentAccount = user.currentAccount\n                if (!currentAccount) currentAccount = user.myAccount\n                // if(!currentAccount)\n                //activate-account\n                dispatch(setData({ user, currentAccount }))\n                break\n            case 'account':\n                const account = data.find(\n                    item => item._id === state.currentAccount\n                )\n                if (account) {\n                    dispatch(setData({ account }))\n                }\n\n                const profile = data.find(\n                    item => item._id === state.currentProfile\n                )\n                if (profile) {\n                    dispatch(setData({ profile }))\n                }\n\n                break\n            case 'progress':\n                const progress = data.find(\n                    item => item._id === state.currentProgress\n                )\n                if (progress) {\n                    dispatch(setData({ progress }))\n                }\n                break\n\n            case 'post':\n                let post = {}\n                for (let item of data) {\n                    post[item._id] = item\n                }\n                dispatch(setData({ post }))\n                break\n            case 'friendData':\n                let friendData = {}\n                for (let item of data) {\n                    friendData[item._id] = item\n                }\n                dispatch(setData({ friendData }))\n                break\n            case 'progressData':\n                let progressData = {}\n                for (let item of data) {\n                    progressData[item._id] = item\n                }\n                dispatch(setData({ progressData }))\n                break\n            case 'transactionData':\n                let transactionData = {}\n                for (let item of data) {\n                    transactionData[item._id] = item\n                }\n                dispatch(setData({ transactionData }))\n                break\n            case 'postData':\n                let postData = {}\n                for (let item of data) {\n                    postData[item._id] = item\n                }\n                dispatch(setData({ postData }))\n                break\n\n            default:\n                break\n        }\n    }\n}\n","import { webSocket } from '../ConnectWebsocket'\n\nexport default (type, ids, state) => {\n    const notRequestedIds = ids.filter(id => !state[type].includes(id))\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'requestResource',\n                ids: notRequestedIds,\n                type,\n            })\n        )\n    }\n}\n","import requestResource from '../../containers/ConnectWebsocket/methods/requestResource'\nimport * as actions from './index'\nimport cloneDeep from 'lodash.clonedeep'\n\nconst applyDelta = (source, delta, watchFields) => {\n    // console.log('---------------------------APLY DELTA------------------------')\n    // console.log('----------------source----------------')\n    // console.log(source)\n    // console.log('----------------delta-------------------')\n    // console.log(delta)\n    const result = cloneDeep(source)\n\n    const applyUpdateToPart = (res, del, watchFields) => {\n        const applyWithDot = (res, keys, del) => {\n            if (keys.length > 1) {\n                const key = keys.shift()\n                applyWithDot(res[key], keys, del)\n            } else {\n                if (typeof res === 'array') {\n                    res.push(del)\n                } else {\n                    res[keys[0]] = del\n                }\n            }\n        }\n        for (let attr in del) {\n            const keys = attr.split('.')\n            if (!watchFields || watchFields.includes(keys[0])) {\n                if (typeof del[attr] !== 'undefined') {\n                    applyWithDot(res, keys, del[attr])\n                }\n            }\n        }\n    }\n\n    applyUpdateToPart(result, delta.updatedFields, watchFields)\n\n    const applyDeleteToPart = (result, keys) => {\n        if (keys.length > 1) {\n            const key = keys.shift()\n            applyDeleteToPart(result[key], keys)\n        } else {\n            if (typeof result === 'object') {\n                delete result[keys[0]]\n            } else if (typeof result === 'array') {\n                result.splice(keys[0], 1)\n            }\n        }\n    }\n\n    for (let field of delta.removedFields) {\n        if (field.indexOf('.') > -1) {\n            const keys = field.split('.')\n            if (!watchFields || watchFields.includes(keys[0]))\n                applyDeleteToPart(result, keys)\n        } else {\n            delete result[field]\n        }\n    }\n    return result\n}\n\nexport const updateResource = (code, id, update, parState) => (\n    dispatch,\n    getState\n) => {\n    if (update && id && code) {\n        const state = getState()\n        const check = key => {\n            if (state[key]._id === id) {\n                if (state[key].__v === update.updatedFields.__v - 1) {\n                    const element = applyDelta(state[key], update)\n                    dispatch(actions.setData({ [key]: element }))\n                } else {\n                    if (state[key].id) requestResource(code, [id], parState)\n                }\n            }\n        }\n        const check2 = (key, watchFields) => {\n            let updateData = {\n                [key]: cloneDeep(state[key]),\n            }\n            const friend = updateData[key][id]\n            if (friend) {\n                if (friend.__v === update.updatedFields.__v - 1) {\n                    updateData[key][id] = applyDelta(\n                        friend,\n                        update,\n                        watchFields\n                    )\n                    dispatch(actions.setData(updateData))\n                } else {\n                    requestResource(code, [id], parState)\n                }\n            }\n        }\n        switch (code) {\n            case 'user':\n                check('user')\n                break\n            case 'account':\n                check('account')\n                check('profile')\n                break\n            case 'progress':\n                check('progress')\n                break\n            case 'post':\n                dispatch(actions.setData(check2(code)))\n                break\n            case 'friendData':\n                dispatch(\n                    actions.setData(\n                        check2(code, ['name', 'image', 'notifications', '__v'])\n                    )\n                )\n                break\n            case 'progressData':\n                dispatch(\n                    actions.setData(\n                        check2(code, [\n                            'owner',\n                            'worker',\n                            'goal',\n                            'notifications',\n                            '__v',\n                        ])\n                    )\n                )\n                break\n            case 'postData':\n                dispatch(\n                    actions.setData(check2(code, ['notifications', '__v']))\n                )\n                break\n\n            case 'transactionData':\n                dispatch(actions.setData(check2(code)))\n                break\n            default:\n                break\n        }\n    }\n}\n","export default props => {\n    const createEmptyObj = () => ({\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    })\n    const { store } = props\n    const requestedResources = createEmptyObj()\n    const neededResources = createEmptyObj()\n    if (store.isAuthed) {\n        if (!store.user) {\n            requestedResources.user.push(store.isAuthed)\n        } else {\n            neededResources.user.push(store.user._id)\n            if (store.currentAccount) {\n                if (store.account._id !== store.currentAccount) {\n                    requestedResources.account.push(store.currentAccount)\n                } else {\n                    neededResources.account.push(store.account._id)\n                    for (let progress of [\n                        ...store.account.progresses,\n                        ...store.account.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let post of store.account.followPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let post of store.account.myPosts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                    for (let transaction of store.account.transactions) {\n                        if (!store.transactionData[transaction]) {\n                            requestedResources.transactionData.push(transaction)\n                        }\n                        neededResources.transactionData.push(transaction)\n                    }\n                    for (let friend of store.account.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.account.followingAccounts,\n                        ...store.account.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n            if (store.currentProfile) {\n                if (store.profile._id !== store.currentProfile) {\n                    requestedResources.account.push(store.currentProfile)\n                } else {\n                    neededResources.account.push(store.profile._id)\n                    for (let progress of [\n                        ...store.profile.progresses,\n                        ...store.profile.followProgresses,\n                    ]) {\n                        if (!store.progressData[progress]) {\n                            requestedResources.progressData.push(progress)\n                        }\n                        neededResources.progressData.push(progress)\n                    }\n\n                    for (let friend of store.profile.friends) {\n                        if (!store.friendData[friend.friend]) {\n                            requestedResources.friendData.push(friend.friend)\n                        }\n                        neededResources.friendData.push(friend.friend)\n                    }\n                    for (let item of [\n                        ...store.profile.followingAccounts,\n                        ...store.profile.followAccounts,\n                    ]) {\n                        if (!store.friendData[item]) {\n                            requestedResources.friendData.push(item)\n                        }\n                        neededResources.friendData.push(item)\n                    }\n                }\n            }\n\n            if (store.currentProgress) {\n                if (store.progress._id !== store.currentProgress) {\n                    requestedResources.progress.push(store.currentProgress)\n                } else {\n                    neededResources.progress.push(store.progress._id)\n                    let participants = []\n                    if (store.progress.owner)\n                        participants.push(store.progress.owner)\n                    if (store.progress.worker)\n                        participants.push(store.progress.worker)\n\n                    for (let friend of participants) {\n                        if (!store.friendData[friend]) {\n                            requestedResources.friendData.push(friend)\n                        }\n                        neededResources.friendData.push(friend)\n                    }\n                    for (let post of store.progress.posts) {\n                        if (!store.postData[post]) {\n                            requestedResources.postData.push(post)\n                        }\n                        neededResources.postData.push(post)\n                    }\n                }\n            }\n            if (store.currentPosts) {\n                for (let post of store.currentPosts) {\n                    const postEl = store.post[post]\n                    if (!postEl) {\n                        requestedResources.post.push(post)\n                    } else {\n                        neededResources.post.push(post)\n                        for (let friend of postEl.users) {\n                            if (!store.friendData[friend]) {\n                                requestedResources.friendData.push(friend)\n                            }\n                            neededResources.friendData.push(friend)\n                        }\n                        if (post.parent) {\n                            if (post.parent.parentType === 'progress')\n                                neededResources.progressData.push(\n                                    post.parent.parentId\n                                )\n                        }\n                    }\n                }\n            }\n            if (store.friendSearchResult && store.friendSearchResult.length > 0)\n                for (let friend of store.friendSearchResult) {\n                    console.log(friend)\n                    if (!store.friendData[friend._id]) {\n                        requestedResources.friendData.push(friend._id)\n                    }\n                    neededResources.friendData.push(friend._id)\n                }\n        }\n    }\n\n    const reduce = obj => {\n        for (let attr in obj) {\n            if (obj[attr]) {\n                obj[attr] = Array.from(new Set(obj[attr]))\n            }\n        }\n    }\n\n    reduce(neededResources)\n    const notNeededResources = createEmptyObj()\n    notNeededResources.profile = []\n    let notNeededExist\n    const check1 = (key, mode) => {\n        if (\n            store[mode]._id &&\n            !neededResources[key].includes(store[mode]._id)\n        ) {\n            notNeededResources[mode].push(store[mode]._id)\n            notNeededExist = true\n        }\n    }\n    const check2 = key => {\n        for (let attr in store[key]) {\n            if (!neededResources[key].includes(attr)) {\n                notNeededResources[key].push(attr)\n                notNeededExist = true\n            }\n        }\n    }\n    check1('account', 'account')\n    check1('account', 'profile')\n    check1('progress', 'progress')\n    check2('post')\n    check2('friendData')\n    check2('progressData')\n    check2('transactionData')\n    check2('postData')\n\n    if (notNeededExist) {\n        props.removeData(notNeededResources)\n    }\n\n    reduce(requestedResources)\n\n    return requestedResources\n}\n","import requestResource from './requestResource'\n\nexport default (versions, state, store, webSocket) => {\n    const notNeededResources = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        progressData: [],\n        friendData: [],\n        postData: [],\n        transactionData: [],\n    }\n\n    const checkData = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key][attr]) {\n                    if (store[key][attr] !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    const check = key => {\n        for (let attr in versions[key]) {\n            if (typeof versions[key][attr] !== 'undefined') {\n                if (store[key]._id === attr) {\n                    if (store[key].__v !== versions[key][attr]) {\n                        requestResource(key, [attr], state)\n                    }\n                    if (!store[key]._id) notNeededResources[key].push(attr)\n                } else notNeededResources[key].push(attr)\n            }\n        }\n    }\n\n    for (let attr in versions.user) {\n        if (typeof versions.user[attr] !== 'undefined') {\n            if (store.user._id === attr) {\n                if (store.user.__v !== versions.user[attr]) {\n                    requestResource('user', [attr], state)\n                }\n            } else notNeededResources.user.push(attr)\n        }\n    }\n\n    for (let attr in versions.account) {\n        if (typeof versions.account[attr] !== 'undefined') {\n            if (store.account._id === attr) {\n                if (store.account.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n            }\n            if (store.profile._id === attr) {\n                if (store.profile.__v !== versions.account[attr]) {\n                    requestResource('account', [attr], state)\n                }\n                if (!store.account._id) notNeededResources.account.push(attr)\n            }\n        }\n        if (store.account._id !== attr && store.profile._id !== attr)\n            notNeededResources.account.push(attr)\n    }\n\n    check('progress')\n\n    checkData('post')\n    checkData('friendData')\n    checkData('progressData')\n    checkData('postData')\n    checkData('transactionData')\n\n    if (\n        notNeededResources.user.length > 0 ||\n        notNeededResources.account.length > 0 ||\n        notNeededResources.progress.length > 0 ||\n        notNeededResources.post.length > 0 ||\n        notNeededResources.friendData.length > 0 ||\n        notNeededResources.progressData.length > 0 ||\n        notNeededResources.postData.length > 0 ||\n        notNeededResources.transactionData.length > 0\n    ) {\n        return notNeededResources\n    }\n}\n","export default props => {\n    const { store } = props\n    const resources = {\n        user: {},\n        account: {},\n        progress: {},\n        post: {},\n        transactionData: {},\n        friendData: {},\n        progressData: {},\n        postData: {},\n    }\n\n    if (store.user && store.user._id) {\n        resources.user[store.user._id] = store.user.__v\n    }\n\n    if (store.account._id) {\n        resources.account[store.account._id] = store.account.__v\n    }\n    if (store.profile._id) {\n        resources.account[store.profile._id] = store.profile.__v\n    }\n    if (store.progress._id) {\n        resources.progress[store.progress._id] = store.progress.__v\n    }\n\n    const addData = key => {\n        for (let item in store[key]) {\n            if (typeof store[key][item] !== 'undefined') {\n                if (store[key][item]._id) {\n                    resources[key][store[key][item]._id] = store[key][item].__v\n                }\n            }\n        }\n    }\n\n    addData('post')\n    addData('friendData')\n    addData('postData')\n    addData('progressData')\n    addData('TransactionData')\n\n    return resources\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport message from 'antd/es/message'\nimport getListOfNeededResources from './methods/getListOfNeededResources'\nimport compareVersionsAndRerequest from './methods/compareVersionsAndRerequest'\nimport getResourcesToMonitor from './methods/getResourcesToMonitor'\nimport { store } from '../..'\n\nexport let webSocket = false\n\nclass ConnectWebsocket extends Component {\n    state = {\n        user: [],\n        account: [],\n        progress: [],\n        post: [],\n        friendData: [],\n        progressData: [],\n        postData: [],\n        transactionData: [],\n    }\n    start = () => {\n        let url\n        if (process.env.NODE_ENV === 'development') {\n            url = 'ws://my.websiter.test:5000'\n        } else {\n            url = 'wss://addspire.com'\n        }\n        let pingTimeout\n        webSocket = new WebSocket(url)\n\n        const heartbeat = versions => {\n            let notNeededResources\n            if (versions) {\n                notNeededResources = compareVersionsAndRerequest(\n                    versions,\n                    this.state,\n                    this.props.store,\n                    webSocket\n                )\n            }\n            clearTimeout(pingTimeout)\n\n            pingTimeout = setTimeout(() => {\n                webSocket.close()\n            }, 30000 + 1000)\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'heartbeat',\n                    notNeededResources,\n                    //get back list of online friends\n                })\n            )\n        }\n\n        webSocket.onopen = event => {\n            const resourcesToMonitor = getResourcesToMonitor(this.props)\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'auth',\n                    user: axios.defaults.headers.common['x-auth-token'],\n                    resourcesToMonitor,\n                    // progressId: this.props.progress._id,\n                })\n            )\n            this.initializeRequestResources(this.props)\n            heartbeat()\n        }\n\n        webSocket.onmessage = event => {\n            const news = JSON.parse(event.data)\n\n            switch (news.messageCode) {\n                case 'heartbeat':\n                    heartbeat(news.versions)\n                    break\n                case 'logout':\n                    alert('logout ws')\n                    this.props.logout()\n                    this.props.history.push('/logout')\n                    break\n\n                case 'successMessage':\n                    message.success(news.messageText)\n                    break\n                case 'errorMessage':\n                    message.error(news.messageText)\n                    break\n                case 'friendsData':\n                    this.props.setFriendsData(news.friendsData)\n                    break\n                case 'redirectToProgresses':\n                    this.props.history.push('/inspirations')\n                    break\n                case 'addResource':\n                    this.props.saveResource(news.resources, news.type)\n                    break\n                case 'updateResource':\n                    this.props.updateResource(\n                        news.code,\n                        news.id,\n                        news.update,\n                        this.state\n                    )\n                    break\n                case 'friendSearchResult':\n                    this.props.setFriendSearchResult(news.data)\n                    break\n\n                // case 'update':\n                //     let newProgress\n                //     let oldProgress = cloneDeep(this.props.progress)\n                //     if (oldProgress.__v === news.progress.__v - 1) {\n                //         newProgress = diffpatcher.patch(\n                //             oldProgress,\n                //             news.progress.patch\n                //         )\n                //         newProgress.__v = news.progress.__v\n                //         this.props.setData(\n                //             {\n                //                 progress: newProgress,\n                //             },\n                //             this.props.history.location.pathname\n                //         )\n                //     }\n                //     wsActions.getFriendsData(\n                //         newProgress || this.props.progress,\n                //         this.props.account.friends\n                //     )\n                //     break\n                case 'error':\n                    message.error(news.text)\n                    break\n                // case 'notFoundResource':\n                //     this.markNotFoundResource(data)\n                //     break\n                default:\n                    break\n            }\n        }\n        webSocket.onclose = event => {\n            clearTimeout(pingTimeout)\n        }\n    }\n\n    // markNotFoundResource = data => {\n    //     const requestedResources = this.state.requestedResources.filter(\n    //         item => item.id.toString() === data._id.toString()\n    //     )\n    //     this.setState({ requestedResources })\n    // }\n\n    checkInterval = null\n\n    check = () => {\n        if (!webSocket || webSocket.readyState === 3) {\n            clearInterval(this.checkInterval)\n            this.checkInterval = setInterval(this.check, 5000)\n            this.start()\n        }\n    }\n    componentWillMount() {\n        this.checkInterval = setInterval(this.check, 50)\n    }\n\n    reRequestResourcesInterval = null\n    reRequestResources = () => {\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (this.state[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: this.state[group],\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkInterval)\n        if (webSocket) {\n            webSocket.close()\n        }\n        this.props.setConnectingToWS(false)\n    }\n    componentDidMount() {\n        this.props.setConnectingToWS(true)\n    }\n    componentWillReceiveProps(nextProps) {\n        this.initializeRequestResources(nextProps)\n    }\n\n    initializeRequestResources = nextProps => {\n        const newRequestedResources = getListOfNeededResources(nextProps)\n        for (let group of [\n            'user',\n            'account',\n            'progress',\n            'post',\n            'postData',\n            'progressData',\n            'friendData',\n            'transactionData',\n        ]) {\n            if (newRequestedResources[group].length > 0) {\n                if (webSocket && webSocket.readyState === 1) {\n                    webSocket.send(\n                        JSON.stringify({\n                            messageCode: 'requestResource',\n                            ids: newRequestedResources[group].filter(\n                                item => !this.state[group].includes(item)\n                            ),\n                            type: group,\n                        })\n                    )\n                }\n            }\n        }\n        this.setState(() => newRequestedResources)\n        clearInterval(this.reRequestResourcesInterval)\n        this.reRequestResourcesInterval = setInterval(\n            this.reRequestResources,\n            3000\n        )\n    }\n\n    render() {\n        return null\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        store: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        removeData: data => dispatch(actions.removeData(data)),\n        saveResource: (data, type) =>\n            dispatch(actions.saveResource(data, type)),\n        setFriendsData: data => dispatch(actions.setFriendsData(data)),\n\n        updateResource: (code, id, update, state) =>\n            dispatch(actions.updateResource(code, id, update, state)),\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n        setConnectingToWS: data => dispatch(actions.setConnectingToWS(data)),\n\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ConnectWebsocket)\n)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const sendMessage = (\n    accountId,\n    postId,\n    messageValue,\n    image,\n    replyToMessage,\n    editedMessage\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'sendMessage',\n                messageValue,\n                image,\n                postId,\n                accountId,\n                replyToMessage,\n                editedMessage,\n            })\n        )\n    }\n}\n\nexport const changeLikesMessage = (\n    messageCode,\n    messageId,\n    accountId,\n    postId\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode,\n                messageId,\n                accountId,\n                postId,\n            })\n        )\n    }\n}\n\nexport const addPost = (\n    accountId,\n    parentId,\n    parentType,\n    messageValue,\n    images\n) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addPost',\n                accountId,\n                parentId,\n                parentType,\n                messageValue,\n                images,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const deleteAccount = id => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteAccount',\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const editAccount = (value, id) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editAccount',\n                name: value.name,\n                accountId: id,\n            })\n        )\n    }\n}\n\nexport const followProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\nexport const unfollowProgress = (accountId, progressId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowProgress',\n                accountId,\n                progressId,\n            })\n        )\n    }\n}\n\nexport const followAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'followAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\nexport const unfollowAccount = (accountId, accountFollow) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfollowAccount',\n                accountId,\n                accountFollow,\n            })\n        )\n    }\n}\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const searchFriends = search => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'searchFriends',\n                search,\n            })\n        )\n    }\n}\n\nexport const addFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'addFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const acceptFriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'acceptFriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n\nexport const unfriend = (accountId, friendId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'unfriend',\n                accountId,\n                friendId,\n            })\n        )\n    }\n}\n","import axios from 'axios'\nimport message from 'antd/es/message'\n\nexport const uploadFile = (file, size, filename, callback) => {\n    if (file == null) {\n        return alert('No file selected.')\n    }\n\n    const reader = new FileReader()\n    reader.onload = async event => {\n        resizeImageToSpecificSize(file, { width: size, height: size }, data => {\n            urltoFile(data, '/120').then(function(file) {\n                getSignedRequest(file, filename, callback)\n            })\n        })\n    }\n\n    reader.readAsArrayBuffer(file)\n}\n\nconst urltoFile = (url, filename, mimeType) => {\n    mimeType = mimeType || (url.match(/^data:([^;]+);/) || '')[1]\n    return fetch(url)\n        .then(function(res) {\n            return res.arrayBuffer()\n        })\n        .then(function(buf) {\n            return new File([buf], filename, { type: 'image/jpeg' })\n        })\n}\n\nconst resizeImageToSpecificSize = (file, size, cb) => {\n    if (file) {\n        var reader = new FileReader()\n        reader.onload = function(event) {\n            resizeImageFromSrcToSpecificSize(event.target.result, size, cb)\n        }\n        reader.readAsDataURL(file)\n    }\n}\n\nconst resizeImageFromSrcToSpecificSize = (src, size, cb) => {\n    var data\n    var img = new Image()\n    img.onload = function() {\n        const widthCoef = img.width / size.width\n        const heightCoef = img.height / size.height\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d')\n        oc.width = img.width\n        oc.height = img.height\n        octx.drawImage(img, 0, 0)\n        if (widthCoef > 1 || heightCoef > 1) {\n            if (img.width > img.height) {\n                oc.height = (img.height / img.width) * size.width\n                oc.width = size.width\n            } else {\n                oc.width = (img.width / img.height) * size.width\n                oc.height = size.width\n            }\n        }\n        octx.drawImage(oc, 0, 0, oc.width, oc.height)\n        octx.drawImage(img, 0, 0, oc.width, oc.height)\n        data = oc.toDataURL('image/jpeg', 0.6)\n        cb(data)\n    }\n    img.src = src\n}\n\nconst getSignedRequest = (file, fileName, callback) => {\n    return axios\n        .post('/api/sign-s3', {\n            fileName,\n        })\n        .then(response => {\n            doUploadFile(file, response.data, callback)\n        })\n        .catch(err => {})\n}\n\nconst doUploadFile = (file, data, callback) => {\n    return axios\n        .put(data.signedRequest, file, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        .then(response => {\n            callback(data.url)\n            message.success('The image has been saved.')\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n","export default {\n    name: 200,\n    description: 10000,\n    message: 10000,\n}\n","import fieldLength from './fieldLength'\n\nexport const nicknameRules = [\n    {\n        required: true,\n        message: 'Nickname is too short. Minimal length is 2.',\n        whitespace: true,\n        min: 2,\n    },\n    {\n        message: `Nickname is too long. Miximum length is ${fieldLength.name}.`,\n        whitespace: true,\n        max: fieldLength.name,\n    },\n    {\n        pattern: /^[a-zA-Z0-9_-]*$/,\n        message: \"Nickname should contain only letters, numbers, '-' and '_'.\",\n    },\n]\n\nexport const nameRules = [\n    {\n        required: true,\n        min: 1,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const accountNameRules = [\n    {\n        required: true,\n        min: 2,\n        whitespace: true,\n        message: 'Name is too short. Minimal length is 2.',\n    },\n    {\n        max: fieldLength.name,\n        message: `Name is too long. Miximum length is ${fieldLength.name}.`,\n    },\n]\n\nexport const descriptionRules = [\n    {\n        max: fieldLength.description,\n        message: `Description is too long. Miximum length is ${\n            fieldLength.description\n        }.`,\n    },\n]\n\nexport const messageRules = [\n    {\n        min: 1,\n        whitespace: true,\n        message: 'Message is too short. Minimal length is 1.',\n    },\n    {\n        max: fieldLength.message,\n        message: `Message is too long. Miximum length is ${\n            fieldLength.message\n        }.`,\n    },\n]\n\nexport const priceRules = [\n    {\n        required: true,\n        message: 'Please input the item price.',\n    },\n]\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\n\nconst UserButton = props => {\n    const { account, profile, id, friendSearchResult } = props\n    const friendData = props.friendDataExp || props.friendData\n    const getUserData = id =>\n        id === account._id\n            ? account\n            : id === profile._id\n            ? profile\n            : id === friendSearchResult._id\n            ? friendSearchResult\n            : friendData[id]\n    const userName = id => (getUserData(id) ? getUserData(id).name : id)\n    const userAvatar = id =>\n        getUserData(id) ? (\n            <span key={id}>\n                <Avatar\n                    src={getAvatar(id, getUserData(id).image)}\n                    size={props.size || (props.noClick ? 20 : 40)}\n                    style={props.group ? {} : { margin: ' 0 5px' }}\n                />\n            </span>\n        ) : null\n\n    return props.onlyName ? (\n        userName(id)\n    ) : props.group ? (\n        <span onClick={e => e.stopPropagation()}>\n            <Avatar.Group style={{ margin: ' 0 5px' }}>\n                {props.ids.map(id => userAvatar(id))}\n            </Avatar.Group>\n        </span>\n    ) : props.noClick ? (\n        <>\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </>\n    ) : props.span ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n                display: 'flex',\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <div>{!props.noAva && userAvatar(id)}</div>\n            <div>{!props.noName && userName(id)}</div>\n        </Link>\n    ) : props.inline ? (\n        <Link\n            style={{\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                ...props.style,\n            }}\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            {!props.noAva && userAvatar(id)}\n            {!props.noName && userName(id)}\n        </Link>\n    ) : (\n        <Link\n            onClick={e => {\n                e.stopPropagation()\n            }}\n            to={'/profile/' + (id || props.id)}\n        >\n            <Button\n                type=\"link\"\n                style={{ padding: '0px 5px', height: 'auto', ...props.style }}\n            >\n                {!props.noAva && userAvatar(id)}\n\n                {!props.noName && userName(id)}\n            </Button>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        profile: state.profile,\n        friendData: state.friendData,\n        friendSearchResult: state.friendSearchResult,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserButton))\n","import React from 'react'\n\nimport Select from 'antd/es/select'\nimport UserButton from '../UserButton/UserButton'\n\nexport default (account, friendData, value?, onSelect?) => (\n    <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        placeholder=\"Please select\"\n        value={value}\n        onChange={onSelect}\n        getPopupContainer={trigger => trigger.parentNode}\n    >\n        {[\n            account,\n            ...account.friends\n                .filter(friend => friend.status === 'friend')\n                .map(friend => friendData[friend.friend]),\n        ].map(\n            item =>\n                item &&\n                item._id && (\n                    <Select.Option key={item._id}>\n                        <UserButton id={item._id} noClick={true} />\n                    </Select.Option>\n                )\n        )}\n    </Select>\n)\n","import React from 'react'\n\nexport default props => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        width=\"18\"\n        height=\"18\"\n        style={{ transform: 'rotate(90deg)', display: 'block' }}\n    >\n        <path d=\"M2 10h4v4H2v-4zm8 4h4v-4h-4v4zm8-4v4h4v-4h-4z\" />\n    </svg>\n)\n","import React, { useState } from 'react'\nimport Carousel from 'antd/es/carousel'\nimport classes from './imageCarousel.module.css'\nimport Modal from 'antd/es/modal/Modal'\n\nconst ImageCarousel = props => {\n    const [previewImage, setPreviewImage] = useState(false)\n\n    return props.images && props.images.length > 0 ? (\n        <>\n            <Carousel\n                style={{ width: props.size || 'auto' }}\n                dots={{ className: classes.Dots }}\n            >\n                {props.images.map(\n                    (image, index) =>\n                        image && (\n                            <div\n                                key={index}\n                                onClick={() => setPreviewImage(image)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: 'url(\"' + image + '\")',\n                                        backgroundSize: props.type || 'contain',\n                                        backgroundPosition: 'center',\n                                        width: props.size || '100%',\n                                        height:\n                                            props.height ||\n                                            props.size ||\n                                            '300px',\n                                        backgroundRepeat: 'no-repeat',\n                                    }}\n                                />\n                            </div>\n                        )\n                )}\n            </Carousel>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default ImageCarousel\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as wsActions from '../../websocketActions'\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\n\nimport Upload from 'antd/es/upload'\nimport Divider from 'antd/es/divider'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport {\n    descriptionRules,\n    nameRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport connectionsSelect from '../EditGoalAndProgressForm/connectionsSelect'\nimport Descriptions from 'antd/es/descriptions'\nimport UserButton from '../UserButton/UserButton'\nimport Dropdown from 'antd/es/dropdown'\nimport Menu from 'antd/es/menu'\nimport Card from 'antd/es/card'\nimport message from 'antd/es/message'\nimport MoreIcon from '../UI/MoreIcon'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport Tag from 'antd/es/tag'\n\nconst Rewards = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [previewReward, setPreviewReward] = useState()\n    const [editedReward, setEditedReward] = useState()\n    const [editedRewardIndex, setEditedRewardIndex] = useState()\n    const { account, friendData, readOnly, progress } = props\n\n    const RewardButton = props => (\n        <span\n            style={{ fontWeight: 'bold', cursor: 'pointer' }}\n            onClick={() => setPreviewReward(props.item)}\n        >\n            {props.item.mode === 'simple'\n                ? props.item.simple\n                : props.item.mode === 'money'\n                ? props.item.money + ' (money)'\n                : props.item.mode === 'item'\n                ? props.item.itemName\n                : ''}\n        </span>\n    )\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    return props.rewards ? (\n        <div>\n            {props.onlyButton ? (\n                props.rewards.map((item, index) => (\n                    <RewardButton item={item} key={index} />\n                ))\n            ) : (\n                <Form {...layout} style={{ margin: 0 }}>\n                    <Form.Item\n                        label={props.label}\n                        key={props.rewardKey}\n                        style={{ margin: 0 }}\n                    >\n                        {props.rewards.length > 0 && (\n                            <ul\n                                style={{\n                                    paddingLeft: '5px',\n                                    listStyleType: 'none',\n                                }}\n                            >\n                                {props.rewards.map((item, index) => {\n                                    return (\n                                        <li key={index}>\n                                            <Tag>\n                                                <div\n                                                    style={{\n                                                        display: 'flex',\n                                                        alignItems: 'center',\n                                                    }}\n                                                >\n                                                    <div>\n                                                        <RewardButton\n                                                            item={item}\n                                                        />\n                                                        {' from '}\n                                                        <UserButton\n                                                            id={item.owner}\n                                                            noAva={true}\n                                                            inline={true}\n                                                        />\n                                                        {' for '}\n                                                        {item.for &&\n                                                        item.for.length > 0 ? (\n                                                            <UserButton\n                                                                id={item.for}\n                                                                noAva={true}\n                                                                inline={true}\n                                                            />\n                                                        ) : (\n                                                            <span\n                                                                style={{\n                                                                    fontWeight:\n                                                                        'bold',\n                                                                    marginLeft:\n                                                                        '5px',\n                                                                }}\n                                                            >\n                                                                All\n                                                            </span>\n                                                        )}\n                                                    </div>\n                                                    {item.owner ===\n                                                        account._id &&\n                                                        !readOnly && (\n                                                            <>\n                                                                <Dropdown\n                                                                    overlay={\n                                                                        <Menu>\n                                                                            <Menu.Item\n                                                                                onClick={() => {\n                                                                                    setEditedRewardIndex(\n                                                                                        index\n                                                                                    )\n                                                                                    setEditedReward(\n                                                                                        item\n                                                                                    )\n                                                                                }}\n                                                                            >\n                                                                                Edit\n                                                                            </Menu.Item>\n\n                                                                            <Menu.Item\n                                                                                onClick={() => {\n                                                                                    if (\n                                                                                        !window.confirm(\n                                                                                            'Are you sure you want to delete this item?'\n                                                                                        )\n                                                                                    )\n                                                                                        return\n                                                                                    if (\n                                                                                        props.setRewards\n                                                                                    ) {\n                                                                                        props.setRewards(\n                                                                                            props.rewards.filter(\n                                                                                                (\n                                                                                                    item,\n                                                                                                    indexIn\n                                                                                                ) =>\n                                                                                                    indexIn !==\n                                                                                                    index\n                                                                                            )\n                                                                                        )\n                                                                                    } else {\n                                                                                        wsActions.deleteReward(\n                                                                                            account._id,\n                                                                                            progress._id,\n                                                                                            item.rewardId\n                                                                                        )\n                                                                                    }\n                                                                                }}\n                                                                            >\n                                                                                Delete\n                                                                            </Menu.Item>\n                                                                        </Menu>\n                                                                    }\n                                                                >\n                                                                    <Button type=\"link\">\n                                                                        <MoreIcon />\n                                                                    </Button>\n                                                                </Dropdown>\n                                                            </>\n                                                        )}\n                                                </div>\n                                            </Tag>\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        )}\n\n                        {!readOnly && (\n                            <Button\n                                type=\"link\"\n                                style={{ paddingLeft: 0, color: '#1890ff' }}\n                                onClick={() => {\n                                    if (account && account._id) {\n                                        setEditedRewardIndex('new')\n                                        setEditedReward({ mode: 'item' })\n                                    } else {\n                                        message.warning(\n                                            'You will be able to add rewards after you sign up.'\n                                        )\n                                    }\n                                }}\n                            >\n                                <PlusOutlined />\n                                Add rewards\n                            </Button>\n                        )}\n                    </Form.Item>\n                </Form>\n            )}\n            <Modal\n                visible={editedReward}\n                title={\n                    editedReward === 'new' ? 'Add new reward' : 'Edit reward'\n                }\n                closable={true}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setEditedReward()\n                    document.body.removeAttribute('style')\n                }}\n                onOk={() => {\n                    let rewardToSave = {}\n                    if (editedReward.mode === 'money') {\n                        rewardToSave.money = editedReward.money\n                        rewardToSave.mode = editedReward.mode\n                        rewardToSave.for = editedReward.for\n                        rewardToSave.rewardId = editedReward.rewardId\n                    } else {\n                        rewardToSave = { ...editedReward, money: undefined }\n                    }\n                    rewardToSave.owner = account._id\n\n                    if (props.setRewards) {\n                        let newRewards = [...props.rewards]\n\n                        if (editedRewardIndex === 'new')\n                            newRewards = [...newRewards, rewardToSave]\n                        else\n                            newRewards = newRewards.map((item, index) => {\n                                if (index === editedRewardIndex)\n                                    return rewardToSave\n                                else return item\n                            })\n                        props.setRewards(newRewards)\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    } else {\n                        wsActions.saveReward(\n                            account._id,\n                            progress._id,\n                            props.rewardKey,\n                            rewardToSave\n                        )\n                        setEditedReward()\n                        setEditedRewardIndex()\n                    }\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n                okText=\"Save\"\n            >\n                {editedReward && (\n                    <>\n                        <Form {...layout}>\n                            <Form.Item label=\"Reward for\">\n                                {connectionsSelect(\n                                    account,\n                                    friendData,\n                                    editedReward.for,\n                                    value => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            for: value,\n                                        })\n                                    }\n                                )}\n                                <p>(leave blank for all)</p>\n                            </Form.Item>\n                            <Divider type=\"horizontal\" />\n\n                            <Form.Item label=\"Images\">\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={(\n                                        editedReward.itemImages || []\n                                    ).map((url, index) => ({\n                                        url,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) => {\n                                        setEditedReward({\n                                            ...editedReward,\n                                            itemImages: fileList.map(\n                                                image => image.url\n                                            ),\n                                        })\n                                    }}\n                                    customRequest={({ file }) => {\n                                        uploadFile(\n                                            file,\n                                            800,\n                                            undefined,\n                                            url => {\n                                                setEditedReward({\n                                                    ...editedReward,\n                                                    itemImages: [\n                                                        ...(editedReward.itemImages ||\n                                                            []),\n                                                        url,\n                                                    ],\n                                                })\n                                            }\n                                        )\n                                    }}\n                                >\n                                    {(editedReward.itemImages || []).length >=\n                                    8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                            <Form.Item label=\"Name\" rules={nameRules}>\n                                <Input\n                                    value={editedReward.itemName}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            itemName: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Description\"\n                                rules={descriptionRules}\n                            >\n                                <Input.TextArea\n                                    value={editedReward.itemDescription}\n                                    onChange={({ target: { value } }) =>\n                                        setEditedReward({\n                                            ...editedReward,\n                                            itemDescription: value,\n                                        })\n                                    }\n                                />\n                            </Form.Item>\n                        </Form>\n                    </>\n                )}\n            </Modal>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n            <Modal\n                visible={previewReward}\n                footer={null}\n                onCancel={() => {\n                    setPreviewReward()\n                    document.body.removeAttribute('style')\n                }}\n                title=\"Reward details\"\n                destroyOnClose={true}\n            >\n                {previewReward ? (\n                    <>\n                        <ImageCarousel images={previewReward.itemImages} />\n\n                        {previewReward.mode === 'item' && (\n                            <h2>{previewReward.itemName}</h2>\n                        )}\n                        {previewReward.mode === 'item' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.itemDescription}\n                            </p>\n                        )}\n                        {previewReward.mode === 'simple' && (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>\n                                {previewReward.simple}\n                            </p>\n                        )}\n                    </>\n                ) : null}\n            </Modal>\n        </div>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        friendData: state.friendData,\n        progress: state.progress,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Rewards))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const changeStage = (value, accountId, progressId, stageId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeStage',\n                value,\n                progressId,\n                accountId,\n                stageId,\n            })\n        )\n    }\n}\n\nexport const leaveProgress = data => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'leaveProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n            })\n        )\n    }\n}\n\nexport const getFriendsData = (progress, accountFriends) => {\n    if (webSocket && webSocket.readyState === 1) {\n        if (progress) {\n            let accountIds = [\n                progress.owner,\n                progress.worker,\n                ...accountFriends,\n            ]\n\n            accountIds = [...new Set(accountIds)]\n\n            webSocket.send(\n                JSON.stringify({\n                    messageCode: 'getFriendsData',\n                    accountIds,\n                })\n            )\n        }\n    }\n}\n\nexport const editGoalInProgress = (data, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'editGoalInProgress',\n                progressId: data.progress._id,\n                accountId: data.account._id,\n                value,\n            })\n        )\n    }\n}\n\nexport const startProgress = (accountId, value) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'startProgress',\n                accountId,\n                value,\n            })\n        )\n    }\n}\n\nexport const deleteReward = (accountId, progressId, rewardId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'deleteReward',\n                accountId,\n                progressId,\n                rewardId,\n            })\n        )\n    }\n}\n\nexport const saveReward = (accountId, progressId, rewardKey, reward) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'saveReward',\n                accountId,\n                progressId,\n                rewardKey,\n                reward,\n            })\n        )\n    }\n}\n\nexport const changeLikesProgress = (accountId, progressId, add) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'changeLikesProgress',\n                accountId,\n                progressId,\n                add,\n            })\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport { uploadFile } from '../../utils/uploadFile'\nimport Rewards from '../Rewards/Rewards'\nimport { nameRules, descriptionRules } from '../../constants/fieldRules'\nimport connectionsSelect from './connectionsSelect'\nimport Select from 'antd/es/select'\n\nconst { Option } = Select\n\nconst EditGoalAndProgressForm = props => {\n    const { goal, account, friendData } = props\n\n    const [images, setImages] = useState(\n        (goal &&\n            goal.images.map((url, index) => ({\n                url,\n                uid: index,\n            }))) ||\n            []\n    )\n\n    const [previewImage, setPreviewImage] = useState('')\n\n    const [rewards, setRewards] = useState((goal && goal.rewards) || [])\n\n    const onFinish = value => {\n        props.onFinish({\n            ...value,\n            images: images.map(image => image.url),\n            rewards,\n        })\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    const connections = connectionsSelect(account, friendData)\n\n    return !props.goalId || goal ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={\n                    goal || {\n                        name: 'New achievement',\n                        repeat: 'no',\n                        days: ['0'],\n                    }\n                }\n                {...layout}\n                onValuesChange={(changedFields, allValues) =>\n                    allValues.days &&\n                    form.setFieldsValue({ days: allValues.days.sort() })\n                }\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadFile(file, 800, undefined, url => {\n                                setImages(\n                                    [...images, { url }].map(\n                                        (image, index) => ({\n                                            ...image,\n                                            uid: index,\n                                        })\n                                    )\n                                )\n                            })\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea\n                        autoSize={{ minRows: 4, maxRows: 20 }}\n                        placeholder=\"Write a few words about why this goal is important and how to achieve it.\"\n                    />\n                </Form.Item>\n                <Form.Item label=\"Achievers\" name=\"users\">\n                    {connections}\n                </Form.Item>\n\n                <Form.Item label=\"Repeat\" name=\"repeat\">\n                    <Select>\n                        <Option value=\"no\">No repeat</Option>\n                        <Option value=\"day\">Every day</Option>\n                        <Option value=\"weekday\">Every day of week</Option>\n                        <Option value=\"week\">Every week</Option>\n                        <Option value=\"month\">Every month</Option>\n                        <Option value=\"year\">Every year</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    noStyle\n                    shouldUpdate={(prevValues, currentValues) =>\n                        prevValues.repeat !== currentValues.repeat\n                    }\n                >\n                    {({ getFieldValue }) => {\n                        return getFieldValue('repeat') === 'weekday' ? (\n                            <Form.Item label=\"Days of week\" name=\"days\">\n                                <Select mode=\"tags\">\n                                    <Option value=\"0\">Sunday</Option>\n                                    <Option value=\"1\">Monday</Option>\n                                    <Option value=\"2\">Tuesday</Option>\n                                    <Option value=\"3\">Wednesday</Option>\n                                    <Option value=\"4\">Thursday</Option>\n                                    <Option value=\"5\">Friday</Option>\n                                    <Option value=\"6\">Saturday</Option>\n                                </Select>\n                            </Form.Item>\n                        ) : null\n                    }}\n                </Form.Item>\n                <Rewards\n                    label=\"Rewards\"\n                    rewards={rewards}\n                    setRewards={setRewards}\n                />\n                <div style={{ textAlign: 'right', marginTop: '50px' }}>\n                    <Button\n                        type=\"text\"\n                        size=\"large\"\n                        onClick={() => props.cancel(false)}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{\n                            borderRadius: '6px',\n                            padding: '0px 25px',\n                            marginLeft: '10px',\n                        }}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n                destroyOnClose={true}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default EditGoalAndProgressForm\n","import React from 'react'\nimport * as wsActions from '../../websocketActions'\n\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst AddProgress = props =>\n    props.account._id ? (\n        <EditGoalAndProgressForm\n            onFinish={value => {\n                wsActions.startProgress(props.account._id, value)\n                props.setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            account={props.account}\n            friendData={props.friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n\nexport default AddProgress\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport Avatar from 'antd/es/avatar'\nimport Button from 'antd/es/button'\nimport Badge from 'antd/es/badge'\nimport * as classes from './Layout.module.css'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\n\nimport HomeFilled from '@ant-design/icons/HomeFilled'\nimport getAvatar from '../../utils/getAvatar'\nimport LoginModal from './LoginModal'\nimport Spin from 'antd/es/spin'\nimport BackTop from 'antd/es/back-top'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport UpOutlined from '@ant-design/icons/UpOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from '../../containers/Progresses/AddProgress'\n\nconst AccountLayout = props => {\n    const { account } = props\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const [headerVisible, setHeaderVisible] = useState(true)\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n    const [pageAddress, setPageAddress] = useState(\n        props.history.location.pathname\n    )\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY\n            if (window.scrollY < 100) setHeaderVisible(true)\n            else {\n                if (currentScrollY > lastScrollY) {\n                    setHeaderVisible(false)\n                } else {\n                    setHeaderVisible(true)\n                }\n            }\n            setLastScrollY(currentScrollY)\n        }\n        window.removeEventListener('scroll', handleScroll)\n        window.addEventListener('scroll', handleScroll)\n        if (pageAddress !== props.history.location.pathname) {\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            })\n            setPageAddress(props.history.location.pathname)\n        }\n        if (props.showSignIn) setLoginVisible(true)\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [lastScrollY, props.history.location.pathname, props.showSignIn])\n\n    const buttonProps = {\n        type: 'link',\n        // ghost: true,\n        size: 'large',\n\n        style: { height: 'auto' },\n    }\n\n    const openLink = url => props.history.push('/' + url)\n\n    const isActivating = props.history.location.pathname === '/activate-account'\n\n    let numberOfUnseenNots = 0\n\n    for (let not of props.lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n    const logedIn = props.isAuthed && account._id\n    const editGoal = (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    )\n\n    return (\n        <>\n            <div className={classes.Layout}>\n                <header\n                    className={\n                        headerVisible\n                            ? classes.Header\n                            : [classes.Header, classes.HideHeader].join(' ')\n                    }\n                >\n                    <div className={classes.TopHeader}>\n                        <div className={classes.MenuButtonContiner}>\n                            <Link to=\"/\">\n                                <img\n                                    style={{\n                                        height: '42px',\n                                        margin: '0 0 12px 10px',\n                                    }}\n                                    src=\"/logo.jpg\"\n                                />\n                            </Link>\n                        </div>\n                        <div className={classes.QuickButtonContiner}>\n                            {(logedIn || !props.isConnectingWS) &&\n                                (isActivating ? (\n                                    'Activate your account'\n                                ) : (\n                                    <>\n                                        <Button\n                                            {...buttonProps}\n                                            onClick={() => {\n                                                account._id\n                                                    ? setStartProgressVisible(\n                                                          true\n                                                      )\n                                                    : window.isRNWebView\n                                                    ? window.ReactNativeWebView.postMessage(\n                                                          'showLogin'\n                                                      )\n                                                    : setLoginVisible(true)\n                                            }}\n                                        >\n                                            <PlusOutlined\n                                                style={{ fontSize: '20px' }}\n                                            />\n                                            <div\n                                                className={classes.FooterButton}\n                                            >\n                                                Inspiration\n                                            </div>\n                                        </Button>\n                                        {editGoal}\n                                    </>\n                                ))}\n                            {logedIn ? (\n                                !isActivating ? (\n                                    <>\n                                        <Button\n                                            {...buttonProps}\n                                            onClick={() => openLink('')}\n                                        >\n                                            <Badge\n                                                count={numberOfUnseenNots}\n                                                style={{\n                                                    lineHeight: 'initial',\n                                                }}\n                                            >\n                                                <HomeFilled\n                                                    style={{ fontSize: '20px' }}\n                                                />{' '}\n                                            </Badge>\n                                            <div\n                                                className={classes.FooterButton}\n                                            >\n                                                Home\n                                            </div>\n                                        </Button>\n                                        <Button\n                                            {...buttonProps}\n                                            onClick={() => openLink('account')}\n                                        >\n                                            <Badge\n                                                count={\n                                                    account.friends.filter(\n                                                        item =>\n                                                            item.status ===\n                                                            'inviting'\n                                                    ).length\n                                                }\n                                            >\n                                                <Avatar\n                                                    style={{\n                                                        border:\n                                                            '1px solid white',\n                                                    }}\n                                                    size={27}\n                                                    src={getAvatar(\n                                                        account._id,\n                                                        account.image\n                                                    )}\n                                                />\n                                            </Badge>\n                                            <div\n                                                className={classes.FooterButton}\n                                            >\n                                                Account\n                                            </div>\n                                        </Button>\n                                    </>\n                                ) : (\n                                    <Button\n                                        {...buttonProps}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        <div className={classes.FooterButton}>\n                                            Logout\n                                        </div>\n                                    </Button>\n                                )\n                            ) : props.isConnectingWS ? (\n                                <>\n                                    <span style={{ marginRight: '30px' }}>\n                                        <Spin\n                                            indicator={\n                                                <LoadingOutlined\n                                                    style={{\n                                                        color: 'white',\n                                                        marginRight: '10px',\n                                                    }}\n                                                />\n                                            }\n                                        />{' '}\n                                        Trying to login\n                                    </span>\n                                    <Button\n                                        {...buttonProps}\n                                        icon={<LogoutOutlined />}\n                                        onClick={() =>\n                                            props.history.push('/logout')\n                                        }\n                                    >\n                                        <div className={classes.FooterButton}>\n                                            Logout\n                                        </div>\n                                    </Button>\n                                </>\n                            ) : (\n                                <Button\n                                    {...buttonProps}\n                                    onClick={() =>\n                                        window.isRNWebView\n                                            ? window.ReactNativeWebView.postMessage(\n                                                  'showLogin'\n                                              )\n                                            : setLoginVisible(true)\n                                    }\n                                >\n                                    <LogoutOutlined\n                                        style={{ fontSize: '20px' }}\n                                    />\n                                    <div className={classes.FooterButton}>\n                                        Sign in\n                                    </div>\n                                </Button>\n                            )}\n                        </div>\n                    </div>\n                </header>\n                <main className={classes.Main}>{props.children}</main>\n            </div>\n            <LoginModal\n                loginVisible={loginVisible}\n                setLoginVisible={setLoginVisible}\n            />\n            <BackTop>\n                <div\n                    style={{\n                        height: 40,\n                        width: 40,\n                        lineHeight: '40px',\n                        borderRadius: '100%',\n                        backgroundColor: '#1088e9',\n                        color: '#fff',\n                        textAlign: 'center',\n                        fontSize: 14,\n                    }}\n                >\n                    <UpOutlined />\n                </div>\n            </BackTop>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        pageTitle: state.pageTitle,\n        isAuthed: state.isAuthed,\n        lastNotifications: state.lastNotifications,\n        isConnectingWS: state.isConnectingWS,\n        friendData: state.friendData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AccountLayout))\n","import React, { useState } from 'react'\nimport Descriptions from 'antd/es/descriptions'\n\nimport * as wsActions from '../../websocketActions'\nimport Rewards from '../../components/Rewards/Rewards'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\nimport Tabs from 'antd/es/tabs'\nimport Tag from 'antd/es/tag'\nimport Radio from 'antd/es/radio'\nimport Badge from 'antd/es/badge'\nimport moment from 'moment'\nimport CaretRightOutlined from '@ant-design/icons/CaretRightOutlined'\n\nmoment().format()\n\nconst ActivityTable = props => {\n    const [activeTab, setActiveTab] = useState(-1)\n    const { progress, account } = props\n    const { goal } = progress\n\n    const isOwner = account && account._id === progress.owner\n\n    let lastStages = progress.stages\n        .slice(Math.max(progress.stages.length - 7, 0))\n        .sort((a, b) => {\n            let aS, aF, bS, bF\n            if (a.old && !b.old) return 1\n            else if (b.old && !a.old) return -1\n            else {\n                if (a.day) {\n                    aS = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .startOf('day')\n                    aF = moment()\n                        .year(a.year)\n                        .dayOfYear(a.day)\n                        .endOf('day')\n                    bS = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .startOf('day')\n                    bF = moment()\n                        .year(b.year)\n                        .dayOfYear(b.day)\n                        .endOf('day')\n                } else if (a.week) {\n                    aS = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .startOf('week')\n                    aF = moment()\n                        .year(a.year)\n                        .week(a.week)\n                        .endOf('week')\n                    bS = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .startOf('week')\n                    bF = moment()\n                        .year(b.year)\n                        .week(b.week)\n                        .endOf('week')\n                } else if (a.month) {\n                    aS = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .startOf('month')\n                    aF = moment()\n                        .year(a.year)\n                        .month(a.month)\n                        .endOf('month')\n                    bS = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .startOf('month')\n                    bF = moment()\n                        .year(b.year)\n                        .month(b.month)\n                        .endOf('month')\n                } else if (a.year) {\n                    aS = moment()\n                        .year(a.year)\n                        .startOf('year')\n                    aF = moment()\n                        .year(a.year)\n                        .endOf('year')\n                    bS = moment()\n                        .year(b.year)\n                        .startOf('year')\n                    bF = moment()\n                        .year(b.year)\n                        .endOf('year')\n                }\n                if (aS) {\n                    const now = moment()\n\n                    if (\n                        Math.min(\n                            Math.abs(now.diff(aS)),\n                            Math.abs(now.diff(aF))\n                        ) <=\n                        Math.min(Math.abs(now.diff(bS)), Math.abs(now.diff(bF)))\n                    )\n                        return -1\n                    else return 1\n                }\n            }\n            return 0\n        })\n\n    const nowStageId = lastStages.length > 0 ? lastStages[0].stageId : 0\n\n    lastStages = progress.stages\n\n    return lastStages.length === 0 ? null : (\n        <div\n            style={{\n                border: '1px solid #eee',\n                padding: '10px 5px',\n            }}\n        >\n            <Tabs\n                activeKey={activeTab}\n                type=\"card\"\n                defaultActiveKey={\n                    nowStageId\n                        ? lastStages\n                              .findIndex(item => item.stageId === nowStageId)\n                              .toString()\n                        : '2'\n                }\n                onTabClick={key => setActiveTab(key === activeTab ? -1 : key)}\n            >\n                {lastStages.map((stage, index) => {\n                    const getStatus = id => {\n                        if (isOwner && stage.dismissed) return 'dismissed'\n                        if (stage.failBy.find(item => item.accountId === id))\n                            return 'fail'\n                        if (\n                            stage.approvedBy.find(item => item.accountId === id)\n                        )\n                            return 'complete'\n                        return 'process'\n                    }\n\n                    const getTag = id => {\n                        const status = getStatus(id)\n                        let text = 'In process',\n                            color = '#108ee9'\n                        switch (status) {\n                            case 'fail':\n                                text = 'Failed'\n                                color = '#f50'\n                                break\n                            case 'complete':\n                                text = 'Complete'\n                                color = '#87d068'\n                                break\n                            case 'dismissed':\n                                text = 'Dismissed'\n                                color = '#ffa500'\n                                break\n                            default:\n                                break\n                        }\n\n                        return <Tag color={color}>{text}</Tag>\n                    }\n\n                    const users = goal.users\n                        .filter(item => item !== progress.owner)\n                        .map(user => (\n                            <Descriptions.Item\n                                key={user}\n                                label={\n                                    <>\n                                        <UserButton\n                                            id={user}\n                                            noAva={true}\n                                            span={true}\n                                        />{' '}\n                                        {' (achiever)'}\n                                    </>\n                                }\n                            >\n                                {getTag(user)}\n                            </Descriptions.Item>\n                        ))\n\n                    const owner = [\n                        <Descriptions.Item\n                            key={progress.owner}\n                            label={\n                                <>\n                                    <UserButton\n                                        id={progress.owner}\n                                        noAva={true}\n                                        span={true}\n                                    />{' '}\n                                    {' (owner)'}\n                                </>\n                            }\n                        >\n                            {getTag(progress.owner)}\n                        </Descriptions.Item>,\n                    ]\n                    let stageDate\n                    let tabTitle = <div>One time goal</div>\n                    if (stage.day) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .dayOfYear(stage.day)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('dddd')}</div>\n                                <div>{stageDate.format('D MMM YY')}</div>\n                            </>\n                        )\n                    } else if (stage.week) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .week(stage.week)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('wo')} week</div>\n                                <div>\n                                    {stageDate\n                                        .startOf('week')\n                                        .format('D MMM YY')}\n                                </div>\n                                <div>\n                                    {stageDate.endOf('week').format('D MMM YY')}\n                                </div>\n                            </>\n                        )\n                    } else if (stage.month) {\n                        stageDate = moment()\n                            .year(stage.year)\n                            .month(stage.month)\n                        tabTitle = (\n                            <>\n                                <div>{stageDate.format('MMMM')}</div>\n                                <div>{stageDate.format('YYYY')}</div>\n                            </>\n                        )\n                    } else if (stage.year) {\n                        stageDate = moment().year(stage.year)\n\n                        tabTitle = <div>{stageDate.format('YYYY')}</div>\n                    }\n\n                    const myStatus =\n                        account && account._id && getStatus(account._id)\n\n                    const stageStatus = getStatus(progress.owner)\n                    return (\n                        <Tabs.TabPane\n                            tab={\n                                <Badge\n                                    color={\n                                        stageStatus === 'complete'\n                                            ? 'green'\n                                            : stageStatus === 'dismissed'\n                                            ? 'orange'\n                                            : stageStatus === 'fail'\n                                            ? 'volcano'\n                                            : 'rgba(0,0,0,0)'\n                                    }\n                                >\n                                    <span\n                                        style={{\n                                            fontSize: '12px',\n                                            textTransform: 'uppercase',\n                                            textAlign: 'center',\n                                        }}\n                                    >\n                                        {tabTitle}\n                                    </span>\n                                </Badge>\n                            }\n                            key={index}\n                        >\n                            {account &&\n                                account._id &&\n                                (progress.owner === account._id ||\n                                    goal.users.includes(account._id)) && (\n                                    <>\n                                        Set status:\n                                        <Radio.Group\n                                            value={myStatus}\n                                            style={{ padding: '20px 0px ' }}\n                                            onChange={value =>\n                                                wsActions.changeStage(\n                                                    value.target.value,\n                                                    account._id,\n                                                    progress._id,\n                                                    stage.stageId\n                                                )\n                                            }\n                                        >\n                                            <Radio\n                                                value=\"complete\"\n                                                style={{ display: 'block' }}\n                                            >\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'complete'\n                                                            ? 'green'\n                                                            : '#87d068'\n                                                    }\n                                                    style={{\n                                                        padding: '5px 0px',\n                                                        width: '100%',\n                                                        fontSize: '18px',\n                                                        maxWidth: '200px',\n                                                        textAlign: 'center',\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    Complete\n                                                </Tag>\n                                            </Radio>\n                                            <Radio value=\"process\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'process'\n                                                            ? 'processing'\n                                                            : '#108ee9'\n                                                    }\n                                                    style={{\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    In process\n                                                </Tag>\n                                            </Radio>\n                                            <Radio value=\"fail\">\n                                                <Tag\n                                                    color={\n                                                        myStatus !== 'fail'\n                                                            ? 'volcano'\n                                                            : '#f50'\n                                                    }\n                                                    style={{\n                                                        margin: '10px 0px',\n                                                    }}\n                                                >\n                                                    Fail\n                                                </Tag>\n                                            </Radio>\n                                            {isOwner && (\n                                                <Radio value=\"dismissed\">\n                                                    <Tag\n                                                        color={\n                                                            myStatus !==\n                                                            'dismissed'\n                                                                ? 'orange'\n                                                                : '#ffa500'\n                                                        }\n                                                        style={{\n                                                            margin: '10px 0px',\n                                                        }}\n                                                    >\n                                                        Dismiss\n                                                    </Tag>\n                                                </Radio>\n                                            )}\n                                        </Radio.Group>\n                                    </>\n                                )}\n\n                            <Descriptions\n                                size=\"small\"\n                                bordered\n                                column={{\n                                    xxl: 4,\n                                    xl: 3,\n                                    lg: 3,\n                                    md: 3,\n                                    sm: 2,\n                                    xs: 1,\n                                }}\n                            >\n                                {owner}\n                                {users}\n                            </Descriptions>\n\n                            {stage.paid.length > 0 && (\n                                <>\n                                    <Divider style={{ fontSize: '15px' }}>\n                                        Earned rewards\n                                    </Divider>\n\n                                    <Rewards\n                                        rewardKey={1}\n                                        rewards={stage.paid}\n                                        readOnly={true}\n                                    />\n                                </>\n                            )}\n                        </Tabs.TabPane>\n                    )\n                })}\n            </Tabs>\n        </div>\n    )\n}\nexport default ActivityTable\n","import React from 'react'\n\nimport * as wsActions from '../../websocketActions'\nimport EditGoalAndProgressForm from '../../components/EditGoalAndProgressForm/EditGoalAndProgressForm'\n\nconst EditProgress = props => {\n    const { progress, account, state, setState, friendData } = props\n\n    const onFinish = value => {\n        wsActions.editGoalInProgress(props, value)\n        setState({ ...state, editProgressOpen: false })\n        document.body.removeAttribute('style')\n    }\n\n    return progress.goal ? (\n        <EditGoalAndProgressForm\n            goal={progress.goal}\n            onFinish={onFinish}\n            account={account}\n            friendData={friendData}\n            cancel={props.cancel}\n        />\n    ) : null\n}\n\nexport default EditProgress\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nexport default withRouter(props => {\n    const placeholderImages = [\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/image+addspire-02.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-adrianna-calvo-3719018.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-george-stremplis-1006190.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-pixabay-33129.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-polina-tankilevitch-3905859.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355732.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-quang-nguyen-vinh-3355788.jpg',\n        'https://websiter.s3.us-east-2.amazonaws.com/!wishlist/pexels-sittisak-c-1739347.jpg',\n    ]\n    const images = props.images || []\n\n    const getPH = () => {\n        if (!props.id) return 0\n        const makeRand = x => {\n            x = Math.abs(x)\n            while (x > 1) x = x / 10\n            return x\n        }\n        const matches = props.id.match(/\\d+$/)\n        const imagePH = matches && matches.length > 0 ? parseInt(matches[0]) : 0\n        return Math.abs(\n            Math.round(makeRand(imagePH) * (placeholderImages.length - 1))\n        )\n    }\n\n    const Card = (\n        <>\n            {!props.friends && (\n                <img\n                    style={{\n                        maxWidth: '100%',\n                        margin: 'auto',\n                        display: 'block',\n                        borderRadius: '15px',\n                        ...props.style,\n                    }}\n                    src={\n                        images.length > 0\n                            ? images[0]\n                            : placeholderImages[getPH()]\n                    }\n                />\n            )}\n\n            <div style={{ padding: '5px 0px', wordBreak: 'break-word' }}>\n                {props.actions && (\n                    <div style={{ float: 'right' }}>{props.actions}</div>\n                )}\n                <span style={{ float: 'none' }}>{props.body}</span>\n            </div>\n        </>\n    )\n    return props.noLink ? (\n        Card\n    ) : (\n        <Link to={props.onClickLink} style={{ cursor: 'pointer' }}>\n            {Card}\n        </Link>\n    )\n})\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport * as wsActions from '../websocketActions'\n\nconst FollowButton = props => {\n    const { account, type, id } = props\n    if (account && account._id && account._id !== id) {\n        if (type === 'progress') {\n            return account.followProgresses.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowProgress(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followProgress(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        } else {\n            return account.followAccounts.includes(id) ? (\n                <Button\n                    danger\n                    onClick={() => wsActions.unfollowAccount(account._id, id)}\n                >\n                    Unfollow\n                </Button>\n            ) : (\n                <Button\n                    type=\"primary\"\n                    onClick={() => wsActions.followAccount(account._id, id)}\n                >\n                    Follow\n                </Button>\n            )\n        }\n    }\n    return null\n}\n\nexport default FollowButton\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\n\nimport Modal from 'antd/es/modal'\n\nimport Descriptions from 'antd/es/descriptions'\n\nconst { Item } = Descriptions\n\nimport * as wsActions from '../../websocketActions'\nimport ActivityTable from './ActivityTable'\nimport EditProgress from './EditProgress'\n\nimport Typography from 'antd/es/typography'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\n\nimport Tag from 'antd/es/tag'\nimport Rewards from '../../components/Rewards/Rewards'\nimport MasonryCard from '../../components/MasonryCard'\nimport FollowButton from '../../components/FollowButton'\nimport Helmet from 'react-helmet'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport PushpinFilled from '@ant-design/icons/PushpinFilled'\nimport RetweetOutlined from '@ant-design/icons/RetweetOutlined'\nimport Divider from 'antd/es/divider'\n\nconst Activity = props => {\n    const { account, progress, state, setState, friendData } = props\n    const { goal } = progress\n    const [followersVisible, setFollowersVisible] = useState(false)\n\n    const getDay = day => {\n        switch (day) {\n            case '0':\n                return 'Sunday'\n            case '1':\n                return 'Monday'\n            case '2':\n                return 'Tuesday'\n            case '3':\n                return 'Wednesday'\n            case '4':\n                return 'Thursday'\n            case '5':\n                return 'Friday'\n            case '6':\n                return 'Saturday'\n\n            default:\n                return ''\n        }\n    }\n\n    const getRepeatType = repeat => {\n        switch (repeat) {\n            case 'day':\n                return 'every day'\n            case 'weekday':\n                return 'every day of week'\n            case 'week':\n                return 'every week'\n            case 'month':\n                return 'every month'\n            case 'year':\n                return 'every year'\n            default:\n                return ''\n        }\n    }\n    return goal ? (\n        <>\n            <Helmet>\n                <title>\n                    {goal.name} by {progress.owner} at Addspire\n                </title>\n                <meta name=\"description\" content={goal.description} />\n            </Helmet>\n            {goal.images.length > 0 && <ImageCarousel images={goal.images} />}\n            <div style={{ textAlign: 'center' }}>\n                <h1>{goal.name}</h1>\n                <Button type=\"text\" onClick={() => setFollowersVisible(true)}>\n                    <PushpinFilled style={{ fontSize: '20px' }} />\n                    {progress.followingAccounts.length} Followers\n                </Button>\n                <Button\n                    type=\"text\"\n                    onClick={() =>\n                        wsActions.changeLikesProgress(\n                            account._id,\n                            progress._id,\n                            !progress.likes.includes(account._id)\n                        )\n                    }\n                >\n                    {progress.likes.includes(account._id) ? (\n                        <LikeFilled style={{ fontSize: '20px' }} />\n                    ) : (\n                        <LikeOutlined style={{ fontSize: '20px' }} />\n                    )}\n                    Likes\n                    <span style={{ paddingLeft: '8px' }}>\n                        {progress.likes.length}\n                    </span>\n                </Button>\n\n                <div style={{ marginTop: '10px' }}>\n                    {account &&\n                    account._id &&\n                    account.followProgresses.includes(progress._id) ? (\n                        <Button\n                            type=\"link\"\n                            onClick={() =>\n                                wsActions.unfollowProgress(\n                                    account._id,\n                                    progress._id\n                                )\n                            }\n                        >\n                            Following\n                        </Button>\n                    ) : (\n                        account._id && (\n                            <Button\n                                type=\"primary\"\n                                onClick={() =>\n                                    wsActions.followProgress(\n                                        account._id,\n                                        progress._id\n                                    )\n                                }\n                            >\n                                Follow\n                            </Button>\n                        )\n                    )}\n                </div>\n                {account._id === progress.owner && (\n                    <Button\n                        style={{ marginTop: '10px' }}\n                        type=\"primary\"\n                        onClick={() => {\n                            setState({ ...state, editProgressOpen: true })\n                        }}\n                    >\n                        Edit progress\n                    </Button>\n                )}\n                {account.progresses &&\n                    account.progresses.includes(progress._id.toString()) && (\n                        <Button\n                            danger={true}\n                            type=\"link\"\n                            onClick={() => {\n                                wsActions.leaveProgress(props)\n                            }}\n                            style={{ marginLeft: '10px' }}\n                        >\n                            Leave the progress\n                        </Button>\n                    )}\n            </div>\n            <Divider orientation=\"left\">Desciption</Divider>\n            <Typography.Paragraph\n                ellipsis={{\n                    rows: 3,\n                    expandable: true,\n                    symbol: 'more',\n                }}\n                style={{ whiteSpace: 'pre-wrap', marginTop: '30px' }}\n            >\n                {goal.description}\n            </Typography.Paragraph>\n            {goal.repeat !== 'no' && (\n                <p>\n                    <RetweetOutlined />\n                    {' Repeats '}\n                    {getRepeatType(goal.repeat) +\n                        (goal.repeat === 'weekday'\n                            ? ' (' +\n                              goal.days.reduce(\n                                  (acc, val, index) =>\n                                      acc +\n                                      (index > 0 ? ', ' : '') +\n                                      getDay(val),\n                                  ''\n                              ) +\n                              ').'\n                            : '.')}\n                </p>\n            )}\n\n            <Divider orientation=\"left\">Rewards</Divider>\n\n            <Rewards rewards={goal.rewards} />\n            <Divider orientation=\"left\">Track progress</Divider>\n            <div style={{ margin: '20px 0px' }}>\n                <ActivityTable\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                />\n            </div>\n\n            <Modal\n                visible={state.editProgressOpen}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, editProgressOpen: false })\n                    document.body.removeAttribute('style')\n                }}\n                closable={true}\n                destroyOnClose={true}\n                width=\"100%\"\n                style={{ maxWidth: '1000px', top: '0px' }}\n            >\n                <EditProgress\n                    progress={progress}\n                    account={account}\n                    state={state}\n                    setState={setState}\n                    friendData={friendData}\n                    cancel={() =>\n                        setState({ ...state, editProgressOpen: false })\n                    }\n                />\n            </Modal>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {progress.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default withRouter(Activity)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport message from 'antd/es/message'\nimport Modal from 'antd/es/modal/Modal'\n\nconst AddMessage = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState(props.images || [])\n    const { post, account } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    useEffect(() => {\n        setMessageText(\n            props.content ||\n                (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n        )\n    }, [props.replyToUser, props.content])\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n\n    return post && account._id ? (\n        <div\n            style={{\n                background: '#fff',\n\n                ...(props.replyTo\n                    ? {}\n                    : {\n                          width: '100%',\n                          bottom: '-200px',\n                          left: '0px',\n                          //   position: 'absolute',\n                      }),\n            }}\n        >\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules} style={{ margin: 0 }}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                                placeholder=\"Write a comment\"\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item style={{ margin: 0 }}>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.sendMessage(\n                                        account._id,\n                                        post._id,\n                                        messageText,\n                                        images,\n                                        props.replyTo,\n                                        props.editingMessage\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {props.cancel && (\n                                <Button\n                                    onClick={props.cancel}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddMessage)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Comment from 'antd/es/comment'\n\nimport Tooltip from 'antd/es/tooltip'\nimport TimeAgo from 'timeago-react'\n\nimport * as wsActions from '../../websocketActions'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport AddMessage from './AddMessage'\nimport Button from 'antd/es/button'\nimport ImageCarousel from '../UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../UserButton/UserButton'\n\nconst Message = props => {\n    const {\n        account,\n        message,\n        friendData,\n        progressData,\n        post,\n        replies,\n        isStart,\n    } = props\n    const [replyVisible, setReplyVisible] = useState(false)\n    const [replyToUser, setReplyToUser] = useState('')\n    const [editingMessage, setEditingMessage] = useState('')\n    const [showReplies, setShowReplies] = useState(false)\n    const commentProps = {\n        actions: !props.isStart && [\n            <span>\n                <TimeAgo datetime={message.date} live />\n            </span>,\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    {message.likes.includes(account._id) ? (\n                        <LikeFilled\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'dislikeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    ) : (\n                        <LikeOutlined\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    'likeMessage',\n                                    message.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        />\n                    )}\n                </Tooltip>\n                <span style={{ paddingLeft: '8px' }}>\n                    {message.likes.length}\n                </span>\n            </span>,\n\n            message.author !== account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => {\n                        if (props.setReplyVisible) {\n                            props.setReplyVisible(true)\n                            props.setReplyToUser(props.message.author)\n                        } else {\n                            setReplyVisible(true)\n                            setReplyToUser('')\n                        }\n                        setShowReplies(true)\n                    }}\n                >\n                    Reply\n                </span>\n            ),\n            message.author === account._id && (\n                <span\n                    key=\"comment-basic-reply-to\"\n                    onClick={() => setEditingMessage(message.messageId)}\n                >\n                    Edit\n                </span>\n            ),\n        ],\n        avatar: <UserButton noName={true} id={message.author} span={true} />,\n        content: isStart ? (\n            <>\n                {message.messageType === 'wishlist' && (\n                    <>\n                        {' '}\n                        <span\n                            style={{\n                                fontWeight: 'bold',\n                                cursor: 'pointer',\n                                margin: '10px 0px 0px ',\n                            }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${message.details.owner}/${\n                                        message.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {message.details.name}\n                        </span>\n                    </>\n                )}\n                {message.text && <p>{message.text}</p>}\n            </>\n        ) : (\n            <>\n                <div\n                    style={{\n                        background: '#eee',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        display:\n                            message.image && message.image.length > 0\n                                ? 'block'\n                                : 'inline-block',\n                    }}\n                >\n                    <UserButton\n                        id={message.author}\n                        span={true}\n                        noAva={true}\n                        style={{ fontWeight: 'bold' }}\n                    />\n\n                    {message.image && message.image.length > 0 && (\n                        <ImageCarousel\n                            images={message.image}\n                            height=\"60vmin\"\n                            type=\"contain\"\n                        />\n                    )}\n\n                    {message.text && <p>{message.text}</p>}\n                </div>\n                <div />\n            </>\n        ),\n        author: isStart && (\n            <span\n                style={{ color: '#333', fontWeight: 'bold', fontSize: '14px' }}\n            >\n                <UserButton id={message.author} span={true} noAva={true} />{' '}\n                <span style={{ fontWeight: 'normal' }}>in</span>{' '}\n                {post.parent &&\n                    progressData &&\n                    progressData[post.parent.parentId] && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push(\n                                    '/inspirations/' + post.parent.parentId\n                                )\n                            }\n                        >\n                            {progressData[post.parent.parentId].goal.name}\n                        </span>\n                    )}\n                {post.startMessage &&\n                    ['wishlist', 'perk', 'goal'].includes(\n                        post.startMessage.messageType\n                    ) && (\n                        <span\n                            style={{ cursor: 'pointer' }}\n                            onClick={() =>\n                                props.history.push('/profile/' + message.author)\n                            }\n                        >\n                            {post.startMessage.messageType === 'wishlist'\n                                ? 'Wishlist'\n                                : post.startMessage.messageType === 'goals'\n                                ? 'Goals'\n                                : 'Shop'}\n                        </span>\n                    )}\n            </span>\n        ),\n        datetime: isStart && (\n            <span style={{ color: '#333' }}>\n                <TimeAgo datetime={message.date} live />\n            </span>\n        ),\n    }\n    return account && friendData ? (\n        account._id !== message.author || !editingMessage ? (\n            <Comment {...commentProps}>\n                {props.isTop && replies && replies.length > 0 ? (\n                    showReplies ? (\n                        replies.map((reply, index) => (\n                            <Message\n                                key={index}\n                                message={reply}\n                                post={post}\n                                account={account}\n                                friendData={friendData}\n                                setReplyVisible={setReplyVisible}\n                                setReplyToUser={setReplyToUser}\n                            />\n                        ))\n                    ) : (\n                        <Button\n                            type=\"text\"\n                            onClick={() => setShowReplies(true)}\n                        >\n                            Show {replies.length} replies\n                        </Button>\n                    )\n                ) : null}\n\n                {props.isTop && replyVisible ? (\n                    <AddMessage\n                        post={post}\n                        account={account}\n                        replyTo={message.messageId}\n                        replyToUser={replyToUser}\n                        cancel={() => setReplyVisible(false)}\n                    />\n                ) : null}\n            </Comment>\n        ) : (\n            <AddMessage\n                post={post}\n                account={account}\n                replyTo={message.messageId}\n                editingMessage={editingMessage}\n                content={message.text}\n                images={message.image}\n                onSend={() => setEditingMessage('')}\n                cancel={() => setEditingMessage('')}\n            />\n        )\n    ) : null\n}\n\nexport default withRouter(Message)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\nimport Message from './Message'\nimport LikeOutlined from '@ant-design/icons/LikeOutlined'\nimport LikeFilled from '@ant-design/icons/LikeFilled'\nimport CommentOutlined from '@ant-design/icons/CommentOutlined'\nimport AddMessage from './AddMessage'\nimport Divider from 'antd/es/divider'\nimport Button from 'antd/es/button'\n\nconst Post = props => {\n    const { post, account, friendData, progressData } = props\n    const [postOpen, setPostOpen] = useState(props.showReplies)\n    const getNumberOfMessages = messages => {\n        let result = 0\n        for (let item of messages) {\n            result = result + 1 + item.replies.length\n        }\n        return result\n    }\n    return post ? (\n        <>\n            {!props.noStartMessage && (\n                <>\n                    <Message\n                        message={post.startMessage}\n                        post={post}\n                        account={account}\n                        friendData={friendData}\n                        progressData={progressData}\n                        replies={[]}\n                        isStart={true}\n                    />\n                    {post.startMessage.image &&\n                        post.startMessage.image.length > 0 && (\n                            <img\n                                style={{\n                                    maxWidth: '100%',\n                                    margin: 'auto',\n                                    display: 'block',\n                                }}\n                                src={post.startMessage.image[0]}\n                            />\n                        )}\n                </>\n            )}\n            <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n\n            <div\n                style={{\n                    textAlign: 'left',\n                    // marginBottom: '200px',\n                    position: 'relative',\n                }}\n            >\n                <div\n                    style={{ display: 'flex', justifyContent: 'space-around' }}\n                >\n                    <span key=\"comment-basic-like\">\n                        <Button\n                            type=\"text\"\n                            onClick={() =>\n                                wsActions.changeLikesMessage(\n                                    post.startMessage.likes.includes(\n                                        account._id\n                                    )\n                                        ? 'dislikeMessage'\n                                        : 'likeMessage',\n                                    post.startMessage.messageId,\n                                    account._id,\n                                    post._id\n                                )\n                            }\n                        >\n                            {post.startMessage.likes.includes(account._id) ? (\n                                <LikeFilled style={{ fontSize: '20px' }} />\n                            ) : (\n                                <LikeOutlined style={{ fontSize: '20px' }} />\n                            )}\n                            Likes\n                            <span style={{ paddingLeft: '8px' }}>\n                                {post.startMessage.likes.length}\n                            </span>\n                        </Button>\n                    </span>\n                    <span>\n                        <Button onClick={() => setPostOpen(true)} type=\"text\">\n                            <CommentOutlined style={{ fontSize: '20px' }} />\n                            Comment\n                            <span style={{ paddingLeft: '8px' }}>\n                                {getNumberOfMessages(post.messages)}\n                            </span>\n                        </Button>\n                    </span>\n                </div>\n                <Divider type=\"horizontal\" style={{ margin: '5px 0' }} />\n                {postOpen && (\n                    <>\n                        <AddMessage post={post} account={account} />\n                        {post.messages && post.messages.length\n                            ? post.messages.map((message, index) => (\n                                  <Message\n                                      key={index}\n                                      message={message}\n                                      post={post}\n                                      account={account}\n                                      friendData={friendData}\n                                      replies={message.replies}\n                                      isTop={true}\n                                  />\n                              ))\n                            : null}\n                    </>\n                )}\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Post)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from 'antd/es/button'\nimport Comment from 'antd/es/comment'\nimport Avatar from 'antd/es/avatar'\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\nimport Upload from 'antd/es/upload'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport SendOutlined from '@ant-design/icons/SendOutlined'\nimport { uploadFile } from '../../utils/uploadFile'\nimport * as wsActions from '../../websocketActions'\nimport getAvatar from '../../utils/getAvatar'\nimport { messageRules } from '../../constants/fieldRules'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport PictureFilled from '@ant-design/icons/PictureFilled'\nimport Modal from 'antd/es/modal/Modal'\nimport Divider from 'antd/es/divider'\n\nconst AddPost = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const [imageLoading, setImageLoading] = useState(false)\n    const [images, setImages] = useState([])\n\n    const { parent, account, parentType } = props\n\n    const [messageText, setMessageText] = useState(\n        props.content ||\n            (props.replyToUser ? '@' + props.replyToUser + ' ' : '')\n    )\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages([...images, url])\n        })\n    }\n    return account._id ? (\n        <div\n            style={{\n                background: '#fff',\n                padding: '0px 10px',\n                bottom: '0px',\n                left: '0px',\n                zIndex: 1000,\n            }}\n        >\n            <Divider orientation=\"left\">Posts and comments</Divider>\n\n            <Comment\n                avatar={<Avatar src={getAvatar(account._id, account.image)} />}\n                content={\n                    <>\n                        <Form.Item rules={messageRules}>\n                            <Input.TextArea\n                                autoSize={{\n                                    minRows: 1,\n                                    maxRows: 3,\n                                }}\n                                rows={1}\n                                onChange={e => setMessageText(e.target.value)}\n                                value={messageText}\n                            />\n                        </Form.Item>\n                        {images.length > 0 && (\n                            <Form.Item style={{ margin: 0 }}>\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={images.map((image, index) => ({\n                                        url: image,\n                                        uid: index,\n                                    }))}\n                                    onPreview={file => {\n                                        setPreviewImage(file.url)\n                                    }}\n                                    onChange={({ fileList }) =>\n                                        setImages(\n                                            fileList.map(image => image.url)\n                                        )\n                                    }\n                                    customRequest={({ file }) => {\n                                        uploadImage(file)\n                                    }}\n                                >\n                                    {images.length >= 8 ? null : (\n                                        <div>\n                                            <PlusOutlined />\n                                            <div className=\"ant-upload-text\">\n                                                Upload\n                                            </div>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </Form.Item>\n                        )}\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                onClick={() => {\n                                    wsActions.addPost(\n                                        account._id,\n                                        parent,\n                                        parentType,\n                                        messageText,\n                                        images\n                                    )\n                                    setMessageText('')\n                                    setImages([])\n                                    if (props.onSend) props.onSend()\n                                }}\n                                icon={<SendOutlined />}\n                                type=\"text\"\n                            >\n                                Send\n                            </Button>\n                            <Upload\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    if (images.length > 8) {\n                                        message.warning(\n                                            'You can not attach more than 8 images.'\n                                        )\n                                        return\n                                    }\n                                    setImageLoading(true)\n                                    uploadFile(file, 800, undefined, url => {\n                                        setImageLoading(false)\n                                        setImages([...images, url])\n                                    })\n                                }}\n                            >\n                                <Button\n                                    type=\"text\"\n                                    icon={\n                                        imageLoading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PictureFilled />\n                                        )\n                                    }\n                                >\n                                    Image\n                                </Button>\n                            </Upload>\n                            {messageText || images.length ? (\n                                <Button\n                                    onClick={() => {\n                                        setMessageText('')\n                                        setImages([])\n                                    }}\n                                    icon={<CloseCircleFilled />}\n                                    type=\"text\"\n                                >\n                                    Cancel\n                                </Button>\n                            ) : null}\n                        </Form.Item>\n                    </>\n                }\n            />\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => {\n                    setPreviewImage('')\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\n\nexport default withRouter(AddPost)\n","import axios from 'axios'\nimport processRes from './processRes'\nexport default (props, data, setData, options, callback) => {\n    // if (typeof props.isAuthed === 'undefined') return\n    // options = {\n    //     forceAuth: true,\n    //     forceActivate: true,\n    //     pullData: true,\n    //     ...(options || {}),\n    // }\n\n    // if (!props.isAuthed) {\n    //     props.tryAuth(props, options.forceAuth)\n    // }\n\n    // if (options.pullData) {\n    axios\n        .get('/api' + props.history.location.pathname)\n        .then(res => {\n            processRes(res, props)\n            // if (options.forceActivate) {\n            //     if (props.isAuthed && res.data.status === 'no account') {\n            //         props.history.push('/activate-account')\n            //     }\n            // }\n\n            setData(res.data)\n            callback(res.data)\n        })\n        .catch(err => {})\n    // }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport Modal from 'antd/es/modal'\nimport Activity from './Activity'\nimport Post from '../../components/Post/Post'\nimport AddPost from '../../components/Post/AddPost'\nimport pullData from '../../utils/pullData'\n\nconst Progress = props => {\n    const [state, setState] = useState({})\n\n    const [data, setData] = useState({})\n    const pathParts = props.history.location.pathname.split('/')\n    const progressId = pathParts.length > 2 ? pathParts[2] : ''\n    if (!progressId) return null\n    useEffect(() => {\n        if (props.isAuthed) {\n            props.setData({ currentProgress: progressId })\n        } else {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n                const post = {}\n                for (let item of data.post) post[item._id] = item\n\n                props.setData({\n                    friendData,\n                    posts: post,\n                    account: {},\n                    progress: data.progress,\n                })\n            })\n        }\n    }, [props.isAuthed, props.history.location.pathname])\n\n    const { progress, account, friendData, posts } = props.isAuthed\n        ? props\n        : { ...data, account: {} }\n\n    if (!progress || !progress._id) return null\n    props.setData({ currentPosts: progress.posts })\n\n    const { goal } = progress\n    if (goal) props.setPageTitle({ main: goal.name, sub: progress.worker })\n    return goal && friendData ? (\n        <div className=\"contentDiv\">\n            <Activity\n                state={state}\n                setState={setState}\n                progress={progress}\n                account={account}\n                friendData={friendData}\n            />\n\n            {account._id && (\n                <AddPost\n                    parent={progressId}\n                    account={account}\n                    parentType=\"progress\"\n                    // onSend={() => setEditingMessage('')}\n                />\n            )}\n            {posts &&\n                progress.posts.map(postId => {\n                    if (posts[postId]) {\n                        const post = posts[postId]\n                        return (\n                            <div key={postId}>\n                                <div\n                                    style={{\n                                        height: '5px',\n                                        background: '#ddd',\n                                        width: 'calc(100% + 8px)',\n                                        position: 'absolute',\n                                        left: '-8px',\n                                    }}\n                                />\n                                <div style={{ paddingTop: '10px' }}>\n                                    <Post\n                                        friendData={friendData}\n                                        account={account}\n                                        post={post}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    } else return null\n                })}\n\n            <Modal\n                visible={state.previewImage}\n                footer={null}\n                onCancel={() => {\n                    setState({ ...state, previewImage: '' })\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={state.previewImage}\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        posts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progress)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\n\nimport Post from '../../components/Post/Post'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Divider from 'antd/es/divider'\n\nconst DashboardPosts = props => {\n    const {\n        account,\n        friendData,\n        statePosts,\n        progressData,\n        currentPosts,\n    } = props\n\n    const [posts, setPosts] = useState([])\n    const [startTime] = useState(new Date().getTime())\n\n    const sortPosts = (a, b) => {\n        const aN = a.notifications.filter(item => item.user !== account._id)\n        const bN = b.notifications.filter(item => item.user !== account._id)\n        if (aN.length === 0 && bN.length > 0) return 1\n        else if (aN.length > 0 && bN.length === 0) return -1\n        else if (aN.length === 0 && bN.length === 0) return 0\n        else\n            return new Date(aN[0].date).getTime() <\n                new Date(bN[0].date).getTime()\n                ? 1\n                : -1\n    }\n\n    const sortNotifications = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    useEffect(() => {\n        if (currentPosts) {\n            const newPosts = currentPosts\n                .filter(item => statePosts[item])\n                .map(item => statePosts[item])\n\n            const newUnseenPosts = []\n            const newOldPosts = []\n            let oldPosts = [...posts]\n            for (let post of newPosts) {\n                let oldPostIndex = oldPosts.findIndex(item => {\n                    return item._id.toString() === post._id.toString()\n                })\n                if (oldPostIndex === -1) {\n                    if (\n                        post.notifications &&\n                        post.notifications.length > 0 &&\n                        new Date(post.notifications[0].date).getTime() >\n                            startTime\n                    ) {\n                        newUnseenPosts.push(post)\n                    } else {\n                        newOldPosts.push(post)\n                    }\n                } else {\n                    oldPosts[oldPostIndex] = post\n                }\n            }\n\n            for (let post of newOldPosts) {\n                const index = oldPosts.findIndex(item => {\n                    if (\n                        item &&\n                        item.notifications &&\n                        item.notifications.length > 0\n                    ) {\n                        return (\n                            new Date(item.notifications[0]).getTime() >\n                            new Date(post.notifications[0]).getTime()\n                        )\n                    } else return false\n                })\n                if (index === -1) {\n                    oldPosts.push(post)\n                } else {\n                    oldPosts.splice(index, 0, post)\n                }\n            }\n\n            let resultPosts = [...newUnseenPosts, ...oldPosts]\n            if (posts.length === 0) {\n                resultPosts = resultPosts.sort(sortPosts)\n            }\n            setPosts(resultPosts)\n        }\n    }, [currentPosts, statePosts])\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications.filter(\n                    item =>\n                        item.code === 'add post' && item.user !== account._id\n                ),\n            ]\n    }\n\n    lastNotifications = lastNotifications\n        .sort(sortNotifications)\n        .map(item => item.details.postId)\n        .slice(0, 10)\n\n    const neededPosts = [\n        ...new Set([\n            ...account.followPosts,\n            ...account.myPosts,\n            ...posts.map(post => post._id),\n            ...lastNotifications,\n        ]),\n    ]\n    if (!isEqual(currentPosts, neededPosts))\n        props.setData({ currentPosts: neededPosts })\n\n    props.setPageTitle({ main: 'Dashboard', sub: '' })\n\n    return posts.map((item, index) => {\n        let text = null\n        const nots = item.notifications.filter(not => not.user !== account._id)\n        const not = nots.length > 0 ? nots[0] : null\n        if (not) {\n            switch (not.code) {\n                case 'edit wishlist item':\n                    text = 'edited item in wishlist.'\n\n                    break\n                case 'edit goal':\n                    text = 'edited goal.'\n\n                    break\n                case 'edit perk':\n                    text = 'edited item in shop.'\n\n                    break\n\n                case 'comment':\n                    text = 'added a comment.'\n\n                    break\n                case 'edit comment':\n                    text = 'edited a comment.'\n\n                    break\n                case 'like':\n                    text = 'added a like.'\n\n                    break\n                case 'dislike':\n                    text = 'removed a like.'\n\n                    break\n                default:\n                    text = null\n                    break\n            }\n        }\n        return (\n            <div key={index}>\n                <div\n                    style={{\n                        height: '5px',\n                        background: '#ddd',\n                        width: 'calc(100% + 8px)',\n                        position: 'absolute',\n                        left: '-8px',\n                    }}\n                />\n                <div style={{ paddingTop: '10px' }}>\n                    {text && (\n                        <>\n                            <span>\n                                <UserButton\n                                    id={not.user}\n                                    noAva={true}\n                                    span={true}\n                                    style={{ fontWeight: 'bold' }}\n                                />{' '}\n                                {text}\n                            </span>\n                            <Divider\n                                type=\"horizontal\"\n                                style={{ margin: '5px 0' }}\n                            />\n                        </>\n                    )}\n                    <Post\n                        friendData={friendData}\n                        account={account}\n                        post={item}\n                        progressData={progressData}\n                    />\n                </div>\n            </div>\n        )\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        currentPosts: state.currentPosts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(DashboardPosts)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserButton from '../../components/UserButton/UserButton'\nimport Comment from 'antd/es/comment'\nimport Divider from 'antd/es/divider'\nimport moment from 'moment'\n\nmoment().format()\n\nconst DashboardEvents = props => {\n    const { lastNotifications } = props\n    const getRewardText = item => (\n        <span style={{ fontWeight: 'bold' }}>\n            {item.details.reward.money\n                ? '$' + item.details.reward.money\n                : item.details.reward.simple || item.details.reward.itemName}\n        </span>\n    )\n\n    const getStageName = stage => {\n        let stageDate\n        if (stage.day) {\n            stageDate = moment()\n                .year(stage.year)\n                .dayOfYear(stage.day)\n            return stageDate.format('dddd D MMM YYYY')\n        } else if (stage.week) {\n            stageDate = moment()\n                .year(stage.year)\n                .week(stage.week)\n            return (\n                stageDate.startOf('week').format('wo [week] D MMM YYYY - ') +\n                stageDate.endOf('week').format('D MMM YYYY')\n            )\n        } else if (stage.month) {\n            stageDate = moment()\n                .year(stage.year)\n                .month(stage.month)\n            return stageDate.format('MMMM YYYY')\n        } else if (stage.year) {\n            stageDate = moment().year(stage.year)\n            return stageDate.format('YYYY')\n        }\n    }\n    return lastNotifications.map((item, index) => {\n        let text = null,\n            stageName\n\n        switch (item.code) {\n            case 'change name':\n                text = (\n                    <span>\n                        {' '}\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' changed name.'}\n                    </span>\n                )\n                break\n            case 'delete account':\n                text = (\n                    <span>\n                        {item.user}\n                        deleted account.\n                    </span>\n                )\n                break\n            case 'friend request':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' wants to become friends with you.'}\n                    </span>\n                )\n                break\n            case 'friend add':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' became friends.'}\n                    </span>\n                )\n                break\n            case 'unfriend':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' and '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.friend}\n                        />\n                        {' stopped being friends.'}\n                    </span>\n                )\n                break\n            case 'add wishlist item':\n            case 'edit wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add wishlist item'\n                            ? 'added to wishlist a new item'\n                            : 'edited in wishlist'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/wishlist/${item.user}/${\n                                        item.details.itemId\n                                    }`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>{' '}\n                        .\n                    </span>\n                )\n                break\n            case 'delete wishlist item':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from wishlist.\n                    </span>\n                )\n                break\n            case 'add goal':\n            case 'edit goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add goal'\n                            ? 'added a new goal'\n                            : 'edited goal'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/goals/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete goal':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from goals.\n                    </span>\n                )\n                break\n            case 'add perk':\n            case 'edit perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'add perk'\n                            ? 'added to shop a new item'\n                            : 'edited in shop'}{' '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'delete perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' deleted '}\n                        {item.details.itemName} from shop.\n                    </span>\n                )\n                break\n            case 'buy perk':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' bought '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.owner}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'cancel transaction':\n            case 'confirm transaction':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />{' '}\n                        {item.code === 'cancel transaction'\n                            ? 'cancelled'\n                            : 'confirmed'}\n                        {' purchase of '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/shop/${item.user}/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName} (${item.details.price})\n                        </span>\n                        {' by '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.buyer}\n                        />\n                        {' .'}\n                    </span>\n                )\n                break\n            case 'start progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' started participating in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.itemId}`\n                                )\n                            }\n                        >\n                            {item.details.itemName}\n                        </span>\n                        {' as '}\n                        {item.details.as}.\n                    </span>\n                )\n                break\n            case 'stage approve':\n            case 'stage progress':\n            case 'stage fail':\n            case 'stage dismiss':\n                stageName = getStageName(item.details)\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {item.code === 'stage approve'\n                            ? ' approved  '\n                            : item.code === 'stage progress'\n                            ? ' put into process '\n                            : item.code === 'stage fail'\n                            ? ' marked as failed '\n                            : ' dismissed '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n                        .\n                    </span>\n                )\n                break\n\n            case 'stage complete':\n                text = (\n                    <span>\n                        {'Progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {stageName && (\n                            <>\n                                {' for '}\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {stageName}\n                                </span>\n                            </>\n                        )}\n\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'milestone finish':\n                text = (\n                    <span>\n                        Milestone {item.details.itemName}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {' was approved and finished.'}\n                    </span>\n                )\n                break\n            case 'get reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' recieved '}\n                        {getRewardText(item)}\n                        {' as a reward from '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.from}\n                        />\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'leave progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' left progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'edit progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' edited progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        {item.details.addedAccounts.length > 0 ? (\n                            <>\n                                {' and added '}\n                                {item.details.addedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}{' '}\n                            </>\n                        ) : (\n                            ''\n                        )}\n                        {item.details.droppedAccounts.length > 0 ? (\n                            <>\n                                {' and removed '}\n                                {item.details.droppedAccounts.map(ac => (\n                                    <UserButton\n                                        span={true}\n                                        noAva={true}\n                                        id={ac}\n                                    />\n                                ))}\n                                {' .'}\n                            </>\n                        ) : (\n                            '.'\n                        )}\n                    </span>\n                )\n                break\n            case 'remove from progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' from progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add to progress':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        <UserButton\n                            span={true}\n                            noAva={true}\n                            id={item.details.account}\n                        />\n                        {' to progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'add reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' added '}\n                        {getRewardText(item)} as a reward for\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          noAva={true}\n                                          span={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            case 'delete reward':\n                text = (\n                    <span>\n                        <UserButton span={true} noAva={true} id={item.user} />\n                        {' removed '}\n                        {getRewardText(item)}\n                        {' as a reward for '}\n                        {!item.details.for || item.details.for.length === 0\n                            ? ' all '\n                            : item.details.for.map(account => (\n                                  <>\n                                      <UserButton\n                                          span={true}\n                                          noAva={true}\n                                          id={account}\n                                      />\n                                      ,\n                                  </>\n                              ))}\n                        {' in progress '}\n                        <span\n                            style={{ fontWeight: 'bold' }}\n                            onClick={() =>\n                                props.history.push(\n                                    `/inspirations/${item.details.progressId}`\n                                )\n                            }\n                        >\n                            {item.details.progressName}\n                        </span>\n                        .\n                    </span>\n                )\n                break\n            default:\n                text = 'New event'\n                break\n        }\n        return (\n            <div key={index}>\n                <Divider style={{ margin: '5px 0px' }} />\n                <Comment\n                    avatar={\n                        <UserButton noName={true} id={item.user} span={true} />\n                    }\n                    content={text}\n                />\n            </div>\n        )\n\n        // <Card>{text}</Card>\n    })\n}\nconst mapStateToProps = state => {\n    return {\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEvents))\n","export const friendsBreakPoints = {\n    default: 4,\n    1600: 3,\n    1100: 2,\n    600: 1,\n}\n\nexport const cardBreakPoints = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    310: 1,\n}\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\nimport {\n    cardBreakPoints,\n    friendsBreakPoints,\n} from '../utils/masonryBreakPoints'\n\nexport default props => (\n    <div style={{ marginTop: '40px', ...props.style }}>\n        <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n            breakpointCols={\n                props.friends ? friendsBreakPoints : cardBreakPoints\n            }\n        >\n            {props.children}\n        </Masonry>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport axios from 'axios'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport Helmet from 'react-helmet'\n\nconst Explore = props => {\n    const [isSearching, setIsSearching] = useState(false)\n    const [foundProgresses, setFoundProgresses] = useState([])\n    const [progresses, setProgresses] = useState([])\n    const [noMore, setNoMore] = useState(false)\n    const [noMorePopular, setNoMorePopular] = useState(false)\n    const [searchValue, setSearchValue] = useState('')\n    const onSearch = (value, noNoMore) => {\n        if (!noMore || noNoMore) {\n            setNoMore(true)\n            axios\n                .post('/api/explore/search', {\n                    value: value || searchValue,\n                    skip: noNoMore ? 0 : foundProgresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMore(res.data.noMore)\n                        setFoundProgresses(res.data.progresses)\n                        if (res.data.progresses.length === 0)\n                            message.warning('There are no progresses found.')\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n    const onGetPopular = () => {\n        if (!noMorePopular) {\n            setNoMorePopular(true)\n            axios\n                .post('/api/explore/popular', {\n                    skip: progresses.length,\n                })\n                .then(res => {\n                    if (res.data.success) {\n                        setNoMorePopular(res.data.noMore)\n                        setProgresses([...progresses, ...res.data.progresses])\n                        const newFriendData = {}\n                        for (let friend of res.data.friends) {\n                            newFriendData[friend._id] = friend\n                        }\n                    } else {\n                        if (res.data.errorCode) {\n                            message.error(\n                                'Something is wrong with the data. Please try one more time with new data.'\n                            )\n                        }\n                    }\n                })\n                .catch(err => {})\n        }\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <Input.Search\n                placeholder=\"Find great inspirations!\"\n                onSearch={value => {\n                    if (value) {\n                        setIsSearching(true)\n                        if (value !== searchValue) {\n                            setNoMore(false)\n                            setFoundProgresses([])\n                            setSearchValue(value)\n                            onSearch(value, true)\n                        }\n                    } else {\n                        setNoMore(false)\n                        setSearchValue(value)\n                        setIsSearching(false)\n                    }\n                }}\n                onChange={e => {\n                    if (!e.target.value) {\n                        setNoMore(false)\n                        setFoundProgresses([])\n                        setIsSearching(false)\n                        setSearchValue('')\n                    }\n                }}\n                enterButton\n                allowClear\n                style={{\n                    maxWidth: '500px',\n                    borderRadius: '10px',\n                }}\n            />\n            {isSearching ? (\n                foundProgresses.length > 0 ? (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={onSearch(searchValue)}\n                        hasMore={!noMore}\n                        loader={\n                            <div className=\"loader\" key={0}>\n                                Loading ...\n                            </div>\n                        }\n                    >\n                        <MasonryGrid>\n                            {foundProgresses.map((item, index) => (\n                                <MasonryCard\n                                    id={item._id}\n                                    key={index}\n                                    onClickLink={'/inspirations/' + item._id}\n                                    images={item.goal.images}\n                                    body={\n                                        <>\n                                            {/* <UserButton\n                                                noName={true}\n                                                id={item.owner}\n                                                friendDataExp={friendData}\n                                            /> */}\n                                            <span\n                                                style={{ fontWeight: 'bold' }}\n                                            >\n                                                {item.name}\n                                            </span>\n                                        </>\n                                    }\n                                />\n                            ))}\n                        </MasonryGrid>\n                    </InfiniteScroll>\n                ) : null\n            ) : (\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={onGetPopular}\n                    hasMore={!noMorePopular}\n                    loader={\n                        <div className=\"loader\" key={0}>\n                            Loading ...\n                        </div>\n                    }\n                >\n                    <MasonryGrid>\n                        {progresses.map((item, index) => (\n                            <MasonryCard\n                                id={item._id}\n                                key={index}\n                                onClickLink={'/inspirations/' + item._id}\n                                images={item.goal.images}\n                                body={\n                                    <>\n                                        {/* <UserButton\n                                            noName={true}\n                                            id={item.owner}\n                                            friendDataExp={friendData}\n                                        /> */}\n                                        <span style={{ fontWeight: 'bold' }}>\n                                            {item.name}\n                                        </span>\n                                    </>\n                                }\n                            />\n                        ))}\n                    </MasonryGrid>\n                </InfiniteScroll>\n            )}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Explore)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nconst AddCard = props => (\n    <Button\n        onClick={props.action}\n        type=\"primary\"\n        shape=\"round\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n    >\n        {props.title}\n    </Button>\n)\n\nexport default AddCard\n","import React from 'react'\n\nexport default props => (\n    <div\n        style={{\n            margin: 'auto',\n            textAlign: 'center',\n            width: '90%',\n            maxWidth: '400px',\n            padding: '30px 0px',\n        }}\n    >\n        <img\n            src={props.url}\n            style={{\n                width: '100%',\n                height: 'auto',\n                marginBottom: '20px',\n            }}\n        />\n        <span>{props.text}</span>\n    </div>\n)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Modal from 'antd/es/modal/Modal'\nimport AddProgress from './AddProgress'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport MasonryCard from '../../components/MasonryCard'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Progresses = props => {\n    const [startProgressVisible, setStartProgressVisible] = useState(false)\n\n    const { isOwner, progressData, account, profile } = props\n\n    const { progresses } = !isOwner ? profile : account\n\n    let loadedProgresses\n    if (progresses) {\n        loadedProgresses = progresses\n            .filter(item => progressData[item])\n            .map(item => progressData[item])\n    }\n\n    const editGoal = !isOwner ? null : loadedProgresses ? (\n        <Modal\n            title=\"Add progress\"\n            visible={startProgressVisible}\n            maskClosable\n            closable\n            onCancel={() => {\n                setStartProgressVisible(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"100%\"\n            style={{ maxWidth: '1000px' }}\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddProgress\n                setStartProgressVisible={setStartProgressVisible}\n                account={account}\n                friendData={props.friendData}\n                cancel={() => setStartProgressVisible(false)}\n            />\n        </Modal>\n    ) : null\n\n    return !loadedProgresses || loadedProgresses.length === 0 ? (\n        <CustomEmpty\n            url=\"/inspiration.png\"\n            text=\"You will see your inspirations here. You can add a new inspiration for yourself or for people you care.\"\n        />\n    ) : (\n        <div>\n            {isOwner && (\n                <>\n                    <AddCard\n                        title=\"Add inspiration\"\n                        sub=\"Rich your goals or help others!\"\n                        action={() => {\n                            setStartProgressVisible(true)\n                        }}\n                    />\n                    {editGoal}\n                </>\n            )}\n            <MasonryGrid style={{ marginTop: '40px' }}>\n                {loadedProgresses.map((item, index) => (\n                    <MasonryCard\n                        id={item._id}\n                        key={index}\n                        onClickLink={'/inspirations/' + item._id}\n                        images={item.goal.images}\n                        body={\n                            <>\n                                <UserButton\n                                    ids={item.goal.users}\n                                    group={true}\n                                />\n                                <span style={{ fontWeight: 'bold' }}>\n                                    {item.name}\n                                </span>\n                            </>\n                        }\n                    />\n                ))}\n            </MasonryGrid>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        progressData: state.progressData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Progresses)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\n\nimport Tabs from 'antd/es/tabs'\nimport DashboardPosts from './DashboardPosts'\nimport DashboardEvents from './DashboardEvents'\nimport Badge from 'antd/es/badge'\nimport Helmet from 'react-helmet'\nimport Explore from '../Explore/Explore'\nimport Progresses from '../Progresses/Progresses'\n\nconst Progress = props => {\n    const { account, lastNotifications } = props\n\n    let numberOfUnseenNots = 0\n\n    for (let not of lastNotifications) {\n        if (parseInt(not.notId) > parseInt(account.lastSeenNot || 0))\n            numberOfUnseenNots++\n    }\n\n    return (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    Explore inspirations and ideas from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n\n            <Tabs\n                tabBarStyle={!account._id ? { display: 'none' } : {}}\n                type=\"card\"\n                onChange={activeTab => {\n                    if (activeTab === 'events') {\n                        const last = parseInt(\n                            lastNotifications.reduce((res, not) => {\n                                return parseInt(not.notId) > parseInt(res)\n                                    ? not.notId\n                                    : res\n                            }, 0)\n                        )\n                        if (\n                            lastNotifications.length > 0 &&\n                            parseInt(account.lastSeenNot) !== last\n                        ) {\n                            wsActions.setLastSeenNot(account._id, last)\n                        }\n                    }\n                }}\n            >\n                <Tabs.TabPane tab=\"Explore\" key=\"explore\">\n                    <Explore />\n                </Tabs.TabPane>\n                {account._id && (\n                    <Tabs.TabPane tab=\"My inspirations\" key=\"inspirations\">\n                        <Progresses isOwner={true} />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane tab=\"Posts\" key=\"posts\">\n                        <DashboardPosts />\n                    </Tabs.TabPane>\n                )}\n                {account._id && (\n                    <Tabs.TabPane\n                        tab={\n                            <Badge count={numberOfUnseenNots} offset={[10, 0]}>\n                                Events\n                            </Badge>\n                        }\n                        key=\"events\"\n                    >\n                        <DashboardEvents />\n                    </Tabs.TabPane>\n                )}\n            </Tabs>\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Progress)\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const setLastSeenNot = (accountId, notId) => {\n    if (webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'setLastSeenNot',\n                accountId,\n                notId,\n            })\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\n\nconst styles = `<style> article,  aside,  details,  figcaption,  figure,  footer,  header,  hgroup,  menu,  nav,  section {      display: block;  }   html {      height: 100%;      padding: 0;      margin: 0;  }   body {      margin: auto;      font-weight: 300;      font-family: 'Open Sans', sans-serif !important;      color: #444;      font-size: 17px;      line-height: 1.231;      height: 100%;  }   .clearafter:after {      clear: both;      content: '.';      display: block;      height: 0;      visibility: hidden;  }   h1 {      margin: 0px;  }   .twofold a {      color: #888;      text-decoration: none;  }   .twofold a:hover {      color: #3665c1;  }   .twofold {      display: inline-block;      margin: 5px 0px;      width: 143px;      padding-left: 35px;      font-family: 'Open Sans', sans-serif !important;      color: #999;      font-size: 12px;  }   .twofold_mail {      display: inline-block;      margin: 5px 0px;      cursor: pointer;      color: #999;      padding-left: 35px;      width: 120px;      font-family: 'Open Sans', sans-serif !important;      font-size: 12px;  }   .twofold_mail:hover {      color: #4683ea;  }   .wrapp {      min-height: 100%;      position: relative;      margin: auto;  }   .cont {      width: 94%;      margin: auto;      padding-bottom: 320px;      text-align: center;  }   .logo_back {      padding: 9px 4%;  }   a.logo {      border: none;      text-decoration: none;  }   a img {      border: none;  }   .maintext0 {      font-weight: 300;      font-size: 45px;      color: #222;      margin: 50px auto 10px;      text-align: center;  }   .maintext1 {      font-size: 20px;      font-weight: 300;      letter-spacing: -1px;      margin: 0px auto 20px;      text-align: center;  }   .leftTitle {      font-size: 22px;      font-weight: 600;      margin: 20px auto 20px;      text-align: left;  }   .maintext2 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 100px 0px 0px;      color: #222;  }   .maintext3 {      font-size: 22px;      font-weight: 300;      text-align: center;      margin: 50px 0px 20px;      color: #222;  }   .maintext4 {      font-size: 37px;      font-weight: 300;      text-align: center;      margin: 25px 0px 35px;      color: #222;  }   .contactusleft:hover {      background: #FF5935;  }   .facebookleft:hover {      background: #2350A2;  }   .googleleft:hover {      background: #d34836;  }   .linkedinleft:hover {      background: #006699;  }   .twitterleft:hover {      background: #00ACEF;  }   .twitterleft,  .linkedinleft,  .googleleft,  .facebookleft,  .contactusleft {      background: none;      border: none;      cursor: pointer;      width: 28px;      height: 34px;      outline: none;  }   .noselect {      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .totop {      position: absolute;      color: #2B7BC7;      bottom: 0px;      right: 0px;      text-decoration: none;      font-size: 15px;  }   .totop:hover {      text-decoration: underline;  }   .totopmap {      margin-left: 965px;      color: #2B7BC7;      text-decoration: none;      font-size: 15px;  }   .totopmap:hover {      text-decoration: underline;  }   .arrow {      padding-right: 15px;  }   .regulartitlemap {      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 100px 0px 20px 20px;      font-weight: 600;  }   .regulartitleprice {      top: 0px;      color: #535353;      font-size: 25px;      font-weight: normal;      margin: 80px 0px 0px 20px;      font-weight: 600;  }   .even {      padding: 3px;      border-bottom: 1px solid #EEE;      height: 34px;  }   .even:hover {      background-color: #EAFBFB;  }   .pricing {      width: 700px;      margin: auto;      border: 0px solid black;      border-bottom: none;      border-bottom: 1px solid black;      border-collapse: collapse;      font-size: 17px;      text-align: center;      margin-top: 70px;  }   .countries {      list-style-type: none;      top: 0px;      margin: 100px 0px 100px;      text-align: left;  }   .countries li {      width: 188px;      margin: 5px 0 24px 0px;      display: inline-block;  }   .countries li.clear {      clear: left;  }   .countries li svg {      float: left;      margin: 0 10px 0 0;      border: 1px solid #e6e6e6;  }   .countries li a {      display: table;      width: 160px;      color: #666;      *display: block;      *position: relative;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .countries li a:hover {      color: #08c;  }   .countries li span {      display: table-cell;      width: 160px;      vertical-align: middle;      *display: block;      *position: absolute;      *top: 50%;  }   .countries li span span {      width: 100%;      *display: block;      *position: relative;      *top: -50%;  }   /* .menu { position:absolute; left:196px; top:27px; *font-family: arial, sans-serif; } .menu ul{ \tmargin:0px; \tlist-style-type: none; } .menu ul li{ \tfloat:left; \tpadding:0px; \tmargin:0px 35px 0px 5px; } .menu ul li a { \tdisplay:table; \tcolor:#999;     height:24px; \tcursor:pointer; \ttext-decoration:none; \tvertical-align:middle; } .menu ul li a:hover {  color:#333; } .menu ul li span { \tdisplay:table-cell;  padding: 0px;  font-size:14px; \tfont-weight:600; \tvertical-align:middle; \ttext-align:center; } .login {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .login:hover {  color:#333; } .signup {  font-size:14px;  font-weight:600;  text-align:center;  display:table;  color:#999;  cursor:pointer;  text-decoration:none;  line-height:0; } .signup:hover {  color:#333; } */  .menu {      position: absolute;      right: 240px;      top: 27px;      *font-family: arial, sans-serif;  }   .menu ul {      margin: 0px;      list-style-type: none;  }   .menu ul li {      float: left;      padding: 0px;      margin: 0px 45px 0px 5px;  }   .menu ul li a {      display: table;      color: #888;      height: 24px;      cursor: pointer;      text-decoration: none;      vertical-align: middle;  }   .menu ul li a:hover {      color: #333;  }   .menu ul li span {      display: table-cell;      padding: 0px;      font-size: 14px;      font-weight: 600;      vertical-align: middle;      text-align: center;  }   .login {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .login:hover {      color: #333;  }   .signup {      font-size: 14px;      font-weight: 600;      text-align: center;      display: table;      color: #888;      cursor: pointer;      text-decoration: none;      line-height: 0;  }   .signup:hover {      color: #333;  }   .language {      cursor: pointer;  }   .language:hover {}   .language svg {      border: 1px solid #e6e6e6;  }   .download {      height: 24px;      background: #1EAB4B;      padding: 0px 25px 0px;      float: right;      border: none;      border-radius: 3px;      color: white;      font-family: 'Open Sans';      font-weight: 900;  }   button {      cursor: pointer;  }   .download:hover {      background: #27ae60;  }   .social_footer {      padding-left: 35px;      height: 12px;      display: inline-block;      margin: 5px 0px;      width: 120px;  }   .social_footer p {      float: left;      display: inline;      margin: 0px 13px;      color: #999;  }   .social_footer svg {      float: left;      display: inline;  }   .tmsdownloads {      background: #1EAB4B;      border: none;      line-height: 13px;      cursor: pointer;      min-height: 37px;      padding: 7px 0px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .tmsdownloads:hover {      background: #27ae60;  }   .blueBut {      background: #4683ea;      border: none;      cursor: pointer;      height: 37px;      color: #fff;      font-size: 15px;      font-family: 'Open Sans', sans-serif;      font-weight: 600;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   .blueBut:hover {      background: #4d92f7;  }   .orderBut {      background: #F6F9FF;      outline: none;  }   .orderBut:hover {      background: #dce9ff;  }   .hpLoginBlocks {      vertical-align: top;      max-width: 400px;      min-width: 310px;      width: 100%;      display: inline-block;      margin-bottom: 30px;  }   .market:hover {      box-shadow: 1px 2px #ddd;  }   #readMore {      margin: 30px auto 0px;      color: #0087e2;      fill: #0087e2;      cursor: pointer;  }   #readMore:hover,  #readMore:hover path {      color: #4d92f7;      fill: #4d92f7;  }   .simplelink {      text-decoration: none;      color: #333;  }   .simplelink:hover {      text-decoration: none;      color: #3665c1;  }   .right_submenu {      position: absolute;      height: 39px;      right: 45px;      top: 18px;      display: block;      border: 1px solid #E6E6E6;  }   footer {      font-size: 12px;      background: #f3f3f3;      background: -moz-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #f3f3f3), color-stop(100%, #fff));      background: -webkit-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -o-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: -ms-linear-gradient(top, #f3f3f3 0, #fff 100%);      background: linear-gradient(top, #f3f3f3 0, #fff 100%);      font-size: 12px;      padding: 30px 0 0px;      margin-top: 100px;      width: 100%;      height: 158px;      color: #888;      position: absolute;      bottom: 0px;  }   .footer_header {      font-weight: 300;      color: #555;      font-size: 13px;      text-align: left;      padding-left: 35px;  }   .flag svg {      border: 1px solid #e6e6e6;  }   .price {      width: 80%;      margin: auto;      border-collapse: collapse;  }   .price tr {      height: 36px;      border-bottom: 1px solid #ddd;  }   table .yel:hover td {      background: #e7f4fd;  }   .gre {      padding-left: 10px;      background: #fff;  }   .price button {      cursor: pointer;      font-size: 23px;      color: #fff;      border: none;      border-radius: 3px;      min-height: 40px;      box-shadow: 0px 2px 1px 1px #adadad;      padding: 0px 35px;  }   .doodle {      height: 0px;      position: relative;      bottom: 26px;  }   .signup_free {      background: #1EAB4B;  }   .signup_free:hover {      background: #27ae60;  }   .signup_pro {      background: #1548B8;  }   .signup_pro:hover {      background: #1851CE;  }   .free {      color: #1EAB4B;      font-size: 13px;      background: #f5f5f5;  }   .pro {      color: #1548B8;      font-size: 13px;      background: #f5f5f5;  }   .pricing_image {      margin: 85px auto 0px;      text-align: center;  }   .tworow {      width: 49.999%;      float: left;      display: inline;      text-align: center;      margin-top: 80px;  }   .tworow>div {      width: 30%;      max-width: 80px;      text-align: center;      margin: auto;  }   .half {      margin: 10px 10%;      text-align: center;      line-height: 1.6;  }   .oneimage {      text-align: center;      margin: auto;      margin-top: 85px;      max-width: 750px;      width: 100%;  }   #placeholder #lozenge {      fill: #666;  }   #placeholder:hover #lozenge {      fill: url(#SVGID_1_);  }   .passbut:hover {      text-decoration: underline;  }   #regbut:hover {      background: #21b951;  }   #loginbut:hover {      background: #70bcf0;  }   .passbut {      text-decoration: none;      color: #4683ea;  }   #regbut {      background: #1eab4b;  }   #loginbut {      background: #51aded;  }   input {      width: 300px;      height: 35px;      border: 1px solid #cccccc;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;      color: #555555;      font-size: 15px;  }   input[type='checkbox'] {      height: 16px;      width: 16px;  }   .linksimple {      color: #4683ea;      text-decoration: none;  }   .linksimple:hover {      color: #4683ea;      text-decoration: underline;  }   .linksimple:visited {      color: #4683ea;      text-decoration: none;  }   .LoginButton {      cursor: pointer;      border: none;      height: 62px;      color: white;      font-size: 16px;      font-weight: bold;      box-shadow: 0px 2px 1px 1px #adadad;      width: 330px;      margin: 15px auto 15px;      border-radius: 3px;      -webkit-border-radius: 3px;      -moz-border-radius: 3px;      -khtml-border-radius: 3px;  }   #reghome {      background: #1eab4b;  }   #reghome:hover {      background: #21b951;  }   .regtable {      width: 55%;      margin: auto;      border-collapse: collapse;      text-align: center;  }   .regtable tr {      height: 48px;  }   .regtable td {      width: 50%;  }   .regtable input {      padding-left: 5px;      height: 30px;      color: #111;      background: #fff;  }   ::-webkit-input-placeholder {      color: #999;  }   :-moz-placeholder {      color: #999;      opacity: 1;  }   ::-moz-placeholder {      color: #999;      opacity: 1;  }   :-ms-input-placeholder {      color: #999;  }   .logo_svg:hover polygon {      fill: #00CACD;  }   .logo_svg:hover path {      fill: #00CACD;  }   /* FLOAT DIV STYLES */  .floatDiv {      position: absolute;      background: grey;      width: 300px;      height: 200px;      resize: both;      overflow: hidden;      border: 1px solid #bbb;      top: 100px;      left: 300px;  }   .floatDivTH {      width: 100%;      height: 25px;      background: #eee;      border: 1px solid #bbb;      cursor: pointer;      line-height: 0px;  }   .floatDivTH td {      width: 25px;  }   .floatDivTH td:first-child {      width: auto;      white-space: nowrap;  }   .rollDiv {      left: 0px;      top: 0px;      width: 200px;      resize: none;  }   .expandDiv {      left: 0px;      top: 0px;      height: 100%;      width: 100%;      resize: none;      border: none;  }   .topPan {      width: 100%;      height: 25px;      background: #eee;  }   .topClose {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 2px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topExpand {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 27px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .topRoll {      width: 25px;      height: 21px;      background: #eee;      top: 1px;      right: 53px;      text-align: center;      border: 1px solid #bbb;      cursor: pointer;  }   .dock {      left: 0px;      bottom: 0px;      height: 33px;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;  }   .undock {      left: 0px;      bottom: 0px;      height: auto;      max-height: 100%;      width: 200px;      resize: none;      position: absolute;      background: grey;      overflow: hidden;      overflow-y: auto;  }   .expandDock {      position: absolute;      left: 199px;      bottom: 0px;      width: 33px;      height: 33px;      cursor: pointer;      background: #eee;  }   .expandDock table,  .expandDock table tr td {      border: 1px solid #bbb;      text-align: center;      width: 100%;      height: 100%;      line-height: 0;  }   .rollDiv .topPan {      cursor: pointer;  }   .floatDiv .topPan {      cursor: default;  }   .st0,  .floatDivTH path {      fill: #444 !important;  }   #ratioWrap {      width: 95%;      max-width: 640px;      display: inline-block;      position: relative;      margin: 40px auto 20px;      /* z-index:25; */  }   #ratioWrap:after {      padding-top: 56.25%;      display: block;      content: '';  }   #div1 {      margin: auto;      position: absolute;      top: 0;      bottom: 0;      right: 0;      left: 0;      cursor: pointer;      text-align: center;      background: #fff;      \" } #placeholder{   margin:auto;   position: absolute;   top: 0;   bottom: 0;   right: 0;   left: 0;   cursor:pointer;   text-align:center;   background:#fff;\"  }   #contLogin {      margin-top: 0px;      padding-top: 30px;      padding-bottom: 130px;  }   #header {      position: fixed;      height: 79px;      width: 100%;      display: block;      background: white;      z-index: 21;      top: 0px;  }   .prodList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .prodList a {      color: inherit;      display: inline-block;      margin: 0px 46px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;      text-decoration: none;      vertical-align: top;  }   .prodList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      border: 1px solid #eee;      border-radius: 20px;      background: #F6F9FF;      box-shadow: 1px 2px #ddd;      cursor: pointer;  }   .prodList table {      width: 100%;      border-collapse: collapse;      border: none;      text-align: center;  }   .prodList tr:first-child td {      padding-top: 33px;  }   .prodList tr:nth-child(2) td {      padding: 9px 20px 20px;  }   .prodList tr:last-child td {      padding: 0px 20px 33px;      font-size: 14px;  }   .appList {      text-align: center;      width: 100%;      margin-top: 75px;  }   .appList a {      color: inherit;  }   .appList div {      display: inline-block;      margin: 0px 50px;      width: 210px;      cursor: pointer;  }   .sharePan {      width: 100%;      list-style-type: none;      padding: 0;  }   .sharePan li {      width: 25%;      float: left;      box-sizing: border-box;      height: 30px;  }   .sharePan a {      color: white;      text-decoration: none;      display: block;      width: 100%;      height: 100%;      position: relative;  }   .sharePan a div {      position: absolute;      top: 5px;      left: 40px;      font-weight: 700;  }   .sharePan a svg {      margin: 8px 15px;  }   .sharePan li:nth-child(1) {      background: #3b5998;  }   .sharePan li:nth-child(2) {      background: #1da1f2;  }   .sharePan li:nth-child(3) {      background: #006fa6;  }   .sharePan li:nth-child(4) {      background: #db4437;  }   .tag {      display: inline-block;      border-radius: 3px;      padding: 4px 20px;      margin: 5px 10px 5px 0px;      border: 1px solid transparent;      cursor: pointer;      font-size: 15px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .processes .tag {      background: rgba(70, 131, 234, 0.2);  }   .processes .tag:hover {      border: 1px solid background:rgba(70, 131, 234, 0.5);      background: rgba(70, 131, 234, 0.4);  }   .processes .activeTag {      background: rgba(70, 131, 234, 1);      color: white;  }   .processes .activeTag:hover {      background: #4d92f7;      border: 1px solid #4d92f7;  }   .services .tag {      background: rgba(30, 171, 75, 0.2);  }   .services .tag:hover {      border: 1px solid background:rgba(30, 171, 75, 0.5);      background: rgba(30, 171, 75, 0.4);  }   .services .activeTag {      background: rgba(30, 171, 75, 1);      color: white;  }   .services .activeTag:hover {      background: #1EAB4B;      border: 1px solid #1EAB4B;  }   .articles {      text-align: center;  }   .articles>a {      text-align: left;      display: inline-block;      margin: 20px 10px 0px 10px;      border-radius: 3px;      border: 1px solid transparent;      cursor: pointer;      text-decoration: none;      color: #777;      max-width: 284px;      width: 100%;      vertical-align: top;  }   .articles>a:hover {      opacity: .8;  }   .toKnowledge {      margin: 50px auto 30px;      text-align: right;  }   .toKnowledge a {      padding: 10px 20px;      background: #0087e2;      border: 1px solid #bbb;      color: white;      border-radius: 3px;  }   .toKnowledge a:hover {      background: #4d92f7;      border: 1px solid #ccc;      text-decoration: none;  }   .blueLink {      text-decoration: none;      color: #0087e2;  }   .blueLink:hover {      text-decoration: underline;  }   .articleTags {      width: 100%;  }   .articleTags div {      display: inline-block;      border-radius: 3px;      padding: 2px 4px;      margin: 5px 5px 5px 0px;      cursor: pointer;      font-size: 14px;      -webkit-touch-callout: none;      -webkit-user-select: none;      -khtml-user-select: none;      -moz-user-select: none;      -ms-user-select: none;      user-select: none;  }   .artProcTag {      background: rgba(70, 131, 234, 0.2);      color: #777;  }   .artProcTag.active {      background: rgba(70, 131, 234, 1);      color: white;  }   .artServTag {      background: rgba(30, 171, 75, 0.2);      color: #777;  }   .artServTag,  .active {      background: rgba(30, 171, 75, 1);      color: white;  }   .article h3 {      font-weight: 600;      font-size: 20px;      margin: 7px 0px 10px;  }   .article p {      font-style: italic;      margin: 0px 0px 8px;      font-size: 15px;  }   /* ------------------ARTICLES--------------------- */  .artB {      color: #444;      font-size: 18px;      line-height: 26px;  }   .artB h1 {      font-size: 44px;      font-weight: 700;      color: #191919;      text-align: center;      line-height: 60px;  }   .artB h2 {      font-size: 30px;      font-weight: 400;      color: #191919;      text-align: center;      line-height: 35px;  }   .artB table {      width: 100%;      vertical-align: top;      border-collapse: collapse;  }   .artB table.twotd td {      width: 50%;      vertical-align: top;  }   .artB table.threetd td {      width: 33%;      vertical-align: top;  }   .artB td {      border: 1px solid #999;      padding-left: 10px;  }   .artB td ol {      margin: 0px;  }   .artB ol {      margin: 0px;      margin: 35px 0px -13px 0px;      font-style: italic;      font-weight: 600;  }   .artB ol p {      color: #444;      /*font-size: 17px;*/      line-height: 26px;      font-style: initial;      font-weight: 300;      margin-left: -40px;  }   .artB ol i p {      font-style: italic;      color: #008b8b;  }   .artB p.total {      color: #134f5c;      font-weight: bold;      margin-top: 0px;  }   .artB iframe {      margin: auto;      display: block;  }   @media screen and (min-width: 1200px) {       #mob-menu-but,      #mob-menu {          display: none !important;      }       #cont {          display: block !important;      }  }   @media screen and (max-width: 1100px) {      .footSep {          visibility: hidden;      }  }   @media screen and (max-width: 1200px) {       #menu,      #submenu {          display: none;      }       #mob-menu-but {          width: 30px;          height: 30px;          position: absolute;          right: 4%;          top: 21px;          display: block;      }       #mob-menu {          display: none;          width: 100%;          background: white;          z-index: 9999;          margin: 0px;          padding: 0px;          margin-top: 89px;      }       #mob-menu li {          text-align: center;          list-style: none;          margin: 20px;      }       #mob-menu a {          text-decoration: none;          font-size: 16px;          font-weight: 500;          color: #0F3F9F !important;          cursor: pointer;      }  }   @media screen and (max-width: 750px) {      .maintext0 {          font-size: 30px;      }       .maintext1 {          font-size: 18px;      }       .maintext2,      .maintext4 {          font-size: 26px;      }       .maintext4 {          margin: 15px 0px 30px;      }       .pricing_image {          margin: 70px auto 20px;      }       .half {          14px;      }       #cont {          margin-top: 50px;      }  }   @media screen and (max-width: 650px) {      .sharePan div {          display: none;      }       .articles>a {          margin: 50px 0px 0px 0px;      }  }   @media screen and (max-width: 450px) {      .artB h1 {          font-size: 26px;          font-weight: 400;          color: #191919;          text-align: center;          line-height: 40px;      }       .artB h2 {          font-size: 22px;          font-weight: 400;          font-style: italic;          color: #191919;          text-align: center;          line-height: 30px;      }       .maintext0 {          font-size: 26px;      }       .maintext1 {          font-size: 18px;      }       .maintext2 {          font-size: 25px;          margin: 50px 0px 0px;      }       .maintext4 {          font-size: 25px;          margin: 10px 0px 20px;      }       .pricing_image {          margin: 40px auto 20px;      }       .half {          14px;      }       .tworow {          width: 100%;      }       .hpLoginBlocks {          min-width: initial;      }       #cont {          margin-top: 30px;      }  }   /* ------------------------LOGOS---------------------------- */  .logo_svg_maintain:hover svg {      fill: #0044ff;  }   .logo_svg_order:hover svg {      fill: #ff4400;  }   /* ------------------------LOGOS END------------------------ */  /* ------------------------PRODUCTS MENU-------------------- */  #products_menu {      position: absolute;      right: -100px;      top: 35px;      width: 346px;      background: white;      border-radius: 3px;      border: 1px solid #ccc;      display: none;      box-shadow: 0 2px 10px rgba(0, 0, 0, .2);      box-sizing: border-box;      font-size: 15px;      color: #222;  }   #products_menu>div {      padding: 30px 30px 30px 30px;      box-sizing: border-box;  }   #products_menu>div>a {      display: inline-block;      width: 90px;      height: 90px;      border: 1px solid transparent;      vertical-align: top;      text-align: center;      cursor: pointer;      border-radius: 3px;      box-sizing: border-box;      text-decoration: none;      color: #222;  }   #products_menu>div>a:hover {      border: 1px solid #e6e6e6;  }   #products_menu>a>button {      width: 100%;      background: #eee;      height: 40px;      border: none;  }   #products_menu>a>button:hover {      width: 100%;      background: #e7e7e7;      height: 40px;      border: none;  }   /* ------------------------PRODUCTS MENU END----------------- */  /* ------------------------SUPPORT MENU---------------------- */  .collapseDiv {      width: 100%;      display: none;      padding: 15px 0px;      box-sizing: border-box;      background: #333;  }   .collapseDiv>a {      display: block;      text-decoration: none;      width: 100%;      background: #333;      padding: 5px 30px 5px 40px;      box-sizing: border-box;      cursor: pointer;      color: #fff;  }   .collapseDiv>a:hover {      background: #222;  }   .plusM {      float: right;      margin-right: 10px;  }   .supMen {      width: 100%;      background: #eee;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMen:hover {      background: #ddd;  }   .supMenAct {      width: 100%;      background: #c5c5c5;      padding: 10px 20px;      box-sizing: border-box;      cursor: pointer;      border-top: 1px solid #ccc;  }   .supMenAct:hover {      background: #bbb;  }   @media screen and (max-width: 400px) {      .plusM {          visibility: hidden;      }  }   .artImg {      width: 100%;  }   .supArtMenIt {      width: 100%;      padding: 10px 0px;  }   .supArtMenIt>a {      display: block;      text-decoration: none;      width: 100%;      cursor: pointer;      padding: 10px 10px;      font-size: 14px;      box-sizing: border-box;      color: #444;      text-align: left;  }   .supArtMenIt>a:hover {      background: #eee;  }   .supArtMenItAct {      color: blue;      border-left: 3px solid blue;      font-weight: 600;  }   .supMenArt {      vertical-align: top;      display: inline-block;      max-width: 280px;      min-width: 250px;      margin: 80px auto;      box-shadow: -10px 5px 20px -5px #ccc;      border-left: 1px solid #ccc;      box-sizing: border-box;      float: right;      color: #222;  }   @media screen and (max-width: 1070px) {      .supMenArt {          display: block;          float: none;          max-width: 600px;          min-width: 0px;          box-shadow: -4px 7px 50px -5px #ccc;      }  }   /* ------------------------SUPPORT MENU END------------------ */  /* ------------------------SUPPORT ARTICLE------------------- */  .artS {      max-width: 700px;      text-align: left;      margin-top: 68px;      color: #222;      font-size: 15px;      line-height: 31px;      display: inline-block;  }   .artS h1,  .artS h2 {      text-align: left;      font-weight: 400;  }   .artS h1 {      font-size: 40px;      line-height: 60px;  }   .artS img {      width: 100%;      height: auto;  }   .artS .emb {      width: 100%;      text-align: center;  }   .artS .emb div {      font-size: 27px;      margin: 43px auto;      color: #999;  }   .artS .emb img {      width: 90%;      margin: auto;  }   .artS .emb p {      text-align: left;  }   .artS .emb textarea {      width: 90%;      font-size: 15px;      height: 100px;  }   .artS .artImg {      width: 100%;      max-width: 120px;      float: right;      margin: 18px 10px 10px 40px;  }   .artS .clearD {      width: 100%;      height: 40px;      visibility: hidden;      clear: both;  }   .artS ol {      margin: 0px;      font-style: normal;      font-weight: inherit;  }   .artS a {      color: #4184f1;      text-decoration: none;  }   .artS a:hover {      text-decoration: underline;  }   .artS .aNewT:after {      content: '';      background: no-repeat url(http://www.logision.com/img/newBlank.png);      display: inline-block;      height: 10px;      margin: 0 3px 0 5px;      width: 10px;  }   /* ------------------------SUPPORT ARTICLE END--------------- */</style>`\n\nconst Blog = props => {\n    console.log(props.history.location.pathname)\n    const [state, setState] = useState('')\n    const [title, setTitle] = useState('')\n    useEffect(() => {\n        const url = 'https://websiter.dev' + props.history.location.pathname\n        console.log(url)\n        axios\n            .post('/api/blog', { url })\n            .then(res => {\n                setState(\n                    styles +\n                        res.data.body\n                            .replace(\n                                /\\/images\\/blog/gi,\n                                'https://websiter.dev/images/blog'\n                            )\n                            .replace(\n                                /href=\"https:\\/\\/websiter.dev/gi,\n                                'href=\"https://addspire.com'\n                            )\n                )\n                setTitle(res.data.title)\n            })\n            .catch(err => {})\n    }, [props.history.location.pathname])\n\n    return (\n        <div>\n            {title && (\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n            )}\n            <div dangerouslySetInnerHTML={{ __html: state }} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Blog)\n)\n","import React from 'react'\n\nimport * as wsActions from '../websocketActions'\nimport Menu from 'antd/es/menu'\nimport Dropdown from 'antd/es/dropdown'\nimport DownOutlined from '@ant-design/icons/DownOutlined'\nimport Button from 'antd/es/button'\nimport MoreIcon from './UI/MoreIcon'\n\nconst FriendActionButton = props => {\n    const { invitingFriends, invitedFriends, realFriends, _id, account } = props\n    const accountId = account ? account._id : ''\n    if (!accountId) return []\n\n    if (accountId === _id) return [props.additionalButton]\n\n    const menu = (\n        <Menu onClick={({ domEvent }) => domEvent.stopPropagation()}>\n            {props.additionalButtons &&\n                props.additionalButtons.map((button, index) => (\n                    <Menu.Item key={index + 100} onClick={button.onClick}>\n                        {button.title}\n                    </Menu.Item>\n                ))}\n            {invitingFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"2\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Decline\n                </Menu.Item>\n            ) : invitedFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"3\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Cancel invitation\n                </Menu.Item>\n            ) : realFriends.find(item => item.friend === _id) ? (\n                <Menu.Item\n                    key=\"4\"\n                    onClick={() => wsActions.unfriend(accountId, _id)}\n                    danger={true}\n                >\n                    Unfriend\n                </Menu.Item>\n            ) : null}\n            {props.noFollow ? null : account.followAccounts.includes(_id) ? (\n                <Menu.Item\n                    key=\"5\"\n                    onClick={() => wsActions.unfollowAccount(accountId, _id)}\n                    danger={true}\n                >\n                    Unfollow\n                </Menu.Item>\n            ) : (\n                <Menu.Item\n                    key=\"6\"\n                    onClick={() => wsActions.followAccount(accountId, _id)}\n                >\n                    Follow\n                </Menu.Item>\n            )}\n        </Menu>\n    )\n    return invitingFriends.find(item => item.friend === _id) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.acceptFriend(accountId, _id)\n            }}\n        >\n            Accept friendship\n        </Dropdown.Button>\n    ) : ![...realFriends, ...invitingFriends, ...invitedFriends].find(\n          item => item.friend === _id\n      ) ? (\n        <Dropdown.Button\n            type=\"primary\"\n            overlay={menu}\n            trigger={['click', 'hover']}\n            onClick={e => {\n                e.preventDefault()\n                e.stopPropagation()\n                wsActions.addFriend(accountId, _id)\n            }}\n        >\n            Become friends\n        </Dropdown.Button>\n    ) : (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a\n                // className=\"ant-dropdown-link\"\n                onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n                }}\n            >\n                <Button type={props.asText ? 'primary' : 'link'}>\n                    {props.asText ? (\n                        <>\n                            Actions <DownOutlined />\n                        </>\n                    ) : (\n                        <MoreIcon />\n                    )}\n                </Button>\n            </a>\n        </Dropdown>\n    )\n}\n\nexport default FriendActionButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport { withRouter } from 'react-router-dom'\n\nimport friendActionButton from './FriendActionButton'\nimport UserButton from './UserButton/UserButton'\nimport MasonryCard from './MasonryCard'\n\nconst FriendCard = props => {\n    const friendActions = friendActionButton({\n        account: props.account,\n        realFriends: props.realFriends,\n        invitedFriends: props.invitedFriends,\n        invitingFriends: props.invitingFriends,\n        _id: props.friend._id,\n        asIcons: true,\n\n        additionalButtons: [\n            {\n                title: 'See profile',\n                onClick: () =>\n                    props.history.push('/profile/' + props.friend._id),\n            },\n        ],\n    })\n\n    return (\n        <MasonryCard\n            actions={friendActions}\n            body={<UserButton span={true} id={props.friend._id} size={50} />}\n            noLink={true}\n            friends={true}\n        />\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        isAuthed: state.isAuthed,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: (data, pulledFrom) =>\n            dispatch(actions.setData(data, pulledFrom)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FriendCard)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Avatar from 'antd/es/avatar'\n\nconst ProgressButton = props => {\n    const { id } = props\n    const userName = id => props.progressData[id].goal.name\n    const userAvatar = id => (\n        <span\n            onClick={() => {\n                handleClick(id)\n            }}\n        >\n            <Avatar\n                src={\n                    props.progressData[id].goal.images.length > 0 &&\n                    props.progressData[id].goal.images[0]\n                }\n                size={props.size || (props.noClick ? 20 : 40)}\n                style={props.group ? {} : { margin: ' 0 5px' }}\n            />\n        </span>\n    )\n\n    const handleClick = id =>\n        props.history.push('/inspirations/' + (id || props.id))\n    return (\n        <span\n            style={{ cursor: 'pointer', fontWeight: 'bold', ...props.style }}\n            onClick={e => {\n                e.stopPropagation()\n                handleClick()\n            }}\n        >\n            {userAvatar(id)}\n            {userName(id)}\n        </span>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        progressData: state.progressData,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProgressButton))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport * as wsActions from '../../websocketActions'\nimport Card from 'antd/es/card'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal'\n\nimport Input from 'antd/es/input'\nimport Form from 'antd/es/form'\n\nimport FriendCard from '../../components/FriendCard'\nimport { nicknameRules } from '../../constants/fieldRules'\n\nconst AddFriends = props => {\n    useEffect(() => {\n        props.setFriendSearchResult({})\n    }, [props.addFriendOpen])\n\n    const {\n        addFriendOpen,\n        setAddFriendOpen,\n        searchResult,\n        realFriends,\n        invitedFriends,\n        invitingFriends,\n    } = props\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    console.log(searchResult)\n\n    return (\n        <Modal\n            title=\"Add friend\"\n            visible={addFriendOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setAddFriendOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            footer={\n                <Button\n                    key=\"back\"\n                    onClick={() => {\n                        setAddFriendOpen(false)\n                        document.body.removeAttribute('style')\n                    }}\n                >\n                    Return\n                </Button>\n            }\n            destroyOnClose={true}\n        >\n            <p>\n                To find a friend you need to enter your friend's name or\n                nickname.\n            </p>\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={value => wsActions.searchFriends(value.search)}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Search\" name=\"search\" rules={nicknameRules}>\n                    <Input placeholder=\"Must be more than 2 characters long\" />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Search\n                    </Button>\n                </Form.Item>\n            </Form>\n            {searchResult.length > 0 && (\n                <Card title=\"Search result\">\n                    {searchResult.map(friend => (\n                        <FriendCard\n                            {...props}\n                            friend={friend}\n                            realFriends={realFriends}\n                            invitingFriends={invitingFriends}\n                            invitedFriends={invitedFriends}\n                        />\n                    ))}\n                </Card>\n            )}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.friendSearchResult,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setFriendSearchResult: data =>\n            dispatch(actions.setFriendSearchResult(data)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddFriends)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport FriendCard from '../../components/FriendCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst pendingFriends = props => {\n    const { realFriends, invitedFriends, invitingFriends } = props\n    return (\n        <>\n            {invitingFriends.length > 0 && (\n                <>\n                    <h2>People invited me to be friends</h2>\n                    <MasonryGrid friends={true}>\n                        {invitingFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n\n            {invitedFriends.length > 0 && (\n                <>\n                    <h2>I invited these people</h2>\n                    <MasonryGrid friends={true}>\n                        {invitedFriends.map(friend => (\n                            <FriendCard\n                                key={friend._id}\n                                {...props}\n                                friend={friend}\n                                realFriends={realFriends}\n                                invitingFriends={invitingFriends}\n                                invitedFriends={invitedFriends}\n                            />\n                        ))}\n                    </MasonryGrid>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(pendingFriends)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\n\nimport FriendCard from '../../components/FriendCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport AddFriends from './AddFriends'\nimport PendingFriends from './PendingFriends'\nimport Tabs from 'antd/es/tabs'\nimport Empty from 'antd/es/empty'\nimport Badge from 'antd/es/badge'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst Friends = props => {\n    const [addFriendOpen, setAddFriendOpen] = useState()\n\n    useEffect(() => {\n        props.setPageTitle({ main: 'Friends', sub: '' })\n    }, [])\n\n    const { account, friendData } = props\n    if (!account._id) return null\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n\n    if (account.friends) {\n        for (let friend of account.friends) {\n            const fullFriend = { ...friendData[friend.friend], ...friend }\n            if (fullFriend) {\n                if (fullFriend.status === 'friend') realFriends.push(fullFriend)\n                else if (fullFriend.status === 'invited')\n                    invitedFriends.push(fullFriend)\n                else if (fullFriend.status === 'inviting')\n                    invitingFriends.push(fullFriend)\n            }\n        }\n    }\n\n    const confirmedFriends =\n        realFriends.length > 0 ? (\n            <MasonryGrid friends={true}>\n                {realFriends.map(friend => (\n                    <FriendCard\n                        {...props}\n                        key={friend.friend}\n                        friend={friend}\n                        realFriends={realFriends}\n                        invitingFriends={invitingFriends}\n                        invitedFriends={invitedFriends}\n                    />\n                ))}\n            </MasonryGrid>\n        ) : (\n            <Empty\n                image=\"https://websiter.s3.us-east-2.amazonaws.com/image+4.jpg\"\n                imageStyle={{ height: '250px', marginTop: '50px' }}\n                description={false}\n            />\n        )\n    return (\n        <div>\n            <AddCard\n                title=\"Add friend\"\n                sub=\"Find by nickname\"\n                action={() => setAddFriendOpen(true)}\n            />\n            {invitedFriends.length > 0 || invitingFriends.length > 0 ? (\n                <Tabs>\n                    <Tabs.TabPane key=\"confirmed\" tab=\"Confrmed\">\n                        {confirmedFriends}\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane\n                        tab={\n                            <Badge\n                                count={invitingFriends.length}\n                                offset={[10, 0]}\n                            >\n                                Pending\n                            </Badge>\n                        }\n                        key=\"pending\"\n                    >\n                        <PendingFriends\n                            realFriends={realFriends}\n                            invitedFriends={invitedFriends}\n                            invitingFriends={invitingFriends}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n            ) : (\n                confirmedFriends\n            )}\n            <AddFriends\n                addFriendOpen={addFriendOpen}\n                setAddFriendOpen={setAddFriendOpen}\n                realFriends={realFriends}\n                invitedFriends={invitedFriends}\n                invitingFriends={invitingFriends}\n                account={account}\n            />\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Friends)\n)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\n\nimport Button from 'antd/es/button'\nimport Input from 'antd/es/input'\nimport InputNumber from 'antd/es/input-number'\nimport Form from 'antd/es/form'\nimport Select from 'antd/es/select'\nimport Upload from 'antd/es/upload'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\n\nimport Avatar from 'antd/es/avatar'\nimport {\n    nameRules,\n    descriptionRules,\n    priceRules,\n} from '../../constants/fieldRules'\nimport getAvatar from '../../utils/getAvatar'\n\nconst AddPerkForm = props => {\n    const [previewImage, setPreviewImage] = useState('')\n    const {\n        connections,\n        perk,\n        onFinish,\n        images,\n        setImages,\n        uploadImage,\n    } = props\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    const connectionsSelect = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n            getPopupContainer={trigger => trigger.parentNode}\n        >\n            {connections.map(item => (\n                <Select.Option key={item._id}>\n                    <Avatar\n                        src={getAvatar(item._id, item.image)}\n                        size={20}\n                        style={{ marginRight: '10px' }}\n                    />\n                    {item.name} - ({item._id})\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    const [form] = Form.useForm()\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e\n        }\n        return e && e.fileList.map(image => image.url)\n    }\n\n    return !props.perkId || perk ? (\n        <>\n            <Form\n                form={form}\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                initialValues={perk || {}}\n                {...layout}\n            >\n                <Form.Item\n                    name=\"images\"\n                    label=\"Images\"\n                    valuePropName=\"images\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={images.map((image, index) => ({\n                            ...image,\n                            uid: index,\n                        }))}\n                        onPreview={file => {\n                            setPreviewImage(file.url)\n                        }}\n                        onChange={({ fileList }) => setImages(fileList)}\n                        customRequest={({ file }) => {\n                            uploadImage(file)\n                        }}\n                    >\n                        {images.length >= 8 ? null : (\n                            <div>\n                                <PlusOutlined />\n                                <div className=\"ant-upload-text\">Upload</div>\n                            </div>\n                        )}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\"Name\" name=\"name\" rules={nameRules}>\n                    <Input placeholder=\"New item\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={descriptionRules}\n                >\n                    <Input.TextArea placeholder=\"Write a few words about this item.\" />\n                </Form.Item>\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Available for\" name=\"users\">\n                        {connectionsSelect}\n                    </Form.Item>\n                )}\n\n                {props.mode === 'shop' && (\n                    <Form.Item label=\"Price\" name=\"price\" rules={priceRules}>\n                        <InputNumber />\n                    </Form.Item>\n                )}\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                    >\n                        Save\n                    </Button>\n\n                    <Button\n                        type=\"link\"\n                        danger\n                        size=\"large\"\n                        style={{ margin: '10px' }}\n                        onClick={() => {\n                            props.setEditPerkOpen(false)\n                            document.body.removeAttribute('style')\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Modal\n                visible={previewImage}\n                footer={null}\n                onCancel={() => setPreviewImage('')}\n            >\n                <img\n                    alt=\"example\"\n                    style={{ width: '100%' }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    ) : null\n}\n\nexport default AddPerkForm\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { uploadFile } from '../../utils/uploadFile'\nimport AddPerkForm from './AddPerkForm'\nimport { withRouter } from 'react-router-dom'\nimport * as wsActions from '../../websocketActions'\n\nconst AddPerk = props => {\n    const [perk, setPerk] = useState()\n    const [images, setImages] = useState([])\n    const { account, mode } = props\n    const perkId = props.perkId || ''\n    useEffect(() => {\n        if (perkId) {\n            const perk =\n                mode === 'wishlist'\n                    ? account.wishlist.find(item => item.itemId === perkId)\n                    : mode === 'goals'\n                    ? account.goals.find(item => item.goalId === perkId)\n                    : account.perks.find(item => item.perkId === perkId)\n            if (perk) {\n                setPerk(perk)\n                setImages(\n                    perk.images.map((url, index) => ({\n                        url,\n                        uid: index,\n                    }))\n                )\n            }\n        }\n    }, [])\n\n    const connections = [\n        account,\n        ...account.friends\n            .filter(friend => friend.status === 'friend')\n            .map(friend => props.friendData[friend.friend]),\n    ]\n\n    const uploadImage = file => {\n        uploadFile(file, 800, undefined, url => {\n            setImages(\n                [...images, { url }].map((image, index) => ({\n                    ...image,\n                    uid: index,\n                }))\n            )\n        })\n    }\n\n    return !props.perkId || perk ? (\n        <AddPerkForm\n            connections={connections}\n            perk={perk}\n            onFinish={value => {\n                const processedValue = {\n                    ...value,\n                    images: images.map(image => image.url),\n                }\n                wsActions.savePerk(account._id, perkId, processedValue, mode)\n                props.setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            images={images}\n            setImages={setImages}\n            uploadImage={uploadImage}\n            mode={props.mode}\n            setEditPerkOpen={props.setEditPerkOpen}\n        />\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        friendData: state.friendData,\n    }\n}\nexport default withRouter(connect(mapStateToProps)(AddPerk))\n","import { webSocket } from '../containers/ConnectWebsocket/ConnectWebsocket'\n\nexport const savePerk = (accountId, id, value, mode) => {\n    if (accountId && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'saveWishlistItem'\n                        : mode === 'goals'\n                        ? 'saveGoal'\n                        : 'savePerk',\n                id,\n                value,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const deletePerk = (accountId, id, mode) => {\n    if (accountId && id && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode:\n                    mode === 'wishlist'\n                        ? 'deleteWishlistItem'\n                        : mode === 'goals'\n                        ? 'deleteGoal'\n                        : 'deletePerk',\n                id,\n                accountId,\n            })\n        )\n    }\n}\n\nexport const buyPerk = (buyer, seller, perkId) => {\n    if (perkId && buyer && seller && webSocket && webSocket.readyState === 1) {\n        webSocket.send(\n            JSON.stringify({\n                messageCode: 'buyPerk',\n                perkId,\n                buyer,\n                seller,\n            })\n        )\n    }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport MasonryCard from '../../components/MasonryCard'\n\nconst PerkCard = props => {\n    const { perk, perkId, owner, mode } = props\n\n    return (\n        <MasonryCard\n            id={perkId}\n            onClickLink={`/${mode || 'shop'}/${owner._id}/${perkId}`}\n            images={perk.images}\n            body={\n                <span style={{ fontWeight: 'bold' }}>\n                    {perk.name}\n                    {mode === 'shop' && ` ($${perk.price})`}\n                </span>\n            }\n        />\n    )\n}\n\nexport default withRouter(PerkCard)\n","import React, { useState } from 'react'\nimport Modal from 'antd/es/modal'\nimport AddPerk from './AddPerk'\nimport PerkCard from './PerkCard'\nimport AddCard from '../../components/AddCard/AddCard'\nimport MasonryGrid from '../../components/MasonryGrid'\n\nconst WishlistAndPerks = props => {\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n\n    const { account, profile, isOwner } = props\n\n    const editPerk = (\n        <Modal\n            title=\"Add item\"\n            visible={editPerkOpen}\n            maskClosable\n            closable\n            onCancel={() => {\n                setEditPerkOpen(false)\n                document.body.removeAttribute('style')\n            }}\n            width=\"90%\"\n            footer={null}\n            destroyOnClose={true}\n        >\n            <AddPerk\n                setEditPerkOpen={setEditPerkOpen}\n                perkId={editedPerk}\n                mode={props.mode}\n            />\n        </Modal>\n    )\n\n    return account && account._id && isOwner ? (\n        <>\n            {isOwner && (\n                <>\n                    <AddCard\n                        action={() => {\n                            setEditedPerk('')\n                            setEditPerkOpen(true)\n                        }}\n                        title=\"Add item\"\n                        sub={props.mode === 'shop' && 'Set price'}\n                    />\n                    {editPerk}\n                </>\n            )}\n            <MasonryGrid>\n                {account[props.listKey || props.mode] &&\n                    account[props.listKey || props.mode].map((perk, index) => (\n                        <PerkCard\n                            key={index}\n                            perk={perk}\n                            perkId={\n                                props.mode === 'wishlist' ||\n                                props.mode === 'goals'\n                                    ? perk.itemId\n                                    : perk.perkId\n                            }\n                            owner={profile}\n                            account={account}\n                            setEditedPerk={setEditedPerk}\n                            setEditPerkOpen={setEditPerkOpen}\n                            mode={props.mode}\n                            style={{ cursor: 'pointer' }}\n                        />\n                    ))}\n            </MasonryGrid>\n        </>\n    ) : (\n        <MasonryGrid>\n            {profile.wishlist.map((item, index) => (\n                <PerkCard\n                    key={index}\n                    perk={item}\n                    perkId={item.itemId}\n                    owner={profile}\n                    account={account || {}}\n                    setEditedPerk={() => {}}\n                    setEditPerkOpen={() => {}}\n                    onlyBuy={true}\n                    mode=\"wishlist\"\n                />\n            ))}\n        </MasonryGrid>\n    )\n}\n\nexport default WishlistAndPerks\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as actions from '../../store/actions'\nimport Button from 'antd/es/button'\nimport Tag from 'antd/es/tag'\nimport TimeAgo from 'timeago-react'\nimport Avatar from 'antd/es/avatar'\nimport getAvatar from '../../utils/getAvatar'\nimport Rewards from '../../components/Rewards/Rewards'\nimport Collapse from 'antd/es/collapse'\nimport Badge from 'antd/es/badge'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Descriptions from 'antd/es/descriptions'\nimport Typography from 'antd/es/typography'\nimport Empty from 'antd/es/empty'\nimport moment from 'moment'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nmoment().format()\n\nconst Transactions = props => {\n    props.setPageTitle({ main: 'Shop', sub: 'Transactions' })\n\n    const { account, transactionData, friendData } = props\n    if (!account || !account._id) return null\n\n    const transactions = account.transactions\n        .filter(item => transactionData[item])\n        .map(item => transactionData[item])\n\n    const columns = [\n        {\n            title: 'Type',\n            dataIndex: 'types',\n            key: 'types',\n            render: types => (\n                <>\n                    {types.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\n                        if (tag === 'loser') {\n                            color = 'volcano'\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'With',\n            dataIndex: 'user',\n            key: 'user',\n            render: user => {\n                const friend = friendData[user]\n                return friend ? (\n                    <Button\n                        type=\"link\"\n                        style={{ padding: 0 }}\n                        onClick={() => props.history.push('/profile/' + user)}\n                    >\n                        <Avatar\n                            src={getAvatar(user, friend.image)}\n                            style={{ marginRight: '5px' }}\n                        />\n                        {friend.name + ' (' + friend._id + ')'}\n                    </Button>\n                ) : (\n                    user\n                )\n            },\n        },\n        {\n            title: 'Item',\n            dataIndex: 'perk',\n            key: 'perk',\n            render: perk =>\n                perk.simple || (\n                    <Rewards\n                        rewardKey={1}\n                        label=\"Rewards\"\n                        rewards={[{ rewards: [perk], key: 1 }]}\n                        readOnly={true}\n                    />\n                ),\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: amount => (amount > 0 ? amount : ''),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n            render: date => <TimeAgo datetime={date} live />,\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: progress => (\n                <Button\n                    type=\"link\"\n                    onClick={() =>\n                        props.history.push('/inspirations/' + progress)\n                    }\n                >\n                    {progress}\n                </Button>\n            ),\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: (status, record) => {\n                if (status === 'Not confirmed') {\n                    return (\n                        <>\n                            <Button\n                                danger={true}\n                                type=\"link\"\n                                onClick={() =>\n                                    wsActions.cancelTransaction(\n                                        account._id,\n                                        record.transaction._id\n                                    )\n                                }\n                            >\n                                Cancel\n                            </Button>\n                            {record.transaction.from === account._id && (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() =>\n                                        wsActions.confirmTransaction(\n                                            account._id,\n                                            record.transaction._id\n                                        )\n                                    }\n                                >\n                                    Confirm\n                                </Button>\n                            )}\n                        </>\n                    )\n                }\n                return status\n            },\n        },\n    ]\n\n    const tableData = []\n    let sorted = [...transactions]\n    sorted = sorted.sort((a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n    )\n    for (let transaction of sorted) {\n        const types = []\n        if (transaction.from === account._id && transaction.to === account.id) {\n            types.push('internal')\n        }\n        if (transaction.to === account._id) {\n            if (transaction.progress) {\n                types.push('earn')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('buy')\n                    types.push('item')\n                } else {\n                    types.push('recieve gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        } else if (transaction.from === account._id) {\n            if (transaction.progress) {\n                types.push('pay')\n                if (!transaction.amount) types.push('item')\n                else types.push('money')\n            } else {\n                if (transaction.item && transaction.amount) {\n                    types.push('sell')\n                    types.push('item')\n                } else {\n                    types.push('send gift')\n                    if (!transaction.amount) types.push('item')\n                    else types.push('money')\n                }\n            }\n        }\n\n        const user =\n            transaction.to !== account._id ? transaction.to : transaction.from\n\n        tableData.push({\n            key: tableData.length,\n            types,\n            user,\n            perk: transaction.item,\n            amount: transaction.amount,\n            date: transaction.date,\n            progress: transaction.progress,\n            status: transaction.status,\n            transaction,\n        })\n    }\n    return sorted.length > 0 ? (\n        <Collapse\n            expandIconPosition=\"right\"\n            style={{ marginBottom: '50px' }}\n            destroyInactivePanel={true}\n            accordion\n        >\n            {sorted.map((transaction, index) => {\n                const types = []\n                if (\n                    transaction.from === account._id &&\n                    transaction.to === account.id\n                ) {\n                    types.push('internal')\n                }\n                if (transaction.to === account._id) {\n                    if (transaction.progress) {\n                        types.push('earn')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('buy')\n                            types.push('item')\n                        } else {\n                            types.push('recieve gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                } else if (transaction.from === account._id) {\n                    if (transaction.progress) {\n                        types.push('pay')\n                        if (!transaction.amount) types.push('item')\n                        else types.push('money')\n                    } else {\n                        if (transaction.item && transaction.amount) {\n                            types.push('sell')\n                            types.push('item')\n                        } else {\n                            types.push('send gift')\n                            if (!transaction.amount) types.push('item')\n                            else types.push('money')\n                        }\n                    }\n                }\n\n                const user =\n                    transaction.to !== account._id\n                        ? transaction.to\n                        : transaction.from\n\n                tableData.push({\n                    key: tableData.length,\n                    types,\n                    user,\n                    perk: transaction.item,\n                    amount: transaction.amount,\n                    date: transaction.date,\n                    progress: transaction.progress,\n                    status: transaction.status,\n                    transaction,\n                })\n                const { item: reward } = transaction\n                console.log(moment(transaction.date))\n                return (\n                    <Collapse.Panel\n                        style={{ padding: 0 }}\n                        header={\n                            <>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Badge\n                                        color={\n                                            transaction.status ===\n                                            'Not confirmed'\n                                                ? 'blue'\n                                                : transaction.status ===\n                                                  'Cancelled'\n                                                ? 'red'\n                                                : 'green'\n                                        }\n                                    />\n                                    <Typography.Paragraph\n                                        ellipsis={{ rows: 1 }}\n                                        style={{ display: 'inline', margin: 0 }}\n                                    >\n                                        {reward.mode === 'simple'\n                                            ? reward.simple\n                                            : reward.mode === 'money'\n                                            ? reward.money + ' (money)'\n                                            : reward.mode === 'item'\n                                            ? reward.itemName\n                                            : ''}\n                                    </Typography.Paragraph>\n                                    <UserButton\n                                        noName={true}\n                                        id={\n                                            transaction.to !== account._id\n                                                ? transaction.to\n                                                : transaction.from\n                                        }\n                                    />\n                                </div>\n                                <div>\n                                    <TimeAgo datetime={transaction.date} live />\n                                </div>\n                            </>\n                        }\n                        key={index}\n\n                        // extra={}\n                    >\n                        <Descriptions\n                            layout=\"vertical\"\n                            size=\"small\"\n                            bordered\n                            column={{\n                                xxl: 4,\n                                xl: 3,\n                                lg: 3,\n                                md: 3,\n                                sm: 2,\n                                xs: 1,\n                            }}\n                        >\n                            <Descriptions.Item label=\"Type\">\n                                {types.map(tag => {\n                                    let color =\n                                        tag.length > 5 ? 'geekblue' : 'green'\n                                    if (tag === 'loser') {\n                                        color = 'volcano'\n                                    }\n                                    return (\n                                        <Tag color={color} key={tag}>\n                                            {tag.toUpperCase()}\n                                        </Tag>\n                                    )\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Transaction with\">\n                                <UserButton\n                                    id={\n                                        transaction.to !== account._id\n                                            ? transaction.to\n                                            : transaction.from\n                                    }\n                                />\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Item\">\n                                {\n                                    <Rewards\n                                        onlyButton={true}\n                                        rewardKey={1}\n                                        label=\"Rewards\"\n                                        rewards={[transaction.item]}\n                                        readOnly={true}\n                                    />\n                                }\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Date\">\n                                {moment(transaction.date).format(\n                                    'dddd[,] MMM Do YYYY'\n                                )}\n                            </Descriptions.Item>\n\n                            {transaction.progress && transaction.progressId && (\n                                <Descriptions.Item label=\"Progress\">\n                                    <Button\n                                        type=\"text\"\n                                        onClick={() =>\n                                            props.history.push(\n                                                '/inspirations/' +\n                                                    transaction.progressId\n                                            )\n                                        }\n                                    >\n                                        {transaction.progress}\n                                    </Button>\n                                </Descriptions.Item>\n                            )}\n                        </Descriptions>\n                    </Collapse.Panel>\n                )\n            })}\n        </Collapse>\n    ) : (\n        <CustomEmpty\n            url=\"/reward.png\"\n            text=\"Here you will see all rewards that you got or gave. You can add a reward for anybody in inspirations.\"\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        transactionData: state.transactionData,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Transactions)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Avatar from 'antd/es/avatar'\nimport Card from 'antd/es/card'\n\nimport friendActionButton from '../../components/FriendActionButton'\nimport FriendCard from '../../components/FriendCard'\nimport Tabs from 'antd/es/tabs'\nimport Progresses from '../Progresses/Progresses'\nimport Wallet from '../Shop/Wallet'\nimport PerkCard from '../Shop/PerkCard'\nimport getAvatar from '../../utils/getAvatar'\nimport pullData from '../../utils/pullData'\nimport UserButton from '../../components/UserButton/UserButton'\nimport MasonryGrid from '../../components/MasonryGrid'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport MasonryCard from '../../components/MasonryCard'\nimport ProgressButton from '../../components/ProgressButton'\nimport FollowButton from '../../components/FollowButton'\nimport Tag from 'antd/es/tag'\nimport * as wsActions from '../../websocketActions'\nimport Upload from 'antd/es/upload'\nimport { uploadFile } from '../../utils/uploadFile'\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined'\nimport PlusOutlined from '@ant-design/icons/PlusOutlined'\nimport EditOutlined from '@ant-design/icons/EditOutlined'\n\nimport * as classes from './Profile.module.css'\nimport Typography from 'antd/es/typography'\nimport Input from 'antd/es/input'\nimport message from 'antd/es/message'\nimport Friends from '../Friends/Friends'\nimport LogoutOutlined from '@ant-design/icons/LogoutOutlined'\nimport WishlistAndPerks from '../Shop/WishlistAndPerks'\nimport Transactions from '../Shop/Transactions'\nimport Helmet from 'react-helmet'\nimport CustomEmpty from '../../components/UI/CustomEmpty'\n\nconst Profile = props => {\n    const [data, setData] = useState({})\n    const [followersVisible, setFollowersVisible] = useState(false)\n    const [followingVisible, setFollowingVisible] = useState(false)\n    const { profile, friendData, account } = props.isAuthed ? props : data\n    const [deleteVisible, setDeleteVisible] = useState()\n    const [deleteField, setDeleteField] = useState('')\n\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 2) {\n            const profileId = pathParts[2]\n            if (props.isAuthed) {\n                props.setData({ currentProfile: profileId })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n                    const progressData = {}\n                    for (let progress of data.progressData)\n                        progressData[progress._id] = progress\n\n                    props.setData({\n                        // profile: data.profile,\n                        friendData,\n                        progressData,\n                        account: {},\n                    })\n                })\n            }\n        } else {\n            if (props.isAuthed) {\n                props.setData({ currentProfile: account._id })\n            }\n        }\n    }, [props.isAuthed, props.history.location.pathname, props.account._id])\n\n    if (!profile || !profile._id) return null\n\n    const isOwner = account && account._id && account._id === profile._id\n    props.setPageTitle({ main: profile.name, sub: '' })\n\n    const realFriends = [],\n        invitedFriends = [],\n        invitingFriends = []\n    if (profile && profile.friends && account && account._id) {\n        for (let friend of account.friends) {\n            if (friend.status === 'friend') realFriends.push(friend)\n            else if (friend.status === 'invited') invitedFriends.push(friend)\n            else if (friend.status === 'inviting') invitingFriends.push(friend)\n        }\n    }\n    const friendActions = friendActionButton({\n        account,\n        realFriends: realFriends,\n        invitedFriends: invitedFriends,\n        invitingFriends: invitingFriends,\n        _id: profile._id,\n        additionalButton: null,\n        asText: true,\n    })\n    const loading = false\n\n    return (\n        <>\n            <Helmet>\n                <title>\n                    {profile.name} - Addspire - Explore inspirations and ideas\n                    from around the World!\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"Addspire is a social network where you can inspire and motivate yourself or the people you care.\"\n                />\n            </Helmet>\n            <div>\n                <Card>\n                    <div style={{ textAlign: 'center', marginBottom: '50px' }}>\n                        {isOwner ? (\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className={classes.Avatar}\n                                showUploadList={false}\n                                customRequest={({ file }) => {\n                                    uploadFile(file, 800, 'avatar', () => {\n                                        props.increaseAvatarV()\n                                    })\n                                }}\n                            >\n                                {account.image ? (\n                                    <Avatar\n                                        src={getAvatar(\n                                            account._id,\n                                            account.image\n                                        )}\n                                        size={150}\n                                        style={{ margin: '25px' }}\n                                    />\n                                ) : (\n                                    <div>\n                                        {loading ? (\n                                            <LoadingOutlined />\n                                        ) : (\n                                            <PlusOutlined />\n                                        )}\n                                        <div className=\"ant-upload-text\">\n                                            Upload\n                                        </div>\n                                    </div>\n                                )}\n                            </Upload>\n                        ) : (\n                            <Avatar\n                                src={getAvatar(profile._id, profile.image)}\n                                size={200}\n                            />\n                        )}\n                        <Typography.Title\n                            level={2}\n                            editable={\n                                isOwner\n                                    ? {\n                                          onChange: res =>\n                                              wsActions.editAccount(\n                                                  { name: res },\n                                                  account._id\n                                              ),\n                                          icon: (\n                                              <EditOutlined\n                                                  style={{ fontSize: '16px' }}\n                                              />\n                                          ),\n                                      }\n                                    : false\n                            }\n                        >\n                            {profile.name}\n                        </Typography.Title>\n                        {/* <h1 style={{ margin: 0 }}>{profile.name}</h1> */}\n                        <h3>({profile._id})</h3>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowersVisible(true)}\n                        >\n                            {profile.followingAccounts.length} Followers\n                        </Button>\n                        <Button\n                            type=\"text\"\n                            onClick={() => setFollowingVisible(true)}\n                        >\n                            {profile.followProgresses.length +\n                                profile.followAccounts.length}{' '}\n                            Following\n                        </Button>\n                        {isOwner && (\n                            <div style={{ borderTop: '1px #ccc solid' }}>\n                                <Button\n                                    icon={<LogoutOutlined />}\n                                    onClick={() =>\n                                        props.history.push('/logout')\n                                    }\n                                    danger\n                                    type=\"text\"\n                                >\n                                    Logout\n                                </Button>\n                            </div>\n                        )}\n                        <div>\n                            {account && account._id !== profile._id && (\n                                <span style={{ marginRight: '10px' }}>\n                                    {realFriends.find(\n                                        item => item.friend === profile._id\n                                    ) ? (\n                                        <Tag color=\"green\">Friends</Tag>\n                                    ) : null}\n                                    {account.followAccounts.includes(\n                                        profile._id\n                                    ) ? (\n                                        <Tag\n                                            style={{ marginRight: '10px' }}\n                                            color=\"purple\"\n                                        >\n                                            Following\n                                        </Tag>\n                                    ) : (\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() =>\n                                                wsActions.followAccount(\n                                                    account._id,\n                                                    profile._id\n                                                )\n                                            }\n                                        >\n                                            Follow\n                                        </Button>\n                                    )}\n                                </span>\n                            )}\n                            {friendActions}\n                        </div>\n                    </div>\n                    <Tabs type=\"card\">\n                        <Tabs.TabPane tab=\"Inspirations\" key={0}>\n                            <Progresses isOwner={isOwner} />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Friends\" key={1}>\n                            {isOwner ? (\n                                <Friends />\n                            ) : (\n                                <MasonryGrid friends={true}>\n                                    {profile.friends.filter(\n                                        friend => friend.status === 'friend'\n                                    ).length === 0 ? (\n                                        <CustomEmpty\n                                            url=\"/friend.png\"\n                                            text=\"Here you will all confirmed friends of this account. You can create inspirations with your friends.\"\n                                        />\n                                    ) : (\n                                        profile.friends\n                                            .filter(\n                                                friend =>\n                                                    friend.status === 'friend'\n                                            )\n                                            .map(friend => {\n                                                const oneFriendData = {\n                                                    ...friendData[\n                                                        friend.friend\n                                                    ],\n                                                    _id: friend.friend,\n                                                }\n                                                return (\n                                                    <FriendCard\n                                                        key={oneFriendData._id}\n                                                        {...props}\n                                                        account={account}\n                                                        friend={oneFriendData}\n                                                        realFriends={\n                                                            realFriends\n                                                        }\n                                                        invitingFriends={\n                                                            invitingFriends\n                                                        }\n                                                        invitedFriends={\n                                                            invitedFriends\n                                                        }\n                                                    />\n                                                )\n                                            })\n                                    )}\n                                </MasonryGrid>\n                            )}\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Rewards\" key={4}>\n                            <Transactions />\n                        </Tabs.TabPane>\n\n                        <Tabs.TabPane tab=\"Wishlist\" key={7}>\n                            <WishlistAndPerks\n                                mode=\"wishlist\"\n                                account={account}\n                                profile={profile}\n                                isOwner={isOwner}\n                            />\n                        </Tabs.TabPane>\n                        {isOwner && (\n                            <Tabs.TabPane tab=\"Settings\" key={8}>\n                                <Button\n                                    danger={true}\n                                    onClick={() => setDeleteVisible(true)}\n                                >\n                                    Delete account\n                                </Button>\n                                <Modal\n                                    title=\"Delete account\"\n                                    visible={deleteVisible}\n                                    onOk={() => {\n                                        if (deleteField !== account._id) {\n                                            message.warning(\n                                                'The nickmanme is not correct.'\n                                            )\n                                        } else {\n                                            wsActions.deleteAccount(account._id)\n                                        }\n                                        document.body.removeAttribute('style')\n                                    }}\n                                    onCancel={() => {\n                                        setDeleteVisible(false)\n                                        setDeleteField('')\n                                        document.body.removeAttribute('style')\n                                    }}\n                                >\n                                    <p>\n                                        Please enter your nickname and press Ok\n                                        to delete your account.\n                                    </p>\n                                    <Input\n                                        onChange={e =>\n                                            setDeleteField(e.target.value)\n                                        }\n                                    />\n                                </Modal>\n                            </Tabs.TabPane>\n                        )}\n                    </Tabs>\n                </Card>\n            </div>\n            <Modal\n                title=\"Followers\"\n                visible={followersVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowersVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                {profile.followingAccounts.map(item => (\n                    <MasonryCard\n                        friends={true}\n                        noLink={true}\n                        key={item}\n                        actions={<FollowButton account={account} id={item} />}\n                        body={<UserButton span={true} id={item} size={50} />}\n                    />\n                ))}\n            </Modal>\n            <Modal\n                title=\"Following\"\n                visible={followingVisible}\n                footer={null}\n                onCancel={() => {\n                    setFollowingVisible(false)\n                    document.body.removeAttribute('style')\n                }}\n            >\n                <Tabs>\n                    <Tabs.TabPane tab=\"People\" key=\"1\">\n                        {profile.followAccounts.map(item => (\n                            <MasonryCard\n                                friends={true}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton account={account} id={item} />\n                                }\n                                body={\n                                    <UserButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Inspirations\" key={2}>\n                        {profile.followProgresses.map(item => (\n                            <MasonryCard\n                                id={item}\n                                noLink={true}\n                                key={item}\n                                actions={\n                                    <FollowButton\n                                        type=\"progress\"\n                                        account={account}\n                                        id={item}\n                                    />\n                                }\n                                body={\n                                    <ProgressButton\n                                        span={true}\n                                        id={item}\n                                        size={50}\n                                    />\n                                }\n                                style={{\n                                    maxHeight: '170px',\n                                    marginTop: '20px',\n                                }}\n                            />\n                        ))}\n                    </Tabs.TabPane>\n                </Tabs>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        account: state.account,\n        profile: state.profile,\n        isAuthed: state.isAuthed,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => dispatch(actions.setData(data)),\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        tryAuth: (props, forceAuth) =>\n            dispatch(actions.tryAuth(props, forceAuth)),\n        increaseAvatarV: () => dispatch(actions.increaseAvatarV()),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Profile)\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'antd/es/button'\nimport message from 'antd/es/message'\n\nimport Input from 'antd/es/input'\nimport PageHeader from 'antd/es/page-header'\nimport Form from 'antd/es/form'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { nicknameRules, accountNameRules } from '../../constants/fieldRules'\nimport * as actions from '../../store/actions'\n\nconst ActivateAccount = props => {\n    if (!props.isAuthed) props.history.push('/logout')\n    useEffect(() => {\n        if (!props.accountNotActive) props.history.push('/settings')\n    }, [props.accountNotActive])\n    const onFinish = value => {\n        axios\n            .post('/api/activate-account', {\n                ...value,\n            })\n            .then(res => {\n                if (res.data.success) {\n                    message.success('Your account has been activated!')\n                    props.setAccountActivated(false)\n                } else {\n                    if (res.data.nicknameNotUnique) {\n                        message.warning(\n                            'The nickname is taken. Choose another nickname please.'\n                        )\n                    }\n                    if (res.data.errorCode) {\n                        message.error(\n                            'Something is wrong with the data. Please try one more time with new data.'\n                        )\n                    }\n                }\n            })\n            .catch(err => {})\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    }\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    }\n\n    return (\n        <>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Activate your account\"\n                backIcon={false}\n            />\n            <Form\n                name=\"dynamic_form_nest_item\"\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                {...layout}\n            >\n                <Form.Item label=\"Name\" name=\"name\" rules={accountNameRules}>\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Nickname\"\n                    name=\"nickname\"\n                    rules={nicknameRules}\n                >\n                    <Input placeholder=\"Must be more than 1 character long\" />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        user: state.user,\n        account: state.account,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n        setAccountActivated: value =>\n            dispatch(actions.setAccountActivated(value)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ActivateAccount)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Descriptions from 'antd/es/descriptions'\nimport Post from '../../components/Post/Post'\nimport UserButton from '../../components/UserButton/UserButton'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport Helmet from 'react-helmet'\n\nconst { Item } = Descriptions\n\nconst Perk = props => {\n    const [data, setData] = useState({})\n    const { account } = props\n    useEffect(() => {\n        const pathParts = props.history.location.pathname.split('/')\n        if (pathParts.length > 3) {\n            const accountId = pathParts[2]\n            if (props.isAuthed && account._id === accountId) {\n                const perk = account.perks.find(\n                    item => item.perkId === pathParts[3]\n                )\n                setData({ profile: account, perk })\n            } else {\n                pullData(props, data, setData, { forceAuth: false }, data => {\n                    const friendData = {}\n                    for (let friend of data.friendData)\n                        friendData[friend._id] = friend\n\n                    props.setData({\n                        post: { [data.post._id]: data.post },\n                        friendData,\n                    })\n                })\n            }\n        }\n    }, [props.isAuthed])\n    if (!data.perk) return null\n    const { perk, profile } = data\n    props.setData({ currentPosts: perk.post })\n    if (perk) {\n        props.setPageTitle({ main: perk.name, sub: profile._id })\n    }\n\n    const getAccounts = items => {\n        if (profile && props.friendData) {\n            return items.map(item => <UserButton id={item} />)\n        } else return items\n    }\n\n    return perk ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>\n                    {perk.name} by {profile.id}\n                </title>\n                <meta name=\"description\" content={perk.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        Item from <UserButton id={profile._id} /> shop\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={perk.images} />\n\n                <h1>{perk.name}</h1>\n                <p style={{ whiteSpace: 'pre-wrap' }}>{perk.description}</p>\n\n                <Descriptions\n                    title=\"Goal description\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Item label=\"Available for\">{getAccounts(perk.users)}</Item>\n                    <Item label=\"Price\">{perk.price}</Item>\n                </Descriptions>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[perk.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Perk)\n)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Card from 'antd/es/card'\nimport pullData from '../../utils/pullData'\nimport Post from '../../components/Post/Post'\nimport ImageCarousel from '../../components/UI/ImageCarousel/ImageCarousel'\nimport UserButton from '../../components/UserButton/UserButton'\nimport Helmet from 'react-helmet'\nimport Button from 'antd/es/button'\nimport Modal from 'antd/es/modal/Modal'\nimport AddPerk from '../Shop/AddPerk'\nimport Popconfirm from 'antd/es/popconfirm'\nimport * as wsActions from '../../websocketActions'\nconst WishlistItem = props => {\n    const [data, setData] = useState({})\n    const [editedPerk, setEditedPerk] = useState('')\n    const [editPerkOpen, setEditPerkOpen] = useState()\n    const { account } = props\n\n    let accountId\n    const pathParts = props.history.location.pathname.split('/')\n    if (pathParts.length > 3) {\n        accountId = pathParts[2]\n    } else return null\n\n    useEffect(() => {\n        if (!props.isAuthed || account._id === accountId) {\n            pullData(props, data, setData, { forceAuth: false }, data => {\n                const friendData = {}\n                for (let friend of data.friendData)\n                    friendData[friend._id] = friend\n\n                props.setData({\n                    post: { [data.post._id]: data.post },\n                    friendData,\n                })\n            })\n        }\n    }, [props.isAuthed])\n\n    let wishlistItem, profile\n    if (props.isAuthed && account._id === accountId) {\n        wishlistItem = account.wishlist.find(\n            item => item.itemId === pathParts[3]\n        )\n\n        profile = account\n    } else {\n        wishlistItem = data.wishlistItem\n        profile = data.profile\n    }\n    if (!wishlistItem) return null\n    props.setData({ currentPosts: wishlistItem.post })\n\n    const isOwner =\n        account &&\n        account._id &&\n        profile &&\n        profile._id &&\n        account._id === profile._id\n\n    return wishlistItem ? (\n        <div className=\"contentDiv\">\n            <Helmet>\n                <title>{`${wishlistItem.name} by ${profile.name}`}</title>\n                <meta name=\"description\" content={wishlistItem.description} />\n            </Helmet>\n            <Card\n                title={\n                    <span>\n                        <UserButton id={profile._id} /> wishlist\n                    </span>\n                }\n                bordered={false}\n            >\n                <ImageCarousel images={wishlistItem.images} />\n                <div style={{ textAlign: 'center' }}>\n                    <h1>{wishlistItem.name}</h1>\n                    {isOwner && (\n                        <>\n                            <Button\n                                type=\"primary\"\n                                style={{ margin: '10px' }}\n                                onClick={() => {\n                                    setEditedPerk(wishlistItem.itemId)\n                                    setEditPerkOpen(true)\n                                }}\n                            >\n                                Edit\n                            </Button>\n\n                            <Popconfirm\n                                title=\"Are you sure you want to delete this item?\"\n                                onConfirm={() => {\n                                    wsActions.deletePerk(\n                                        account._id,\n                                        wishlistItem.itemId,\n                                        'wishlist'\n                                    )\n                                    props.history.push(\n                                        '/profile/' + profile._id\n                                    )\n                                }}\n                                onCancel={() => {}}\n                                okText=\"Confirm\"\n                                cancelText=\"Cancel\"\n                            >\n                                <Button\n                                    danger\n                                    type=\"text\"\n                                    style={{ margin: '10px' }}\n                                >\n                                    Delete\n                                </Button>\n                            </Popconfirm>\n                        </>\n                    )}\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap' }}>\n                    {wishlistItem.description}\n                </p>\n                <Post\n                    noStartMessage={true}\n                    post={props.post[wishlistItem.post]}\n                    account={props.account}\n                    friendData={props.friendData}\n                    showReplies={true}\n                />\n            </Card>\n            <Modal\n                title=\"Edit item\"\n                visible={editPerkOpen}\n                maskClosable\n                closable\n                onCancel={() => {\n                    setEditPerkOpen(false)\n                    document.body.removeAttribute('style')\n                }}\n                width=\"90%\"\n                footer={null}\n                destroyOnClose={true}\n            >\n                <AddPerk\n                    setEditPerkOpen={setEditPerkOpen}\n                    perkId={editedPerk}\n                    mode=\"wishlist\"\n                />\n            </Modal>\n        </div>\n    ) : null\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        post: state.post,\n        friendData: state.friendData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(WishlistItem)\n)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport isEqual from 'lodash.isequal'\nconst NotificationsTracker = props => {\n    const { account, friendData, progressData } = props\n\n    const sortNotifiacations = (a, b) =>\n        new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : -1\n\n    if (!account._id) return null\n\n    let lastNotifications = []\n    for (let progress of account.followProgresses) {\n        if (progressData[progress])\n            lastNotifications = [\n                ...lastNotifications,\n                ...progressData[progress].notifications,\n            ]\n    }\n\n    for (let friend of account.friends) {\n        if (\n            friendData[friend.friend] &&\n            friend.status === 'friend' &&\n            friendData[friend.friend].notifications\n        )\n            lastNotifications = [\n                ...lastNotifications,\n                ...friendData[friend.friend].notifications,\n            ]\n    }\n    const filterSameNot = (res, not, index, arr) => {\n        if (!res.find(item => item.notId === not.notId)) {\n            res.push(not)\n        }\n        return res\n    }\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n\n    lastNotifications = lastNotifications.sort(sortNotifiacations).slice(0, 100)\n\n    lastNotifications = [\n        ...lastNotifications,\n        ...account.myNotifications,\n    ].filter(item => item.code !== 'add post')\n\n    lastNotifications = lastNotifications.reduce(filterSameNot, [])\n    lastNotifications = lastNotifications.sort(sortNotifiacations)\n    if (!isEqual(lastNotifications, props.lastNotifications)) {\n        props.setData({ lastNotifications })\n    }\n\n    return <span />\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        account: state.account,\n        statePosts: state.post,\n        progress: state.progress,\n        friendData: state.friendData,\n        progressData: state.progressData,\n        lastNotifications: state.lastNotifications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setData: data => {\n            dispatch(actions.setData(data))\n        },\n        setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(NotificationsTracker)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\nconst RNBridge = props => {\n    window.addEventListener('message', function(e) {\n        // window.isRNWebView = true\n        console.log('message received from react native')\n\n        try {\n            const token = e.data\n            alert(token)\n\n            props.tryAuth(token)\n        } catch (err) {\n            console.error('failed to parse message from react-native ' + err)\n            return\n        }\n    })\n\n    window.setAuth = token => props.tryAuth(token)\n\n    // window.counter = 0\n    // function clickHandler() {\n    //     window.counter++\n    //     window.webViewBridge.send(\n    //         'handleDataReceived',\n    //         window.counter,\n    //         function(res) {\n    //             window.document\n    //                 .getElementById('button')\n    //                 .setAttribute('style', 'background-color: ' + res)\n    //         },\n    //         function(err) {\n    //             window.document\n    //                 .getElementById('container')\n    //                 .setAttribute('style', 'background-color: ' + err)\n    //         }\n    //     )\n    // }\n\n    return <></>\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: token => dispatch(actions.tryAuth(token)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(RNBridge)\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport AuthTest from './containers/Auth/AuthTest'\nimport './components/UI/loadStyles'\nimport AccountLayout from './components/Layout/Layout'\nimport Progress from './containers/Progress/Progress'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Blog from './containers/Blog/Blog'\n\nimport Profile from './containers/Profile/Profile'\n\nimport ActivateAccount from './containers/ActivateAccount/ActivateAccount'\nimport Cookies from 'universal-cookie'\nimport Perk from './containers/Shop/Perk'\n\nimport WishlistItem from './containers/Wishlist/WishlistItem'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\nimport ConnectWebsocket from './containers/ConnectWebsocket/ConnectWebsocket'\nimport NotificationsTracker from './containers/Dashboard/NotificationsTracker'\nimport Modal from 'antd/es/modal/Modal'\nimport Button from 'antd/es/button'\nimport RNBridge from './RNBridge'\n\nconst cookies = new Cookies()\n\nconst App = props => {\n    const mountedRef = useRef(true)\n    const [timer, setTimer] = useState(null)\n    const [explanationVisible, setExplanationVisible] = useState(false)\n    const [showSignIn, setShowSignIn] = useState(false)\n    const { isAuthed } = props\n\n    const auth = useCallback(async () => {\n        try {\n            if (!mountedRef.current) return null\n            props.tryAuth()\n        } catch (error) {}\n    }, [mountedRef])\n    useEffect(() => {\n        if (!isAuthed) {\n            auth()\n        }\n        return () => {\n            mountedRef.current = false\n        }\n    }, [isAuthed])\n\n    if (!isAuthed) {\n        if (!cookies.get('explanationSeen') && !timer)\n            setTimer(setTimeout(() => setExplanationVisible(true), 5000))\n    } else if (timer) {\n        window.clearTimeout(timer)\n    }\n\n    const Logout = () => {\n        alert('logout app')\n        props.logout()\n        return <Redirect to=\"/explore\" />\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n\n            <Route path=\"/inspirations\" component={Progress} />\n\n            <Route path=\"/profile\" component={Profile} />\n\n            <Route path=\"/account\" exact component={Profile} />\n            <Route path=\"/shop\" component={Perk} />\n            <Route path=\"/wishlist\" component={WishlistItem} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/ru\" component={Blog} />\n            <Route path=\"/blog\" component={Blog} />\n\n            <Route path=\"/activate-account\" exact component={ActivateAccount} />\n\n            {process.env.NODE_ENV === 'development' && !isAuthed && (\n                <Route path=\"/logintest\" exact component={AuthTest} />\n            )}\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (props.accountNotActive) {\n        routes = (\n            <Switch>\n                <Route path=\"/logout\" exact component={Logout} />\n\n                <Route\n                    path=\"/activate-account\"\n                    exact\n                    component={ActivateAccount}\n                />\n\n                {process.env.NODE_ENV === 'development' && !isAuthed && (\n                    <Route path=\"/logintest\" exact component={AuthTest} />\n                )}\n                {isAuthed ? (\n                    <Redirect to=\"/activate-account\" />\n                ) : (\n                    <Redirect to=\"/\" />\n                )}\n            </Switch>\n        )\n    }\n    const handleExplanationClose = () => {\n        cookies.set('explanationSeen', 'true', {\n            path: '/',\n            maxAge: 86400,\n        })\n        setExplanationVisible(false)\n        setShowSignIn(true)\n        document.body.removeAttribute('style')\n    }\n\n    return (\n        <>\n            <div style={{ height: '100%' }}>\n                <AccountLayout showSignIn={showSignIn}>{routes}</AccountLayout>\n                {isAuthed && <ConnectWebsocket />}\n                {isAuthed && <NotificationsTracker />}\n                <RNBridge />\n            </div>\n            <Modal\n                visible={explanationVisible}\n                // footer={<Button onClick={handleExplanationClose}>Close</Button>}\n                footer={null}\n                onCancel={handleExplanationClose}\n            >\n                <div>\n                    <h1>Welcome to Addspire!</h1>\n                    <p style={{ fontSize: '16px' }}>\n                        This is a social network where people share and get\n                        support for their ideas, pomises and resolutions.\n                    </p>\n                    <h3 style={{ fontSize: '16px', marginTop: '30px' }}>\n                        Here is how Addspire works:\n                    </h3>\n\n                    <p style={{ fontSize: '16px', marginTop: '30px' }}>\n                        1. You can create an inspiration for your idea\n                    </p>\n                    <img\n                        src=\"/intro/1.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        Or you can inspire people you care.\n                    </p>\n                    <img\n                        src=\"/intro/2.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        2. Start working on your goal, share updates and make\n                        posts. Your friends and the Addspire community will\n                        support you.\n                    </p>\n                    <img\n                        src=\"/intro/3.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        3. Achieve your goal and start a new one!\n                    </p>\n                    <img\n                        src=\"/intro/4.png\"\n                        style={{\n                            width: '100%',\n                            border: '1px solid #ccc',\n                        }}\n                    />\n                    <p style={{ fontSize: '16px', marginTop: '50px' }}>\n                        More than 60% of people make promises and resolutions\n                        every year and more than 90% of them fail.\n                    </p>\n                    <h3 style={{ marginTop: '50px' }}>\n                        Make sure that you will achieve your goals!\n                    </h3>\n                    <div style={{ textAlign: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            style={{\n                                background: 'green',\n                                fontSize: '20px',\n                                padding: '10px 40px',\n                                fontWeight: 'bold',\n                                height: 'auto',\n                                margin: '30px auto',\n                            }}\n                            onClick={handleExplanationClose}\n                        >\n                            Sign Up\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthed: state.isAuthed,\n        accountNotActive: state.accountNotActive,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        tryAuth: () => dispatch(actions.tryAuth()),\n        logout: () => dispatch(actions.logout()),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import { createReducer } from '@reduxjs/toolkit'\n\nexport const initialState = {\n    isAuthed: false,\n    user: null,\n    currentAccount: '',\n    account: {},\n    friendData: {},\n    transactionData: {},\n    progressData: {},\n    currentProfile: '',\n    profile: {},\n    currentProgress: '',\n    currentPosts: [],\n    progress: {},\n    post: {},\n    postData: {},\n    pageTitle: {},\n    friendSearchResult: [],\n    accountNotActive: false,\n    lastNotifications: [],\n    isConnectingWS: false,\n}\n\nconst reducer = createReducer(initialState, {\n    SET_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of [\n                'user',\n                'account',\n                'isAuthed',\n                'currentAccount',\n                'currentProfile',\n                'currentPosts',\n                'profile',\n                'currentProgress',\n                'progress',\n                'lastNotifications',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    state[key] = action.data[key]\n                }\n            }\n            for (let key of [\n                'friendData',\n                'progressData',\n                'post',\n                'postData',\n                'transactionData',\n            ]) {\n                if (typeof action.data[key] !== 'undefined') {\n                    for (let attr in action.data[key]) {\n                        if (action.data[key][attr]) {\n                            state[key][attr] = action.data[key][attr]\n                        }\n                    }\n                }\n            }\n        }\n        if (state.user) {\n            if (state.user.currentAccount) {\n                state.currentAccount = state.user.currentAccount\n                state.accountNotActive = false\n            } else if (state.user.myAccount) {\n                state.currentAccount = state.user.myAccount\n                state.accountNotActive = false\n            } else {\n                state.accountNotActive = true\n            }\n        }\n    },\n    REMOVE_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            for (let key of ['user', 'account', 'profile', 'progress']) {\n                for (let item of action.data[key]) {\n                    if (state[key]._id === item) {\n                        state[key] = {}\n                    }\n                }\n            }\n            for (let key of [\n                'post',\n                'friendData',\n                'progressData',\n                'postData',\n                'transactionData',\n            ]) {\n                for (let item of action.data[key]) {\n                    delete state[key][item]\n                }\n            }\n        }\n    },\n    SET_FRIEND_SEARCH_RESULT: (state: Object, action: Object) => {\n        state.friendSearchResult = action.data\n    },\n\n    SET_FRIENDS_DATA: (state: Object, action: Object) => {\n        if (action.data) {\n            state.account.friendsData = action.data\n        }\n        if (action.data.perk) state.perk = action.data.perk\n    },\n    SET_AVATAR_V: (state: Object, action: Object) => {\n        state.account.image = action.v\n    },\n    INCREASE_AVATAR_V: (state: Object) => {\n        state.account.image = state.account.image + 1\n    },\n    SET_IS_AUTHED: (state: Object, action: Object) => {\n        state.isAuthed = action.id\n    },\n    SET_PAGE_TITLE: (state: Object, action: Object) => {\n        state.pageTitle = action.title\n    },\n    SET_ACCOUNT_ACTIVATED: (state: Object, action: Object) => {\n        state.accountNotActive = action.value\n    },\n    SET_CONNECTING_WS: (state: Object, action: Object) => {\n        state.isConnectingWS = action.data\n    },\n})\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './store/reducer/reducer'\n//import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://my.websiter.test:5000'\n} else {\n    axios.defaults.baseURL = 'https://addspire.com'\n}\n// axios.defaults.withCredentials = true\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3t6t4\",\"Header\":\"Layout_Header__3lh1Y\",\"Footer\":\"Layout_Footer__1Dfqu\",\"HideHeader\":\"Layout_HideHeader__2WRsh\",\"FooterButton\":\"Layout_FooterButton__1lZv2\",\"TopHeader\":\"Layout_TopHeader__3_LuK\",\"BottomHeader\":\"Layout_BottomHeader__3DOBo\",\"Main\":\"Layout_Main__3usmk\",\"MenuButtonContiner\":\"Layout_MenuButtonContiner__PpulB\",\"QuickButtonContiner\":\"Layout_QuickButtonContiner__4d4Lg\",\"PageTitle\":\"Layout_PageTitle__368dw\"};"],"sourceRoot":""}